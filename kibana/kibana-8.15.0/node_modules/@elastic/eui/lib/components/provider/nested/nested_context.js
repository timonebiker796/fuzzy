"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useIsNestedEuiProvider = exports.EuiProviderNestedCheck = exports.EuiNestedProviderContext = void 0;
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/**
 * This util creates a context for EuiProviders to use and determine if they're
 * the only (top-most) EuiProvider in the app. If they aren't (i.e., they're
 * nested within another EuiProvider) we should throw a warning and not
 * render instantiate the nested EuiProvider.
 */

var EuiNestedProviderContext = exports.EuiNestedProviderContext = /*#__PURE__*/(0, _react.createContext)(false);
var EuiProviderNestedCheck = exports.EuiProviderNestedCheck = function EuiProviderNestedCheck(_ref) {
  var children = _ref.children;
  return (0, _react2.jsx)(EuiNestedProviderContext.Provider, {
    value: true
  }, children);
};
var useIsNestedEuiProvider = exports.useIsNestedEuiProvider = function useIsNestedEuiProvider() {
  return !!(0, _react.useContext)(EuiNestedProviderContext);
};