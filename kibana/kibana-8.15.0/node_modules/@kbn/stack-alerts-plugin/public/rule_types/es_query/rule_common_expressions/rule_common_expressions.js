"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RuleCommonExpressions = void 0;
var _react = _interopRequireWildcard(require("react"));
var _i18nReact = require("@kbn/i18n-react");
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _public = require("@kbn/triggers-actions-ui-plugin/public");
var _common = require("@kbn/triggers-actions-ui-plugin/public/common");
var _source_fields_select = require("../../components/source_fields_select");
var _constants = require("../constants");
var _test_query_row = require("../test_query_row");
var _threshold_help_popover = require("./threshold_help_popover");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const RuleCommonExpressions = ({
  esFields,
  thresholdComparator,
  threshold,
  timeWindowSize,
  timeWindowUnit,
  aggType,
  aggField,
  groupBy,
  termField,
  termSize,
  size,
  sourceFields,
  errors,
  hasValidationErrors,
  onChangeSelectedAggField,
  onChangeSelectedAggType,
  onChangeSelectedGroupBy,
  onChangeSelectedTermField,
  onChangeSelectedTermSize,
  onChangeThreshold,
  onChangeThresholdComparator,
  onChangeWindowSize,
  onChangeWindowUnit,
  onChangeSizeValue,
  onTestFetch,
  onCopyQuery,
  excludeHitsFromPreviousRun,
  onChangeExcludeHitsFromPreviousRun,
  canSelectMultiTerms,
  onChangeSourceFields
}) => {
  const [isExcludeHitsDisabled, setIsExcludeHitsDisabled] = (0, _react.useState)(false);
  (0, _react.useEffect)(() => {
    if (groupBy) {
      setIsExcludeHitsDisabled(groupBy !== _common.builtInGroupByTypes.all.value);
    }
  }, [groupBy]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    fullWidth: true,
    label: [/*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.stackAlerts.esQuery.ui.conditionsPrompt",
      defaultMessage: "Set the group, threshold, and time window"
    }), /*#__PURE__*/_react.default.createElement(_threshold_help_popover.QueryThresholdHelpPopover, null)]
  }, /*#__PURE__*/_react.default.createElement(_public.WhenExpression, {
    display: "fullWidth",
    "data-test-subj": "whenExpression",
    aggType: aggType !== null && aggType !== void 0 ? aggType : _constants.DEFAULT_VALUES.AGGREGATION_TYPE,
    onChangeSelectedAggType: onChangeSelectedAggType
  })), aggType && _public.builtInAggregationTypes[aggType].fieldRequired ? /*#__PURE__*/_react.default.createElement(_public.OfExpression, {
    aggField: aggField,
    "data-test-subj": "aggTypeExpression",
    fields: esFields,
    aggType: aggType,
    errors: errors,
    display: "fullWidth",
    onChangeSelectedAggField: onChangeSelectedAggField
  }) : null, /*#__PURE__*/_react.default.createElement(_public.GroupByExpression, {
    groupBy: groupBy || _constants.DEFAULT_VALUES.GROUP_BY,
    "data-test-subj": "groupByExpression",
    termField: termField,
    termSize: termSize,
    errors: errors,
    fields: esFields,
    display: "fullWidth",
    canSelectMultiTerms: canSelectMultiTerms,
    onChangeSelectedGroupBy: onChangeSelectedGroupBy,
    onChangeSelectedTermField: onChangeSelectedTermField,
    onChangeSelectedTermSize: onChangeSelectedTermSize
  }), /*#__PURE__*/_react.default.createElement(_public.ThresholdExpression, {
    "data-test-subj": "thresholdExpression",
    thresholdComparator: thresholdComparator !== null && thresholdComparator !== void 0 ? thresholdComparator : _constants.DEFAULT_VALUES.THRESHOLD_COMPARATOR,
    threshold: threshold !== null && threshold !== void 0 ? threshold : _constants.DEFAULT_VALUES.THRESHOLD,
    errors: errors,
    display: "fullWidth",
    popupPosition: "upLeft",
    onChangeSelectedThreshold: onChangeThreshold,
    onChangeSelectedThresholdComparator: onChangeThresholdComparator
  }), /*#__PURE__*/_react.default.createElement(_public.ForLastExpression, {
    "data-test-subj": "forLastExpression",
    popupPosition: "upLeft",
    timeWindowSize: timeWindowSize !== null && timeWindowSize !== void 0 ? timeWindowSize : _constants.DEFAULT_VALUES.TIME_WINDOW_SIZE,
    timeWindowUnit: timeWindowUnit !== null && timeWindowUnit !== void 0 ? timeWindowUnit : _constants.DEFAULT_VALUES.TIME_WINDOW_UNIT,
    display: "fullWidth",
    errors: errors,
    onChangeWindowSize: onChangeWindowSize,
    onChangeWindowUnit: onChangeWindowUnit
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    fullWidth: true,
    label: [/*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.stackAlerts.esQuery.ui.selectSizePrompt",
      defaultMessage: "Set the number of documents to send"
    }), /*#__PURE__*/_react.default.createElement(_eui.EuiIconTip, {
      position: "right",
      color: "subdued",
      type: "questionInCircle",
      content: _i18n.i18n.translate('xpack.stackAlerts.esQuery.ui.selectSizePrompt.toolTip', {
        defaultMessage: 'Specify the number of documents to pass to the configured actions when the threshold condition is met.'
      })
    })]
  }, /*#__PURE__*/_react.default.createElement(_public.ValueExpression, {
    description: _i18n.i18n.translate('xpack.stackAlerts.esQuery.ui.sizeExpression', {
      defaultMessage: 'Size'
    }),
    "data-test-subj": "sizeValueExpression",
    value: size,
    errors: errors.size,
    display: "fullWidth",
    popupPosition: "upLeft",
    onChangeSelectedValue: onChangeSizeValue
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, null, /*#__PURE__*/_react.default.createElement(_eui.EuiCheckbox, {
    disabled: isExcludeHitsDisabled,
    "data-test-subj": "excludeHitsFromPreviousRunExpression",
    checked: excludeHitsFromPreviousRun,
    id: "excludeHitsFromPreviousRunExpressionId",
    onChange: event => {
      onChangeExcludeHitsFromPreviousRun(event.target.checked);
    },
    label: _i18n.i18n.translate('xpack.stackAlerts.esQuery.ui.excludePreviousHitsExpression', {
      defaultMessage: 'Exclude matches from previous runs'
    })
  })), /*#__PURE__*/_react.default.createElement(_source_fields_select.SourceFields, {
    onChangeSourceFields: onChangeSourceFields,
    esFields: esFields,
    sourceFields: sourceFields,
    errors: errors.sourceFields
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_test_query_row.TestQueryRow, {
    fetch: onTestFetch,
    copyQuery: onCopyQuery,
    hasValidationErrors: hasValidationErrors
  }));
};
exports.RuleCommonExpressions = RuleCommonExpressions;