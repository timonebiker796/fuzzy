/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.stackAlerts_bundle_jsonpfunction=window.stackAlerts_bundle_jsonpfunction||[]).push([[3],{40:function(e,t,a){e.exports=a(18)(4)},43:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(2);t.default=function(){var e=n.useRef(!1),t=n.useCallback((function(){return e.current}),[]);return n.useEffect((function(){return e.current=!0,function(){e.current=!1}})),t}},59:function(e,t,a){"use strict";a.r(t);var n=a(2),i=a.n(n),s=a(4),l=a(0),r=a(11),o=a(43),d=a.n(o),u=a(3);const c=e=>{const[t,a]=Object(n.useState)(!1),i=d()();return Object(u.jsx)(e.unifiedSearch.ui.IndexPatternSelect,{isClearable:!1,isDisabled:t,isInvalid:e.isInvalid,isLoading:t,indexPatternId:e.dataViewId?e.dataViewId:"",onChange:async t=>{if(t)try{a(!0);const n=await e.data.indexPatterns.get(t);i()&&(e.onChange(n),a(!1))}catch(e){i()&&a(!1)}},placeholder:l.i18n.translate("xpack.stackAlerts.geoContainment.dataViewSelectPlaceholder",{defaultMessage:"Select data view"})})};var b=a(7),g=a.n(b),m=a(40),p=a.n(m),x=a(26),j=a.n(x);const f={iconType:"questionInCircle",color:"gray"},y={binary:{iconType:"tokenBinary"},boolean:{iconType:"tokenBoolean"},conflict:{iconType:"warning",color:"euiColorVis9",shape:"square"},date:{iconType:"tokenDate"},date_range:{iconType:"tokenDate"},dense_vector:{iconType:"tokenVectorDense"},geo_point:{iconType:"tokenGeo"},geo_shape:{iconType:"tokenGeo"},ip:{iconType:"tokenIP"},ip_range:{iconType:"tokenIP"},flattened:{iconType:"tokenFlattened"},match_only_text:{iconType:"tokenString"},murmur3:{iconType:"tokenSearchType"},number:{iconType:"tokenNumber"},number_range:{iconType:"tokenNumber"},rank_feature:{iconType:"tokenRankFeature"},rank_features:{iconType:"tokenRankFeatures"},histogram:{iconType:"tokenHistogram"},_source:{iconType:"editorCodeBlock",color:"gray"},point:{iconType:"tokenShape"},shape:{iconType:"tokenShape"},sparse_vector:{iconType:"tokenVectorSparse"},string:{iconType:"tokenString"},text:{iconType:"tokenString"},keyword:{iconType:"tokenKeyword"},gauge:{iconType:"tokenMetricGauge"},counter:{iconType:"tokenMetricCounter"},nested:{iconType:"tokenNested"},version:{iconType:"tokenTag"}};function k({type:e,label:t,size:a="s",scripted:n,className:i,...l}){const r=y[e]||f;return Object(u.jsx)(s.EuiToken,p()({},r,{className:j()("kbnFieldIcon",i),"aria-label":t||e,title:t||e,size:a,fill:n?"dark":void 0},l))}function h(e){return e?e.map((e=>({value:e,label:e.name}))).sort(((e,t)=>e.label.toLowerCase().localeCompare(t.label.toLowerCase()))):[]}function F({isInvalid:e,placeholder:t,value:a,onChange:n,fields:i}){const l=[];if(a&&i){const e=i.find((e=>e.name===a));e&&l.push({value:e,label:a})}return Object(u.jsx)(s.EuiComboBox,{isInvalid:e,singleSelection:!0,options:h(i),selectedOptions:l,onChange:e=>{n(g.a.get(e,"0.value.name"))},isDisabled:!i,renderOption:function(e,t,a){return Object(u.jsx)(s.EuiFlexGroup,{className:a,gutterSize:"s",alignItems:"center"},Object(u.jsx)(s.EuiFlexItem,{grow:null},Object(u.jsx)(k,{type:e.value.type,fill:"none"})),Object(u.jsx)(s.EuiFlexItem,null,Object(u.jsx)(s.EuiHighlight,{search:t},e.label)))},isClearable:!1,placeholder:t})}var I=a(22),O=a(10),P=a(37);const v=e=>{const{unifiedSearch:{ui:{QueryStringInput:t}}}=Object(I.useKibana)().services,[a,i]=Object(n.useState)(e.query||{query:"",language:"kuery"});return Object(u.jsx)(t,{disableAutoFocus:!0,bubbleSubmitEvent:!0,indexPatterns:e.dataView?[e.dataView]:[],query:a,onChange:t=>{t.language&&(i(t),function(e){try{"kuery"===e.language?Object(O.fromKueryExpression)(e.query):Object(O.luceneStringToDsl)(e.query)}catch(e){return!1}return!0}(t)&&e.onChange(t))},appName:P.b})},T=["geo_shape"];function w(e){return e.filter((e=>T.includes(e.type)))}const S=e=>{const[t,a]=Object(n.useState)(!1),[o,d]=Object(n.useState)(),[b,g]=Object(n.useState)(!1),[m,p]=Object(n.useState)([]),[x,j]=Object(n.useState)([]);Object(n.useEffect)((()=>{if(!e.ruleParams.boundaryIndexId||e.ruleParams.boundaryIndexId===(null==o?void 0:o.id))return;let t=!1;return a(!0),g(!1),e.data.indexPatterns.get(e.ruleParams.boundaryIndexId).then((e=>{t||(d(e),p(w(e.fields)),j(e.fields.filter((e=>["string","number","ip"].includes(e.type)&&!e.name.startsWith("_")&&!e.name.endsWith("keyword")))),a(!1))})).catch((()=>{t||(g(!0),a(!1))})),()=>{t=!0}}),[e.ruleParams.boundaryIndexId,null==o?void 0:o.id,e.data.indexPatterns]);const f=e.getValidationError("boundaryIndexTitle")||(o&&0===m.length?l.i18n.translate("xpack.stackAlerts.geoContainment.noGeoFieldInIndexPattern.message",{defaultMessage:"Data view does not contain geospatial fields. Must have one of type: {geoFieldTypes}.",values:{geoFieldTypes:T.join(", ")}}):b?l.i18n.translate("xpack.stackAlerts.geoContainment.dataViewNotFound",{defaultMessage:"Unable to find data view ''{id}''",values:{id:e.ruleParams.indexId}}):null),y=e.getValidationError("boundaryGeoField");return Object(u.jsx)(s.EuiPanel,null,Object(u.jsx)(s.EuiTitle,{size:"xs"},Object(u.jsx)("h5",null,Object(u.jsx)(r.FormattedMessage,{id:"xpack.stackAlerts.geoContainment.boundariesFormLabel",defaultMessage:"Boundaries"}))),Object(u.jsx)(s.EuiSpacer,{size:"m"}),Object(u.jsx)(s.EuiSkeletonText,{lines:3,size:"s",isLoading:t},Object(u.jsx)(s.EuiFormRow,{error:f,isInvalid:Boolean(f),label:l.i18n.translate("xpack.stackAlerts.geoContainment.dataViewLabel",{defaultMessage:"Data view"})},Object(u.jsx)(c,{dataViewId:e.ruleParams.boundaryIndexId,data:e.data,isInvalid:Boolean(f),onChange:t=>{if(!t.id)return;e.setDataViewId(t.id),e.setDataViewTitle(t.title);const a=w(t.fields);a.length?e.setGeoField(a[0].name):"boundaryGeoField"in e.ruleParams&&e.setGeoField(""),"boundaryNameField"in e.ruleParams&&e.setNameField(void 0)},unifiedSearch:e.unifiedSearch})),e.ruleParams.boundaryIndexId&&Object(u.jsx)(i.a.Fragment,null,Object(u.jsx)(s.EuiFormRow,{error:y,isInvalid:Boolean(y),label:l.i18n.translate("xpack.stackAlerts.geoContainment.geofieldLabel",{defaultMessage:"Location"})},Object(u.jsx)(F,{isInvalid:Boolean(y),placeholder:l.i18n.translate("xpack.stackAlerts.geoContainment.selectGeoLabel",{defaultMessage:"Select location field"}),value:e.ruleParams.boundaryGeoField,onChange:t=>{t&&e.setGeoField(t)},fields:m})),Object(u.jsx)(s.EuiFormRow,{label:l.i18n.translate("xpack.stackAlerts.geoContainment.boundaryNameSelectLabel",{defaultMessage:"Display name (optional)"})},Object(u.jsx)(F,{placeholder:l.i18n.translate("xpack.stackAlerts.geoContainment.selectBoundaryNameLabel",{defaultMessage:"Select name field"}),value:e.ruleParams.boundaryNameField,onChange:t=>{t&&e.setNameField(t)},fields:x})),Object(u.jsx)(s.EuiFormRow,{helpText:l.i18n.translate("xpack.stackAlerts.geoContainment.boundariesFilterHelpText",{defaultMessage:"Add a filter to narrow boundaries."}),label:l.i18n.translate("xpack.stackAlerts.geoContainment.filterLabel",{defaultMessage:"Filter"})},Object(u.jsx)(v,{dataView:o,onChange:t=>{e.setQuery(t)},query:e.ruleParams.boundaryIndexQuery})))))},C=["geo_point","geo_shape"];function E(e){return e.filter((e=>"date"===e.type))}function V(e){return e.filter((e=>C.includes(e.type)))}const M=e=>{const[t,a]=Object(n.useState)(!1),[o,d]=Object(n.useState)(),[b,g]=Object(n.useState)(!1),[m,p]=Object(n.useState)([]),[x,j]=Object(n.useState)([]),[f,y]=Object(n.useState)([]);Object(n.useEffect)((()=>{if(!e.ruleParams.indexId||e.ruleParams.indexId===(null==o?void 0:o.id))return;let t=!1;return a(!0),g(!1),e.data.indexPatterns.get(e.ruleParams.indexId).then((e=>{t||(d(e),p(E(e.fields)),j(e.fields.filter((e=>e.aggregatable&&["string","number","ip"].includes(e.type)&&!e.name.startsWith("_")))),y(V(e.fields)),a(!1))})).catch((()=>{t||(g(!0),a(!1))})),()=>{t=!0}}),[e.ruleParams.indexId,null==o?void 0:o.id,e.data.indexPatterns]);const k=e.getValidationError("index")||(o&&0===m.length?l.i18n.translate("xpack.stackAlerts.geoContainment.noDateFieldInIndexPattern.message",{defaultMessage:"Data view does not contain date fields."}):o&&0===f.length?l.i18n.translate("xpack.stackAlerts.geoContainment.noGeoFieldInIndexPattern.message",{defaultMessage:"Data view does not contain geospatial fields. Must have one of type: {geoFieldTypes}.",values:{geoFieldTypes:C.join(", ")}}):b?l.i18n.translate("xpack.stackAlerts.geoContainment.dataViewNotFound",{defaultMessage:"Unable to find data view ''{id}''",values:{id:e.ruleParams.indexId}}):null),h=e.getValidationError("dateField"),I=e.getValidationError("geoField"),O=e.getValidationError("entity");return Object(u.jsx)(s.EuiPanel,null,Object(u.jsx)(s.EuiTitle,{size:"xs"},Object(u.jsx)("h5",null,Object(u.jsx)(r.FormattedMessage,{id:"xpack.stackAlerts.geoContainment.entitiesFormLabel",defaultMessage:"Entities"}))),Object(u.jsx)(s.EuiSpacer,{size:"m"}),Object(u.jsx)(s.EuiSkeletonText,{lines:3,size:"s",isLoading:t},Object(u.jsx)(s.EuiFormRow,{error:k,isInvalid:Boolean(k),label:l.i18n.translate("xpack.stackAlerts.geoContainment.dataViewLabel",{defaultMessage:"Data view"}),"data-test-subj":"entitiesDataView"},Object(u.jsx)(c,{dataViewId:e.ruleParams.indexId,data:e.data,isInvalid:Boolean(k),onChange:t=>{if(!t.id)return;e.setDataViewId(t.id),e.setDataViewTitle(t.title);const a=E(t.fields);a.length?e.setDateField(a[0].name):"dateField"in e.ruleParams&&e.setDateField(""),"entity"in e.ruleParams&&e.setEntityField("");const n=V(t.fields);n.length?e.setGeoField(n[0].name):"geoField"in e.ruleParams&&e.setGeoField("")},unifiedSearch:e.unifiedSearch})),e.ruleParams.indexId&&Object(u.jsx)(i.a.Fragment,null,Object(u.jsx)(s.EuiFormRow,{error:h,isInvalid:Boolean(h),label:l.i18n.translate("xpack.stackAlerts.geoContainment.timeFieldLabel",{defaultMessage:"Time"})},Object(u.jsx)(F,{isInvalid:Boolean(h),placeholder:l.i18n.translate("xpack.stackAlerts.geoContainment.selectTimeLabel",{defaultMessage:"Select time field"}),value:e.ruleParams.dateField,onChange:t=>{t&&e.setDateField(t)},fields:m})),Object(u.jsx)(s.EuiFormRow,{error:I,isInvalid:Boolean(I),label:l.i18n.translate("xpack.stackAlerts.geoContainment.geofieldLabel",{defaultMessage:"Location"})},Object(u.jsx)(F,{isInvalid:Boolean(I),placeholder:l.i18n.translate("xpack.stackAlerts.geoContainment.selectGeoLabel",{defaultMessage:"Select location field"}),value:e.ruleParams.geoField,onChange:t=>{t&&e.setGeoField(t)},fields:f})),Object(u.jsx)(s.EuiFormRow,{error:O,isInvalid:Boolean(O),label:l.i18n.translate("xpack.stackAlerts.geoContainment.entityfieldLabel",{defaultMessage:"Entity"})},Object(u.jsx)(F,{isInvalid:Boolean(O),placeholder:l.i18n.translate("xpack.stackAlerts.geoContainment.topHitsSplitFieldSelectPlaceholder",{defaultMessage:"Select entity field"}),value:e.ruleParams.entity,onChange:t=>{t&&e.setEntityField(t)},fields:x})),Object(u.jsx)(s.EuiFormRow,{helpText:l.i18n.translate("xpack.stackAlerts.geoContainment.entityFilterHelpText",{defaultMessage:"Add a filter to narrow entities."}),label:l.i18n.translate("xpack.stackAlerts.geoContainment.filterLabel",{defaultMessage:"Filter"})},Object(u.jsx)(v,{dataView:o,onChange:t=>{e.setQuery(t)},query:e.ruleParams.indexQuery})))))};t.default=e=>{function t(t){var a;return(null===(a=e.errors[t])||void 0===a?void 0:a.length)>0&&t in e.ruleParams?e.errors[t][0]:null}return Object(u.jsx)(i.a.Fragment,null,Object(u.jsx)(M,{data:e.data,getValidationError:t,ruleParams:e.ruleParams,setDataViewId:t=>e.setRuleParams("indexId",t),setDataViewTitle:t=>e.setRuleParams("index",t),setDateField:t=>e.setRuleParams("dateField",t),setEntityField:t=>e.setRuleParams("entity",t),setGeoField:t=>e.setRuleParams("geoField",t),setQuery:t=>e.setRuleParams("indexQuery",t),unifiedSearch:e.unifiedSearch}),Object(u.jsx)(s.EuiSpacer,{size:"s"}),Object(u.jsx)(S,{data:e.data,getValidationError:t,ruleParams:e.ruleParams,setDataViewId:t=>{e.setRuleParams("boundaryIndexId",t),e.setRuleParams("boundaryType","entireIndex")},setDataViewTitle:t=>e.setRuleParams("boundaryIndexTitle",t),setGeoField:t=>e.setRuleParams("boundaryGeoField",t),setNameField:t=>e.setRuleParams("boundaryNameField",t),setQuery:t=>e.setRuleParams("boundaryIndexQuery",t),unifiedSearch:e.unifiedSearch}),Object(u.jsx)(s.EuiSpacer,{size:"l"}))}}}]);