"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GroupsRouter = void 0;
var _react = _interopRequireWildcard(require("react"));
var _kea = require("kea");
var _sharedUxRouter = require("@kbn/shared-ux-router");
var _routes = require("../../routes");
var _group_router = require("./group_router");
var _groups = require("./groups");
var _groups_logic = require("./groups_logic");
require("./groups.scss");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const GroupsRouter = () => {
  const {
    initializeGroups
  } = (0, _kea.useActions)(_groups_logic.GroupsLogic);
  (0, _react.useEffect)(() => {
    initializeGroups();
  }, []);
  return /*#__PURE__*/_react.default.createElement(_sharedUxRouter.Routes, null, /*#__PURE__*/_react.default.createElement(_sharedUxRouter.Route, {
    exact: true,
    path: _routes.GROUPS_PATH
  }, /*#__PURE__*/_react.default.createElement(_groups.Groups, null)), /*#__PURE__*/_react.default.createElement(_sharedUxRouter.Route, {
    path: _routes.GROUP_PATH
  }, /*#__PURE__*/_react.default.createElement(_group_router.GroupRouter, null)));
};
exports.GroupsRouter = GroupsRouter;