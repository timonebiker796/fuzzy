"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SCHEMA_UPDATED_MESSAGE = exports.SCHEMA_SAVE_BUTTON = exports.SCHEMA_MANAGE_SCHEMA_TITLE = exports.SCHEMA_MANAGE_SCHEMA_DESCRIPTION = exports.SCHEMA_FILTER_PLACEHOLDER = exports.SCHEMA_FIELD_ERRORS_ERROR_MESSAGE = exports.SCHEMA_FIELD_ADDED_MESSAGE = exports.SCHEMA_ERRORS_TABLE_FIELD_NAME_HEADER = exports.SCHEMA_ERRORS_TABLE_DATA_TYPE_HEADER = exports.SCHEMA_ERRORS_HEADING = exports.SCHEMA_EMPTY_SCHEMA_TITLE = exports.SCHEMA_EMPTY_SCHEMA_DESCRIPTION = exports.SCHEMA_ADD_FIELD_BUTTON = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SCHEMA_ERRORS_HEADING = exports.SCHEMA_ERRORS_HEADING = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.errors.heading', {
  defaultMessage: 'Schema Change Errors'
});
const SCHEMA_ERRORS_TABLE_FIELD_NAME_HEADER = exports.SCHEMA_ERRORS_TABLE_FIELD_NAME_HEADER = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.errors.header.fieldName', {
  defaultMessage: 'Field Name'
});
const SCHEMA_ERRORS_TABLE_DATA_TYPE_HEADER = exports.SCHEMA_ERRORS_TABLE_DATA_TYPE_HEADER = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.errors.header.dataType', {
  defaultMessage: 'Data Type'
});
const SCHEMA_FIELD_ERRORS_ERROR_MESSAGE = exports.SCHEMA_FIELD_ERRORS_ERROR_MESSAGE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.errors.message', {
  defaultMessage: 'Oops, we were not able to find any errors for this Schema.'
});
const SCHEMA_FIELD_ADDED_MESSAGE = exports.SCHEMA_FIELD_ADDED_MESSAGE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.fieldAdded.message', {
  defaultMessage: 'New field added.'
});
const SCHEMA_UPDATED_MESSAGE = exports.SCHEMA_UPDATED_MESSAGE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.updated.message', {
  defaultMessage: 'Schema updated.'
});
const SCHEMA_ADD_FIELD_BUTTON = exports.SCHEMA_ADD_FIELD_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.addField.button', {
  defaultMessage: 'Add field'
});
const SCHEMA_MANAGE_SCHEMA_TITLE = exports.SCHEMA_MANAGE_SCHEMA_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.manage.title', {
  defaultMessage: 'Manage source schema'
});
const SCHEMA_MANAGE_SCHEMA_DESCRIPTION = exports.SCHEMA_MANAGE_SCHEMA_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.manage.description', {
  defaultMessage: 'Add new fields or change the types of existing ones'
});
const SCHEMA_FILTER_PLACEHOLDER = exports.SCHEMA_FILTER_PLACEHOLDER = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.filter.placeholder', {
  defaultMessage: 'Filter schema fields...'
});
const SCHEMA_SAVE_BUTTON = exports.SCHEMA_SAVE_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.save.button', {
  defaultMessage: 'Save schema'
});
const SCHEMA_EMPTY_SCHEMA_TITLE = exports.SCHEMA_EMPTY_SCHEMA_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.empty.title', {
  defaultMessage: 'Content source does not have a schema'
});
const SCHEMA_EMPTY_SCHEMA_DESCRIPTION = exports.SCHEMA_EMPTY_SCHEMA_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.workplaceSearch.contentSource.schema.empty.description', {
  defaultMessage: 'A schema is created for you once you index some documents. Click below to create schema fields in advance.'
});