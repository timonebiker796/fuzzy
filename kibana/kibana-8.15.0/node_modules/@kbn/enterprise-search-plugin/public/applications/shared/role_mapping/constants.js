"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.USER_UPDATED_LABEL = exports.USER_MODAL_TITLE = exports.USER_MODAL_TEXT = exports.USER_ADDED_LABEL = exports.USERS_HEADING_TITLE = exports.USERS_HEADING_LABEL = exports.USERS_HEADING_DESCRIPTION = exports.USERNAME_NO_USERS_TEXT = exports.USERNAME_LABEL = exports.UPDATE_USER_LABEL = exports.UPDATE_USER_DESCRIPTION = exports.UPDATE_ROLE_MAPPING = exports.SMTP_LINK_LABEL = exports.SMTP_CALLOUT_LABEL = exports.SAVE_ROLE_MAPPING = exports.ROLE_MODAL_TEXT = exports.ROLE_MAPPING_NOT_FOUND = exports.ROLE_MAPPING_FLYOUT_UPDATE_TITLE = exports.ROLE_MAPPING_FLYOUT_UPDATE_BUTTON = exports.ROLE_MAPPING_FLYOUT_DESCRIPTION = exports.ROLE_MAPPING_FLYOUT_CREATE_TITLE = exports.ROLE_MAPPING_FLYOUT_CREATE_BUTTON = exports.ROLE_MAPPINGS_TITLE = exports.ROLE_MAPPINGS_NO_RESULTS_MESSAGE = exports.ROLE_MAPPINGS_HEADING_TITLE = exports.ROLE_MAPPINGS_HEADING_DOCS_LINK = exports.ROLE_MAPPINGS_HEADING_DESCRIPTION = exports.ROLE_MAPPINGS_HEADING_BUTTON = exports.ROLE_LABEL = exports.ROLES_DISABLED_TITLE = exports.ROLES_DISABLED_NOTE = exports.ROLES_DISABLED_DESCRIPTION = exports.REQUIRED_LABEL = exports.REMOVE_USER_BUTTON = exports.REMOVE_ROLE_MAPPING_TITLE = exports.REMOVE_ROLE_MAPPING_BUTTON = exports.RBAC_BUTTON_DISABLED_LABEL = exports.NO_USERS_TITLE = exports.NO_USERS_LABEL = exports.NO_USERS_DESCRIPTION = exports.NEW_USER_LABEL = exports.NEW_USER_DESCRIPTION = exports.NEW_INVITATION_LABEL = exports.MANAGE_ROLE_MAPPING_TITLE = exports.KIBANA_ACCESS_WARNING_TITLE = exports.KIBANA_ACCESS_WARNING_ERROR_MESSAGE = exports.KIBANA_ACCESS_WARNING_DESCRIPTION = exports.INVITATION_PENDING_LABEL = exports.INVITATION_LINK = exports.INVITATION_DESCRIPTION = exports.GROUPS_LABEL = exports.FILTER_USERS_LABEL = exports.FILTER_ROLE_MAPPINGS_PLACEHOLDER = exports.EXTERNAL_ATTRIBUTE_TOOLTIP = exports.EXTERNAL_ATTRIBUTE_LABEL = exports.EXISTING_USER_LABEL = exports.EXISTING_INVITATION_LABEL = exports.ENGINES_LABEL = exports.ENABLE_USERS_LINK = exports.ENABLE_ROLES_LINK = exports.ENABLE_ROLES_BUTTON = exports.EMAIL_LABEL = exports.DELETE_ROLE_MAPPING_DESCRIPTION = exports.DEACTIVATED_USER_CALLOUT_LABEL = exports.DEACTIVATED_USER_CALLOUT_DESCRIPTION = exports.DEACTIVATED_LABEL = exports.AUTH_INDIVIDUAL_PROVIDER_LABEL = exports.AUTH_ANY_PROVIDER_LABEL = exports.ATTRIBUTE_VALUE_LABEL = exports.ATTRIBUTE_SELECTOR_TITLE = exports.ALL_LABEL = exports.ADD_USER_LABEL = exports.ADD_ROLE_MAPPING_TITLE = exports.ADD_ROLE_MAPPING_BUTTON = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ADD_ROLE_MAPPING_BUTTON = exports.ADD_ROLE_MAPPING_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.addRoleMappingButtonLabel', {
  defaultMessage: 'Add mapping'
});
const AUTH_ANY_PROVIDER_LABEL = exports.AUTH_ANY_PROVIDER_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.anyAuthProviderLabel', {
  defaultMessage: 'Any current or future Auth Provider'
});
const AUTH_INDIVIDUAL_PROVIDER_LABEL = exports.AUTH_INDIVIDUAL_PROVIDER_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.individualAuthProviderLabel', {
  defaultMessage: 'Select individual auth providers'
});
const ATTRIBUTE_SELECTOR_TITLE = exports.ATTRIBUTE_SELECTOR_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.attributeSelectorTitle', {
  defaultMessage: 'Attribute mapping'
});
const ROLE_LABEL = exports.ROLE_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.roleLabel', {
  defaultMessage: 'Role'
});
const USERNAME_LABEL = exports.USERNAME_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.usernameLabel', {
  defaultMessage: 'Username'
});
const EMAIL_LABEL = exports.EMAIL_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.emailLabel', {
  defaultMessage: 'Email'
});
const ALL_LABEL = exports.ALL_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.allLabel', {
  defaultMessage: 'All'
});
const GROUPS_LABEL = exports.GROUPS_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.groupsLabel', {
  defaultMessage: 'Groups'
});
const ENGINES_LABEL = exports.ENGINES_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.enginesLabel', {
  defaultMessage: 'Engines'
});
const EXTERNAL_ATTRIBUTE_LABEL = exports.EXTERNAL_ATTRIBUTE_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.externalAttributeLabel', {
  defaultMessage: 'External attribute'
});
const ATTRIBUTE_VALUE_LABEL = exports.ATTRIBUTE_VALUE_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.attributeValueLabel', {
  defaultMessage: 'Attribute value'
});
const REMOVE_ROLE_MAPPING_TITLE = exports.REMOVE_ROLE_MAPPING_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.removeRoleMappingTitle', {
  defaultMessage: 'Remove role mapping'
});
const DELETE_ROLE_MAPPING_DESCRIPTION = exports.DELETE_ROLE_MAPPING_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.deleteRoleMappingDescription', {
  defaultMessage: 'Please note that deleting a mapping is permanent and cannot be undone'
});
const REMOVE_ROLE_MAPPING_BUTTON = exports.REMOVE_ROLE_MAPPING_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.removeRoleMappingButton', {
  defaultMessage: 'Remove mapping'
});
const REMOVE_USER_BUTTON = exports.REMOVE_USER_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.removeUserButton', {
  defaultMessage: 'Remove user'
});
const FILTER_ROLE_MAPPINGS_PLACEHOLDER = exports.FILTER_ROLE_MAPPINGS_PLACEHOLDER = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.filterRoleMappingsPlaceholder', {
  defaultMessage: 'Filter role mappings'
});
const ROLE_MAPPINGS_TITLE = exports.ROLE_MAPPINGS_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.roleMappingsTitle', {
  defaultMessage: 'Users and roles'
});
const ADD_ROLE_MAPPING_TITLE = exports.ADD_ROLE_MAPPING_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.newRoleMappingTitle', {
  defaultMessage: 'Add role mapping'
});
const MANAGE_ROLE_MAPPING_TITLE = exports.MANAGE_ROLE_MAPPING_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.manageRoleMappingTitle', {
  defaultMessage: 'Manage role mapping'
});
const ROLE_MAPPING_NOT_FOUND = exports.ROLE_MAPPING_NOT_FOUND = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.notFoundMessage', {
  defaultMessage: 'No matching Role mapping found.'
});
const ROLE_MAPPING_FLYOUT_CREATE_TITLE = exports.ROLE_MAPPING_FLYOUT_CREATE_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.flyoutCreateTitle', {
  defaultMessage: 'Create a role mapping'
});
const ROLE_MAPPING_FLYOUT_UPDATE_TITLE = exports.ROLE_MAPPING_FLYOUT_UPDATE_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.flyoutUpdateTitle', {
  defaultMessage: 'Update role mapping'
});
const ROLE_MAPPING_FLYOUT_DESCRIPTION = exports.ROLE_MAPPING_FLYOUT_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.flyoutDescription', {
  defaultMessage: 'Assign roles and permissions based on user attributes'
});
const ROLE_MAPPING_FLYOUT_CREATE_BUTTON = exports.ROLE_MAPPING_FLYOUT_CREATE_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.roleMappingFlyoutCreateButton', {
  defaultMessage: 'Create mapping'
});
const ROLE_MAPPING_FLYOUT_UPDATE_BUTTON = exports.ROLE_MAPPING_FLYOUT_UPDATE_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.roleMappingFlyoutUpdateButton', {
  defaultMessage: 'Update mapping'
});
const SAVE_ROLE_MAPPING = exports.SAVE_ROLE_MAPPING = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.saveRoleMappingButtonLabel', {
  defaultMessage: 'Save role mapping'
});
const UPDATE_ROLE_MAPPING = exports.UPDATE_ROLE_MAPPING = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.updateRoleMappingButtonLabel', {
  defaultMessage: 'Update role mapping'
});
const ROLE_MAPPINGS_HEADING_TITLE = exports.ROLE_MAPPINGS_HEADING_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.roleMappingsHeadingTitle', {
  defaultMessage: 'Role mappings'
});
const ROLE_MAPPINGS_HEADING_DESCRIPTION = productName => _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.roleMappingsHeadingDescription', {
  defaultMessage: 'Role mappings provide an interface to associate native or SAML-governed role attributes with {productName} permissions.',
  values: {
    productName
  }
});
exports.ROLE_MAPPINGS_HEADING_DESCRIPTION = ROLE_MAPPINGS_HEADING_DESCRIPTION;
const ROLE_MAPPINGS_HEADING_DOCS_LINK = exports.ROLE_MAPPINGS_HEADING_DOCS_LINK = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.roleMappingsHeadingDocsLink', {
  defaultMessage: 'Learn more about role mappings.'
});
const ROLE_MAPPINGS_HEADING_BUTTON = exports.ROLE_MAPPINGS_HEADING_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.roleMappingsHeadingButton', {
  defaultMessage: 'Create a new role mapping'
});
const ROLE_MAPPINGS_NO_RESULTS_MESSAGE = exports.ROLE_MAPPINGS_NO_RESULTS_MESSAGE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.noResults.message', {
  defaultMessage: 'No matching role mappings found'
});
const ROLES_DISABLED_TITLE = exports.ROLES_DISABLED_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.rolesDisabledTitle', {
  defaultMessage: 'Role-based access is disabled'
});
const ROLES_DISABLED_DESCRIPTION = productName => _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.rolesDisabledDescription', {
  defaultMessage: 'All users set for this deployment currently have full access to {productName}. To restrict access and manage permissions, you must enable role-based access for Enterprise Search.',
  values: {
    productName
  }
});
exports.ROLES_DISABLED_DESCRIPTION = ROLES_DISABLED_DESCRIPTION;
const ROLES_DISABLED_NOTE = exports.ROLES_DISABLED_NOTE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.rolesDisabledNote', {
  defaultMessage: 'Note: enabling role-based access restricts access for both App Search and Workplace Search. Once enabled, review access management for both products, if applicable.'
});
const RBAC_BUTTON_DISABLED_LABEL = exports.RBAC_BUTTON_DISABLED_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.rbacButtonDisabledLabel', {
  defaultMessage: 'Enabling RBAC can be performed by a superuser.'
});
const ENABLE_ROLES_BUTTON = exports.ENABLE_ROLES_BUTTON = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.enableRolesButton', {
  defaultMessage: 'Enable role-based access'
});
const ENABLE_ROLES_LINK = exports.ENABLE_ROLES_LINK = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.enableRolesLink', {
  defaultMessage: 'Learn more about role-based access'
});
const INVITATION_DESCRIPTION = exports.INVITATION_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.invitationDescription', {
  defaultMessage: 'This URL can be shared with the user, allowing them to accept the Enterprise Search invitation and set a new password'
});
const NEW_INVITATION_LABEL = exports.NEW_INVITATION_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.newInvitationLabel', {
  defaultMessage: 'Invitation URL'
});
const EXISTING_INVITATION_LABEL = exports.EXISTING_INVITATION_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.existingInvitationLabel', {
  defaultMessage: 'The user has not yet accepted the invitation.'
});
const INVITATION_LINK = exports.INVITATION_LINK = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.invitationLink', {
  defaultMessage: 'Enterprise Search Invitation Link'
});
const NO_USERS_TITLE = exports.NO_USERS_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.noUsersTitle', {
  defaultMessage: 'No user added'
});
const NO_USERS_DESCRIPTION = exports.NO_USERS_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.noUsersDescription', {
  defaultMessage: 'Users can be added individually, for flexibility. Role mappings provide a broader interface for adding large number of users using user attributes.'
});
const ENABLE_USERS_LINK = exports.ENABLE_USERS_LINK = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.enableUsersLink', {
  defaultMessage: 'Learn more about user management'
});
const NEW_USER_LABEL = exports.NEW_USER_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.newUserLabel', {
  defaultMessage: 'Create new user'
});
const EXISTING_USER_LABEL = exports.EXISTING_USER_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.existingUserLabel', {
  defaultMessage: 'Add existing user'
});
const USERNAME_NO_USERS_TEXT = exports.USERNAME_NO_USERS_TEXT = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.usernameNoUsersText', {
  defaultMessage: 'No existing user eligible for addition.'
});
const REQUIRED_LABEL = exports.REQUIRED_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.requiredLabel', {
  defaultMessage: 'Required'
});
const USERS_HEADING_TITLE = exports.USERS_HEADING_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.usersHeadingTitle', {
  defaultMessage: 'Users'
});
const USERS_HEADING_DESCRIPTION = exports.USERS_HEADING_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.usersHeadingDescription', {
  defaultMessage: 'User management provides granular access for individual or special permission needs. Some users may be excluded from this list. These include users from federated sources such as SAML, which are managed by role mappings, and built-in user accounts such as the “elastic” or “enterprise_search” users.'
});
const USERS_HEADING_LABEL = exports.USERS_HEADING_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.usersHeadingLabel', {
  defaultMessage: 'Add a new user'
});
const UPDATE_USER_LABEL = exports.UPDATE_USER_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.updateUserLabel', {
  defaultMessage: 'Update user'
});
const ADD_USER_LABEL = exports.ADD_USER_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.addUserLabel', {
  defaultMessage: 'Add user'
});
const USER_ADDED_LABEL = exports.USER_ADDED_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.userAddedLabel', {
  defaultMessage: 'User added'
});
const USER_UPDATED_LABEL = exports.USER_UPDATED_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.userUpdatedLabel', {
  defaultMessage: 'User updated'
});
const NEW_USER_DESCRIPTION = exports.NEW_USER_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.newUserDescription', {
  defaultMessage: 'Provide granular access and permissions'
});
const UPDATE_USER_DESCRIPTION = exports.UPDATE_USER_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.updateUserDescription', {
  defaultMessage: 'Manage granular access and permissions'
});
const DEACTIVATED_LABEL = exports.DEACTIVATED_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.deactivatedLabel', {
  defaultMessage: 'Deactivated'
});
const INVITATION_PENDING_LABEL = exports.INVITATION_PENDING_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.invitationPendingLabel', {
  defaultMessage: 'Invitation pending'
});
const ROLE_MODAL_TEXT = exports.ROLE_MODAL_TEXT = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.roleModalText', {
  defaultMessage: 'Removing a role mapping could revoke access to the currently logged-in user. Before proceeding, verify that the currently logged-in user has the appropriate access level via a different role mapping to avoid undesired behavior. This action may not take effect immediately for SAML-governed roles. Users with an active SAML session will retain access until it expires.'
});
const USER_MODAL_TITLE = username => _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.userModalTitle', {
  defaultMessage: 'Remove {username}',
  values: {
    username
  }
});
exports.USER_MODAL_TITLE = USER_MODAL_TITLE;
const USER_MODAL_TEXT = exports.USER_MODAL_TEXT = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.userModalText', {
  defaultMessage: 'Removing a user immediately revokes access to the experience, unless this user’s attributes also corresponds to a role mapping for native and SAML-governed authentication, in which case associated role mappings should also be reviewed and adjusted, as needed.'
});
const FILTER_USERS_LABEL = exports.FILTER_USERS_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.filterUsersLabel', {
  defaultMessage: 'Filter users'
});
const NO_USERS_LABEL = exports.NO_USERS_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.noUsersLabel', {
  defaultMessage: 'No matching users found'
});
const EXTERNAL_ATTRIBUTE_TOOLTIP = exports.EXTERNAL_ATTRIBUTE_TOOLTIP = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.externalAttributeTooltip', {
  defaultMessage: 'External attributes are defined by the identity provider, and varies from service to service.'
});
const DEACTIVATED_USER_CALLOUT_LABEL = exports.DEACTIVATED_USER_CALLOUT_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.deactivatedUserCalloutLabel', {
  defaultMessage: 'User deactivated'
});
const DEACTIVATED_USER_CALLOUT_DESCRIPTION = exports.DEACTIVATED_USER_CALLOUT_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.deactivatedUserCalloutDescription', {
  defaultMessage: 'This user is not currently active, and access has been temporarily revoked. Users can be re-activated via the User Management area of the Kibana console.'
});
const SMTP_CALLOUT_LABEL = exports.SMTP_CALLOUT_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.smtpCalloutLabel', {
  defaultMessage: 'Personalized invitations will be automatically sent when an Enterprise Search'
});
const SMTP_LINK_LABEL = exports.SMTP_LINK_LABEL = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.smtpLinkLabel', {
  defaultMessage: 'SMTP configuration is provided'
});
const KIBANA_ACCESS_WARNING_TITLE = exports.KIBANA_ACCESS_WARNING_TITLE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.kibanaAccessWarningTitle', {
  defaultMessage: 'Kibana access warning'
});
const KIBANA_ACCESS_WARNING_ERROR_MESSAGE = exports.KIBANA_ACCESS_WARNING_ERROR_MESSAGE = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.kibanaAccessWarningErrorMessage', {
  defaultMessage: 'This Elasticsearch user does not have an Enterprise Search role in Elasticsearch. They may not have access to Kibana.'
});
const KIBANA_ACCESS_WARNING_DESCRIPTION = exports.KIBANA_ACCESS_WARNING_DESCRIPTION = _i18n.i18n.translate('xpack.enterpriseSearch.roleMapping.kibanaAccessWarningDescription', {
  defaultMessage: 'Consider giving them the "enterprise-search-user" role.'
});