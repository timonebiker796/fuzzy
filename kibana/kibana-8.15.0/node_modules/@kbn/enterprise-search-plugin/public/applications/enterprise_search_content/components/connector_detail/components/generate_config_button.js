"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenerateConfigButton = void 0;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const GenerateConfigButton = ({
  connectorId,
  generateConfiguration,
  isGenerateLoading
}) => {
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    direction: "row",
    gutterSize: "xs",
    responsive: false,
    alignItems: "center"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
    "data-test-subj": "entSearchContent-connector-configuration-generateConfigButton",
    "data-telemetry-id": "entSearchContent-connector-configuration-generateConfigButton",
    fill: true,
    iconType: "sparkles",
    isLoading: isGenerateLoading,
    onClick: () => {
      generateConfiguration({
        connectorId
      });
    }
  }, _i18n.i18n.translate('xpack.enterpriseSearch.content.connector_detail.configurationConnector.steps.generateApiKey.button.label', {
    defaultMessage: 'Generate configuration'
  }))));
};
exports.GenerateConfigButton = GenerateConfigButton;