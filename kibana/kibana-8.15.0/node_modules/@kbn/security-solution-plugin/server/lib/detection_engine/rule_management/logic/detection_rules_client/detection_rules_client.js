"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDetectionRulesClient = void 0;
var _create_custom_rule = require("./methods/create_custom_rule");
var _create_prebuilt_rule = require("./methods/create_prebuilt_rule");
var _update_rule = require("./methods/update_rule");
var _patch_rule = require("./methods/patch_rule");
var _delete_rule = require("./methods/delete_rule");
var _upgrade_prebuilt_rule = require("./methods/upgrade_prebuilt_rule");
var _import_rule = require("./methods/import_rule");
var _with_security_span = require("../../../../../utils/with_security_span");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const createDetectionRulesClient = (rulesClient, mlAuthz) => ({
  async createCustomRule(args) {
    return (0, _with_security_span.withSecuritySpan)('DetectionRulesClient.createCustomRule', async () => {
      return (0, _create_custom_rule.createCustomRule)(rulesClient, args, mlAuthz);
    });
  },
  async createPrebuiltRule(args) {
    return (0, _with_security_span.withSecuritySpan)('DetectionRulesClient.createPrebuiltRule', async () => {
      return (0, _create_prebuilt_rule.createPrebuiltRule)(rulesClient, args, mlAuthz);
    });
  },
  async updateRule(args) {
    return (0, _with_security_span.withSecuritySpan)('DetectionRulesClient.updateRule', async () => {
      return (0, _update_rule.updateRule)(rulesClient, args, mlAuthz);
    });
  },
  async patchRule(args) {
    return (0, _with_security_span.withSecuritySpan)('DetectionRulesClient.patchRule', async () => {
      return (0, _patch_rule.patchRule)(rulesClient, args, mlAuthz);
    });
  },
  async deleteRule(args) {
    return (0, _with_security_span.withSecuritySpan)('DetectionRulesClient.deleteRule', async () => {
      return (0, _delete_rule.deleteRule)(rulesClient, args);
    });
  },
  async upgradePrebuiltRule(args) {
    return (0, _with_security_span.withSecuritySpan)('DetectionRulesClient.upgradePrebuiltRule', async () => {
      return (0, _upgrade_prebuilt_rule.upgradePrebuiltRule)(rulesClient, args, mlAuthz);
    });
  },
  async importRule(args) {
    return (0, _with_security_span.withSecuritySpan)('DetectionRulesClient.importRule', async () => {
      return (0, _import_rule.importRule)(rulesClient, args, mlAuthz);
    });
  }
});
exports.createDetectionRulesClient = createDetectionRulesClient;