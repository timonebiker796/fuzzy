"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateRule = void 0;
var _zodHelpers = require("@kbn/zod-helpers");
var _utils = require("../../../utils/utils");
var _rule_converters = require("../../../normalization/rule_converters");
var _rule_schema = require("../../../../../../../common/api/detection_engine/model/rule_schema");
var _utils2 = require("../utils");
var _read_rules = require("../read_rules");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const updateRule = async (rulesClient, args, mlAuthz) => {
  const {
    ruleUpdate
  } = args;
  const {
    rule_id: ruleId,
    id
  } = ruleUpdate;
  await (0, _utils2.validateMlAuth)(mlAuthz, ruleUpdate.type);
  const existingRule = await (0, _read_rules.readRules)({
    rulesClient,
    ruleId,
    id
  });
  if (existingRule == null) {
    const error = (0, _utils.getIdError)({
      id,
      ruleId
    });
    throw new _utils2.ClientError(error.message, error.statusCode);
  }
  const newInternalRule = (0, _rule_converters.convertUpdateAPIToInternalSchema)({
    existingRule,
    ruleUpdate
  });
  const updatedInternalRule = await rulesClient.update({
    id: existingRule.id,
    data: newInternalRule
  });
  const {
    enabled
  } = await (0, _utils2.toggleRuleEnabledOnUpdate)(rulesClient, existingRule, ruleUpdate.enabled);

  /* Trying to convert the internal rule to a RuleResponse object */
  const parseResult = _rule_schema.RuleResponse.safeParse((0, _rule_converters.internalRuleToAPIResponse)({
    ...updatedInternalRule,
    enabled
  }));
  if (!parseResult.success) {
    throw new _utils2.RuleResponseValidationError({
      message: (0, _zodHelpers.stringifyZodError)(parseResult.error),
      ruleId: updatedInternalRule.params.ruleId
    });
  }
  return parseResult.data;
};
exports.updateRule = updateRule;