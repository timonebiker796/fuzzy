"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AttackDiscoveryMarkdownFormatter = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireWildcard(require("react"));
var _attack_discovery_markdown_parser = require("./attack_discovery_markdown_parser");
var _field_markdown_renderer = require("./field_markdown_renderer");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const AttackDiscoveryMarkdownFormatterComponent = ({
  disableActions = false,
  markdown
}) => {
  const attackDiscoveryParsingPluginList = (0, _react.useMemo)(() => [...(0, _eui.getDefaultEuiMarkdownParsingPlugins)(), _attack_discovery_markdown_parser.AttackDiscoveryMarkdownParser], []);
  const attackDiscoveryProcessingPluginList = (0, _react.useMemo)(() => {
    const processingPluginList = (0, _eui.getDefaultEuiMarkdownProcessingPlugins)();
    processingPluginList[1][1].components.fieldPlugin = (0, _field_markdown_renderer.getFieldMarkdownRenderer)(disableActions);
    return processingPluginList;
  }, [disableActions]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiMarkdownFormat, {
    color: "subdued",
    "data-test-subj": "attackDiscoveryMarkdownFormatter",
    parsingPluginList: attackDiscoveryParsingPluginList,
    processingPluginList: attackDiscoveryProcessingPluginList,
    textSize: "xs"
  }, markdown);
};
AttackDiscoveryMarkdownFormatterComponent.displayName = 'AttackDiscoveryMarkdownFormatter';
const AttackDiscoveryMarkdownFormatter = exports.AttackDiscoveryMarkdownFormatter = /*#__PURE__*/_react.default.memo(AttackDiscoveryMarkdownFormatterComponent);