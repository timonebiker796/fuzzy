"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SHOW_REAL_VALUES = exports.SHOW_ANONYMIZED_LABEL = exports.ERROR_GENERATING_ATTACK_DISCOVERIES = exports.ERROR_CANCELING_ATTACK_DISCOVERIES = exports.CONNECTOR_ERROR = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ERROR_GENERATING_ATTACK_DISCOVERIES = exports.ERROR_GENERATING_ATTACK_DISCOVERIES = _i18n.i18n.translate('xpack.securitySolution.attackDiscovery.errorGeneratingAttackDiscoveriesToastTitle', {
  defaultMessage: 'Error generating attack discoveries'
});
const ERROR_CANCELING_ATTACK_DISCOVERIES = exports.ERROR_CANCELING_ATTACK_DISCOVERIES = _i18n.i18n.translate('xpack.securitySolution.attackDiscovery.errorCancelingAttackDiscoveriesToastTitle', {
  defaultMessage: 'Error canceling attack discoveries'
});
const CONNECTOR_ERROR = exports.CONNECTOR_ERROR = _i18n.i18n.translate('xpack.securitySolution.attackDiscovery.errorConnector', {
  defaultMessage: 'No connector selected, select a connector to use attack discovery'
});
const SHOW_REAL_VALUES = exports.SHOW_REAL_VALUES = _i18n.i18n.translate('xpack.securitySolution.attackDiscovery.showRealValuesLabel', {
  defaultMessage: 'Show real values'
});
const SHOW_ANONYMIZED_LABEL = exports.SHOW_ANONYMIZED_LABEL = _i18n.i18n.translate('xpack.securitySolution.attackDiscovery.showAnonymizedLabel', {
  defaultMessage: 'Show anonymized'
});