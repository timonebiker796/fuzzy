"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AttackChain = void 0;
var _eui = require("@elastic/eui");
var _react = require("@emotion/react");
var _react2 = _interopRequireWildcard(require("react"));
var _tactic = require("./tactic");
var _helpers = require("../../helpers");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const AttackChainComponent = ({
  attackDiscovery
}) => {
  const tacticMetadata = (0, _react2.useMemo)(() => (0, _helpers.getTacticMetadata)(attackDiscovery), [attackDiscovery]);
  return /*#__PURE__*/_react2.default.createElement(_eui.EuiPanel, {
    color: "subdued",
    "data-test-subj": "attackChain",
    hasBorder: true,
    css: (0, _react.css)`
        height: 71px;
        overflow-x: auto;
        overflow-y: hidden;
        scrollbar-width: thin;
      `,
    paddingSize: "l"
  }, /*#__PURE__*/_react2.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "none"
  }, tacticMetadata.map((tactic, i) => /*#__PURE__*/_react2.default.createElement(_eui.EuiFlexItem, {
    grow: false,
    key: tactic.name
  }, /*#__PURE__*/_react2.default.createElement(_tactic.Tactic, {
    detected: tactic.detected,
    rightJustify: i === tacticMetadata.length - 1,
    tactic: tactic.name
  })))));
};
AttackChainComponent.displayName = 'AttackChain';
const AttackChain = exports.AttackChain = /*#__PURE__*/_react2.default.memo(AttackChainComponent);