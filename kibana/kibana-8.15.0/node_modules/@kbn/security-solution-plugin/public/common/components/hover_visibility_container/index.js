"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HoverVisibilityContainer = void 0;
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _fp = require("lodash/fp");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const StyledDiv = _styledComponents.default.div`
  width: 100%;
  display: flex;
  flex-grow: 1;

  > * {
    max-width: 100%;
  }

  ${({
  targetClassNames
}) => (0, _styledComponents.css)`
      ${targetClassNames.map(cn => `.${cn}`).join(', ')} {
        pointer-events: none;
        opacity: 0;
        transition: opacity ${props => (0, _fp.getOr)(250, 'theme.eui.euiAnimSpeedNormal', props)} ease;
        &:focus-visible {
          pointer-events: auto;
          opacity: 1;
        }
      }
      ${targetClassNames.map(cn => `&:hover .${cn}`).join(', ')} {
        pointer-events: auto;
        opacity: 1;
      }
    `}
`;
const HoverVisibilityContainer = exports.HoverVisibilityContainer = /*#__PURE__*/_react.default.memo(({
  show = true,
  targetClassNames,
  children
}) => {
  if (!show) return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children);
  return /*#__PURE__*/_react.default.createElement(StyledDiv, {
    "data-test-subj": "hoverVisibilityContainer",
    targetClassNames: targetClassNames
  }, children);
});
HoverVisibilityContainer.displayName = 'HoverVisibilityContainer';