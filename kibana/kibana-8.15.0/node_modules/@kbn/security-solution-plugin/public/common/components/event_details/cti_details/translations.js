"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  FEED_NAME_PREPOSITION: true,
  INDICATOR_ENRICHMENT_TITLE: true,
  INVESTIGATION_ENRICHMENT_TITLE: true,
  INDICATOR_TOOLTIP_CONTENT: true,
  INVESTIGATION_TOOLTIP_CONTENT: true,
  NO_INVESTIGATION_ENRICHMENTS_DESCRIPTION: true,
  NO_ENRICHMENTS_FOUND_DESCRIPTION: true,
  INVESTIGATION_QUERY_TITLE: true,
  ENRICHMENT_LOOKBACK_START_DATE: true,
  ENRICHMENT_LOOKBACK_END_DATE: true,
  REFRESH: true,
  ENRICHED_DATA: true,
  NESTED_OBJECT_VALUES_NOT_RENDERED: true,
  CURRENT_RISK_LEVEL: true,
  ORIGINAL_RISK_LEVEL: true,
  RISK_DATA_TITLE: true
};
exports.RISK_DATA_TITLE = exports.REFRESH = exports.ORIGINAL_RISK_LEVEL = exports.NO_INVESTIGATION_ENRICHMENTS_DESCRIPTION = exports.NO_ENRICHMENTS_FOUND_DESCRIPTION = exports.NESTED_OBJECT_VALUES_NOT_RENDERED = exports.INVESTIGATION_TOOLTIP_CONTENT = exports.INVESTIGATION_QUERY_TITLE = exports.INVESTIGATION_ENRICHMENT_TITLE = exports.INDICATOR_TOOLTIP_CONTENT = exports.INDICATOR_ENRICHMENT_TITLE = exports.FEED_NAME_PREPOSITION = exports.ENRICHMENT_LOOKBACK_START_DATE = exports.ENRICHMENT_LOOKBACK_END_DATE = exports.ENRICHED_DATA = exports.CURRENT_RISK_LEVEL = void 0;
var _i18n = require("@kbn/i18n");
var _translations = require("../../../../entity_analytics/components/risk_score/translations");
Object.keys(_translations).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _translations[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _translations[key];
    }
  });
});
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const FEED_NAME_PREPOSITION = exports.FEED_NAME_PREPOSITION = _i18n.i18n.translate('xpack.securitySolution.eventDetails.ctiSummary.feedNamePreposition', {
  defaultMessage: 'from'
});
const INDICATOR_ENRICHMENT_TITLE = exports.INDICATOR_ENRICHMENT_TITLE = _i18n.i18n.translate('xpack.securitySolution.eventDetails.ctiSummary.indicatorEnrichmentTitle', {
  defaultMessage: 'Threat match detected'
});
const INVESTIGATION_ENRICHMENT_TITLE = exports.INVESTIGATION_ENRICHMENT_TITLE = _i18n.i18n.translate('xpack.securitySolution.eventDetails.ctiSummary.investigationEnrichmentTitle', {
  defaultMessage: 'Enriched with threat intelligence'
});
const INDICATOR_TOOLTIP_CONTENT = exports.INDICATOR_TOOLTIP_CONTENT = _i18n.i18n.translate('xpack.securitySolution.eventDetails.ctiSummary.indicatorEnrichmentTooltipContent', {
  defaultMessage: 'Shows available threat indicator matches.'
});
const INVESTIGATION_TOOLTIP_CONTENT = exports.INVESTIGATION_TOOLTIP_CONTENT = _i18n.i18n.translate('xpack.securitySolution.eventDetails.ctiSummary.investigationEnrichmentTooltipContent', {
  defaultMessage: 'Shows additional threat intelligence for the alert. The past 30 days were queried by default.'
});
const NO_INVESTIGATION_ENRICHMENTS_DESCRIPTION = exports.NO_INVESTIGATION_ENRICHMENTS_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.alertDetails.noInvestigationEnrichmentsDescription', {
  defaultMessage: 'This alert does not have supplemental threat intelligence data.'
});
const NO_ENRICHMENTS_FOUND_DESCRIPTION = exports.NO_ENRICHMENTS_FOUND_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.alertDetails.noEnrichmentsFoundDescription', {
  defaultMessage: 'This alert does not have threat intelligence.'
});
const INVESTIGATION_QUERY_TITLE = exports.INVESTIGATION_QUERY_TITLE = _i18n.i18n.translate('xpack.securitySolution.alertDetails.investigationTimeQueryTitle', {
  defaultMessage: 'Enrichment with Threat Intelligence'
});
const ENRICHMENT_LOOKBACK_START_DATE = exports.ENRICHMENT_LOOKBACK_START_DATE = _i18n.i18n.translate('xpack.securitySolution.alertDetails.enrichmentQueryStartDate', {
  defaultMessage: 'Start date'
});
const ENRICHMENT_LOOKBACK_END_DATE = exports.ENRICHMENT_LOOKBACK_END_DATE = _i18n.i18n.translate('xpack.securitySolution.alertDetails.enrichmentQueryEndDate', {
  defaultMessage: 'End date'
});
const REFRESH = exports.REFRESH = _i18n.i18n.translate('xpack.securitySolution.alertDetails.refresh', {
  defaultMessage: 'Refresh'
});
const ENRICHED_DATA = exports.ENRICHED_DATA = _i18n.i18n.translate('xpack.securitySolution.alertDetails.overview.enrichedDataTitle', {
  defaultMessage: 'Enriched data'
});
const NESTED_OBJECT_VALUES_NOT_RENDERED = exports.NESTED_OBJECT_VALUES_NOT_RENDERED = _i18n.i18n.translate('xpack.securitySolution.eventDetails.ctiSummary.investigationEnrichmentObjectValuesNotRendered', {
  defaultMessage: 'This field contains nested object values, which are not rendered here. See the full document for all fields/values'
});
const CURRENT_RISK_LEVEL = riskEntity => _i18n.i18n.translate('xpack.securitySolution.alertDetails.overview.hostRiskLevel', {
  defaultMessage: 'Current {riskEntity} risk level',
  values: {
    riskEntity: (0, _translations.getRiskEntityTranslation)(riskEntity, true)
  }
});
exports.CURRENT_RISK_LEVEL = CURRENT_RISK_LEVEL;
const ORIGINAL_RISK_LEVEL = riskEntity => _i18n.i18n.translate('xpack.securitySolution.alertDetails.overview.originalHostRiskLevel', {
  defaultMessage: 'Original {riskEntity} risk level',
  values: {
    riskEntity: (0, _translations.getRiskEntityTranslation)(riskEntity, true)
  }
});
exports.ORIGINAL_RISK_LEVEL = ORIGINAL_RISK_LEVEL;
const RISK_DATA_TITLE = riskEntity => _i18n.i18n.translate('xpack.securitySolution.alertDetails.overview.hostRiskDataTitle', {
  defaultMessage: '{riskEntity} Risk Data',
  values: {
    riskEntity: (0, _translations.getRiskEntityTranslation)(riskEntity)
  }
});
exports.RISK_DATA_TITLE = RISK_DATA_TITLE;