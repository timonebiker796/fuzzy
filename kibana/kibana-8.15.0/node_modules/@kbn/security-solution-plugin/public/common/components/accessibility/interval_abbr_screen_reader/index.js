"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IntervalAbbrScreenReader = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var i18n = _interopRequireWildcard(require("./translations"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const IntervalAbbrScreenReader = ({
  interval
}) => {
  const screenReaderInterval = (0, _react.useMemo)(() => {
    if (interval) {
      const number = parseInt(interval.slice(0, -1), 10);
      const unit = interval.charAt(interval.length - 1);
      if (Number.isFinite(number)) {
        switch (unit) {
          case 's':
            {
              return i18n.SECONDS_SCREEN_READER(number);
            }
          case 'm':
            {
              return i18n.MINUTES_SCREEN_READER(number);
            }
          case 'h':
            {
              return i18n.HOURS_SCREEN_READER(number);
            }
        }
      }
    }
    return undefined;
  }, [interval]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("span", {
    "data-test-subj": "interval-abbr-value",
    "aria-hidden": Boolean(screenReaderInterval)
  }, interval), screenReaderInterval && /*#__PURE__*/_react.default.createElement(_eui.EuiScreenReaderOnly, null, /*#__PURE__*/_react.default.createElement("p", null, screenReaderInterval)));
};
exports.IntervalAbbrScreenReader = IntervalAbbrScreenReader;