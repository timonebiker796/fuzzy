"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FilterBar = void 0;
var _react = _interopRequireWildcard(require("react"));
var _public = require("@kbn/unified-search-plugin/public");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const FilterBar = exports.FilterBar = /*#__PURE__*/(0, _react.memo)(({
  indexPattern,
  isLoading = false,
  isRefreshPaused,
  filterQuery,
  filterManager,
  filters,
  refreshInterval,
  dataTestSubj,
  displayStyle
}) => {
  const onFiltersUpdated = (0, _react.useCallback)(newFilters => {
    filterManager.setFilters(newFilters);
  }, [filterManager]);
  const indexPatterns = (0, _react.useMemo)(() => [indexPattern], [indexPattern]);
  return /*#__PURE__*/_react.default.createElement(_public.SearchBar, {
    showSubmitButton: false,
    filters: filters,
    indexPatterns: indexPatterns,
    isLoading: isLoading,
    isRefreshPaused: isRefreshPaused,
    query: filterQuery,
    onFiltersUpdated: onFiltersUpdated,
    refreshInterval: refreshInterval,
    showAutoRefreshOnly: false,
    showFilterBar: true,
    showDatePicker: false,
    showQueryInput: false,
    showSaveQuery: false,
    dataTestSubj: dataTestSubj,
    displayStyle: displayStyle
  });
});
FilterBar.displayName = 'FilterBar';