"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RenderContextProviders = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _securitySolutionNavigation = require("@kbn/security-solution-navigation");
var _upselling_provider = require("../upselling_provider");
var _user_privileges_context = require("../user_privileges/user_privileges_context");
var _query_client_provider = require("../../containers/query_client/query_client_provider");
var _security_solution_start_dependencies = require("../user_privileges/endpoint/security_solution_start_dependencies");
var _current_license = require("../current_license");
var _kibana = require("../../lib/kibana");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const RenderContextProviders = exports.RenderContextProviders = /*#__PURE__*/(0, _react.memo)(({
  store,
  depsStart,
  queryClient,
  upsellingService,
  children
}) => {
  const services = (0, _kibana.useKibana)().services;
  const {
    application: {
      capabilities
    }
  } = services;
  return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
    store: store
  }, /*#__PURE__*/_react.default.createElement(_query_client_provider.ReactQueryClientProvider, {
    queryClient: queryClient
  }, /*#__PURE__*/_react.default.createElement(_security_solution_start_dependencies.SecuritySolutionStartDependenciesContext.Provider, {
    value: depsStart
  }, /*#__PURE__*/_react.default.createElement(_user_privileges_context.UserPrivilegesProvider, {
    kibanaCapabilities: capabilities
  }, /*#__PURE__*/_react.default.createElement(_securitySolutionNavigation.NavigationProvider, {
    core: services
  }, /*#__PURE__*/_react.default.createElement(_current_license.CurrentLicense, null, /*#__PURE__*/_react.default.createElement(_upselling_provider.UpsellingProvider, {
    upsellingService: upsellingService
  }, children)))))));
});
RenderContextProviders.displayName = 'RenderContextProviders';