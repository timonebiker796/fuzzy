"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useUpsellingPage = exports.useUpsellingMessage = exports.useUpsellingComponent = void 0;
var _react = require("react");
var _useObservable = _interopRequireDefault(require("react-use/lib/useObservable"));
var _upselling_provider = require("../components/upselling_provider");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const useUpsellingComponent = id => {
  const upselling = (0, _upselling_provider.useUpsellingService)();
  const upsellingSections = (0, _useObservable.default)(upselling.sections$, upselling.getSectionsValue());
  return (0, _react.useMemo)(() => {
    var _upsellingSections$ge;
    return (_upsellingSections$ge = upsellingSections === null || upsellingSections === void 0 ? void 0 : upsellingSections.get(id)) !== null && _upsellingSections$ge !== void 0 ? _upsellingSections$ge : null;
  }, [id, upsellingSections]);
};
exports.useUpsellingComponent = useUpsellingComponent;
const useUpsellingMessage = id => {
  const upselling = (0, _upselling_provider.useUpsellingService)();
  const upsellingMessages = (0, _useObservable.default)(upselling.messages$, upselling.getMessagesValue());
  return (0, _react.useMemo)(() => {
    var _upsellingMessages$ge;
    return (_upsellingMessages$ge = upsellingMessages === null || upsellingMessages === void 0 ? void 0 : upsellingMessages.get(id)) !== null && _upsellingMessages$ge !== void 0 ? _upsellingMessages$ge : null;
  }, [id, upsellingMessages]);
};
exports.useUpsellingMessage = useUpsellingMessage;
const useUpsellingPage = pageName => {
  const upselling = (0, _upselling_provider.useUpsellingService)();
  const UpsellingPage = (0, _react.useMemo)(() => upselling.getPageUpselling(pageName), [pageName, upselling]);
  return UpsellingPage !== null && UpsellingPage !== void 0 ? UpsellingPage : null;
};
exports.useUpsellingPage = useUpsellingPage;