"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotesDetails = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _eui = require("@elastic/eui");
var _add_note = require("./add_note");
var _notes_list = require("./notes_list");
var _notes = require("../../../../notes/store/notes.slice");
var _context = require("../../shared/context");
var _user_privileges = require("../../../../common/components/user_privileges");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * List all the notes for a document id and allows to create new notes associated with that document.
 * Displayed in the document details expandable flyout left section.
 */
const NotesDetails = exports.NotesDetails = /*#__PURE__*/(0, _react.memo)(() => {
  const dispatch = (0, _reactRedux.useDispatch)();
  const {
    eventId
  } = (0, _context.useDocumentDetailsContext)();
  const {
    kibanaSecuritySolutionsPrivileges
  } = (0, _user_privileges.useUserPrivileges)();
  const canCreateNotes = kibanaSecuritySolutionsPrivileges.crud;
  (0, _react.useEffect)(() => {
    dispatch((0, _notes.fetchNotesByDocumentIds)({
      documentIds: [eventId]
    }));
  }, [dispatch, eventId]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_notes_list.NotesList, {
    eventId: eventId
  }), canCreateNotes && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, null), /*#__PURE__*/_react.default.createElement(_add_note.AddNote, {
    eventId: eventId
  })));
});
NotesDetails.displayName = 'NotesDetails';