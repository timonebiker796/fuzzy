"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HostDetails = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _uuid = require("uuid");
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _i18n = require("@kbn/i18n");
var _expandableFlyout = require("@kbn/expandable-flyout");
var _use_experimental_features = require("../../../../common/hooks/use_experimental_features");
var _expandable_panel = require("../../../shared/components/expandable_panel");
var _host_overview = require("../../../../overview/components/host_overview");
var _anomaly_table_provider = require("../../../../common/components/ml/anomaly/anomaly_table_provider");
var _inspect = require("../../../../common/components/inspect");
var _links = require("../../../../common/components/links");
var _search_strategy = require("../../../../../common/search_strategy");
var _common = require("../../../../entity_analytics/components/severity/common");
var _default_renderer = require("../../../../timelines/components/field_renderers/default_renderer");
var _constants = require("../../../../common/store/inputs/constants");
var _cell_actions = require("./cell_actions");
var _use_global_time = require("../../../../common/containers/use_global_time");
var _containers = require("../../../../sourcerer/containers");
var _manage_query = require("../../../../common/components/page/manage_query");
var _score_interval_to_datetime = require("../../../../common/components/ml/score/score_interval_to_datetime");
var _actions = require("../../../../common/store/inputs/actions");
var _host_to_criteria = require("../../../../common/components/ml/criteria/host_to_criteria");
var _details = require("../../../../explore/hosts/containers/hosts/details");
var _related_users = require("../../../../common/containers/related_entities/related_users");
var _use_ml_capabilities = require("../../../../common/components/ml/hooks/use_ml_capabilities");
var _empty_value = require("../../../../common/components/empty_value");
var _test_ids = require("./test_ids");
var _kibana = require("../../../../common/lib/kibana");
var _translations = require("../../../../entity_analytics/components/risk_score/translations");
var _helper_hooks = require("../../../../helper_hooks");
var _host_right = require("../../../entity_details/host_right");
var _host_entity_overview = require("../../right/components/host_entity_overview");
var _user_right = require("../../../entity_details/user_right");
var _user_entity_overview = require("../../right/components/user_entity_overview");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const HOST_DETAILS_ID = 'entities-hosts-details';
const RELATED_USERS_ID = 'entities-hosts-related-users';
const HostOverviewManage = (0, _manage_query.manageQuery)(_host_overview.HostOverview);
const RelatedUsersManage = (0, _manage_query.manageQuery)(_inspect.InspectButtonContainer);
/**
 * Host details and related users, displayed in the document details expandable flyout left section under the Insights tab, Entities tab
 */
const HostDetails = ({
  hostName,
  timestamp,
  scopeId
}) => {
  const {
    to,
    from,
    deleteQuery,
    setQuery,
    isInitializing
  } = (0, _use_global_time.useGlobalTime)();
  const {
    selectedPatterns
  } = (0, _containers.useSourcererDataView)();
  const dispatch = (0, _reactRedux.useDispatch)();
  const {
    telemetry
  } = (0, _kibana.useKibana)().services;
  // create a unique, but stable (across re-renders) query id
  const hostDetailsQueryId = (0, _react.useMemo)(() => `${HOST_DETAILS_ID}-${(0, _uuid.v4)()}`, []);
  const relatedUsersQueryId = (0, _react.useMemo)(() => `${RELATED_USERS_ID}-${(0, _uuid.v4)()}`, []);
  const hasEntityAnalyticsCapability = (0, _helper_hooks.useHasSecurityCapability)('entity-analytics');
  const isPlatinumOrTrialLicense = (0, _use_ml_capabilities.useMlCapabilities)().isPlatinumOrTrialLicense;
  const isEntityAnalyticsAuthorized = isPlatinumOrTrialLicense && hasEntityAnalyticsCapability;
  const {
    openPreviewPanel
  } = (0, _expandableFlyout.useExpandableFlyoutApi)();
  const isPreviewEnabled = !(0, _use_experimental_features.useIsExperimentalFeatureEnabled)('entityAlertPreviewDisabled');
  const narrowDateRange = (0, _react.useCallback)((score, interval) => {
    const fromTo = (0, _score_interval_to_datetime.scoreIntervalToDateTime)(score, interval);
    dispatch((0, _actions.setAbsoluteRangeDatePicker)({
      id: _constants.InputsModelId.global,
      from: fromTo.from,
      to: fromTo.to
    }));
  }, [dispatch]);
  const openHostPreview = (0, _react.useCallback)(() => {
    openPreviewPanel({
      id: _host_right.HostPreviewPanelKey,
      params: {
        hostName,
        scopeId,
        banner: _host_entity_overview.HOST_PREVIEW_BANNER
      }
    });
    telemetry.reportDetailsFlyoutOpened({
      location: scopeId,
      panel: 'preview'
    });
  }, [openPreviewPanel, hostName, scopeId, telemetry]);
  const openUserPreview = (0, _react.useCallback)(userName => {
    openPreviewPanel({
      id: _user_right.UserPreviewPanelKey,
      params: {
        userName,
        scopeId,
        banner: _user_entity_overview.USER_PREVIEW_BANNER
      }
    });
    telemetry.reportDetailsFlyoutOpened({
      location: scopeId,
      panel: 'preview'
    });
  }, [openPreviewPanel, scopeId, telemetry]);
  const [isHostLoading, {
    inspect,
    hostDetails,
    refetch
  }] = (0, _details.useHostDetails)({
    id: hostDetailsQueryId,
    startDate: from,
    endDate: to,
    hostName,
    indexNames: selectedPatterns,
    skip: selectedPatterns.length === 0
  });
  const {
    loading: isRelatedUsersLoading,
    inspect: inspectRelatedUsers,
    relatedUsers,
    totalCount,
    refetch: refetchRelatedUsers
  } = (0, _related_users.useHostRelatedUsers)({
    hostName,
    indexNames: selectedPatterns,
    from: timestamp,
    // related users are users who were successfully authenticated onto this host AFTER alert time
    skip: selectedPatterns.length === 0
  });
  const relatedUsersColumns = (0, _react.useMemo)(() => [{
    field: 'user',
    name: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.securitySolution.flyout.left.insights.entities.relatedUsersNameColumnLabel",
      defaultMessage: "Name"
    }),
    render: user => /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
      grow: false,
      size: "xs"
    }, /*#__PURE__*/_react.default.createElement(_cell_actions.CellActions, {
      field: 'user.name',
      value: user
    }, isPreviewEnabled ? /*#__PURE__*/_react.default.createElement(_eui.EuiLink, {
      "data-test-subj": _test_ids.HOST_DETAILS_RELATED_USERS_LINK_TEST_ID,
      onClick: () => openUserPreview(user)
    }, user) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, user)))
  }, {
    field: 'ip',
    name: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.securitySolution.flyout.left.insights.entities.relatedUsersIpColumnLabel",
      defaultMessage: "Ip addresses"
    }),
    render: ips => {
      return /*#__PURE__*/_react.default.createElement(_default_renderer.DefaultFieldRenderer, {
        rowItems: ips,
        attrName: 'host.ip',
        idPrefix: '',
        isDraggable: false,
        render: ip => ip != null ? /*#__PURE__*/_react.default.createElement(_links.NetworkDetailsLink, {
          ip: ip
        }) : (0, _empty_value.getEmptyTagValue)(),
        scopeId: scopeId
      });
    }
  }, ...(isEntityAnalyticsAuthorized ? [{
    field: 'risk',
    name: (0, _translations.ENTITY_RISK_LEVEL)(_search_strategy.RiskScoreEntity.user),
    truncateText: false,
    mobileOptions: {
      show: true
    },
    sortable: false,
    render: riskScore => {
      if (riskScore != null) {
        return /*#__PURE__*/_react.default.createElement(_common.RiskScoreLevel, {
          severity: riskScore
        });
      }
      return (0, _empty_value.getEmptyTagValue)();
    }
  }] : [])], [isEntityAnalyticsAuthorized, scopeId, isPreviewEnabled, openUserPreview]);
  const relatedUsersCount = (0, _react.useMemo)(() => /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    alignItems: "center",
    gutterSize: "s",
    responsive: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
    type: "user"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "xxxs"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.securitySolution.flyout.left.insights.entities.relatedUsersCountLabel",
    defaultMessage: "Related users: {count}",
    values: {
      count: totalCount
    }
  }))))), [totalCount]);
  const pagination = {
    pageSize: 4,
    showPerPageOptions: false
  };
  const hostLink = (0, _react.useMemo)(() => isPreviewEnabled ? {
    callback: openHostPreview,
    tooltip: _i18n.i18n.translate('xpack.securitySolution.flyout.left.insights.entities.host.hostPreviewTitle', {
      defaultMessage: 'Preview host'
    })
  } : undefined, [isPreviewEnabled, openHostPreview]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h3", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.securitySolution.flyout.left.insights.entities.hostDetailsTitle",
    defaultMessage: "Host"
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_expandable_panel.ExpandablePanel, {
    header: {
      title: hostName,
      iconType: 'storage',
      headerContent: relatedUsersCount,
      link: hostLink
    },
    expand: {
      expandable: true,
      expandedOnFirstRender: true
    },
    "data-test-subj": _test_ids.HOST_DETAILS_TEST_ID
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "xxs"
  }, /*#__PURE__*/_react.default.createElement("h4", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.securitySolution.flyout.left.insights.entities.hostDetailsInfoTitle",
    defaultMessage: "Host information"
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_anomaly_table_provider.AnomalyTableProvider, {
    criteriaFields: (0, _host_to_criteria.hostToCriteria)(hostDetails),
    startDate: from,
    endDate: to,
    skip: isInitializing
  }, ({
    isLoadingAnomaliesData,
    anomaliesData,
    jobNameById
  }) => /*#__PURE__*/_react.default.createElement(HostOverviewManage, {
    id: hostDetailsQueryId,
    hostName: hostName,
    data: hostDetails,
    indexNames: selectedPatterns,
    jobNameById: jobNameById,
    anomaliesData: anomaliesData,
    isLoadingAnomaliesData: isLoadingAnomaliesData,
    isInDetailsSidePanel: false,
    loading: isHostLoading,
    startDate: from,
    endDate: to,
    narrowDateRange: narrowDateRange,
    setQuery: setQuery,
    refetch: refetch,
    inspect: inspect,
    deleteQuery: deleteQuery
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, {
    hasBorder: true
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    direction: "row",
    gutterSize: "xs",
    alignItems: "center"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "xxs"
  }, /*#__PURE__*/_react.default.createElement("h4", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.securitySolution.flyout.left.insights.entities.relatedUsersTitle",
    defaultMessage: "Related users"
  })))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
    content: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.securitySolution.flyout.left.insights.entities.relatedUsersTooltip",
      defaultMessage: "After this event, these users logged into {hostName}. Check if this activity is normal.",
      values: {
        hostName
      }
    })
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
    color: "subdued",
    type: "iInCircle",
    className: "eui-alignTop"
  })))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(RelatedUsersManage, {
    id: relatedUsersQueryId,
    inspect: inspectRelatedUsers,
    loading: isRelatedUsersLoading,
    setQuery: setQuery,
    deleteQuery: deleteQuery,
    refetch: refetchRelatedUsers
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiInMemoryTable, {
    columns: relatedUsersColumns,
    items: relatedUsers,
    loading: isRelatedUsersLoading,
    "data-test-subj": _test_ids.HOST_DETAILS_RELATED_USERS_TABLE_TEST_ID,
    pagination: pagination,
    message: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.securitySolution.flyout.left.insights.entities.relatedUsersNoDataDescription",
      defaultMessage: "No users identified"
    })
  }), /*#__PURE__*/_react.default.createElement(_inspect.InspectButton, {
    queryId: relatedUsersQueryId,
    title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.securitySolution.flyout.left.insights.entities.relatedUsersInspectButtonTitle",
      defaultMessage: "Related users"
    }),
    inspectIndex: 0
  })))));
};
exports.HostDetails = HostDetails;
HostDetails.displayName = 'HostDetails';