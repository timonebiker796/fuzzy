"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ObservedEntity = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _i18nReact = require("@kbn/i18n-react");
var _entity_table = require("../entity_table");
var _formatted_date = require("../../../../../common/components/formatted_date");
var _inspect = require("../../../../../common/components/inspect");
var _constants = require("../../constants");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ObservedEntity = ({
  observedData,
  contextID,
  scopeId,
  isDraggable,
  observedFields,
  queryId
}) => {
  const {
    euiTheme
  } = (0, _eui.useEuiTheme)();
  const xsFontSize = (0, _eui.useEuiFontSize)('xxs').fontSize;
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_inspect.InspectButtonContainer, null, /*#__PURE__*/_react.default.createElement(_eui.EuiAccordion, {
    initialIsOpen: true,
    isLoading: observedData.isLoading,
    id: "observedEntity-accordion",
    "data-test-subj": "observedEntity-accordion",
    buttonProps: {
      'data-test-subj': 'observedEntity-accordion-button',
      css: (0, _react2.css)`
              color: ${euiTheme.colors.primary};
            `
    },
    buttonContent: /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
      size: "xs"
    }, /*#__PURE__*/_react.default.createElement("h3", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.securitySolution.flyout.entityDetails.observedDataTitle",
      defaultMessage: "Observed data"
    }))),
    extraAction: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("span", {
      css: (0, _react2.css)`
                  margin-right: ${euiTheme.size.s};
                `
    }, /*#__PURE__*/_react.default.createElement(_inspect.InspectButton, {
      queryId: queryId,
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.flyout.entityDetails.observedDataInspectTitle",
        defaultMessage: "Observed data"
      })
    })), observedData.lastSeen.date && /*#__PURE__*/_react.default.createElement("span", {
      css: (0, _react2.css)`
                    font-size: ${xsFontSize};
                  `
    }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.securitySolution.flyout.entityDetails.observedEntityUpdatedTime",
      defaultMessage: "Updated {time}",
      values: {
        time: /*#__PURE__*/_react.default.createElement(_formatted_date.FormattedRelativePreferenceDate, {
          value: observedData.lastSeen.date,
          dateFormat: "MMM D, YYYY",
          relativeThresholdInHrs: _constants.ONE_WEEK_IN_HOURS
        })
      }
    }))),
    css: (0, _react2.css)`
            .euiAccordion__optionalAction {
              margin-left: auto;
            }
          `
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_entity_table.EntityTable, {
    contextID: contextID,
    scopeId: scopeId,
    isDraggable: isDraggable,
    data: observedData,
    entityFields: observedFields
  }))));
};
exports.ObservedEntity = ObservedEntity;