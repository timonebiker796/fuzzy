"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cloudFields = void 0;
var i18n = _interopRequireWildcard(require("./translations"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const cloudFields = exports.cloudFields = [{
  label: i18n.CLOUD_PROVIDER,
  getValues: hostData => {
    var _hostData$details$clo;
    return (_hostData$details$clo = hostData.details.cloud) === null || _hostData$details$clo === void 0 ? void 0 : _hostData$details$clo.provider;
  },
  field: 'cloud.provider'
}, {
  label: i18n.REGION,
  getValues: hostData => {
    var _hostData$details$clo2;
    return (_hostData$details$clo2 = hostData.details.cloud) === null || _hostData$details$clo2 === void 0 ? void 0 : _hostData$details$clo2.region;
  },
  field: 'cloud.region'
}, {
  label: i18n.INSTANCE_ID,
  getValues: hostData => {
    var _hostData$details$clo3, _hostData$details$clo4;
    return (_hostData$details$clo3 = hostData.details.cloud) === null || _hostData$details$clo3 === void 0 ? void 0 : (_hostData$details$clo4 = _hostData$details$clo3.instance) === null || _hostData$details$clo4 === void 0 ? void 0 : _hostData$details$clo4.id;
  },
  field: 'cloud.instance.id'
}, {
  label: i18n.MACHINE_TYPE,
  getValues: hostData => {
    var _hostData$details$clo5, _hostData$details$clo6;
    return (_hostData$details$clo5 = hostData.details.cloud) === null || _hostData$details$clo5 === void 0 ? void 0 : (_hostData$details$clo6 = _hostData$details$clo5.machine) === null || _hostData$details$clo6 === void 0 ? void 0 : _hostData$details$clo6.type;
  },
  field: 'cloud.machine.type'
}];