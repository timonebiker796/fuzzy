"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AssetCriticalityTitle = exports.AssetCriticalitySelector = exports.AssetCriticalityAccordion = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireWildcard(require("react"));
var _i18nReact = require("@kbn/i18n-react");
var _css = require("@emotion/css");
var _i18n = require("@kbn/i18n");
var _reactUse = require("react-use");
var _translations = require("./translations");
var _asset_criticality_badge = require("./asset_criticality_badge");
var _use_asset_criticality = require("./use_asset_criticality");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const AssetCriticalitySelectorComponent = ({
  criticality,
  entity,
  compressed = false
}) => {
  var _criticality$query$da, _criticality$privileg, _criticality$privileg2, _criticality$query$da2;
  const [visible, toggleModal] = (0, _reactUse.useToggle)(false);
  const sFontSize = (0, _eui.useEuiFontSize)('s').fontSize;
  const onSave = value => {
    criticality.mutation.mutate({
      criticalityLevel: value,
      idField: `${entity.type}.name`,
      idValue: entity.name
    });
    toggleModal(false);
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, criticality.query.isLoading || criticality.mutation.isLoading ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiLoadingSpinner, {
    size: "s",
    "data-test-subj": "asset-criticality-selector-loading"
  })) : /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    direction: "row",
    alignItems: "center",
    justifyContent: "spaceBetween",
    "data-test-subj": "asset-criticality-selector",
    wrap: false,
    gutterSize: 'xs',
    responsive: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_asset_criticality_badge.AssetCriticalityBadge, {
    criticalityLevel: (_criticality$query$da = criticality.query.data) === null || _criticality$query$da === void 0 ? void 0 : _criticality$query$da.criticality_level,
    dataTestSubj: "asset-criticality-level",
    className: (0, _css.css)`
                font-size: ${sFontSize};
              `
  })), compressed && ((_criticality$privileg = criticality.privileges.data) === null || _criticality$privileg === void 0 ? void 0 : _criticality$privileg.has_write_permissions) && /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiButtonIcon, {
    "data-test-subj": "asset-criticality-change-btn",
    iconSize: "s",
    iconType: 'pencil',
    "aria-label": _i18n.i18n.translate('xpack.securitySolution.entityAnalytics.assetCriticality.compressedButtonArialLabel', {
      defaultMessage: 'Change asset criticality'
    }),
    onClick: () => toggleModal(true)
  })), !compressed && ((_criticality$privileg2 = criticality.privileges.data) === null || _criticality$privileg2 === void 0 ? void 0 : _criticality$privileg2.has_write_permissions) && /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    css: {
      flexGrow: 'unset'
    }
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, {
    "data-test-subj": "asset-criticality-change-btn",
    iconType: "arrowStart",
    iconSide: "left",
    flush: "right",
    onClick: () => toggleModal(true)
  }, criticality.status === 'update' ? /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.securitySolution.entityAnalytics.assetCriticality.changeButton",
    defaultMessage: "Change"
  }) : /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.securitySolution.entityAnalytics.assetCriticality.createButton",
    defaultMessage: "Assign"
  })))), visible ? /*#__PURE__*/_react.default.createElement(AssetCriticalityModal, {
    onSave: onSave,
    initialCriticalityLevel: (_criticality$query$da2 = criticality.query.data) === null || _criticality$query$da2 === void 0 ? void 0 : _criticality$query$da2.criticality_level,
    toggle: toggleModal
  }) : null);
};
const AssetCriticalitySelector = exports.AssetCriticalitySelector = /*#__PURE__*/_react.default.memo(AssetCriticalitySelectorComponent);
AssetCriticalitySelector.displayName = 'AssetCriticalitySelector';
const AssetCriticalityAccordionComponent = ({
  entity,
  onChange
}) => {
  var _privileges$data, _privileges$data2;
  const {
    euiTheme
  } = (0, _eui.useEuiTheme)();
  const privileges = (0, _use_asset_criticality.useAssetCriticalityPrivileges)(entity.name);
  const criticality = (0, _use_asset_criticality.useAssetCriticalityData)({
    entity,
    enabled: !!((_privileges$data = privileges.data) !== null && _privileges$data !== void 0 && _privileges$data.has_read_permissions),
    onChange
  });
  if (privileges.isLoading || !((_privileges$data2 = privileges.data) !== null && _privileges$data2 !== void 0 && _privileges$data2.has_read_permissions)) {
    return null;
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiAccordion, {
    initialIsOpen: true,
    id: "asset-criticality-selector",
    buttonContent: /*#__PURE__*/_react.default.createElement(AssetCriticalityTitle, null),
    buttonProps: {
      css: (0, _css.css)`
            color: ${euiTheme.colors.primary};
          `
    },
    "data-test-subj": "asset-criticality-selector"
  }, /*#__PURE__*/_react.default.createElement(AssetCriticalitySelector, {
    criticality: criticality,
    entity: entity
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiHorizontalRule, null));
};
const AssetCriticalityTitle = () => /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
  position: "top",
  content: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.securitySolution.entityAnalytics.assetCriticality.accordionTooltip",
    defaultMessage: "You can now categorize entities based on your organization's sensitivity and business risk. The classification tiers can be used to prioritize alert triage and investigation tasks. If the entity risk engine is enabled, the asset classification tier will dynamically impact the entity risk."
  })
}, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
  gutterSize: "xs",
  alignItems: "center"
}, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
  grow: false
}, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
  size: "xs"
}, /*#__PURE__*/_react.default.createElement("h3", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
  id: "xpack.securitySolution.entityAnalytics.assetCriticality.accordionTitle",
  defaultMessage: "Asset Criticality"
})))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
  grow: false
}, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
  type: "iInCircle",
  color: "subdued"
}))));
exports.AssetCriticalityTitle = AssetCriticalityTitle;
const AssetCriticalityModal = ({
  initialCriticalityLevel,
  toggle,
  onSave
}) => {
  const basicSelectId = (0, _eui.useGeneratedHtmlId)({
    prefix: 'basicSelect'
  });
  const [value, setNewValue] = (0, _react.useState)(initialCriticalityLevel !== null && initialCriticalityLevel !== void 0 ? initialCriticalityLevel : 'unassigned');
  return /*#__PURE__*/_react.default.createElement(_eui.EuiModal, {
    onClose: () => toggle(false)
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiModalHeader, null, /*#__PURE__*/_react.default.createElement(_eui.EuiModalHeaderTitle, {
    "data-test-subj": "asset-criticality-modal-title"
  }, _translations.PICK_ASSET_CRITICALITY)), /*#__PURE__*/_react.default.createElement(_eui.EuiModalBody, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSuperSelect, {
    id: basicSelectId,
    options: options,
    valueOfSelected: value,
    onChange: setNewValue,
    "aria-label": _translations.PICK_ASSET_CRITICALITY,
    "data-test-subj": "asset-criticality-modal-select"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiModalFooter, null, /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, {
    onClick: () => toggle(false)
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.securitySolution.entityAnalytics.assetCriticality.cancelButton",
    defaultMessage: "Cancel"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
    onClick: () => onSave(value),
    fill: true,
    "data-test-subj": "asset-criticality-modal-save-btn"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.securitySolution.entityAnalytics.assetCriticality.saveButton",
    defaultMessage: "Save"
  }))));
};
const option = level => ({
  value: level,
  dropdownDisplay: /*#__PURE__*/_react.default.createElement(_asset_criticality_badge.AssetCriticalityBadge, {
    criticalityLevel: level,
    style: {
      lineHeight: 'inherit'
    },
    dataTestSubj: "asset-criticality-modal-select-option"
  }),
  inputDisplay: /*#__PURE__*/_react.default.createElement(_asset_criticality_badge.AssetCriticalityBadge, {
    criticalityLevel: level,
    style: {
      lineHeight: 'inherit'
    }
  })
});
const options = [option('unassigned'), option('low_impact'), option('medium_impact'), option('high_impact'), option('extreme_impact')];
const AssetCriticalityAccordion = exports.AssetCriticalityAccordion = /*#__PURE__*/_react.default.memo(AssetCriticalityAccordionComponent);
AssetCriticalityAccordion.displayName = 'AssetCriticalityAccordion';