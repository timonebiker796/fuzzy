"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SeverityLevelChart = void 0;
var _react = _interopRequireWildcard(require("react"));
var _ruleDataUtils = require("@kbn/rule-data-utils");
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _eui = require("@elastic/eui");
var _donutchart = require("../../../../common/components/charts/donutchart");
var _chart_label = require("../../../../overview/components/detection_response/alerts_by_status/chart_label");
var _columns = require("./columns");
var _helpers = require("./helpers");
var _translations = require("../../alerts_table/translations");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const DONUT_HEIGHT = 150;
const StyledEuiLoadingSpinner = (0, _styledComponents.default)(_eui.EuiLoadingSpinner)`
  margin: auto;
`;
const SeverityLevelChart = ({
  data,
  isLoading,
  addFilter
}) => {
  const columns = (0, _react.useMemo)(() => (0, _columns.getSeverityTableColumns)(), []);
  const count = (0, _react.useMemo)(() => {
    return data ? data.reduce(function (prev, cur) {
      return prev + cur.value;
    }, 0) : 0;
  }, [data]);
  const fillColor = (0, _react.useCallback)(dataName => {
    return (0, _helpers.getSeverityColor)(dataName);
  }, []);
  const sorting = {
    sort: {
      field: 'value',
      direction: 'desc'
    }
  };
  const onDonutPartitionClicked = (0, _react.useCallback)(level => {
    if (addFilter) {
      addFilter({
        field: _ruleDataUtils.ALERT_SEVERITY,
        value: level.toLowerCase()
      });
    }
  }, [addFilter]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "s",
    "data-test-subj": "severity-level-chart"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiInMemoryTable, {
    "data-test-subj": "severity-level-table",
    columns: columns,
    items: data,
    loading: isLoading,
    sorting: sorting
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    "data-test-subj": "severity-level-donut"
  }, isLoading ? /*#__PURE__*/_react.default.createElement(StyledEuiLoadingSpinner, {
    size: "l"
  }) : /*#__PURE__*/_react.default.createElement(_donutchart.DonutChart, {
    data: data,
    fillColor: fillColor,
    height: DONUT_HEIGHT,
    label: _translations.TOTAL_COUNT_OF_ALERTS,
    title: /*#__PURE__*/_react.default.createElement(_chart_label.ChartLabel, {
      count: count
    }),
    totalCount: count,
    onPartitionClick: onDonutPartitionClicked
  })));
};
exports.SeverityLevelChart = SeverityLevelChart;
SeverityLevelChart.displayName = 'SeverityLevelChart';