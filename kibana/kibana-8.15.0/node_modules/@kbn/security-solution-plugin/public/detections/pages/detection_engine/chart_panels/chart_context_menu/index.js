"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChartContextMenu = void 0;
var _fp = require("lodash/fp");
var _react = _interopRequireWildcard(require("react"));
var _chart_settings_popover = require("../../../../../common/components/chart_settings_popover");
var _default = require("../../../../../common/components/chart_settings_popover/configurations/default");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ChartContextMenuComponent = ({
  defaultStackByField,
  defaultStackByField1,
  onReset = _fp.noop,
  queryId,
  setStackBy,
  setStackByField1
}) => {
  const onResetStackByFields = (0, _react.useCallback)(() => {
    onReset();
    setStackBy(defaultStackByField);
    if (setStackByField1 != null) {
      setStackByField1(defaultStackByField1);
    }
  }, [defaultStackByField, defaultStackByField1, onReset, setStackBy, setStackByField1]);
  const {
    defaultInitialPanelId,
    defaultMenuItems,
    isPopoverOpen,
    setIsPopoverOpen
  } = (0, _default.useChartSettingsPopoverConfiguration)({
    onResetStackByFields,
    queryId
  });
  return /*#__PURE__*/_react.default.createElement(_chart_settings_popover.ChartSettingsPopover, {
    initialPanelId: defaultInitialPanelId,
    isPopoverOpen: isPopoverOpen,
    panels: defaultMenuItems,
    setIsPopoverOpen: setIsPopoverOpen
  });
};
ChartContextMenuComponent.displayName = 'ChartContextMenuComponent';
const ChartContextMenu = exports.ChartContextMenu = /*#__PURE__*/_react.default.memo(ChartContextMenuComponent);