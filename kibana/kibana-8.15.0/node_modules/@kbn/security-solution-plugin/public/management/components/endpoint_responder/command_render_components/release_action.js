"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ReleaseActionResult = void 0;
var _react = require("react");
var _use_experimental_features = require("../../../../common/hooks/use_experimental_features");
var _use_send_release_endpoint_request = require("../../../hooks/response_actions/use_send_release_endpoint_request");
var _use_console_action_submitter = require("../hooks/use_console_action_submitter");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ReleaseActionResult = exports.ReleaseActionResult = /*#__PURE__*/(0, _react.memo)(({
  command,
  setStore,
  store,
  status,
  setStatus,
  ResultComponent
}) => {
  var _command$args$args2, _command$commandDefin5, _command$commandDefin6, _command$commandDefin7, _command$commandDefin8;
  const isSentinelOneV1Enabled = (0, _use_experimental_features.useIsExperimentalFeatureEnabled)('responseActionsSentinelOneV1Enabled');
  const releaseHostApi = (0, _use_send_release_endpoint_request.useSendReleaseEndpointRequest)();
  const actionRequestBody = (0, _react.useMemo)(() => {
    var _command$commandDefin, _command$commandDefin2, _command$args$args, _command$args$args$co, _command$commandDefin3, _command$commandDefin4;
    const endpointId = (_command$commandDefin = command.commandDefinition) === null || _command$commandDefin === void 0 ? void 0 : (_command$commandDefin2 = _command$commandDefin.meta) === null || _command$commandDefin2 === void 0 ? void 0 : _command$commandDefin2.endpointId;
    const comment = (_command$args$args = command.args.args) === null || _command$args$args === void 0 ? void 0 : (_command$args$args$co = _command$args$args.comment) === null || _command$args$args$co === void 0 ? void 0 : _command$args$args$co[0];
    const agentType = (_command$commandDefin3 = command.commandDefinition) === null || _command$commandDefin3 === void 0 ? void 0 : (_command$commandDefin4 = _command$commandDefin3.meta) === null || _command$commandDefin4 === void 0 ? void 0 : _command$commandDefin4.agentType;
    return endpointId ? {
      agent_type: isSentinelOneV1Enabled ? agentType : undefined,
      endpoint_ids: [endpointId],
      comment
    } : undefined;
  }, [(_command$args$args2 = command.args.args) === null || _command$args$args2 === void 0 ? void 0 : _command$args$args2.comment, (_command$commandDefin5 = command.commandDefinition) === null || _command$commandDefin5 === void 0 ? void 0 : (_command$commandDefin6 = _command$commandDefin5.meta) === null || _command$commandDefin6 === void 0 ? void 0 : _command$commandDefin6.agentType, (_command$commandDefin7 = command.commandDefinition) === null || _command$commandDefin7 === void 0 ? void 0 : (_command$commandDefin8 = _command$commandDefin7.meta) === null || _command$commandDefin8 === void 0 ? void 0 : _command$commandDefin8.endpointId, isSentinelOneV1Enabled]);
  return (0, _use_console_action_submitter.useConsoleActionSubmitter)({
    ResultComponent,
    setStore,
    store,
    status,
    setStatus,
    actionCreator: releaseHostApi,
    actionRequestBody,
    dataTestSubj: 'release'
  }).result;
});
ReleaseActionResult.displayName = 'ReleaseActionResult';