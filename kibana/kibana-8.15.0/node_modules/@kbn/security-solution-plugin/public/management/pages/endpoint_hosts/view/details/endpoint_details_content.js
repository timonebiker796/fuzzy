"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EndpointDetailsContent = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireWildcard(require("react"));
var _i18nReact = require("@kbn/i18n-react");
var _utils = require("../../utils");
var _agent_status = require("../../../../../common/components/endpoint/agents/agent_status");
var _hooks = require("../hooks");
var _selectors = require("../../store/selectors");
var _host_constants = require("../host_constants");
var _formatted_date = require("../../../../../common/components/formatted_date");
var _use_navigate_by_router_event_handler = require("../../../../../common/hooks/endpoint/use_navigate_by_router_event_handler");
var _routing = require("../../../../common/routing");
var _endpoint_policy_link = require("../../../../components/endpoint_policy_link");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ColumnTitle = ({
  children
}) => {
  return /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "s"
  }, /*#__PURE__*/_react.default.createElement("h5", null, children));
};
const EndpointDetailsContent = exports.EndpointDetailsContent = /*#__PURE__*/(0, _react.memo)(({
  hostInfo,
  policyInfo
}) => {
  const queryParams = (0, _hooks.useEndpointSelector)(_selectors.uiQueryParams);
  const policyStatus = (0, _react.useMemo)(() => hostInfo.metadata.Endpoint.policy.applied.status, [hostInfo]);
  const missingPolicies = (0, _hooks.useEndpointSelector)(_selectors.nonExistingPolicies);
  const policyResponseRoutePath = (0, _react.useMemo)(() => {
    const {
      selected_endpoint: selectedEndpoint,
      show,
      ...currentUrlParams
    } = queryParams;
    return (0, _routing.getEndpointDetailsPath)({
      name: 'endpointPolicyResponse',
      ...currentUrlParams,
      selected_endpoint: hostInfo.metadata.agent.id
    });
  }, [hostInfo.metadata.agent.id, queryParams]);
  const policyStatusClickHandler = (0, _use_navigate_by_router_event_handler.useNavigateByRouterEventHandler)(policyResponseRoutePath);
  const detailsResults = (0, _react.useMemo)(() => {
    return [{
      title: /*#__PURE__*/_react.default.createElement(ColumnTitle, null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.endpoint.details.os",
        defaultMessage: "OS"
      })),
      description: /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
        size: "xs"
      }, hostInfo.metadata.host.os.full)
    }, {
      title: /*#__PURE__*/_react.default.createElement(ColumnTitle, null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.endpoint.details.agentStatus",
        defaultMessage: "Agent Status"
      })),
      description: /*#__PURE__*/_react.default.createElement(_agent_status.AgentStatus, {
        agentId: hostInfo.metadata.agent.id,
        agentType: "endpoint"
      })
    }, {
      title: /*#__PURE__*/_react.default.createElement(ColumnTitle, null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.endpoint.details.lastSeen",
        defaultMessage: "Last Seen"
      })),
      description: /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
        size: "xs"
      }, /*#__PURE__*/_react.default.createElement(_formatted_date.FormattedDate, {
        value: hostInfo.last_checkin || hostInfo.metadata['@timestamp'],
        fieldName: ""
      }))
    }, {
      title: /*#__PURE__*/_react.default.createElement(ColumnTitle, null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.endpoint.details.policy",
        defaultMessage: "Policy"
      })),
      description: /*#__PURE__*/_react.default.createElement(_endpoint_policy_link.EndpointPolicyLink, {
        policyId: hostInfo.metadata.Endpoint.policy.applied.id,
        revision: hostInfo.metadata.Endpoint.policy.applied.endpoint_policy_version,
        isOutdated: (0, _utils.isPolicyOutOfDate)(hostInfo.metadata.Endpoint.policy.applied, policyInfo),
        policyExists: !missingPolicies[hostInfo.metadata.Endpoint.policy.applied.id],
        "data-test-subj": "policyDetailsValue"
      }, hostInfo.metadata.Endpoint.policy.applied.name)
    }, {
      title: /*#__PURE__*/_react.default.createElement(ColumnTitle, null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.endpoint.details.policyStatus",
        defaultMessage: "Policy Status"
      })),
      description: /*#__PURE__*/_react.default.createElement(_eui.EuiHealth, {
        "data-test-subj": `policyStatusValue-${policyStatus}`,
        color: _host_constants.POLICY_STATUS_TO_BADGE_COLOR[policyStatus] || 'default'
      }, /*#__PURE__*/_react.default.createElement(_eui.EuiLink, {
        onClick: policyStatusClickHandler,
        "data-test-subj": "policyStatusValue"
      }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
        size: "xs"
      }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.endpoint.details.policyStatusValue",
        defaultMessage: "{policyStatus, select, success {Success} warning {Warning} failure {Failed} other {Unknown}}",
        values: {
          policyStatus
        }
      }))))
    }, {
      title: /*#__PURE__*/_react.default.createElement(ColumnTitle, null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.endpoint.details.endpointVersion",
        defaultMessage: "Endpoint Version"
      })),
      description: /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
        size: "xs"
      }, hostInfo.metadata.agent.version)
    }, {
      title: /*#__PURE__*/_react.default.createElement(ColumnTitle, null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.endpoint.details.ipAddress",
        defaultMessage: "IP Address"
      })),
      description: /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
        direction: "column",
        gutterSize: "s"
      }, hostInfo.metadata.host.ip.map((ip, index) => /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
        key: index
      }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
        size: "xs"
      }, ip))))
    }];
  }, [hostInfo, policyInfo, missingPolicies, policyStatus, policyStatusClickHandler]);
  return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiDescriptionList, {
    columnWidths: [1, 3],
    compressed: true,
    rowGutterSize: "m",
    type: "column",
    listItems: detailsResults,
    "data-test-subj": "endpointDetailsList"
  }));
});
EndpointDetailsContent.displayName = 'EndpointDetailsContent';