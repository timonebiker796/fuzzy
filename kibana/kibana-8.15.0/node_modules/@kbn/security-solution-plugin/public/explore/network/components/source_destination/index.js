"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SourceDestination = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _network = require("./network");
var _source_destination_with_arrows = require("./source_destination_with_arrows");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const EuiFlexItemMarginTop = (0, _styledComponents.default)(_eui.EuiFlexItem)`
  margin-top: 3px;
`;
EuiFlexItemMarginTop.displayName = 'EuiFlexItemMarginTop';

/**
 * Renders a visualization of network traffic between a source and a destination
 * This component is used by the Netflow row renderer
 */
const SourceDestination = exports.SourceDestination = /*#__PURE__*/_react.default.memo(({
  contextId,
  destinationBytes,
  destinationGeoContinentName,
  destinationGeoCountryName,
  destinationGeoCountryIsoCode,
  destinationGeoRegionName,
  destinationGeoCityName,
  destinationIp,
  destinationPackets,
  destinationPort,
  eventId,
  isDraggable,
  networkBytes,
  networkCommunityId,
  networkDirection,
  networkPackets,
  networkProtocol,
  sourceBytes,
  sourceGeoContinentName,
  sourceGeoCountryName,
  sourceGeoCountryIsoCode,
  sourceGeoRegionName,
  sourceGeoCityName,
  sourceIp,
  sourcePackets,
  sourcePort,
  transport
}) => /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
  alignItems: "center",
  direction: "column",
  justifyContent: "center",
  gutterSize: "none"
}, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
  grow: false
}, /*#__PURE__*/_react.default.createElement(_network.Network, {
  bytes: networkBytes,
  packets: networkPackets,
  communityId: networkCommunityId,
  contextId: contextId,
  direction: networkDirection,
  eventId: eventId,
  isDraggable: isDraggable,
  protocol: networkProtocol,
  transport: transport
})), /*#__PURE__*/_react.default.createElement(EuiFlexItemMarginTop, {
  grow: false
}, /*#__PURE__*/_react.default.createElement(_source_destination_with_arrows.SourceDestinationWithArrows, {
  contextId: contextId,
  destinationBytes: destinationBytes,
  destinationGeoContinentName: destinationGeoContinentName,
  destinationGeoCountryName: destinationGeoCountryName,
  destinationGeoCountryIsoCode: destinationGeoCountryIsoCode,
  destinationGeoRegionName: destinationGeoRegionName,
  destinationGeoCityName: destinationGeoCityName,
  destinationIp: destinationIp,
  destinationPackets: destinationPackets,
  destinationPort: destinationPort,
  eventId: eventId,
  isDraggable: isDraggable,
  sourceBytes: sourceBytes,
  sourceGeoContinentName: sourceGeoContinentName,
  sourceGeoCountryName: sourceGeoCountryName,
  sourceGeoCountryIsoCode: sourceGeoCountryIsoCode,
  sourceGeoRegionName: sourceGeoRegionName,
  sourceGeoCityName: sourceGeoCityName,
  sourceIp: sourceIp,
  sourcePackets: sourcePackets,
  sourcePort: sourcePort
}))));
SourceDestination.displayName = 'SourceDestination';