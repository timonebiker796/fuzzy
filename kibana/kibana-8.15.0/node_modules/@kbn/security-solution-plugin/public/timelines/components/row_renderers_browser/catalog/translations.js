"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ZEEK_NAME = exports.ZEEK_DESCRIPTION_PART2 = exports.ZEEK_DESCRIPTION_PART1 = exports.THREAT_MATCH_NAME = exports.THREAT_MATCH_DESCRIPTION = exports.SYSTEM_NAME = exports.SYSTEM_DESCRIPTION_PART3 = exports.SYSTEM_DESCRIPTION_PART2 = exports.SYSTEM_DESCRIPTION_PART1 = exports.SURICATA_NAME = exports.SURICATA_DESCRIPTION_PART2 = exports.SURICATA_DESCRIPTION_PART1 = exports.SOCKET_NAME = exports.SOCKET_DESCRIPTION_PART2 = exports.SOCKET_DESCRIPTION_PART1 = exports.REGISTRY_NAME = exports.REGISTRY_DESCRIPTION = exports.PROCESS_DESCRIPTION_PART2 = exports.PROCESS_DESCRIPTION_PART1 = exports.PROCESS = exports.LIBRARY_NAME = exports.LIBRARY_DESCRIPTION = exports.FLOW_NAME = exports.FLOW_DESCRIPTION_PART2 = exports.FLOW_DESCRIPTION_PART1 = exports.FIM_NAME = exports.FIM_DESCRIPTION_PART1 = exports.FILE_NAME = exports.FILE_DESCRIPTION_PART1 = exports.DNS_NAME = exports.DNS_DESCRIPTION_PART1 = exports.AUTHENTICATION_NAME = exports.AUTHENTICATION_DESCRIPTION_PART2 = exports.AUTHENTICATION_DESCRIPTION_PART1 = exports.AUDITD_NAME = exports.AUDITD_FILE_NAME = exports.AUDITD_FILE_DESCRIPTION_PART1 = exports.AUDITD_DESCRIPTION_PART1 = exports.ALERT_NAME = exports.ALERTS_NAME = exports.ALERTS_DESCRIPTION = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ALERT_NAME = exports.ALERT_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.alertName', {
  defaultMessage: 'Alert'
});
const ALERTS_NAME = exports.ALERTS_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.alertsName', {
  defaultMessage: 'Alerts'
});
const ALERTS_DESCRIPTION = exports.ALERTS_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.alertsDescription', {
  defaultMessage: 'Alerts are displayed when malware or ransomware is prevented and detected'
});
const AUDITD_NAME = exports.AUDITD_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.auditdName', {
  defaultMessage: 'Auditd'
});
const AUDITD_DESCRIPTION_PART1 = exports.AUDITD_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.auditdDescriptionPart1', {
  defaultMessage: 'audit events convey security-relevant logs from the Linux Audit Framework.'
});
const AUDITD_FILE_NAME = exports.AUDITD_FILE_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.auditdFileName', {
  defaultMessage: 'Auditd File'
});
const AUDITD_FILE_DESCRIPTION_PART1 = exports.AUDITD_FILE_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.auditdFileDescriptionPart1', {
  defaultMessage: 'File events show users (and system accounts) performing CRUD operations on files via specific processes.'
});
const AUTHENTICATION_NAME = exports.AUTHENTICATION_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.authenticationName', {
  defaultMessage: 'Authentication'
});
const AUTHENTICATION_DESCRIPTION_PART1 = exports.AUTHENTICATION_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.authenticationDescriptionPart1', {
  defaultMessage: 'Authentication events show users (and system accounts) successfully or unsuccessfully logging into hosts.'
});
const AUTHENTICATION_DESCRIPTION_PART2 = exports.AUTHENTICATION_DESCRIPTION_PART2 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.authenticationDescriptionPart2', {
  defaultMessage: 'Some authentication events may include additional details when users authenticate on behalf of other users.'
});
const DNS_NAME = exports.DNS_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.dnsName', {
  defaultMessage: 'Domain Name System (DNS)'
});
const DNS_DESCRIPTION_PART1 = exports.DNS_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.dnsDescriptionPart1', {
  defaultMessage: 'Domain Name System (DNS) events show users (and system accounts) making requests via specific processes to translate from host names to IP addresses.'
});
const FILE_NAME = exports.FILE_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.fileName', {
  defaultMessage: 'File'
});
const FILE_DESCRIPTION_PART1 = exports.FILE_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.fileDescriptionPart1', {
  defaultMessage: 'File events show users (and system accounts) performing CRUD operations on files via specific processes.'
});
const FIM_NAME = exports.FIM_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.fimName', {
  defaultMessage: 'File Integrity Module (FIM)'
});
const FIM_DESCRIPTION_PART1 = exports.FIM_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.fimDescriptionPart1', {
  defaultMessage: 'File Integrity Module (FIM) events show users (and system accounts) performing CRUD operations on files via specific processes.'
});
const FLOW_NAME = exports.FLOW_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.flowName', {
  defaultMessage: 'Flow'
});
const FLOW_DESCRIPTION_PART1 = exports.FLOW_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.flowDescriptionPart1', {
  defaultMessage: "The Flow renderer visualizes the flow of data between a source and destination. It's applicable to many types of events."
});
const FLOW_DESCRIPTION_PART2 = exports.FLOW_DESCRIPTION_PART2 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.flowDescriptionPart2', {
  defaultMessage: 'The hosts, ports, protocol, direction, duration, amount transferred, process, geographic location, and other details are visualized when available.'
});
const LIBRARY_NAME = exports.LIBRARY_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.libraryName', {
  defaultMessage: 'Library'
});
const LIBRARY_DESCRIPTION = exports.LIBRARY_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.libraryDescription', {
  defaultMessage: 'Library events display a Dynamically Linked Library (DLL) being loaded by a process'
});
const PROCESS = exports.PROCESS = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.processName', {
  defaultMessage: 'Process'
});
const PROCESS_DESCRIPTION_PART1 = exports.PROCESS_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.processDescriptionPart1', {
  defaultMessage: 'Process events show users (and system accounts) starting and stopping processes.'
});
const PROCESS_DESCRIPTION_PART2 = exports.PROCESS_DESCRIPTION_PART2 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.processDescriptionPart2', {
  defaultMessage: 'Details including the command line arguments, parent process, and if applicable, file hashes are displayed when available.'
});
const REGISTRY_NAME = exports.REGISTRY_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.registryName', {
  defaultMessage: 'Registry'
});
const REGISTRY_DESCRIPTION = exports.REGISTRY_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.registryDescription', {
  defaultMessage: 'Registry events show updates to the Windows Registry'
});
const SOCKET_NAME = exports.SOCKET_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.socketName', {
  defaultMessage: 'Socket (Network)'
});
const SOCKET_DESCRIPTION_PART1 = exports.SOCKET_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.socketDescriptionPart1', {
  defaultMessage: 'Socket (Network) events show processes listening, accepting, and closing connections.'
});
const SOCKET_DESCRIPTION_PART2 = exports.SOCKET_DESCRIPTION_PART2 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.socketDescriptionPart2', {
  defaultMessage: 'Details including the protocol, ports, and a community ID for correlating all network events related to a single flow are displayed when available.'
});
const SURICATA_NAME = exports.SURICATA_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.suricataName', {
  defaultMessage: 'Suricata'
});
const SURICATA_DESCRIPTION_PART1 = exports.SURICATA_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.suricataDescriptionPart1', {
  defaultMessage: 'Summarizes'
});
const SURICATA_DESCRIPTION_PART2 = exports.SURICATA_DESCRIPTION_PART2 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.suricataDescriptionPart2', {
  defaultMessage: 'intrusion detection (IDS), inline intrusion prevention (IPS), and network security monitoring (NSM) events'
});
const SYSTEM_NAME = exports.SYSTEM_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.systemName', {
  defaultMessage: 'System'
});
const SYSTEM_DESCRIPTION_PART1 = exports.SYSTEM_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.systemDescriptionPart1', {
  defaultMessage: 'The Auditbeat'
});
const SYSTEM_DESCRIPTION_PART2 = exports.SYSTEM_DESCRIPTION_PART2 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.systemDescriptionPart2', {
  defaultMessage: 'module collects various security related information about a system.'
});
const SYSTEM_DESCRIPTION_PART3 = exports.SYSTEM_DESCRIPTION_PART3 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.systemDescriptionPart3', {
  defaultMessage: 'All datasets send both periodic state information (e.g. all currently running processes) and real-time changes (e.g. when a new process starts or stops).'
});
const THREAT_MATCH_NAME = exports.THREAT_MATCH_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.threatMatchName', {
  defaultMessage: 'Threat Indicator Match'
});
const THREAT_MATCH_DESCRIPTION = exports.THREAT_MATCH_DESCRIPTION = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.threatMatchDescription', {
  defaultMessage: 'Summarizes events that matched threat indicators'
});
const ZEEK_NAME = exports.ZEEK_NAME = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.zeekName', {
  defaultMessage: 'Zeek (formerly Bro)'
});
const ZEEK_DESCRIPTION_PART1 = exports.ZEEK_DESCRIPTION_PART1 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.zeekDescriptionPart1', {
  defaultMessage: 'Summarizes events from the'
});
const ZEEK_DESCRIPTION_PART2 = exports.ZEEK_DESCRIPTION_PART2 = _i18n.i18n.translate('xpack.securitySolution.eventRenderers.zeekDescriptionPart2', {
  defaultMessage: 'Network Security Monitoring (NSM) tool'
});