"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WITH = exports.SOURCE = exports.PROCESS = exports.PARENT_PROCESS = exports.ON = exports.FILE = exports.EVENT = exports.DESTINATION = exports.CREATED = exports.BY = exports.ALERT = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ALERT = exports.ALERT = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.alertLabel', {
  defaultMessage: 'alert'
});
const BY = exports.BY = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.byLabel', {
  defaultMessage: 'by'
});
const CREATED = exports.CREATED = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.createdLabel', {
  defaultMessage: 'created'
});
const DESTINATION = exports.DESTINATION = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.destinationLabel', {
  defaultMessage: 'destination'
});
const EVENT = exports.EVENT = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.eventLabel', {
  defaultMessage: 'event'
});
const FILE = exports.FILE = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.fileLabel', {
  defaultMessage: 'file'
});
const ON = exports.ON = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.onLabel', {
  defaultMessage: 'on'
});
const PARENT_PROCESS = exports.PARENT_PROCESS = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.parentProcessLabel', {
  defaultMessage: 'parent process'
});
const PROCESS = exports.PROCESS = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.processLabel', {
  defaultMessage: 'process'
});
const SOURCE = exports.SOURCE = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.sourceLabel', {
  defaultMessage: 'source'
});
const WITH = exports.WITH = _i18n.i18n.translate('xpack.securitySolution.renderers.alertRenderer.withLabel', {
  defaultMessage: 'with'
});