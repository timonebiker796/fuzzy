"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTimelineControlColumn = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _use_license = require("../../../../../common/hooks/use_license");
var _model = require("../../../../../sourcerer/store/model");
var _containers = require("../../../../../sourcerer/containers");
var _use_experimental_features = require("../../../../../common/hooks/use_experimental_features");
var _control_columns = require("../../body/control_columns");
var _header_actions = require("../../../../../common/components/header_actions/header_actions");
var _control_column_cell_render = require("../../unified_components/data_table/control_column_cell_render");
var _use_timeline_columns = require("./use_timeline_columns");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const EMPTY_STRING_ARRAY = [];
const noOp = () => {};
const noSelectAll = ({
  isSelected
}) => {};
const useTimelineControlColumn = ({
  columns,
  sort,
  timelineId,
  activeTab,
  refetch,
  events,
  pinnedEventIds,
  eventIdToNoteIds,
  onToggleShowNotes
}) => {
  const {
    browserFields
  } = (0, _containers.useSourcererDataView)(_model.SourcererScopeName.timeline);
  const unifiedComponentsInTimelineDisabled = (0, _use_experimental_features.useIsExperimentalFeatureEnabled)('unifiedComponentsInTimelineDisabled');
  const isEnterprisePlus = (0, _use_license.useLicense)().isEnterprise();
  const ACTION_BUTTON_COUNT = isEnterprisePlus ? 6 : 5;
  const {
    localColumns
  } = (0, _use_timeline_columns.useTimelineColumns)(columns);

  // We need one less when the unified components are enabled because the document expand is provided by the unified data table
  const UNIFIED_COMPONENTS_ACTION_BUTTON_COUNT = ACTION_BUTTON_COUNT - 1;
  return (0, _react.useMemo)(() => {
    if (!unifiedComponentsInTimelineDisabled) {
      return (0, _control_columns.getDefaultControlColumn)(UNIFIED_COMPONENTS_ACTION_BUTTON_COUNT).map(x => ({
        ...x,
        headerCellRender: function HeaderCellRender(props) {
          return /*#__PURE__*/_react.default.createElement(_header_actions.HeaderActions, (0, _extends2.default)({
            width: x.width,
            browserFields: browserFields,
            columnHeaders: localColumns,
            isEventViewer: false,
            isSelectAllChecked: false,
            onSelectAll: noSelectAll,
            showEventsSelect: false,
            showSelectAllCheckbox: false,
            showFullScreenToggle: false,
            sort: sort,
            tabType: activeTab
          }, props, {
            timelineId: timelineId
          }));
        },
        rowCellRender: props => {
          var _events$props$rowInde, _events$props$rowInde2;
          /*
           * In some cases, when number of events is updated
           * but new table is not yet rendered it can result
           * in the mismatch between the number of events v/s
           * the number of rows in the table currently rendered.
           *
           * */
          if ('rowIndex' in props && props.rowIndex >= events.length) return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);
          props.setCellProps({
            className: props.expandedEventId === ((_events$props$rowInde = events[props.rowIndex]) === null || _events$props$rowInde === void 0 ? void 0 : _events$props$rowInde._id) ? 'unifiedDataTable__cell--expanded' : ''
          });
          return /*#__PURE__*/_react.default.createElement(_control_column_cell_render.TimelineControlColumnCellRender, {
            rowIndex: props.rowIndex,
            columnId: props.columnId,
            timelineId: timelineId,
            ariaRowindex: props.rowIndex,
            checked: false,
            columnValues: "",
            data: events[props.rowIndex].data,
            ecsData: events[props.rowIndex].ecs,
            loadingEventIds: EMPTY_STRING_ARRAY,
            eventId: (_events$props$rowInde2 = events[props.rowIndex]) === null || _events$props$rowInde2 === void 0 ? void 0 : _events$props$rowInde2._id,
            index: props.rowIndex,
            onEventDetailsPanelOpened: noOp,
            onRowSelected: noOp,
            refetch: refetch,
            showCheckboxes: false,
            setEventsLoading: noOp,
            setEventsDeleted: noOp,
            pinnedEventIds: pinnedEventIds,
            eventIdToNoteIds: eventIdToNoteIds,
            toggleShowNotes: onToggleShowNotes
          });
        }
      }));
    } else {
      return (0, _control_columns.getDefaultControlColumn)(ACTION_BUTTON_COUNT).map(x => ({
        ...x,
        headerCellRender: _header_actions.HeaderActions
      }));
    }
  }, [unifiedComponentsInTimelineDisabled, UNIFIED_COMPONENTS_ACTION_BUTTON_COUNT, browserFields, localColumns, sort, activeTab, timelineId, refetch, events, pinnedEventIds, eventIdToNoteIds, onToggleShowNotes, ACTION_BUTTON_COUNT]);
};
exports.useTimelineControlColumn = useTimelineControlColumn;