"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FormattedDurationTooltipContent = exports.FormattedDurationTooltip = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireDefault(require("react"));
var _i18nReact = require("@kbn/i18n-react");
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _helpers = require("../helpers");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const P = _styledComponents.default.p`
  margin-bottom: 5px;
`;
P.displayName = 'P';
const FormattedDurationTooltipContent = exports.FormattedDurationTooltipContent = /*#__PURE__*/_react.default.memo(({
  maybeDurationNanoseconds,
  tooltipTitle
}) => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, tooltipTitle != null ? /*#__PURE__*/_react.default.createElement(P, {
  "data-test-subj": "title"
}, tooltipTitle) : null, /*#__PURE__*/_react.default.createElement(P, {
  "data-test-subj": "humanized"
}, (0, _helpers.getHumanizedDuration)(maybeDurationNanoseconds)), /*#__PURE__*/_react.default.createElement(P, {
  "data-test-subj": "raw-value"
}, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
  id: "xpack.securitySolution.formattedDuration.tooltipLabel",
  defaultMessage: "raw"
}), ': ', maybeDurationNanoseconds)));
FormattedDurationTooltipContent.displayName = 'FormattedDurationTooltipContent';
const FormattedDurationTooltip = exports.FormattedDurationTooltip = /*#__PURE__*/_react.default.memo(({
  children,
  maybeDurationNanoseconds,
  tooltipTitle
}) => /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
  "data-test-subj": "formatted-duration-tooltip",
  content: /*#__PURE__*/_react.default.createElement(FormattedDurationTooltipContent, {
    maybeDurationNanoseconds: maybeDurationNanoseconds,
    tooltipTitle: tooltipTitle
  })
}, /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children)));
FormattedDurationTooltip.displayName = 'FormattedDurationTooltip';