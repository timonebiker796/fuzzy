"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getDefaultValue = exports.ControlledDefaultInput = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _helpers = require("../../timeline/helpers");
var _helpers2 = require("../helpers");
var i18n = _interopRequireWildcard(require("../translations"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const VALUE_INPUT_CLASS_NAME = 'edit-data-provider-value';
const ControlledDefaultInput = ({
  value,
  onChangeCallback
}) => {
  const [primitiveValue, setPrimitiveValue] = (0, _react.useState)(getDefaultValue(value));
  (0, _react.useEffect)(() => {
    onChangeCallback((0, _helpers2.sanatizeValue)(primitiveValue));
  }, [primitiveValue, onChangeCallback]);
  const onValueChange = (0, _react.useCallback)(e => {
    setPrimitiveValue(e.target.value);
  }, []);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFieldText, {
    className: VALUE_INPUT_CLASS_NAME,
    onChange: onValueChange,
    placeholder: i18n.VALUE,
    value: (0, _helpers2.sanatizeValue)(primitiveValue)
  });
};
exports.ControlledDefaultInput = ControlledDefaultInput;
const getDefaultValue = value => {
  if ((0, _helpers.isPrimitiveArray)(value)) {
    var _value$;
    return (_value$ = value[0]) !== null && _value$ !== void 0 ? _value$ : '';
  } else return value;
};
exports.getDefaultValue = getDefaultValue;