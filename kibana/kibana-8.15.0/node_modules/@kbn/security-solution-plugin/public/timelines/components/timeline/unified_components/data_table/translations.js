"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TOTAL_COUNT_OF_EVENTS = exports.TIMELINE_UNIFIED_DATA_TABLE_CONTEXT_ERROR = exports.ROWS = exports.OF = exports.LOADING_EVENTS = exports.LOADING = exports.FULL_SCREEN = exports.EXIT_FULL_SCREEN = exports.EVENTS = exports.DRAG_DROP_FIELD = exports.AUTO_REFRESH_ACTIVE = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const DRAG_DROP_FIELD = exports.DRAG_DROP_FIELD = _i18n.i18n.translate('xpack.securitySolution.timeline.dataTable.dropZoneTableLabel', {
  defaultMessage: 'Drop zone to add field as a column to the table'
});
const FULL_SCREEN = exports.FULL_SCREEN = _i18n.i18n.translate('xpack.securitySolution.timeline.dataTable.fullScreenButton', {
  defaultMessage: 'Enter fullscreen'
});
const EXIT_FULL_SCREEN = exports.EXIT_FULL_SCREEN = _i18n.i18n.translate('xpack.securitySolution.timeline.dataTable.exitFullScreenButton', {
  defaultMessage: 'Exit fullscreen (esc)'
});
const EVENTS = exports.EVENTS = _i18n.i18n.translate('xpack.securitySolution.timeline.footer.events', {
  defaultMessage: 'Events'
});
const OF = exports.OF = _i18n.i18n.translate('xpack.securitySolution.timeline.footer.of', {
  defaultMessage: 'of'
});
const ROWS = exports.ROWS = _i18n.i18n.translate('xpack.securitySolution.timeline.footer.rows', {
  defaultMessage: 'rows'
});
const LOADING = exports.LOADING = _i18n.i18n.translate('xpack.securitySolution.timeline.footer.loadingLabel', {
  defaultMessage: 'Loading'
});
const TOTAL_COUNT_OF_EVENTS = exports.TOTAL_COUNT_OF_EVENTS = _i18n.i18n.translate('xpack.securitySolution.timeline.dataTable.footer.totalCountOfEvents', {
  defaultMessage: 'events'
});
const AUTO_REFRESH_ACTIVE = exports.AUTO_REFRESH_ACTIVE = _i18n.i18n.translate('xpack.securitySolution.timeline.dataTable.footer.autoRefreshActiveDescription', {
  defaultMessage: 'Auto-Refresh Active'
});
const LOADING_EVENTS = exports.LOADING_EVENTS = _i18n.i18n.translate('xpack.securitySolution.timeline.dataTable.footer.loadingEventsDataLabel', {
  defaultMessage: 'Loading Events'
});
const TIMELINE_UNIFIED_DATA_TABLE_CONTEXT_ERROR = exports.TIMELINE_UNIFIED_DATA_TABLE_CONTEXT_ERROR = _i18n.i18n.translate('xpack.securitySolution.timeline.dataTable.timelineContextError', {
  defaultMessage: 'Incorrect Usage of Unified Data Table Context. Must be used inside components or hooks called inside UnifiedDataTable '
});