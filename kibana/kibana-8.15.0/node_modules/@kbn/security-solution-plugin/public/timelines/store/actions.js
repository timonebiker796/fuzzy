"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.upsertColumn = exports.updateTotalCount = exports.updateTitleAndDescription = exports.updateTimeline = exports.updateSort = exports.updateSessionViewConfig = exports.updateSavedSearchId = exports.updateSavedSearch = exports.updateSampleSize = exports.updateRowHeight = exports.updateRange = exports.updateProviders = exports.updateKqlMode = exports.updateItemsPerPageOptions = exports.updateItemsPerPage = exports.updateIsLoading = exports.updateIsFavorite = exports.updateGraphEventId = exports.updateEqlOptions = exports.updateDataView = exports.updateDataProviderType = exports.updateDataProviderExcluded = exports.updateDataProviderEnabled = exports.updateColumns = exports.updateColumnWidth = exports.unPinEvent = exports.toggleModalSaveTimeline = exports.toggleDetailPanel = exports.startTimelineSaving = exports.showTimeline = exports.showCallOutUnauthorizedMsg = exports.setSelected = exports.setSavedQueryId = exports.setInsertTimeline = exports.setFilters = exports.setExcludedRowRendererIds = exports.setEventsLoading = exports.setEventsDeleted = exports.setDataProviderVisibility = exports.setConfirmingNoteId = exports.setChanged = exports.setActiveTabTimeline = exports.saveTimeline = exports.removeProvider = exports.removeColumn = exports.pinEvent = exports.initializeTimelineSettings = exports.initializeSavedSearch = exports.endTimelineSaving = exports.deleteNoteFromEvent = exports.dataProviderEdited = exports.createTimeline = exports.clearSelected = exports.clearEventsLoading = exports.clearEventsDeleted = exports.applyKqlFilterQuery = exports.applyDeltaToColumnWidth = exports.addTimeline = exports.addProvider = exports.addNoteToEvent = exports.addNote = void 0;
var _typescriptFsa = _interopRequireDefault(require("typescript-fsa"));
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const actionCreator = (0, _typescriptFsa.default)('x-pack/security_solution/local/timeline');
const addNote = exports.addNote = actionCreator('ADD_NOTE');
const addNoteToEvent = exports.addNoteToEvent = actionCreator('ADD_NOTE_TO_EVENT');
const deleteNoteFromEvent = exports.deleteNoteFromEvent = actionCreator('DELETE_NOTE_FROM_EVENT');
const showTimeline = exports.showTimeline = actionCreator('SHOW_TIMELINE');
const setInsertTimeline = exports.setInsertTimeline = actionCreator('SET_INSERT_TIMELINE');
const addProvider = exports.addProvider = actionCreator('ADD_PROVIDER');
const saveTimeline = exports.saveTimeline = actionCreator('SAVE_TIMELINE');
const createTimeline = exports.createTimeline = actionCreator('CREATE_TIMELINE');
const pinEvent = exports.pinEvent = actionCreator('PIN_EVENT');
const removeProvider = exports.removeProvider = actionCreator('REMOVE_PROVIDER');
const updateGraphEventId = exports.updateGraphEventId = actionCreator('UPDATE_TIMELINE_GRAPH_EVENT_ID');
const updateSessionViewConfig = exports.updateSessionViewConfig = actionCreator('UPDATE_TIMELINE_SESSION_VIEW_CONFIG');
const unPinEvent = exports.unPinEvent = actionCreator('UN_PIN_EVENT');
const updateTimeline = exports.updateTimeline = actionCreator('UPDATE_TIMELINE');
const addTimeline = exports.addTimeline = actionCreator('ADD_TIMELINE');
const startTimelineSaving = exports.startTimelineSaving = actionCreator('START_TIMELINE_SAVING');
const endTimelineSaving = exports.endTimelineSaving = actionCreator('END_TIMELINE_SAVING');
const updateDataProviderEnabled = exports.updateDataProviderEnabled = actionCreator('TOGGLE_PROVIDER_ENABLED');
const updateDataProviderExcluded = exports.updateDataProviderExcluded = actionCreator('TOGGLE_PROVIDER_EXCLUDED');
const dataProviderEdited = exports.dataProviderEdited = actionCreator('DATA_PROVIDER_EDITED');
const updateDataProviderType = exports.updateDataProviderType = actionCreator('UPDATE_PROVIDER_TYPE');
const updateKqlMode = exports.updateKqlMode = actionCreator('UPDATE_KQL_MODE');
const applyKqlFilterQuery = exports.applyKqlFilterQuery = actionCreator('APPLY_KQL_FILTER_QUERY');
const updateIsFavorite = exports.updateIsFavorite = actionCreator('UPDATE_IS_FAVORITE');
const updateTitleAndDescription = exports.updateTitleAndDescription = actionCreator('UPDATE_TITLE_AND_DESCRIPTION');
const updateProviders = exports.updateProviders = actionCreator('UPDATE_PROVIDERS');
const updateRange = exports.updateRange = actionCreator('UPDATE_RANGE');
const showCallOutUnauthorizedMsg = exports.showCallOutUnauthorizedMsg = actionCreator('SHOW_CALL_OUT_UNAUTHORIZED_MSG');
const setSavedQueryId = exports.setSavedQueryId = actionCreator('SET_TIMELINE_SAVED_QUERY');
const setFilters = exports.setFilters = actionCreator('SET_TIMELINE_FILTERS');
const setExcludedRowRendererIds = exports.setExcludedRowRendererIds = actionCreator('SET_TIMELINE_EXCLUDED_ROW_RENDERER_IDS');
const updateDataView = exports.updateDataView = actionCreator('UPDATE_DATA_VIEW');
const setActiveTabTimeline = exports.setActiveTabTimeline = actionCreator('SET_ACTIVE_TAB_TIMELINE');
const toggleModalSaveTimeline = exports.toggleModalSaveTimeline = actionCreator('TOGGLE_MODAL_SAVE_TIMELINE');
const updateEqlOptions = exports.updateEqlOptions = actionCreator('UPDATE_EQL_OPTIONS_TIMELINE');
const updateIsLoading = exports.updateIsLoading = actionCreator('UPDATE_LOADING');
const toggleDetailPanel = exports.toggleDetailPanel = actionCreator('TOGGLE_DETAIL_PANEL');
const setEventsLoading = exports.setEventsLoading = actionCreator('SET_TIMELINE_EVENTS_LOADING');
const setEventsDeleted = exports.setEventsDeleted = actionCreator('SET_TIMELINE_EVENTS_DELETED');
const removeColumn = exports.removeColumn = actionCreator('REMOVE_COLUMN');
const updateColumns = exports.updateColumns = actionCreator('UPDATE_COLUMNS');
const updateSort = exports.updateSort = actionCreator('UPDATE_SORT');
const upsertColumn = exports.upsertColumn = actionCreator('UPSERT_COLUMN');
const setSelected = exports.setSelected = actionCreator('SET_TIMELINE_SELECTED');
const clearSelected = exports.clearSelected = actionCreator('CLEAR_TIMELINE_SELECTED');
const initializeTimelineSettings = exports.initializeTimelineSettings = actionCreator('INITIALIZE_TIMELINE');
const updateItemsPerPage = exports.updateItemsPerPage = actionCreator('UPDATE_ITEMS_PER_PAGE');
const updateItemsPerPageOptions = exports.updateItemsPerPageOptions = actionCreator('UPDATE_ITEMS_PER_PAGE_OPTIONS');
const applyDeltaToColumnWidth = exports.applyDeltaToColumnWidth = actionCreator('APPLY_DELTA_TO_COLUMN_WIDTH');
const clearEventsLoading = exports.clearEventsLoading = actionCreator('CLEAR_TGRID_EVENTS_LOADING');
const clearEventsDeleted = exports.clearEventsDeleted = actionCreator('CLEAR_TGRID_EVENTS_DELETED');
const updateTotalCount = exports.updateTotalCount = actionCreator('UPDATE_TOTAL_COUNT');
const updateSavedSearchId = exports.updateSavedSearchId = actionCreator('UPDATE_DISCOVER_SAVED_SEARCH_ID');
const initializeSavedSearch = exports.initializeSavedSearch = actionCreator('INITIALIZE_SAVED_SEARCH');
const updateSavedSearch = exports.updateSavedSearch = actionCreator('UPDATE_SAVED_SEARCH');
const setDataProviderVisibility = exports.setDataProviderVisibility = actionCreator('SET_DATA_PROVIDER_VISIBLITY');
const setChanged = exports.setChanged = actionCreator('SET_CHANGED');
const updateColumnWidth = exports.updateColumnWidth = actionCreator('UPDATE_COLUMN_WIDTH');
const updateRowHeight = exports.updateRowHeight = actionCreator('UPDATE_ROW_HEIGHT');
const updateSampleSize = exports.updateSampleSize = actionCreator('UPDATE_SAMPLE_SIZE');
const setConfirmingNoteId = exports.setConfirmingNoteId = actionCreator('SET_CONFIRMING_NOTE_ID');