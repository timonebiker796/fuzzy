"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SourcererCallout = exports.SaveButtons = exports.AlertsCheckbox = void 0;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _helpers = require("./helpers");
var i18n = _interopRequireWildcard(require("./translations"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SourcererCallout = exports.SourcererCallout = /*#__PURE__*/_react.default.memo(({
  isOnlyDetectionAlerts,
  title
}) => isOnlyDetectionAlerts ? /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
  "data-test-subj": "sourcerer-callout",
  iconType: "iInCircle",
  size: "s",
  title: title
}) : null);
SourcererCallout.displayName = 'SourcererCallout';
const AlertsCheckbox = exports.AlertsCheckbox = /*#__PURE__*/_react.default.memo(({
  onChange,
  checked,
  isShow
}) => isShow ? /*#__PURE__*/_react.default.createElement(_helpers.StyledFormRow, null, /*#__PURE__*/_react.default.createElement(_eui.EuiCheckbox, {
  checked: checked,
  "data-test-subj": "sourcerer-alert-only-checkbox",
  id: "sourcerer-alert-only-checkbox",
  label: i18n.ALERTS_CHECKBOX_LABEL,
  onChange: onChange
})) : null);
AlertsCheckbox.displayName = 'AlertsCheckbox';
const SaveButtons = exports.SaveButtons = /*#__PURE__*/_react.default.memo(({
  disableSave,
  isShow,
  onReset,
  onSave
}) => isShow ? /*#__PURE__*/_react.default.createElement(_helpers.StyledFormRow, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
  alignItems: "center",
  justifyContent: "flexEnd"
}, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
  grow: false
}, /*#__PURE__*/_react.default.createElement(_helpers.ResetButton, {
  "aria-label": i18n.INDEX_PATTERNS_RESET,
  "data-test-subj": "sourcerer-reset",
  flush: "left",
  onClick: onReset,
  title: i18n.INDEX_PATTERNS_RESET
}, i18n.INDEX_PATTERNS_RESET)), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
  grow: false
}, /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
  onClick: onSave,
  disabled: disableSave,
  "data-test-subj": "sourcerer-save",
  fill: true,
  fullWidth: true,
  size: "s"
}, i18n.SAVE_INDEX_PATTERNS)))) : null);
SaveButtons.displayName = 'SaveButtons';