"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EndpointActionCallout = void 0;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _hook_form_lib = require("@kbn/es-ui-shared-plugin/static/forms/hook_form_lib");
var _lodash = require("lodash");
var _translations = require("../../../management/common/translations");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const EndpointActionCalloutComponent = ({
  basePath,
  editDisabled
}) => {
  const [data] = (0, _hook_form_lib.useFormData)();
  const currentCommand = (0, _lodash.get)(data, `${basePath}.command`);
  if (editDisabled) {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
      size: "s"
    }), /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
      color: "warning",
      iconType: "warning",
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.responseActionsList.endpoint.privileges",
        defaultMessage: "Insufficient privileges"
      })
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
      size: 'xs'
    }, _translations.CONSOLE_COMMANDS.isolate.privileges)), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
      size: "s"
    }));
  }
  if (currentCommand === 'isolate') {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
      size: "s"
    }), /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
      color: "warning",
      iconType: "warning",
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.responseActionsList.endpoint.cautionTitle",
        defaultMessage: "Proceed with caution"
      })
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
      size: 'xs'
    }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.securitySolution.responseActionsList.endpoint.cautionDescription",
      defaultMessage: "Only select this option if you\u2019re certain that you want to automatically block communication with other hosts on your network until you release this host."
    }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
      size: "s"
    }));
  }
  if (currentCommand === 'kill-process' || currentCommand === 'suspend-process') {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
      size: "s"
    }), /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
      color: "warning",
      iconType: "warning",
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.securitySolution.responseActionsList.endpoint.cautionTitle",
        defaultMessage: "Proceed with caution"
      })
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
      size: 'xs'
    }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.securitySolution.responseActionsList.endpoint.processesCautionDescription",
      defaultMessage: "Only select this option if you\u2019re certain that you want to automatically terminate the process running on a host."
    }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
      size: "s"
    }));
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);
};
const EndpointActionCallout = exports.EndpointActionCallout = /*#__PURE__*/_react.default.memo(EndpointActionCalloutComponent);