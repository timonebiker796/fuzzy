"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ManualRuleRunModal = void 0;
var _eui = require("@elastic/eui");
var _moment = _interopRequireDefault(require("moment"));
var _react = _interopRequireWildcard(require("react"));
var _constants = require("../../../../../common/constants");
var _translations = require("../../../../common/translations");
var i18n = _interopRequireWildcard(require("./translations"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const MANUAL_RULE_RUN_MODAL_WIDTH = 600;
const ManualRuleRunModalComponent = ({
  onCancel,
  onConfirm
}) => {
  const modalTitleId = (0, _eui.useGeneratedHtmlId)();
  const now = (0, _moment.default)();

  // By default we show three hours time range which user can then adjust
  const [startDate, setStartDate] = (0, _react.useState)(now.clone().subtract(3, 'h'));
  const [endDate, setEndDate] = (0, _react.useState)(now.clone());
  const isStartDateOutOfRange = now.clone().subtract(_constants.MAX_MANUAL_RULE_RUN_LOOKBACK_WINDOW_DAYS, 'd').isAfter(startDate);
  const isEndDateInFuture = endDate.isAfter(now);
  const isInvalidTimeRange = startDate.isSameOrAfter(endDate);
  const isInvalid = isStartDateOutOfRange || isEndDateInFuture || isInvalidTimeRange;
  const errorMessage = (0, _react.useMemo)(() => {
    if (isStartDateOutOfRange) {
      return i18n.MANUAL_RULE_RUN_START_DATE_OUT_OF_RANGE_ERROR(_constants.MAX_MANUAL_RULE_RUN_LOOKBACK_WINDOW_DAYS);
    }
    if (isEndDateInFuture) {
      return i18n.MANUAL_RULE_RUN_FUTURE_TIME_RANGE_ERROR;
    }
    if (isInvalidTimeRange) {
      return i18n.MANUAL_RULE_RUN_INVALID_TIME_RANGE_ERROR;
    }
    return null;
  }, [isEndDateInFuture, isInvalidTimeRange, isStartDateOutOfRange]);
  const handleConfirm = (0, _react.useCallback)(() => {
    onConfirm({
      startDate,
      endDate
    });
  }, [endDate, onConfirm, startDate]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiConfirmModal, {
    "aria-labelledby": modalTitleId,
    title: /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
      justifyContent: "spaceBetween"
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, i18n.MANUAL_RULE_RUN_MODAL_TITLE), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
      grow: false
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiBetaBadge, {
      label: _translations.TECHNICAL_PREVIEW,
      tooltipContent: _translations.TECHNICAL_PREVIEW_TOOLTIP
    }))),
    titleProps: {
      id: modalTitleId,
      style: {
        width: '100%'
      }
    },
    onCancel: onCancel,
    onConfirm: handleConfirm,
    confirmButtonText: i18n.MANUAL_RULE_RUN_CONFIRM_BUTTON,
    cancelButtonText: i18n.MANUAL_RULE_RUN_CANCEL_BUTTON,
    confirmButtonDisabled: isInvalid,
    style: {
      width: MANUAL_RULE_RUN_MODAL_WIDTH
    }
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiForm, {
    "data-test-subj": "manual-rule-run-modal-form",
    fullWidth: true
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    "data-test-subj": "manual-rule-run-time-range-form",
    label: i18n.MANUAL_RULE_RUN_TIME_RANGE_TITLE,
    isInvalid: isInvalid,
    error: errorMessage
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiDatePickerRange, {
    "data-test-subj": "manual-rule-run-time-range",
    startDateControl: /*#__PURE__*/_react.default.createElement(_eui.EuiDatePicker, {
      className: "start-date-picker",
      "aria-label": "Start date range",
      selected: startDate,
      onChange: date => date && setStartDate(date),
      startDate: startDate,
      endDate: endDate,
      showTimeSelect: true
    }),
    endDateControl: /*#__PURE__*/_react.default.createElement(_eui.EuiDatePicker, {
      className: "end-date-picker",
      "aria-label": "End date range",
      selected: endDate,
      onChange: date => date && setEndDate(date),
      startDate: startDate,
      endDate: endDate,
      showTimeSelect: true
    })
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
    size: "s",
    iconType: "warning",
    title: i18n.MANUAL_RULE_RUN_NOTIFIACTIONS_LIMITATIONS
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
    size: "s",
    title: i18n.MANUAL_RULE_RUN_ALERT_LIMITATIONS,
    iconType: "iInCircle"
  }));
};
const ManualRuleRunModal = exports.ManualRuleRunModal = /*#__PURE__*/_react.default.memo(ManualRuleRunModalComponent);
ManualRuleRunModal.displayName = 'ManualRuleRunModal';