"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scheduleRuleRun = exports.findBackfillsForRules = exports.deleteBackfill = void 0;
var _common = require("@kbn/alerting-plugin/common");
var _kibana = require("../../../common/lib/kibana");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * Schedule rules run over a specified time range
 *
 * @param ruleIds `rule_id`s of each rule to be backfilled
 * @param timeRange the time range over which the backfill should apply
 *
 * @throws An error if response is not OK
 */
const scheduleRuleRun = async ({
  ruleIds,
  timeRange
}) => {
  const params = ruleIds.map(ruleId => {
    return {
      rule_id: ruleId,
      start: timeRange.startDate.toISOString(),
      end: timeRange.endDate.toISOString()
    };
  });
  return _kibana.KibanaServices.get().http.fetch(_common.INTERNAL_ALERTING_BACKFILL_SCHEDULE_API_PATH, {
    method: 'POST',
    version: '2023-10-31',
    body: JSON.stringify(params)
  });
};

/**
 * Find backfills for the given rule IDs
 * @param ruleIds string[]
 * @param signal? AbortSignal
 * @returns
 */
exports.scheduleRuleRun = scheduleRuleRun;
const findBackfillsForRules = async ({
  ruleIds,
  page,
  perPage,
  signal,
  sortField = 'createdAt',
  sortOrder = 'desc'
}) => _kibana.KibanaServices.get().http.fetch(_common.INTERNAL_ALERTING_BACKFILL_FIND_API_PATH, {
  method: 'POST',
  query: {
    rule_ids: ruleIds.join(','),
    page,
    per_page: perPage,
    sort_field: sortField,
    sort_order: sortOrder
  },
  signal
});

/**
 * Delete backfill by ID
 * @param backfillId
 * @returns
 */
exports.findBackfillsForRules = findBackfillsForRules;
const deleteBackfill = async ({
  backfillId
}) => {
  return _kibana.KibanaServices.get().http.fetch(`${_common.INTERNAL_ALERTING_BACKFILL_API_PATH}/${backfillId}`, {
    method: 'DELETE'
  });
};
exports.deleteBackfill = deleteBackfill;