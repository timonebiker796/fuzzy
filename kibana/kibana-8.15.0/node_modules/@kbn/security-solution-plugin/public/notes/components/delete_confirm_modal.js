"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DeleteConfirmModal = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _eui = require("@elastic/eui");
var i18n = _interopRequireWildcard(require("./translations"));
var _ = require("..");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const DeleteConfirmModal = exports.DeleteConfirmModal = /*#__PURE__*/_react.default.memo(() => {
  const dispatch = (0, _reactRedux.useDispatch)();
  const pendingDeleteIds = (0, _reactRedux.useSelector)(_.selectNotesTablePendingDeleteIds);
  const deleteNotesStatus = (0, _reactRedux.useSelector)(_.selectDeleteNotesStatus);
  const deleteLoading = deleteNotesStatus === _.ReqStatus.Loading;
  const onCancel = (0, _react.useCallback)(() => {
    dispatch((0, _.userClosedDeleteModal)());
  }, [dispatch]);
  const onConfirm = (0, _react.useCallback)(() => {
    dispatch((0, _.deleteNotes)({
      ids: pendingDeleteIds,
      refetch: true
    }));
  }, [dispatch, pendingDeleteIds]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiConfirmModal, {
    "aria-labelledby": 'delete-notes-modal',
    title: i18n.DELETE_NOTES_MODAL_TITLE,
    onCancel: onCancel,
    onConfirm: onConfirm,
    isLoading: deleteLoading,
    cancelButtonText: i18n.DELETE_NOTES_CANCEL,
    confirmButtonText: i18n.DELETE,
    buttonColor: "danger",
    defaultFocusedButton: "confirm"
  }, i18n.DELETE_NOTES_CONFIRM(pendingDeleteIds.length));
});
DeleteConfirmModal.displayName = 'DeleteConfirmModal';