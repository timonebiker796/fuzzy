"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EndpointAgentStatusRequestSchema = void 0;
var _configSchema = require("@kbn/config-schema");
var _ = require("..");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const AgentStatusAgentIdSchema = _configSchema.schema.string({
  minLength: 1,
  validate: id => {
    if (id.trim() === '') {
      return 'actionIds can not be empty strings';
    }
  }
});
const EndpointAgentStatusRequestSchema = exports.EndpointAgentStatusRequestSchema = {
  query: _configSchema.schema.object({
    agentIds: _configSchema.schema.oneOf([_configSchema.schema.arrayOf(AgentStatusAgentIdSchema, {
      minSize: 1,
      maxSize: 50
    }), AgentStatusAgentIdSchema]),
    agentType: _configSchema.schema.maybe(_configSchema.schema.oneOf(
    // @ts-expect-error TS2769: No overload matches this call
    _.AgentTypeSchemaLiteral, {
      defaultValue: 'endpoint'
    }))
  })
};