"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RuleToImport = void 0;
var z = _interopRequireWildcard(require("zod"));
var _rule_schema = require("../../model/rule_schema");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * Differences from this and the createRulesSchema are
 *   - rule_id is required
 *   - id is optional (but ignored in the import code - rule_id is exclusively used for imports)
 *   - immutable is optional but if it is any value other than false it will be rejected
 *   - created_at is optional (but ignored in the import code)
 *   - updated_at is optional (but ignored in the import code)
 *   - created_by is optional (but ignored in the import code)
 *   - updated_by is optional (but ignored in the import code)
 */

const RuleToImport = exports.RuleToImport = _rule_schema.BaseCreateProps.and(_rule_schema.TypeSpecificCreateProps).and(_rule_schema.ResponseFields.partial().extend({
  rule_id: _rule_schema.RuleSignatureId,
  immutable: z.literal(false).default(false),
  /*
    Overriding `required_fields` from ResponseFields because 
    in ResponseFields `required_fields` has the output type, 
    but for importing rules, we need to use the input type.
    Otherwise importing rules without the "ecs" property in 
    `required_fields` will fail. 
  */
  required_fields: z.array(_rule_schema.RequiredFieldInput).optional()
}));