"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SetAlertsStatusResponse = exports.SetAlertsStatusRequestBody = exports.SetAlertsStatusByQuery = exports.SetAlertsStatusByIds = void 0;
var _zod = require("zod");
var _primitives = require("../../../model/primitives.gen");
var _alert = require("../../../model/alert.gen");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Set alerts status API endpoint
 *   version: 2023-10-31
 */

const SetAlertsStatusByIds = exports.SetAlertsStatusByIds = _zod.z.object({
  signal_ids: _zod.z.array(_primitives.NonEmptyString).min(1),
  status: _alert.AlertStatus
});
const SetAlertsStatusByQuery = exports.SetAlertsStatusByQuery = _zod.z.object({
  query: _zod.z.object({}).catchall(_zod.z.unknown()),
  status: _alert.AlertStatus,
  conflicts: _zod.z.enum(['abort', 'proceed']).optional().default('abort')
});
const SetAlertsStatusRequestBody = exports.SetAlertsStatusRequestBody = _zod.z.union([SetAlertsStatusByIds, SetAlertsStatusByQuery]);

/**
 * Elasticsearch update by query response
 */

const SetAlertsStatusResponse = exports.SetAlertsStatusResponse = _zod.z.object({}).catchall(_zod.z.unknown());