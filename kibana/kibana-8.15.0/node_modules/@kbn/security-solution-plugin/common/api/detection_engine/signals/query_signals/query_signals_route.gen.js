"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchAlertsResponse = exports.SearchAlertsRequestBody = exports.AlertsSortCombinations = exports.AlertsSort = void 0;
var _zod = require("zod");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Alerts search API endpoint
 *   version: 2023-10-31
 */

const AlertsSortCombinations = exports.AlertsSortCombinations = _zod.z.union([_zod.z.string(), _zod.z.object({}).catchall(_zod.z.unknown())]);
const AlertsSort = exports.AlertsSort = _zod.z.union([AlertsSortCombinations, _zod.z.array(AlertsSortCombinations)]);

/**
 * Elasticsearch query and aggregation request
 */

const SearchAlertsRequestBody = exports.SearchAlertsRequestBody = _zod.z.object({
  query: _zod.z.object({}).catchall(_zod.z.unknown()).optional(),
  aggs: _zod.z.object({}).catchall(_zod.z.unknown()).optional(),
  size: _zod.z.number().int().min(0).optional(),
  track_total_hits: _zod.z.boolean().optional(),
  _source: _zod.z.union([_zod.z.boolean(), _zod.z.string(), _zod.z.array(_zod.z.string())]).optional(),
  fields: _zod.z.array(_zod.z.string()).optional(),
  runtime_mappings: _zod.z.object({}).catchall(_zod.z.unknown()).optional(),
  sort: AlertsSort.optional()
});

/**
 * Elasticsearch search response
 */

const SearchAlertsResponse = exports.SearchAlertsResponse = _zod.z.object({}).catchall(_zod.z.unknown());