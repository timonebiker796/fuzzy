"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CreateAgentKeyFlyout = CreateAgentKeyFlyout;
var _react = _interopRequireWildcard(require("react"));
var _i18n = require("@kbn/i18n");
var _eui = require("@elastic/eui");
var _lodash = require("lodash");
var _create_call_apm_api = require("../../../../services/rest/create_call_apm_api");
var _use_current_user = require("../../../../hooks/use_current_user");
var _privilege_type = require("../../../../../common/privilege_type");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function CreateAgentKeyFlyout({
  onCancel,
  onSuccess,
  onError
}) {
  const [formTouched, setFormTouched] = (0, _react.useState)(false);
  const [agentKeyBody, setAgentKeyBody] = (0, _react.useState)({
    name: '',
    event: true,
    agentConfig: true
  });
  const {
    name,
    event,
    agentConfig
  } = agentKeyBody;
  const currentUser = (0, _use_current_user.useCurrentUser)();
  const isInputInvalid = (0, _lodash.isEmpty)(name);
  const isFormInvalid = formTouched && isInputInvalid;
  const formError = _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.name.placeholder', {
    defaultMessage: 'Enter a name'
  });
  const createAgentKeyTitle = _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.createAgentKey', {
    defaultMessage: 'Create APM agent key'
  });
  const createAgentKey = async () => {
    setFormTouched(true);
    if (isInputInvalid) {
      return;
    }
    try {
      const privileges = [];
      if (event) {
        privileges.push(_privilege_type.PrivilegeType.EVENT);
      }
      if (agentConfig) {
        privileges.push(_privilege_type.PrivilegeType.AGENT_CONFIG);
      }
      const {
        agentKey
      } = await (0, _create_call_apm_api.callApmApi)('POST /api/apm/agent_keys 2023-10-31', {
        signal: null,
        params: {
          body: {
            name,
            privileges
          }
        }
      });
      onSuccess(agentKey);
    } catch (error) {
      var _error$body;
      onError(name, ((_error$body = error.body) === null || _error$body === void 0 ? void 0 : _error$body.message) || error.message);
    }
  };
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlyout, {
    onClose: onCancel,
    size: "s"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlyoutHeader, {
    hasBorder: true
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, null, /*#__PURE__*/_react.default.createElement("h2", null, createAgentKeyTitle))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlyoutBody, null, /*#__PURE__*/_react.default.createElement(_eui.EuiForm, {
    isInvalid: isFormInvalid,
    error: formError
  }, currentUser && /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    label: _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.userTitle', {
      defaultMessage: 'User'
    })
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, null, currentUser === null || currentUser === void 0 ? void 0 : currentUser.username)), /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    label: _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.nameTitle', {
      defaultMessage: 'Name'
    }),
    helpText: _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.nameHelpText', {
      defaultMessage: 'What is this key used for?'
    }),
    isInvalid: isFormInvalid,
    error: formError
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFieldText, {
    "data-test-subj": "apmCreateAgentKeyFlyoutFieldText",
    name: "name",
    placeholder: _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.namePlaceholder', {
      defaultMessage: 'e.g. apm-key'
    }),
    onChange: e => setAgentKeyBody(state => ({
      ...state,
      name: e.target.value
    })),
    isInvalid: isFormInvalid,
    onBlur: () => setFormTouched(true)
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiFormFieldset, {
    legend: {
      children: _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.privilegesFieldset', {
        defaultMessage: 'Assign privileges'
      })
    }
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    helpText: _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.agentConfigHelpText', {
      defaultMessage: 'Required for agents to read agent configuration remotely.'
    })
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiCheckbox, {
    id: (0, _eui.htmlIdGenerator)()(),
    label: "config_agent:read",
    checked: agentConfig,
    onChange: () => setAgentKeyBody(state => ({
      ...state,
      agentConfig: !state.agentConfig
    }))
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    helpText: _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.ingestAgentEvents', {
      defaultMessage: 'Required for ingesting events.'
    })
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiCheckbox, {
    id: (0, _eui.htmlIdGenerator)()(),
    label: "event:write",
    checked: event,
    onChange: () => setAgentKeyBody(state => ({
      ...state,
      event: !state.event
    }))
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  })))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlyoutFooter, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    justifyContent: "spaceBetween"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, {
    "data-test-subj": "apmCreateAgentKeyFlyoutCancelButton",
    onClick: onCancel
  }, _i18n.i18n.translate('xpack.apm.settings.agentKeys.createKeyFlyout.cancelButton', {
    defaultMessage: 'Cancel'
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
    "data-test-subj": "apmCreateAgentKeyFlyoutButton",
    fill: true,
    onClick: createAgentKey,
    type: "submit",
    disabled: isFormInvalid
  }, createAgentKeyTitle)))));
}