"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GeoMap = GeoMap;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _embedded_map = require("./embedded_map");
var _constants = require("../../../../../../common/mobile/constants");
var _embedded_map_select = require("./embedded_map_select");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function GeoMap({
  start,
  end,
  kuery,
  filters,
  dataView
}) {
  const [selectedMap, selectMap] = (0, _react.useState)(_constants.MapTypes.Http);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_embedded_map_select.EmbeddedMapSelect, {
    selectedMap: selectedMap,
    onChange: selectMap
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement("div", {
    style: {
      height: 500
    }
  }, /*#__PURE__*/_react.default.createElement(_embedded_map.EmbeddedMap, {
    selectedMap: selectedMap,
    start: start,
    end: end,
    kuery: kuery,
    filters: filters,
    dataView: dataView
  })));
}