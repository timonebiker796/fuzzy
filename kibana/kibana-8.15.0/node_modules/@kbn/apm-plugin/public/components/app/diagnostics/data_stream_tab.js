"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DiagnosticsDataStreams = DiagnosticsDataStreams;
exports.getIndexTemplateState = getIndexTemplateState;
var _eui = require("@elastic/eui");
var _react = _interopRequireDefault(require("react"));
var _use_diagnostics = require("./context/use_diagnostics");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function DiagnosticsDataStreams() {
  const {
    diagnosticsBundle
  } = (0, _use_diagnostics.useDiagnosticsContext)();
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiText, null, "This section shows the APM data streams and their underlying index template."), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, null), /*#__PURE__*/_react.default.createElement(DataStreamsTable, {
    data: diagnosticsBundle
  }));
}
function DataStreamsTable({
  data
}) {
  var _data$dataStreams;
  const columns = [{
    field: 'name',
    name: 'Data stream name'
  }, {
    field: 'template',
    name: 'Index template name',
    render: templateName => {
      const indexTemplate = data && getIndexTemplateState(data, templateName);
      return indexTemplate !== null && indexTemplate !== void 0 && indexTemplate.exists && !(indexTemplate !== null && indexTemplate !== void 0 && indexTemplate.isNonStandard) ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, templateName, "\xA0", /*#__PURE__*/_react.default.createElement(_eui.EuiBadge, {
        color: "green"
      }, "OK")) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, templateName, "\xA0", /*#__PURE__*/_react.default.createElement(_eui.EuiBadge, {
        color: "warning"
      }, "Non-standard"));
    }
  }];
  return /*#__PURE__*/_react.default.createElement(_eui.EuiBasicTable, {
    items: (_data$dataStreams = data === null || data === void 0 ? void 0 : data.dataStreams) !== null && _data$dataStreams !== void 0 ? _data$dataStreams : [],
    rowHeader: "firstName",
    columns: columns
  });
}
function getIndexTemplateState(diagnosticsBundle, templateName) {
  return diagnosticsBundle.apmIndexTemplates.find(({
    name
  }) => templateName === name);
}