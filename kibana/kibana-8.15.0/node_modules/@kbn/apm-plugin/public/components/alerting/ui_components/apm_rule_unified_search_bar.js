"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ApmRuleUnifiedSearchBar = ApmRuleUnifiedSearchBar;
var _react = _interopRequireDefault(require("react"));
var _i18n = require("@kbn/i18n");
var _public = require("@kbn/kibana-react-plugin/public");
var _use_adhoc_apm_data_view = require("../../../hooks/use_adhoc_apm_data_view");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function ApmRuleUnifiedSearchBar({
  placeholder,
  ruleParams,
  setRuleParams
}) {
  var _ruleParams$searchCon;
  const {
    services
  } = (0, _public.useKibana)();
  const {
    unifiedSearch: {
      ui: {
        SearchBar
      }
    }
  } = services;
  const {
    dataView
  } = (0, _use_adhoc_apm_data_view.useAdHocApmDataView)();
  const searchbarPlaceholder = 'Search for APM dataâ€¦ (e.g. service.name: service-1)';
  const handleSubmit = payload => {
    const {
      query
    } = payload;
    setRuleParams('searchConfiguration', {
      query
    });
  };
  return /*#__PURE__*/_react.default.createElement(SearchBar, {
    appName: _i18n.i18n.translate('xpack.apm.appName', {
      defaultMessage: 'APM'
    }),
    iconType: "search",
    placeholder: placeholder || searchbarPlaceholder,
    indexPatterns: dataView ? [dataView] : undefined,
    showQueryInput: true,
    showQueryMenu: false,
    showFilterBar: false,
    showDatePicker: false,
    showSubmitButton: false,
    displayStyle: "inPage",
    onQueryChange: handleSubmit,
    onQuerySubmit: handleSubmit,
    dataTestSubj: "apmRuleUnifiedSearchBar",
    query: (_ruleParams$searchCon = ruleParams.searchConfiguration) === null || _ruleParams$searchCon === void 0 ? void 0 : _ruleParams$searchCon.query
  });
}