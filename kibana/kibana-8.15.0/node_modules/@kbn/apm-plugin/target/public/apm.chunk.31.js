/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.apm_bundle_jsonpfunction=window.apm_bundle_jsonpfunction||[]).push([[31],{72:function(e,r,s){"use strict";s.r(r),s.d(r,"APMLocatorPayloadValidator",(function(){return c})),s.d(r,"getPathForServiceDetail",(function(){return v}));var i=s(35),a=s(102),n=s(191),t=s(187),o=s(580);const c=i.union([i.type({serviceName:i[void 0]}),i.intersection([i.type({serviceName:i.string}),i.type({dashboardId:i.string}),i.type({query:t.a})]),i.intersection([i.type({serviceName:i.string}),i.partial({dashboardId:i[void 0]}),i.partial({serviceOverviewTab:i.keyof({traces:null,metrics:null,logs:null,errors:null,transactions:null})}),i.type({query:i.intersection([t.a,i.partial({kuery:i.string,rangeFrom:i.string,rangeTo:i.string})])})])]);function v(e,{from:r,to:s,isComparisonEnabledByDefault:i,defaultEnvironment:t}){const v=c.decode(e);if(!Object(a.isRight)(v))throw new Error(n.PathReporter.report(v).join("\n"));const d={kuery:"",serviceGroup:"",comparisonEnabled:i,rangeFrom:r,rangeTo:s,environment:t};if(!e.serviceName)return o.a.link("/services",{query:d});let u;if(void 0!==e.dashboardId){const r="/services/{serviceName}/dashboards";return u=o.a.link(r,{path:{serviceName:e.serviceName},query:{...d,...e.query,dashboardId:e.dashboardId}}),u}{const r={logs:"/services/{serviceName}/logs",metrics:"/services/{serviceName}/metrics",traces:"/services/{serviceName}/transactions",transactions:"/services/{serviceName}/transactions/view",errors:"/services/{serviceName}/errors",default:"/services/{serviceName}/overview"}[e.serviceOverviewTab||"default"],s={...d,...e.query};u=o.a.link(r,{path:{serviceName:e.serviceName},query:s})}return u}}}]);