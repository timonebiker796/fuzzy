/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.apm_bundle_jsonpfunction=window.apm_bundle_jsonpfunction||[]).push([[26],{1256:function(e,a,t){"use strict";t.r(a),t.d(a,"loadFieldStats",(function(){return _}));var s=t(12),n=t(51),o=t.n(n),i=t(1257),r=t(207),l=t(208);function u({dataViewPattern:e,timeFieldName:a,fromDate:t,toDate:s,dslQuery:n,runtimeMappings:o,aggs:i,fields:r,size:l}){const u=a?[{range:{[a]:{gte:t,lte:s,format:"strict_date_optional_time"}}},n]:[n];return 1===(null==r?void 0:r.length)&&u.push({exists:r[0]}),{index:e,body:{query:{bool:{filter:u}},aggs:i,fields:r,runtime_mappings:o,_source:(null==r||!r.length)&&void 0},track_total_hits:!0,size:null!=l?l:0}}async function m(e,a,t=!0){const s=g(a),n={min_value:{min:{field:a.name}},max_value:{max:{field:a.name}},sample_count:{value_count:{...s}}},o={sample:{sampler:{shard_size:l.d},aggs:{...n}}},i={sample:{sampler:{shard_size:l.d},aggs:{...n,top_values:{terms:{...s,size:l.b}}}}},r=await e({aggs:t?i:o}),u=r.aggregations.sample.min_value.value,m=r.aggregations.sample.max_value.value,c="top_values"in r.aggregations.sample?r.aggregations.sample.top_values:{buckets:[],sum_other_doc_count:0},_={buckets:c.buckets.map((e=>({count:e.doc_count,key:e.key})))};let f=(m-u)/10;if(Number.isInteger(u)&&Number.isInteger(m)&&(f=Math.ceil(f)),0===f)return{totalDocuments:d(r),sampledValues:p(_,c.sum_other_doc_count)||r.aggregations.sample.sample_count.value,sampledDocuments:r.aggregations.sample.doc_count,topValues:_,histogram:t?{buckets:[]}:{buckets:[{count:r.aggregations.sample.doc_count,key:u}]}};const h={sample:{sampler:{shard_size:l.d},aggs:{histo:{histogram:{field:a.name,interval:f}}}}},v=await e({aggs:h});return{totalDocuments:d(r),sampledDocuments:r.aggregations.sample.doc_count,sampledValues:p(_,c.sum_other_doc_count)||r.aggregations.sample.sample_count.value,histogram:{buckets:v.aggregations.sample.histo.buckets.map((e=>({count:e.doc_count,key:e.key})))},topValues:_}}async function c(e,a,t,s){try{const n=g(a),o={size:l.e,fields:[n]},r=await e(o),u=Object(i.a)({values:Object(i.b)(r.hits.hits,a,t),field:a,count:l.a,isTextBased:!1},s);return{totalDocuments:d(r),sampledDocuments:u.sampledDocuments,sampledValues:u.sampledValues,topValues:{buckets:u.buckets,areExamples:!0}}}catch(e){return console.error(e),{}}}function g(e){return e.scripted?{script:{lang:e.lang,source:e.script}}:{field:e.name}}const d=e=>{var a,t;return null!==(a=null!==(t=e.hits.total.value)&&void 0!==t?t:e.hits.total)&&void 0!==a?a:0};function p(e,a){var t;return((null==e||null===(t=e.buckets)||void 0===t?void 0:t.reduce(((e,a)=>a.count+e),0))||0)+(a||0)}const _=async({services:e,dataView:a,field:t,fromDate:n,toDate:i,dslQuery:_,size:f,abortController:h})=>{const{data:v}=e;try{if(null==a||!a.id||null==t||!t.type)return{};const e=async e=>(await Object(s.lastValueFrom)(v.search.search({params:u({dataViewPattern:a.title,timeFieldName:a.timeFieldName,fromDate:n,toDate:i,dslQuery:_,runtimeMappings:a.getRuntimeMappings(),...e})},{abortSignal:null==h?void 0:h.signal}))).rawResponse;return await async function({searchHandler:e,dataView:a,field:t,fromDate:s,toDate:n,size:i}){return t.aggregatable?"geo_point"===t.type||"geo_shape"===t.type?await async function(e,a,t){try{const s=t.getFormatterForField(a);return await c(e,a,t,s)}catch(e){return console.error(e),{}}}(e,t,a):Object(r.a)(t,!1)?"histogram"===t.type?await m(e,t,!1):Object(r.c)(t,!1)?await async function(e,a){const t={sample:{sampler:{shard_size:l.d},aggs:{min_max_summary:{filter:{exists:{field:a.name}},aggs:{min:{min:{field:a.name}},max:{max:{field:a.name}}}}}}},s=await e({aggs:t}),n=s.aggregations.sample.min_max_summary.min.value,o=s.aggregations.sample.min_max_summary.max.value,i=s.aggregations.sample.doc_count;return{totalDocuments:d(s),sampledDocuments:i,sampledValues:i,numberSummary:{minValue:n,maxValue:o}}}(e,t):"number"===t.type?await m(e,t):"date"===t.type?await async function(e,a,t){const s=o.a.parse(t.fromDate),n=o.a.parse(t.toDate);if(!s)throw Error("Invalid fromDate value");if(!n)throw Error("Invalid toDate value");const i=Math.round((n.valueOf()-s.valueOf())/10);if(i<1)return{totalDocuments:0,histogram:{buckets:[]}};const r=`${i}ms`,l={histo:{date_histogram:{...g(a),fixed_interval:r}}},u=await e({aggs:l});return{totalDocuments:d(u),histogram:{buckets:u.aggregations.histo.buckets.map((e=>({count:e.doc_count,key:e.key})))}}}(e,t,{fromDate:s,toDate:n}):await async function(e,a,t=l.b){const s=g(a),n={sample:{sampler:{shard_size:l.d},aggs:{sample_count:{value_count:{...s}},top_values:{terms:{...s,size:t,shard_size:t<=10?25:void 0}}}}},o=await e({aggs:n}),i={buckets:o.aggregations.sample.top_values.buckets.map((e=>({count:e.doc_count,key:e.key})))};return{totalDocuments:d(o),sampledDocuments:o.aggregations.sample.doc_count,sampledValues:p(i,o.aggregations.sample.top_values.sum_other_doc_count)||o.aggregations.sample.sample_count.value,topValues:i}}(e,t,i):{}:Object(r.b)(t,!1)?await c(e,t,a):{}}({searchHandler:e,dataView:a,field:t,fromDate:n,toDate:i,size:f})}catch(e){throw new Error("Could not provide field stats",{cause:e})}}}}]);