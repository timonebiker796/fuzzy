"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ExportContent = void 0;
var _react = _interopRequireWildcard(require("react"));
var _i18nReact = require("@kbn/i18n-react");
var _eui = require("@elastic/eui");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const ExportContentUi = ({
  isDirty,
  aggregateReportTypes,
  intl,
  onClose,
  publicAPIEnabled
}) => {
  const [isCreatingExport, setIsCreatingExport] = (0, _react.useState)(false);
  const [usePrintLayout, setPrintLayout] = (0, _react.useState)(false);
  const radioOptions = (0, _react.useMemo)(() => {
    return aggregateReportTypes.filter(({
      reportType
    }) => reportType).map(({
      reportType,
      label
    }) => {
      return {
        id: reportType,
        label,
        'data-test-subj': `${reportType}-radioOption`
      };
    });
  }, [aggregateReportTypes]);
  const [selectedRadio, setSelectedRadio] = (0, _react.useState)(radioOptions[0].id);
  const {
    generateExportButton,
    helpText,
    renderCopyURLButton,
    generateExport,
    absoluteUrl,
    renderLayoutOptionSwitch
  } = (0, _react.useMemo)(() => {
    return aggregateReportTypes === null || aggregateReportTypes === void 0 ? void 0 : aggregateReportTypes.find(({
      reportType
    }) => reportType === selectedRadio);
  }, [selectedRadio, aggregateReportTypes]);
  const handlePrintLayoutChange = (0, _react.useCallback)(evt => {
    setPrintLayout(evt.target.checked);
  }, [setPrintLayout]);
  const getReport = (0, _react.useCallback)(async () => {
    try {
      setIsCreatingExport(true);
      await generateExport({
        intl,
        optimizedForPrinting: usePrintLayout
      });
    } finally {
      setIsCreatingExport(false);
      onClose === null || onClose === void 0 ? void 0 : onClose();
    }
  }, [generateExport, intl, usePrintLayout, onClose]);
  const renderLayoutOptionsSwitch = (0, _react.useCallback)(() => {
    if (renderLayoutOptionSwitch) {
      return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
        alignItems: "center",
        gutterSize: "xs",
        responsive: false
      }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
        grow: false
      }, /*#__PURE__*/_react.default.createElement(_eui.EuiSwitch, {
        label: /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
          size: "s",
          css: {
            textWrap: 'nowrap'
          }
        }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
          id: "share.screenCapturePanelContent.optimizeForPrintingLabel",
          defaultMessage: "For printing"
        })),
        checked: usePrintLayout,
        onChange: handlePrintLayoutChange,
        "data-test-subj": "usePrintLayout"
      })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
        grow: false
      }, /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
        content: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
          id: "share.screenCapturePanelContent.optimizeForPrintingHelpText",
          defaultMessage: "Uses multiple pages, showing at most 2 visualizations per page "
        })
      }, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
        type: "questionInCircle"
      }))));
    }
  }, [usePrintLayout, renderLayoutOptionSwitch, handlePrintLayoutChange]);
  const showCopyURLButton = (0, _react.useCallback)(() => {
    if (renderCopyURLButton && publicAPIEnabled) return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
      alignItems: "center",
      gutterSize: "xs",
      responsive: false,
      css: {
        flexGrow: 0
      }
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
      grow: false
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiCopy, {
      textToCopy: absoluteUrl !== null && absoluteUrl !== void 0 ? absoluteUrl : ''
    }, copy => /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, {
      iconType: "copyClipboard",
      onClick: copy,
      "data-test-subj": "shareReportingCopyURL",
      "data-share-url": absoluteUrl
    }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "share.modalContent.copyUrlButtonLabel",
      defaultMessage: "Copy Post URL"
    })))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
      grow: false
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
      content: /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
        size: "s"
      }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "share.postURLWatcherMessage",
        defaultMessage: "Copy this POST URL to call generation from outside Kibana or from Watcher."
      }))
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
      type: "questionInCircle"
    }))));
  }, [absoluteUrl, renderCopyURLButton, publicAPIEnabled]);
  const renderGenerateReportButton = (0, _react.useCallback)(() => {
    return /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
      fill: true,
      color: isDirty ? 'warning' : 'primary',
      onClick: getReport,
      "data-test-subj": "generateReportButton",
      isLoading: isCreatingExport
    }, generateExportButton);
  }, [generateExportButton, getReport, isCreatingExport, isDirty]);
  const renderRadioOptions = () => {
    if (radioOptions.length > 1) {
      return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
        direction: "row",
        justifyContent: 'spaceBetween'
      }, /*#__PURE__*/_react.default.createElement(_eui.EuiRadioGroup, {
        options: radioOptions,
        onChange: id => setSelectedRadio(id),
        name: "image reporting radio group",
        idSelected: selectedRadio,
        legend: {
          children: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
            id: "share.fileType",
            defaultMessage: "File type"
          })
        }
      }));
    }
  };
  const renderHelpText = () => {
    const showHelpText = publicAPIEnabled && isDirty;
    return showHelpText && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
      size: "s"
    }), /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
      color: "warning",
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "share.link.warning.title",
        defaultMessage: "Unsaved changes"
      })
    }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "share.postURLWatcherMessage.unsavedChanges",
      defaultMessage: "URL may change if you upgrade Kibana."
    })));
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiForm, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "l"
  }), /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, helpText), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, renderRadioOptions()), renderHelpText(), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "xl"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    justifyContent: "flexEnd",
    responsive: false,
    gutterSize: "m"
  }, /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, renderLayoutOptionsSwitch()), /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, showCopyURLButton()), /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, renderGenerateReportButton())));
};
const ExportContent = exports.ExportContent = (0, _i18nReact.injectI18n)(ExportContentUi);