"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CreateApiKeyForm = void 0;
var _eui = require("@elastic/eui");
var _reactHookForm = _interopRequireWildcard(require("react-hook-form"));
var _i18n = require("@kbn/i18n");
var _i18nReact = require("@kbn/i18n-react");
var _use_create_api_key_query = require("../../hooks/use_create_api_key_query");
var _use_kibana = require("../../hooks/use_kibana");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */
var ApiKeyFormFields = /*#__PURE__*/function (ApiKeyFormFields) {
  ApiKeyFormFields["Name"] = "name";
  ApiKeyFormFields["ExpireInDays"] = "expiresInDays";
  return ApiKeyFormFields;
}(ApiKeyFormFields || {});
const CreateApiKeyForm = () => {
  const {
    http
  } = (0, _use_kibana.useKibana)().services;
  const managementApiKeysLinks = http.basePath.prepend('/app/management/security/api_keys');
  const {
    control,
    getValues,
    reset,
    formState: {
      isDirty,
      isValid
    },
    handleSubmit
  } = (0, _reactHookForm.useForm)();
  const {
    action,
    isLoading,
    isSuccess,
    isError
  } = (0, _use_create_api_key_query.useCreateApiKeyQuery)();
  const onSubmit = async data => {
    await action(data);
    reset(getValues());
  };
  return /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiForm, null, /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiFormRow, {
    fullWidth: true,
    label: _i18n.i18n.translate('xpack.searchPlayground.viewCode.apiForm.name.label', {
      defaultMessage: 'Name'
    })
  }, /*#__PURE__*/_reactHookForm.default.createElement(_reactHookForm.Controller, {
    name: ApiKeyFormFields.Name,
    control: control,
    defaultValue: "",
    rules: {
      required: true
    },
    render: ({
      field
    }) => /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiFieldText, {
      fullWidth: true,
      placeholder: _i18n.i18n.translate('xpack.searchPlayground.viewCode.apiForm.name.placeholder', {
        defaultMessage: 'Enter a name for your API key'
      }),
      value: field.value,
      onChange: field.onChange
    })
  })), /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiFormRow, {
    fullWidth: true,
    label: "Lifetime"
  }, /*#__PURE__*/_reactHookForm.default.createElement(_reactHookForm.Controller, {
    name: ApiKeyFormFields.ExpireInDays,
    control: control,
    rules: {
      min: 0,
      required: true
    },
    render: ({
      field
    }) => /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiFormControlLayout, {
      fullWidth: true,
      append: /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiText, {
        size: "xs"
      }, /*#__PURE__*/_reactHookForm.default.createElement("strong", null, /*#__PURE__*/_reactHookForm.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.searchPlayground.viewCode.apiForm.expire.days",
        defaultMessage: "Days"
      })))
    }, /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiFieldText, {
      fullWidth: true,
      type: "number",
      placeholder: _i18n.i18n.translate('xpack.searchPlayground.viewCode.apiForm.expire.placeholder', {
        defaultMessage: 'Set expiry in days'
      }),
      value: field.value || '',
      onChange: field.onChange
    }))
  })), /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiFormRow, {
    fullWidth: true
  }, /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "m"
  }, isSuccess && !isDirty ? /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiButton, {
    color: "success",
    iconType: "check"
  }, /*#__PURE__*/_reactHookForm.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.searchPlayground.viewCode.apiForm.createdButton",
    defaultMessage: "Created"
  })) : /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiButton, {
    isDisabled: !isValid || isLoading,
    isLoading: isLoading,
    onClick: handleSubmit(onSubmit),
    color: isError ? 'danger' : 'primary'
  }, /*#__PURE__*/_reactHookForm.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.searchPlayground.viewCode.apiForm.createButton",
    defaultMessage: "Create API key"
  })), /*#__PURE__*/_reactHookForm.default.createElement(_eui.EuiButtonEmpty, {
    iconSide: "left",
    iconType: "popout",
    href: managementApiKeysLinks,
    target: "_blank"
  }, /*#__PURE__*/_reactHookForm.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.searchPlayground.viewCode.apiForm.viewKeysButton",
    defaultMessage: "View all API keys"
  })))));
};
exports.CreateApiKeyForm = CreateApiKeyForm;