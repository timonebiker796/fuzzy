"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ViewMode = exports.App = void 0;
var _react = _interopRequireWildcard(require("react"));
var _sharedUxPageKibanaTemplate = require("@kbn/shared-ux-page-kibana-template");
var _reactHookForm = require("react-hook-form");
var _query_mode = require("./query_mode/query_mode");
var _setup_page = require("./setup_page/setup_page");
var _header = require("./header");
var _use_load_connectors = require("../hooks/use_load_connectors");
var _types = require("../types");
var _chat = require("./chat");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */
let ViewMode = exports.ViewMode = /*#__PURE__*/function (ViewMode) {
  ViewMode["chat"] = "chat";
  ViewMode["query"] = "query";
  return ViewMode;
}({});
const App = ({
  showDocs = false
}) => {
  const [showSetupPage, setShowSetupPage] = (0, _react.useState)(true);
  const [selectedMode, setSelectedMode] = (0, _react.useState)(ViewMode.chat);
  const {
    data: connectors
  } = (0, _use_load_connectors.useLoadConnectors)();
  const hasSelectedIndices = (0, _reactHookForm.useWatch)({
    name: _types.ChatFormFields.indices
  }).length;
  const handleModeChange = id => setSelectedMode(id);
  (0, _react.useEffect)(() => {
    if (showSetupPage && connectors !== null && connectors !== void 0 && connectors.length && hasSelectedIndices) {
      setShowSetupPage(false);
    } else if (!showSetupPage && (!(connectors !== null && connectors !== void 0 && connectors.length) || !hasSelectedIndices)) {
      setShowSetupPage(true);
    }
  }, [connectors, hasSelectedIndices, showSetupPage]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_header.Header, {
    showDocs: showDocs,
    onModeChange: handleModeChange,
    selectedMode: selectedMode,
    isActionsDisabled: showSetupPage
  }), /*#__PURE__*/_react.default.createElement(_sharedUxPageKibanaTemplate.KibanaPageTemplate.Section, {
    alignment: "top",
    restrictWidth: false,
    grow: true,
    css: {
      position: 'relative'
    },
    contentProps: {
      css: {
        display: 'flex',
        flexGrow: 1,
        position: 'absolute',
        inset: 0
      }
    },
    paddingSize: "none",
    className: "eui-fullHeight"
  }, showSetupPage ? /*#__PURE__*/_react.default.createElement(_setup_page.SetupPage, null) : selectedMode === ViewMode.chat ? /*#__PURE__*/_react.default.createElement(_chat.Chat, null) : /*#__PURE__*/_react.default.createElement(_query_mode.QueryMode, null)));
};
exports.App = App;