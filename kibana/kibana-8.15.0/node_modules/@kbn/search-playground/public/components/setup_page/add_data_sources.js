"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddDataSources = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactHookForm = require("react-hook-form");
var _i18nReact = require("@kbn/i18n-react");
var _eui = require("@elastic/eui");
var _types = require("../../types");
var _select_indices_flyout = require("../select_indices_flyout");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const AddDataSources = () => {
  var _getValues;
  const [showFlyout, setShowFlyout] = (0, _react.useState)(false);
  const {
    getValues
  } = (0, _reactHookForm.useFormContext)();
  const hasSelectedIndices = !!((_getValues = getValues(_types.ChatFormFields.indices)) !== null && _getValues !== void 0 && _getValues.length);
  const handleFlyoutClose = () => {
    setShowFlyout(false);
  };
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, showFlyout && /*#__PURE__*/_react.default.createElement(_select_indices_flyout.SelectIndicesFlyout, {
    onClose: handleFlyoutClose
  }), hasSelectedIndices ? /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, {
    iconType: "check",
    color: "success",
    onClick: () => setShowFlyout(true),
    "data-test-subj": "dataSourcesSuccessButton"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.searchPlayground.setupPage.addedDataSourcesLabel",
    defaultMessage: "Data sources added"
  })) : /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
    fill: true,
    iconType: "plusInCircle",
    onClick: () => setShowFlyout(true),
    "data-test-subj": "addDataSourcesButton"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.searchPlayground.setupPage.addDataSourcesLabel",
    defaultMessage: "Add data sources"
  })));
};
exports.AddDataSources = AddDataSources;