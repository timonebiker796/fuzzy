/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */!function(t){var n={};function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{enumerable:!0,get:i})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,n){if(1&n&&(t=e(t)),8&n)return t;if(4&n&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(e.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&n&&"string"!=typeof t)for(var r in t)e.d(i,r,function(n){return t[n]}.bind(null,r));return i},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,n){return Object.prototype.hasOwnProperty.call(t,n)},e.p="",e(e.s=1)}([function(t,n,e){t.exports=e(3)(2)},function(t,n,e){e(2),__kbnBundles__.define("plugin/entityManager/public",e,4)},function(t,n,e){e.p=window.__kbnPublicPath__.entityManager},function(t,n){t.exports=__kbnSharedDeps_npm__},function(t,n,e){"use strict";e.r(n),e.d(n,"plugin",(function(){return u}));var i=e(0),r=e.n(i);const o="/internal/api/entities/managed/enablement";class entity_client_EntityClient{constructor(t){this.http=t}async isManagedEntityDiscoveryEnabled(){return await this.http.get(o)}async enableManagedEntityDiscovery(){return await this.http.put(o)}async disableManagedEntityDiscovery(){return await this.http.delete(o)}}class plugin_Plugin{constructor(t){r()(this,"config",void 0),r()(this,"logger",void 0),this.config=t.config.get(),this.logger=t.logger.get()}setup(t){return{entityClient:new entity_client_EntityClient(t.http)}}start(t){return{entityClient:new entity_client_EntityClient(t.http)}}stop(){}}const u=t=>new plugin_Plugin(t)}]);