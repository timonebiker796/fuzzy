"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AccessDeniedPage = void 0;
var _react = _interopRequireWildcard(require("react"));
var _i18n = require("@kbn/i18n");
var _i18nReact = require("@kbn/i18n-react");
var _eui = require("@elastic/eui");
var _useInterval = _interopRequireDefault(require("react-use/lib/useInterval"));
var _reactRouterDom = require("react-router-dom");
var _public = require("@kbn/kibana-react-plugin/public");
var _external_config_context = require("../../contexts/external_config_context");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const AccessDeniedPage = () => {
  const {
    isCcsEnabled
  } = (0, _react.useContext)(_external_config_context.ExternalConfigContext);
  const {
    services
  } = (0, _public.useKibana)();
  const [hasAccess, setHasAccess] = (0, _react.useState)(false);
  (0, _useInterval.default)(() => {
    async function tryPrivilege() {
      var _services$http;
      if ((_services$http = services.http) !== null && _services$http !== void 0 && _services$http.fetch) {
        try {
          var _services$http2;
          const response = await ((_services$http2 = services.http) === null || _services$http2 === void 0 ? void 0 : _services$http2.fetch('../api/monitoring/v1/check_access'));
          setHasAccess(response.has_access);
        } catch (e) {
          setHasAccess(false);
        }
      }
    }
    tryPrivilege();
  }, 5000);
  const title = _i18n.i18n.translate('xpack.monitoring.accessDeniedTitle', {
    defaultMessage: 'Access Denied'
  });
  if (hasAccess) {
    return /*#__PURE__*/_react.default.createElement(_reactRouterDom.Redirect, {
      to: "/home"
    });
  }
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, {
    paddingSize: "m"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
    title: title,
    color: "danger",
    iconType: "warning",
    "data-test-subj": "accessDeniedTitle"
  }, /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.monitoring.accessDenied.notAuthorizedDescription",
    defaultMessage: "You are not authorized to access Monitoring. To use Monitoring, you need the privileges granted by both the `{kibanaAdmin}` and `{monitoringUser}` roles.",
    values: {
      kibanaAdmin: 'kibana_admin',
      monitoringUser: 'monitoring_user '
    }
  })), /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.monitoring.accessDenied.clusterNotConfiguredDescription",
    defaultMessage: "If you are attempting to access a dedicated monitoring cluster, this might be because you are logged in as a user that is not configured on the monitoring cluster."
  })), isCcsEnabled && /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.monitoring.accessDenied.noRemoteClusterClientDescription",
    defaultMessage: "Since Cross Cluster Search is enabled (`monitoring.ui.ccs.enabled` is set to `true`), make sure your cluster has the `remote_cluster_client` role on at least one node."
  })), /*#__PURE__*/_react.default.createElement("p", null, /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
    href: "../app/home"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.monitoring.accessDenied.backToKibanaButtonLabel",
    defaultMessage: "Back to Kibana"
  })))));
};
exports.AccessDeniedPage = AccessDeniedPage;