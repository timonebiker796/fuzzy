"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerFeatures = registerFeatures;
var _server = require("@kbn/core/server");
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * If xpack.reporting.roles.enabled === true, register Reporting as a feature
 * that is controlled by user role names. Also, for Serverless register a
 * 'shell' Reporting Kibana feature.
 */
function registerFeatures({
  isServerless,
  features,
  deprecatedRoles,
  logger
}) {
  // Register a 'shell' feature specifically for Serverless. If granted, it will automatically provide access to
  // reporting capabilities in other features, such as Discover, Dashboards, and Visualizations. On its own, this
  // feature doesn't grant any additional privileges.
  if (isServerless) {
    features.registerKibanaFeature({
      id: 'reporting',
      name: _i18n.i18n.translate('xpack.reporting.features.reportingFeatureName', {
        defaultMessage: 'Reporting'
      }),
      category: _server.DEFAULT_APP_CATEGORIES.management,
      app: [],
      privileges: {
        all: {
          savedObject: {
            all: [],
            read: []
          },
          ui: []
        },
        // No read-only mode currently supported
        read: {
          disabled: true,
          savedObject: {
            all: [],
            read: []
          },
          ui: []
        }
      }
    });
  }
  if (deprecatedRoles !== false) {
    // refer to roles.allow configuration (deprecated path)
    const allowedRoles = ['superuser', ...(deprecatedRoles !== null && deprecatedRoles !== void 0 ? deprecatedRoles : [])];
    const privileges = allowedRoles.map(role => ({
      requiredClusterPrivileges: [],
      requiredRoles: [role],
      ui: []
    }));

    // self-register as an elasticsearch feature (deprecated)
    features.registerElasticsearchFeature({
      id: 'reporting',
      catalogue: ['reporting'],
      management: {
        insightsAndAlerting: ['reporting']
      },
      privileges
    });
  } else {
    logger.debug(`Reporting roles configuration is disabled. Please assign access to Reporting use Kibana feature controls for applications.`);
    // trigger application to register Reporting as a subfeature
    features.enableReportingUiCapabilities();
  }
}