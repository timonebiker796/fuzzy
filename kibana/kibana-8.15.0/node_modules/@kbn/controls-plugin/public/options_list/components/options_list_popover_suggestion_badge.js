"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OptionsListPopoverSuggestionBadge = void 0;
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _eui = require("@elastic/eui");
var _options_list_strings = require("./options_list_strings");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const OptionsListPopoverSuggestionBadge = ({
  documentCount
}) => {
  const {
    euiTheme
  } = (0, _eui.useEuiTheme)();
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
    content: _options_list_strings.OptionsListStrings.popover.getDocumentCountTooltip(documentCount),
    position: 'right'
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "xs",
    "aria-hidden": true,
    className: "eui-textNumber",
    color: euiTheme.colors.subduedText,
    "data-test-subj": "optionsList-document-count-badge",
    css: (0, _react2.css)`
            font-weight: ${euiTheme.font.weight.medium} !important;
          `
  }, `${documentCount.toLocaleString()}`)), /*#__PURE__*/_react.default.createElement(_eui.EuiScreenReaderOnly, null, /*#__PURE__*/_react.default.createElement("div", null, '" "', " ", _options_list_strings.OptionsListStrings.popover.getDocumentCountScreenReaderText(documentCount))));
};
exports.OptionsListPopoverSuggestionBadge = OptionsListPopoverSuggestionBadge;