"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  monaco: true,
  cssConf: true,
  cssLanguage: true,
  markdownConf: true,
  markdownLanguage: true,
  yamlConf: true,
  yamlLanguage: true,
  XJsonLang: true,
  SQLLang: true,
  ESQL_LANG_ID: true,
  ESQL_THEME_ID: true,
  ESQLLang: true,
  BarePluginApi: true,
  YAML_LANG_ID: true,
  configureMonacoYamlSchema: true,
  registerLanguage: true,
  CONSOLE_LANG_ID: true,
  CONSOLE_OUTPUT_LANG_ID: true,
  CONSOLE_THEME_ID: true,
  getParsedRequestsProvider: true,
  ConsoleParsedRequestsProvider: true,
  CODE_EDITOR_LIGHT_THEME_ID: true,
  CODE_EDITOR_DARK_THEME_ID: true,
  CODE_EDITOR_LIGHT_THEME_TRANSPARENT_ID: true,
  CODE_EDITOR_DARK_THEME_TRANSPARENT_ID: true
};
exports.BarePluginApi = void 0;
Object.defineProperty(exports, "CODE_EDITOR_DARK_THEME_ID", {
  enumerable: true,
  get: function () {
    return _code_editor.CODE_EDITOR_DARK_THEME_ID;
  }
});
Object.defineProperty(exports, "CODE_EDITOR_DARK_THEME_TRANSPARENT_ID", {
  enumerable: true,
  get: function () {
    return _code_editor.CODE_EDITOR_DARK_THEME_TRANSPARENT_ID;
  }
});
Object.defineProperty(exports, "CODE_EDITOR_LIGHT_THEME_ID", {
  enumerable: true,
  get: function () {
    return _code_editor.CODE_EDITOR_LIGHT_THEME_ID;
  }
});
Object.defineProperty(exports, "CODE_EDITOR_LIGHT_THEME_TRANSPARENT_ID", {
  enumerable: true,
  get: function () {
    return _code_editor.CODE_EDITOR_LIGHT_THEME_TRANSPARENT_ID;
  }
});
Object.defineProperty(exports, "CONSOLE_LANG_ID", {
  enumerable: true,
  get: function () {
    return _console.CONSOLE_LANG_ID;
  }
});
Object.defineProperty(exports, "CONSOLE_OUTPUT_LANG_ID", {
  enumerable: true,
  get: function () {
    return _console.CONSOLE_OUTPUT_LANG_ID;
  }
});
Object.defineProperty(exports, "CONSOLE_THEME_ID", {
  enumerable: true,
  get: function () {
    return _console.CONSOLE_THEME_ID;
  }
});
Object.defineProperty(exports, "ConsoleParsedRequestsProvider", {
  enumerable: true,
  get: function () {
    return _console.ConsoleParsedRequestsProvider;
  }
});
Object.defineProperty(exports, "ESQLLang", {
  enumerable: true,
  get: function () {
    return _esql.ESQLLang;
  }
});
Object.defineProperty(exports, "ESQL_LANG_ID", {
  enumerable: true,
  get: function () {
    return _esql.ESQL_LANG_ID;
  }
});
Object.defineProperty(exports, "ESQL_THEME_ID", {
  enumerable: true,
  get: function () {
    return _esql.ESQL_THEME_ID;
  }
});
Object.defineProperty(exports, "SQLLang", {
  enumerable: true,
  get: function () {
    return _sql.SQLLang;
  }
});
Object.defineProperty(exports, "XJsonLang", {
  enumerable: true,
  get: function () {
    return _xjson.XJsonLang;
  }
});
Object.defineProperty(exports, "YAML_LANG_ID", {
  enumerable: true,
  get: function () {
    return _yaml.YAML_LANG_ID;
  }
});
Object.defineProperty(exports, "configureMonacoYamlSchema", {
  enumerable: true,
  get: function () {
    return _yaml.configureMonacoYamlSchema;
  }
});
Object.defineProperty(exports, "cssConf", {
  enumerable: true,
  get: function () {
    return _monaco_imports.cssConf;
  }
});
Object.defineProperty(exports, "cssLanguage", {
  enumerable: true,
  get: function () {
    return _monaco_imports.cssLanguage;
  }
});
Object.defineProperty(exports, "getParsedRequestsProvider", {
  enumerable: true,
  get: function () {
    return _console.getParsedRequestsProvider;
  }
});
Object.defineProperty(exports, "markdownConf", {
  enumerable: true,
  get: function () {
    return _monaco_imports.markdownConf;
  }
});
Object.defineProperty(exports, "markdownLanguage", {
  enumerable: true,
  get: function () {
    return _monaco_imports.markdownLanguage;
  }
});
Object.defineProperty(exports, "monaco", {
  enumerable: true,
  get: function () {
    return _monaco_imports.monaco;
  }
});
Object.defineProperty(exports, "registerLanguage", {
  enumerable: true,
  get: function () {
    return _helpers.registerLanguage;
  }
});
Object.defineProperty(exports, "yamlConf", {
  enumerable: true,
  get: function () {
    return _monaco_imports.yamlConf;
  }
});
Object.defineProperty(exports, "yamlLanguage", {
  enumerable: true,
  get: function () {
    return _monaco_imports.yamlLanguage;
  }
});
require("./src/register_globals");
var _monaco_imports = require("./src/monaco_imports");
var _xjson = require("./src/xjson");
var _sql = require("./src/sql");
var _esql = require("./src/esql");
var _painless = require("./src/painless");
Object.keys(_painless).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _painless[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _painless[key];
    }
  });
});
var BarePluginApi = _interopRequireWildcard(require("monaco-editor/esm/vs/editor/editor.api"));
exports.BarePluginApi = BarePluginApi;
var _yaml = require("./src/yaml");
var _helpers = require("./src/helpers");
var _types = require("./src/types");
Object.keys(_types).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _types[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _types[key];
    }
  });
});
var _console = require("./src/console");
var _code_editor = require("./src/code_editor");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }