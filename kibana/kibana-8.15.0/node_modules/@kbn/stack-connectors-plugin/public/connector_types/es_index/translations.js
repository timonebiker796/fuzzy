"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SHOW_TIME_FIELD_TOGGLE_TOOLTIP = exports.INDEX_LABEL = exports.INDEX_IS_NOT_VALID = exports.HISTORY_NOT_VALID = exports.EXECUTION_TIME_LABEL = exports.DOCUMENT_NOT_VALID = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const INDEX_IS_NOT_VALID = exports.INDEX_IS_NOT_VALID = _i18n.i18n.translate('xpack.stackConnectors.components.index.error.notValidIndexText', {
  defaultMessage: 'Index is not valid.'
});
const DOCUMENT_NOT_VALID = exports.DOCUMENT_NOT_VALID = _i18n.i18n.translate('xpack.stackConnectors.components.index.error.requiredDocumentJson', {
  defaultMessage: 'Document is required and should be a valid JSON object.'
});
const HISTORY_NOT_VALID = exports.HISTORY_NOT_VALID = _i18n.i18n.translate('xpack.stackConnectors.components.index.error.badIndexOverrideSuffix', {
  defaultMessage: 'Alert history index must contain valid suffix.'
});
const EXECUTION_TIME_LABEL = exports.EXECUTION_TIME_LABEL = _i18n.i18n.translate('xpack.stackConnectors.components.index.executionTimeFieldLabel', {
  defaultMessage: 'Time field'
});
const SHOW_TIME_FIELD_TOGGLE_TOOLTIP = exports.SHOW_TIME_FIELD_TOGGLE_TOOLTIP = _i18n.i18n.translate('xpack.stackConnectors.components.index.definedateFieldTooltip', {
  defaultMessage: `Set this time field to the time the document was indexed.`
});
const INDEX_LABEL = exports.INDEX_LABEL = _i18n.i18n.translate('xpack.stackConnectors.components.index.indicesToQueryLabel', {
  defaultMessage: 'Index'
});