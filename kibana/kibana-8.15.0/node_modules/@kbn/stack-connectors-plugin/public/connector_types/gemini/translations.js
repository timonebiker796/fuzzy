"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gemini = exports.USAGE_DASHBOARD_LINK = exports.URL_LABEL = exports.SECRET = exports.MODEL = exports.INVALID_ACTION = exports.GCP_REGION = exports.GCP_PROJECT_ID = exports.DOCUMENTATION = exports.DEFAULT_MODEL_LABEL = exports.CREDENTIALS_JSON = exports.BODY_REQUIRED = exports.BODY_INVALID = exports.BODY_DESCRIPTION = exports.BODY = exports.API_URL_LABEL = exports.ACTION_REQUIRED = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const API_URL_LABEL = exports.API_URL_LABEL = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.apiUrlTextFieldLabel', {
  defaultMessage: 'URL'
});
const GCP_REGION = exports.GCP_REGION = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.gcpRegion', {
  defaultMessage: 'GCP Region'
});
const GCP_PROJECT_ID = exports.GCP_PROJECT_ID = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.gcpProjectID', {
  defaultMessage: 'GCP Project ID'
});
const DEFAULT_MODEL_LABEL = exports.DEFAULT_MODEL_LABEL = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.defaultModelTextFieldLabel', {
  defaultMessage: 'Default model'
});
const SECRET = exports.SECRET = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.secret', {
  defaultMessage: 'Secret'
});
const CREDENTIALS_JSON = exports.CREDENTIALS_JSON = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.credentialsJSON', {
  defaultMessage: 'Credentials JSON'
});
const gemini = exports.gemini = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.title', {
  defaultMessage: 'Google Gemini'
});
const DOCUMENTATION = exports.DOCUMENTATION = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.documentation', {
  defaultMessage: 'documentation'
});
const URL_LABEL = exports.URL_LABEL = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.urlTextFieldLabel', {
  defaultMessage: 'URL'
});
const BODY_REQUIRED = exports.BODY_REQUIRED = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.error.requiredgeminiBodyText', {
  defaultMessage: 'Body is required.'
});
const BODY_INVALID = exports.BODY_INVALID = _i18n.i18n.translate('xpack.stackConnectors.security.gemini.params.error.invalidBodyText', {
  defaultMessage: 'Body does not have a valid JSON format.'
});
const ACTION_REQUIRED = exports.ACTION_REQUIRED = _i18n.i18n.translate('xpack.stackConnectors.security.gemini.params.error.requiredActionText', {
  defaultMessage: 'Action is required.'
});
const INVALID_ACTION = exports.INVALID_ACTION = _i18n.i18n.translate('xpack.stackConnectors.security.gemini.params.error.invalidActionText', {
  defaultMessage: 'Invalid action name.'
});
const BODY = exports.BODY = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.bodyFieldLabel', {
  defaultMessage: 'Body'
});
const BODY_DESCRIPTION = exports.BODY_DESCRIPTION = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.bodyCodeEditorAriaLabel', {
  defaultMessage: 'Code editor'
});
const MODEL = exports.MODEL = _i18n.i18n.translate('xpack.stackConnectors.components.gemini.model', {
  defaultMessage: 'Model'
});
const USAGE_DASHBOARD_LINK = (apiProvider, connectorName) => _i18n.i18n.translate('xpack.stackConnectors.components.gemini.dashboardLink', {
  values: {
    apiProvider,
    connectorName
  },
  defaultMessage: 'View {apiProvider} Usage Dashboard for "{ connectorName }" Connector'
});
exports.USAGE_DASHBOARD_LINK = USAGE_DASHBOARD_LINK;