/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.stackConnectors_bundle_jsonpfunction=window.stackConnectors_bundle_jsonpfunction||[]).push([[56],{56:function(e,n,t){"use strict";t.r(n),t.d(n,"API_URL_LABEL",(function(){return o})),t.d(n,"API_KEY_LABEL",(function(){return r})),t.d(n,"DEFAULT_MODEL_LABEL",(function(){return s})),t.d(n,"DEFAULT_MODEL_TOOLTIP_CONTENT",(function(){return i})),t.d(n,"API_PROVIDER_LABEL",(function(){return c})),t.d(n,"OPENAI",(function(){return u})),t.d(n,"AZURE_AI",(function(){return d})),t.d(n,"DOCUMENTATION",(function(){return l})),t.d(n,"URL_LABEL",(function(){return A})),t.d(n,"BODY_REQUIRED",(function(){return p})),t.d(n,"BODY_INVALID",(function(){return f})),t.d(n,"ACTION_REQUIRED",(function(){return k})),t.d(n,"INVALID_ACTION",(function(){return g})),t.d(n,"API_PROVIDER_REQUIRED",(function(){return I})),t.d(n,"USAGE_DASHBOARD_LINK",(function(){return L}));var a=t(0);const o=a.i18n.translate("xpack.stackConnectors.components.genAi.apiUrlTextFieldLabel",{defaultMessage:"URL"}),r=a.i18n.translate("xpack.stackConnectors.components.genAi.apiKeySecret",{defaultMessage:"API key"}),s=a.i18n.translate("xpack.stackConnectors.components.genAi.defaultModelTextFieldLabel",{defaultMessage:"Default model"}),i=a.i18n.translate("xpack.stackConnectors.components.genAi.defaultModelTooltipContent",{defaultMessage:"If a request does not include a model, it uses the default."}),c=a.i18n.translate("xpack.stackConnectors.components.genAi.apiProviderLabel",{defaultMessage:"Select an OpenAI provider"}),u=a.i18n.translate("xpack.stackConnectors.components.genAi.openAi",{defaultMessage:"OpenAI"}),d=a.i18n.translate("xpack.stackConnectors.components.genAi.azureAi",{defaultMessage:"Azure OpenAI"}),l=a.i18n.translate("xpack.stackConnectors.components.genAi.documentation",{defaultMessage:"documentation"}),A=a.i18n.translate("xpack.stackConnectors.components.genAi.urlTextFieldLabel",{defaultMessage:"URL"}),p=a.i18n.translate("xpack.stackConnectors.components.genAi.error.requiredGenerativeAiBodyText",{defaultMessage:"Body is required."}),f=a.i18n.translate("xpack.stackConnectors.security.genAi.params.error.invalidBodyText",{defaultMessage:"Body does not have a valid JSON format."}),k=a.i18n.translate("xpack.stackConnectors.security.genAi.params.error.requiredActionText",{defaultMessage:"Action is required."}),g=a.i18n.translate("xpack.stackConnectors.security.genAi.params.error.invalidActionText",{defaultMessage:"Invalid action name."}),I=a.i18n.translate("xpack.stackConnectors.components.genAi.error.requiredApiProviderText",{defaultMessage:"API provider is required."}),L=(e,n)=>a.i18n.translate("xpack.stackConnectors.components.genAi.dashboardLink",{values:{apiProvider:e,connectorName:n},defaultMessage:'View {apiProvider} Usage Dashboard for "{ connectorName }" Connector'})}}]);