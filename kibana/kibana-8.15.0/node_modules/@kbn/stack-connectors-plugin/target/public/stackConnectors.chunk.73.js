/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.stackConnectors_bundle_jsonpfunction=window.stackConnectors_bundle_jsonpfunction||[]).push([[73],{117:function(e,a,n){"use strict";n.r(a),n.d(a,"default",(function(){return d}));var t=n(1),s=n.n(t),l=n(3),c=n(0),o=n(36),i=n(34),u=n(2);const d=({actionConnector:e,actionParams:a,editAction:n,index:d,errors:r,messageVariables:b,defaultMessage:h,useDefaultMessage:g})=>{var m,k,j,p,x;const[v,C]=Object(t.useState)(),{subAction:O,subActionParams:f}=a,{channels:A=[],text:I,channelIds:M=[]}=null!=f?f:{},[S,B]=Object(t.useState)(A.length>0?A[0]:M.length>0&&M[0].length>0?M[0]:""),[E,P]=Object(t.useState)("text"),[w,T]=Object(t.useState)(I),[F,L]=Object(t.useState)(""),{toasts:V}=Object(l.useKibana)().notifications,$=null!==(m=null==e||null===(k=e.config)||void 0===k?void 0:k.allowedChannels)&&void 0!==m?m:[],[y,W]=Object(t.useState)((null!=M?M:[]).map((e=>{const a=null==$?void 0:$.find((a=>a.id===e));return{value:e,label:a?`${a.id} - ${a.name}`:e}}))),[_,z]=Object(t.useState)([]),{response:{channel:K}={},isLoading:D,error:R}=Object(l.useSubAction)({connectorId:null==e?void 0:e.id,subAction:"validChannelId",subActionParams:{channelId:F},disabled:0===F.length&&0===$.length}),J=Object(t.useCallback)((e=>{T(""),n("subAction","text"===e?"postMessage":"postBlockkit",d),P(e)}),[P,n,d,T]);Object(t.useEffect)((()=>{!g&&I||n("subActionParams",{channels:A,channelIds:M,text:h},d)}),[h,g]),Object(t.useEffect)((()=>{D||R||!K||F!==K.id||(n("subActionParams",{channels:void 0,channelIds:[K.id],text:I},d),L(""),z([]))}),[K,F,R,D,n,I,d]),Object(t.useEffect)((()=>{if(R&&F.length>0){n("subActionParams",{channels:void 0,channelIds:[],text:I},d);const e=c.i18n.translate("xpack.stackConnectors.slack.params.componentError.validChannelsRequestFailed",{defaultMessage:"{validChannelId} is not a valid Slack channel",values:{validChannelId:F}});z([e]),L(""),V.danger({title:e,body:R.message})}}),[V,R,F,n,I,d]),Object(t.useEffect)((()=>{O&&P("postMessage"===O?"text":"blockkit")}),[O]),Object(t.useEffect)((()=>{var a;v&&v!==(null==e?void 0:e.id)&&(n("subActionParams",{channels:void 0,channelIds:[],text:I},d),B(""),L(""),z([]),W([])),C(null!==(a=null==e?void 0:e.id)&&void 0!==a?a:"")}),[null==e?void 0:e.id]),O||n("subAction","postMessage",d),f||n("subActionParams",{channels:A,channelIds:M,text:I},d);const q=Object(t.useMemo)((()=>{var a,n;return A.length>0&&0===M.length?"channel-name":(null!==(a=null==e||null===(n=e.config)||void 0===n?void 0:n.allowedChannels)&&void 0!==a?a:[]).length>0?"channel-allowed-ids":"channel-id"}),[e,M.length,A.length]),G=Object(t.useMemo)((()=>{var a,n;return(null!==(a=null==e||null===(n=e.config)||void 0===n?void 0:n.allowedChannels)&&void 0!==a?a:[]).map((e=>({label:`${e.id} - ${e.name}`,value:e.id,"data-test-subj":e.id})))}),[e]),U=Object(t.useCallback)((e=>{const a=e.map((e=>e.value.toString()));W(e),n("subActionParams",{channels:void 0,channelIds:a,text:I},d)}),[n,d,I]),H=Object(t.useCallback)((()=>{""===S&&n("subActionParams",{channels:void 0,channelIds:[],text:I},d),L(S.trim())}),[n,d,S,I]),N=Object(t.useCallback)((e=>{n("subActionParams",{channels:void 0,channelIds:[],text:I},d),B(e.target.value)}),[n,d,I]),Q=Object(t.useMemo)((()=>"channel-name"===q||"channel-id"===q?Object(u.jsx)(i.EuiFieldText,{"data-test-subj":"slackApiChannelId",name:"slackApiChannelId",value:S,isLoading:D,onChange:N,onBlur:H,isInvalid:_.length>0,fullWidth:!0}):Object(u.jsx)(i.EuiComboBox,{noSuggestions:!1,"data-test-subj":"slackChannelsComboBox",options:G,selectedOptions:y,onChange:U,singleSelection:!0,fullWidth:!0})),[_.length,D,H,U,N,y,G,S,q]);return Object(u.jsx)(s.a.Fragment,null,Object(u.jsx)(i.EuiFormRow,{label:"channel-name"===q?c.i18n.translate("xpack.stackConnectors.slack.params.channelsComboBoxLabel",{defaultMessage:"Channel"}):c.i18n.translate("xpack.stackConnectors.slack.params.channelIdComboBoxLabel",{defaultMessage:"Channel ID"}),fullWidth:!0,error:_.length>0?_:r.channels,isInvalid:(null===(j=r.channels)||void 0===j?void 0:j.length)>0||_.length>0,helpText:M.length>0&&K?`${K.id} - ${K.name}`:""},Q),Object(u.jsx)(i.EuiSpacer,{size:"m"}),".slack_api"===(null==e?void 0:e.actionTypeId)&&Object(u.jsx)(i.EuiButtonGroup,{isFullWidth:!0,buttonSize:"m",color:"primary",legend:"",options:[{id:"text",label:c.i18n.translate("xpack.stackConnectors.slack.params.textLabel",{defaultMessage:"Text"})},{id:"blockkit",label:c.i18n.translate("xpack.stackConnectors.slack.params.blockkitLabel",{defaultMessage:"Block Kit"})}],idSelected:E,onChange:J,"data-test-subj":"slackMessageTypeChangeButton"}),Object(u.jsx)(i.EuiSpacer,{size:"m"}),"text"===E?Object(u.jsx)(l.TextAreaWithMessageVariables,{index:d,editAction:(e,a)=>{T(a),n("subActionParams",{channels:A,channelIds:M,text:a},d)},messageVariables:b,paramsProperty:"webApiText",inputTargetValue:w,label:c.i18n.translate("xpack.stackConnectors.components.slack.messageTextAreaFieldLabel",{defaultMessage:"Message"}),errors:null!==(p=r.text)&&void 0!==p?p:[]}):Object(u.jsx)(s.a.Fragment,null,Object(u.jsx)(l.JsonEditorWithMessageVariables,{onDocumentsChange:e=>{T(e),n("subActionParams",{channels:A,channelIds:M,text:e},d)},messageVariables:b,paramsProperty:"webApiBlock",inputTargetValue:w,label:c.i18n.translate("xpack.stackConnectors.components.slack.messageJsonAreaFieldLabel",{defaultMessage:"Block Kit"}),dataTestSubj:"webApiBlock",errors:null!==(x=r.text)&&void 0!==x?x:[]}),I&&Object(u.jsx)(s.a.Fragment,null,Object(u.jsx)(i.EuiSpacer,{size:"s"}),Object(u.jsx)(i.EuiLink,{target:"_blank",href:`https://app.slack.com/block-kit-builder/#${encodeURIComponent(I)}`,external:!0},Object(u.jsx)(o.FormattedMessage,{id:"xpack.stackConnectors.components.slack.viewInBlockkitBuilder",defaultMessage:"View in Slack Block Kit Builder"})))))}}}]);