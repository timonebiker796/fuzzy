/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.stackConnectors_bundle_jsonpfunction=window.stackConnectors_bundle_jsonpfunction||[]).push([[63],{62:function(e,n,t){"use strict";t.r(n),t.d(n,"API_URL_LABEL",(function(){return a})),t.d(n,"ORG_ID_LABEL",(function(){return o})),t.d(n,"API_KEY_ID_LABEL",(function(){return r})),t.d(n,"API_KEY_SECRET_LABEL",(function(){return i})),t.d(n,"NAME_REQUIRED",(function(){return c})),t.d(n,"INCIDENT_TYPES_API_ERROR",(function(){return u})),t.d(n,"SEVERITY_API_ERROR",(function(){return l}));var s=t(0);const a=s.i18n.translate("xpack.stackConnectors.components.resilient.apiUrlTextFieldLabel",{defaultMessage:"URL"}),o=s.i18n.translate("xpack.stackConnectors.components.resilient.orgId",{defaultMessage:"Organization ID"}),r=s.i18n.translate("xpack.stackConnectors.components.resilient.apiKeyId",{defaultMessage:"API key ID"}),i=s.i18n.translate("xpack.stackConnectors.components.resilient.apiKeySecret",{defaultMessage:"API key secret"}),c=s.i18n.translate("xpack.stackConnectors.components.resilient.requiredNameTextField",{defaultMessage:"Name is required."}),u=s.i18n.translate("xpack.stackConnectors.components.resilient.unableToGetIncidentTypesMessage",{defaultMessage:"Unable to get incident types"}),l=s.i18n.translate("xpack.stackConnectors.components.resilient.unableToGetSeverityMessage",{defaultMessage:"Unable to get severity"})}}]);