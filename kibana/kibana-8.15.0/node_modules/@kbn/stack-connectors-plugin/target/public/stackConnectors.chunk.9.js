/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.stackConnectors_bundle_jsonpfunction=window.stackConnectors_bundle_jsonpfunction||[]).push([[9,13,52],{101:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var o=n(1),a=n.n(o),i=n(3),r=n(35),s=n(80),c=n(53),d=n(70),l=n(2);const u=({readOnly:e,isEdit:t})=>{const[{id:n,name:o}]=Object(r.useFormData)();return Object(l.jsx)(a.a.Fragment,null,Object(l.jsx)(i.SimpleConnectorForm,{isEdit:t,readOnly:e,configFormSchema:d.b,secretsFormSchema:d.c}),t&&Object(l.jsx)(s.default,{connectorId:n,connectorName:o,selectedProvider:c.gemini}))}},49:function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));const o=({connector_id:e,service_message:t,...n})=>({...n,actionId:e,...t&&{serviceMessage:t}})},50:function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var o=n(1),a=n(3),i=n(23),r=n(4),s=n(49),c=n(0);const d=e=>c.i18n.translate("xpack.stackConnectors.components.genAi.error.dashboardApiError",{values:{apiProvider:e},defaultMessage:"Error finding {apiProvider} Token Usage Dashboard."}),l=({connectorId:e,selectedProvider:t})=>{const{dashboard:n,http:c,notifications:{toasts:l},spaces:g}=Object(a.useKibana)().services,[m,p]=Object(o.useState)(null);Object(o.useEffect)((()=>{let e=!1;return g&&g.getActiveSpace().then((t=>{e||p(t.id)})),()=>{e=!0}}),[g]);const[f,b]=Object(o.useState)(!1),[k,O]=Object(o.useState)(null),[x,C]=Object(o.useState)(!1),A=Object(o.useRef)(new AbortController),I=Object(o.useCallback)((t=>{var o;const a=null==n||null===(o=n.locator)||void 0===o?void 0:o.getRedirectUrl({query:{language:"kuery",query:`kibana.saved_objects: { id  : ${e} }`},dashboardId:t});O(null!=a?a:null)}),[e,null==n?void 0:n.locator]);return Object(o.useEffect)((()=>{let n=!1;return null!=m&&e.length>0&&!x&&(A.current.abort(),(async o=>{A.current=new AbortController,n||b(!0);try{const g=await async function({http:e,signal:t,dashboardId:n,connectorId:o}){const a=await e.post(`${i.BASE_ACTION_API_PATH}/connector/${encodeURIComponent(o)}/_execute`,{body:JSON.stringify({params:{subAction:r.e.DASHBOARD,subActionParams:{dashboardId:n}}}),signal:t});return Object(s.a)(a)}({http:c,signal:A.current.signal,connectorId:e,dashboardId:o});var a,u;n||(C(!0),b(!1),null!==(a=g.data)&&void 0!==a&&a.available&&I(o),g.status&&"error"===g.status&&l.addDanger({title:d(t),text:`${null!==(u=g.serviceMessage)&&void 0!==u?u:g.message}`}))}catch(e){n||(C(!0),b(!1),l.addDanger({title:d(t),text:e.message}))}})(u(t,m))),()=>{n=!0,b(!1),A.current.abort()}}),[e,x,k,c,t,I,m,l]),{isLoading:f,dashboardUrl:k}},u=(e,t)=>{let n="openai";return e.toLowerCase().includes("bedrock")?n="bedrock":e.toLowerCase().includes("gemini")&&(n="gemini"),`generative-ai-token-usage-${n}-${t}`}},53:function(e,t,n){"use strict";n.r(t),n.d(t,"API_URL_LABEL",(function(){return a})),n.d(t,"GCP_REGION",(function(){return i})),n.d(t,"GCP_PROJECT_ID",(function(){return r})),n.d(t,"DEFAULT_MODEL_LABEL",(function(){return s})),n.d(t,"SECRET",(function(){return c})),n.d(t,"CREDENTIALS_JSON",(function(){return d})),n.d(t,"gemini",(function(){return l})),n.d(t,"DOCUMENTATION",(function(){return u})),n.d(t,"URL_LABEL",(function(){return g})),n.d(t,"BODY_REQUIRED",(function(){return m})),n.d(t,"BODY_INVALID",(function(){return p})),n.d(t,"ACTION_REQUIRED",(function(){return f})),n.d(t,"INVALID_ACTION",(function(){return b})),n.d(t,"BODY",(function(){return k})),n.d(t,"BODY_DESCRIPTION",(function(){return O})),n.d(t,"MODEL",(function(){return x})),n.d(t,"USAGE_DASHBOARD_LINK",(function(){return C}));var o=n(0);const a=o.i18n.translate("xpack.stackConnectors.components.gemini.apiUrlTextFieldLabel",{defaultMessage:"URL"}),i=o.i18n.translate("xpack.stackConnectors.components.gemini.gcpRegion",{defaultMessage:"GCP Region"}),r=o.i18n.translate("xpack.stackConnectors.components.gemini.gcpProjectID",{defaultMessage:"GCP Project ID"}),s=o.i18n.translate("xpack.stackConnectors.components.gemini.defaultModelTextFieldLabel",{defaultMessage:"Default model"}),c=o.i18n.translate("xpack.stackConnectors.components.gemini.secret",{defaultMessage:"Secret"}),d=o.i18n.translate("xpack.stackConnectors.components.gemini.credentialsJSON",{defaultMessage:"Credentials JSON"}),l=o.i18n.translate("xpack.stackConnectors.components.gemini.title",{defaultMessage:"Google Gemini"}),u=o.i18n.translate("xpack.stackConnectors.components.gemini.documentation",{defaultMessage:"documentation"}),g=o.i18n.translate("xpack.stackConnectors.components.gemini.urlTextFieldLabel",{defaultMessage:"URL"}),m=o.i18n.translate("xpack.stackConnectors.components.gemini.error.requiredgeminiBodyText",{defaultMessage:"Body is required."}),p=o.i18n.translate("xpack.stackConnectors.security.gemini.params.error.invalidBodyText",{defaultMessage:"Body does not have a valid JSON format."}),f=o.i18n.translate("xpack.stackConnectors.security.gemini.params.error.requiredActionText",{defaultMessage:"Action is required."}),b=o.i18n.translate("xpack.stackConnectors.security.gemini.params.error.invalidActionText",{defaultMessage:"Invalid action name."}),k=o.i18n.translate("xpack.stackConnectors.components.gemini.bodyFieldLabel",{defaultMessage:"Body"}),O=o.i18n.translate("xpack.stackConnectors.components.gemini.bodyCodeEditorAriaLabel",{defaultMessage:"Code editor"}),x=o.i18n.translate("xpack.stackConnectors.components.gemini.model",{defaultMessage:"Model"}),C=(e,t)=>o.i18n.translate("xpack.stackConnectors.components.gemini.dashboardLink",{values:{apiProvider:e,connectorName:t},defaultMessage:'View {apiProvider} Usage Dashboard for "{ connectorName }" Connector'})},70:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return u})),n(1);var o=n(36),a=n(34),i=n(6),r=n(53),s=n(2);const c={temperature:0,maxOutputTokens:i.d},d=JSON.stringify({contents:[{role:"user",parts:[{text:"Hello world!"}]}],generation_config:c}),l=[{id:"apiUrl",label:r.API_URL_LABEL,isUrlField:!0,defaultValue:i.c,helpText:Object(s.jsx)(o.FormattedMessage,{defaultMessage:"The Google Gemini API endpoint URL. For more information on the URL, refer to the {geminiAPIUrlDocs}.",id:"xpack.stackConnectors.components.gemini.geminiAPIDocumentation",values:{geminiAPIUrlDocs:Object(s.jsx)(a.EuiLink,{"data-test-subj":"gemini-api-doc",href:"https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-multimodal#gemini-setup-environment-drest",target:"_blank"},`${r.gemini} ${r.DOCUMENTATION}`)}})},{id:"gcpRegion",label:r.GCP_REGION,isUrlField:!1,defaultValue:i.a,helpText:Object(s.jsx)(o.FormattedMessage,{defaultMessage:"Please provide the GCP region where the Vertex AI API(s) is enabled. For more information, refer to the {geminiVertexAIDocs}.",id:"xpack.stackConnectors.components.gemini.geminiRegionDocumentation",values:{geminiVertexAIDocs:Object(s.jsx)(a.EuiLink,{"data-test-subj":"gemini-vertexai-api-doc",href:"https://cloud.google.com/vertex-ai/docs/reference/rest#rest_endpoints",target:"_blank"},`${r.gemini} ${r.DOCUMENTATION}`)}})},{id:"gcpProjectID",label:r.GCP_PROJECT_ID,isUrlField:!1,helpText:Object(s.jsx)(o.FormattedMessage,{defaultMessage:"The GCP Project ID which has Vertex AI API(s) enabled. For more information on the URL, refer to the {geminiVertexAIDocs}.",id:"xpack.stackConnectors.components.gemini.geminiProjectDocumentation",values:{geminiVertexAIDocs:Object(s.jsx)(a.EuiLink,{"data-test-subj":"gemini-api-doc",href:"https://cloud.google.com/vertex-ai/docs/start/cloud-environment",target:"_blank"},`${r.gemini} ${r.DOCUMENTATION}`)}})},{id:"defaultModel",label:r.DEFAULT_MODEL_LABEL,helpText:Object(s.jsx)(o.FormattedMessage,{defaultMessage:"Current support is for the Gemini models. For more information, refer to the {geminiAPIModelDocs}.",id:"xpack.stackConnectors.components.gemini.geminiModelDocumentation",values:{geminiAPIModelDocs:Object(s.jsx)(a.EuiLink,{"data-test-subj":"gemini-api-model-doc",href:"https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models/",target:"_blank"},`${r.gemini} ${r.DOCUMENTATION}`)}}),defaultValue:i.b}],u=[{id:"credentialsJson",label:r.CREDENTIALS_JSON,isPasswordField:!0,helpText:Object(s.jsx)(o.FormattedMessage,{defaultMessage:"To authenticate to Gemini API please provide your GCP Service Account credentials JSON data. For more information, refer to the {geminiAuthDocs}.",id:"xpack.stackConnectors.components.gemini.geminiSecretDocumentation",values:{geminiAuthDocs:Object(s.jsx)(a.EuiLink,{"data-test-subj":"aws-api-keys-doc",href:"https://cloud.google.com/iam/docs/keys-list-get",target:"_blank"},`${r.gemini} ${r.DOCUMENTATION}`)}})}]},80:function(e,t,n){"use strict";n.r(t),n.d(t,"DashboardLink",(function(){return d})),n.d(t,"default",(function(){return d}));var o=n(1),a=n(34),i=n(3),r=n(53),s=n(50),c=n(2);const d=({connectorId:e,connectorName:t,selectedProvider:n="Gemini"})=>{const{dashboardUrl:d}=Object(s.a)({connectorId:e,selectedProvider:n}),{services:{application:{navigateToUrl:l}}}=Object(i.useKibana)(),u=Object(o.useCallback)((e=>{e.preventDefault(),d&&l(d)}),[d,l]);return null!=d?Object(c.jsx)(a.EuiLink,{"data-test-subj":"link-gen-ai-token-dashboard",onClick:u,href:d},r.USAGE_DASHBOARD_LINK(n,t)):null}}}]);