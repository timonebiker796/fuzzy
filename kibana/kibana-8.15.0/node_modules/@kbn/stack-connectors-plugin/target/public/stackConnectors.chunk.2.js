/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.stackConnectors_bundle_jsonpfunction=window.stackConnectors_bundle_jsonpfunction||[]).push([[2],{89:function(e,t,a){"use strict";a.d(t,"a",(function(){return X}));var s=a(1),n=a.n(s),i=a(34),o=a(35),l=a(37),c=a(38);let r=function(e){return e.Basic="webhook-authentication-basic",e.SSL="webhook-authentication-ssl",e}({}),u=function(e){return e.CRT="ssl-crt-key",e.PFX="ssl-pfx",e}({});var d=a(0);const p=d.i18n.translate("xpack.stackConnectors.components.auth.authenticationTitle",{defaultMessage:"Authentication"}),j=d.i18n.translate("xpack.stackConnectors.components.auth.authenticationMethodNoneLabel",{defaultMessage:"None"}),b=d.i18n.translate("xpack.stackConnectors.components.auth.authenticationMethodBasicLabel",{defaultMessage:"Basic authentication"}),x=d.i18n.translate("xpack.stackConnectors.components.auth.authenticationMethodSSLLabel",{defaultMessage:"SSL authentication"}),h=d.i18n.translate("xpack.stackConnectors.components.auth.userTextFieldLabel",{defaultMessage:"Username"}),f=d.i18n.translate("xpack.stackConnectors.components.auth.passwordTextFieldLabel",{defaultMessage:"Password"}),m=d.i18n.translate("xpack.stackConnectors.components.auth.error.requiredAuthUserNameText",{defaultMessage:"Username is required."}),F=d.i18n.translate("xpack.stackConnectors.components.auth.error.requiredAuthPasswordText",{defaultMessage:"Password is required."}),k=d.i18n.translate("xpack.stackConnectors.components.auth.certTypeCrtKeyLabel",{defaultMessage:"CRT and KEY file"}),O=d.i18n.translate("xpack.stackConnectors.components.auth.certTypePfxLabel",{defaultMessage:"PFX file"}),g=d.i18n.translate("xpack.stackConnectors.components.auth.error.requiredCRTText",{defaultMessage:"CRT file is required."}),C=d.i18n.translate("xpack.stackConnectors.components.auth.error.requiredKEYText",{defaultMessage:"KEY file is required."}),T=d.i18n.translate("xpack.stackConnectors.components.auth.error.requiredPFXText",{defaultMessage:"PFX file is required."}),y=d.i18n.translate("xpack.stackConnectors.components.auth.viewHeadersSwitch",{defaultMessage:"Add HTTP header"}),w=d.i18n.translate("xpack.stackConnectors.components.auth.httpHeadersTitle",{defaultMessage:"Headers in use"}),P=d.i18n.translate("xpack.stackConnectors.components.auth.keyTextFieldLabel",{defaultMessage:"Key"}),v=d.i18n.translate("xpack.stackConnectors.components.auth.valueTextFieldLabel",{defaultMessage:"Value"}),E=d.i18n.translate("xpack.stackConnectors.components.auth.addHeaderButton",{defaultMessage:"Add"}),S=d.i18n.translate("xpack.stackConnectors.components.auth.deleteHeaderButton",{defaultMessage:"Delete",description:"Delete HTTP header"}),M=d.i18n.translate("xpack.stackConnectors.components.auth.error.requiredCAText",{defaultMessage:"CA file is required."}),I=d.i18n.translate("xpack.stackConnectors.components.auth.viewCertificateAuthoritySwitch",{defaultMessage:"Add certificate authority"}),_=d.i18n.translate("xpack.stackConnectors.components.auth.verificationModeFieldLabel",{defaultMessage:"Verification mode"}),A=d.i18n.translate("xpack.stackConnectors.components.auth.editCACallout",{defaultMessage:"This connector has an existing certificate authority file. Upload a new one to replace it."});var V=a(2);const{emptyField:U}=c.fieldValidators;var L={name:"16gsvie",styles:"min-width:200px"},B={name:"16gsvie",styles:"min-width:200px"};const H=({readOnly:e,certTypeDefaultValue:t,certType:a})=>Object(V.jsx)(i.EuiFlexGroup,{justifyContent:"spaceBetween","data-test-subj":"sslCertFields"},Object(V.jsx)(i.EuiFlexItem,null,Object(V.jsx)(o.UseField,{path:"secrets.password",config:{label:f},component:l.PasswordField,componentProps:{euiFieldProps:{"data-test-subj":"webhookSSLPassphraseInput",readOnly:e}}}),Object(V.jsx)(i.EuiSpacer,{size:"s"}),Object(V.jsx)(o.UseField,{path:"config.certType",defaultValue:t,component:({field:e})=>Object(V.jsx)(i.EuiTabs,{size:"s","data-test-subj":"webhookCertTypeTabs"},Object(V.jsx)(i.EuiTab,{onClick:()=>e.setValue(u.CRT),isSelected:e.value===u.CRT},k),Object(V.jsx)(i.EuiTab,{onClick:()=>e.setValue(u.PFX),isSelected:e.value===u.PFX},O))}),Object(V.jsx)(i.EuiSpacer,{size:"s"}),a===u.CRT&&Object(V.jsx)(i.EuiFlexGroup,{wrap:!0},Object(V.jsx)(i.EuiFlexItem,{css:L},Object(V.jsx)(o.UseField,{path:"secrets.crt",config:{label:"CRT file",validations:[{validator:U(g)}]},component:l.FilePickerField,componentProps:{euiFieldProps:{"data-test-subj":"webhookSSLCRTInput",display:"default",accept:".crt,.cert,.cer,.pem"}}})),Object(V.jsx)(i.EuiFlexItem,{css:B},Object(V.jsx)(o.UseField,{path:"secrets.key",config:{label:"KEY file",validations:[{validator:U(C)}]},component:l.FilePickerField,componentProps:{euiFieldProps:{"data-test-subj":"webhookSSLKEYInput",display:"default",accept:".key,.pem"}}}))),a===u.PFX&&Object(V.jsx)(o.UseField,{path:"secrets.pfx",config:{label:"PFX file",validations:[{validator:U(T)}]},component:l.FilePickerField,componentProps:{euiFieldProps:{"data-test-subj":"webhookSSLPFXInput",display:"default",accept:".pfx,.p12"}}}))),{emptyField:z}=c.fieldValidators,q=({readOnly:e})=>Object(V.jsx)(i.EuiFlexGroup,{justifyContent:"spaceBetween","data-test-subj":"basicAuthFields"},Object(V.jsx)(i.EuiFlexItem,null,Object(V.jsx)(o.UseField,{path:"secrets.user",config:{label:h,validations:[{validator:z(m)}]},component:l.Field,componentProps:{euiFieldProps:{readOnly:e,"data-test-subj":"webhookUserInput",fullWidth:!0}}})),Object(V.jsx)(i.EuiFlexItem,null,Object(V.jsx)(o.UseField,{path:"secrets.password",config:{label:f,validations:[{validator:z(F)}]},component:l.PasswordField,componentProps:{euiFieldProps:{readOnly:e,"data-test-subj":"webhookPasswordInput"}}}))),{emptyField:R}=c.fieldValidators,X=({readOnly:e})=>{var t,a;const{setFieldValue:c,getFieldDefaultValue:d}=Object(o.useFormContext)(),[{config:h,__internal__:f}]=Object(o.useFormData)({watch:["config.hasAuth","config.authType","config.certType","config.verificationMode","__internal__.hasHeaders","__internal__.hasCA"]}),m=null==h?r.Basic:h.authType,F=null==h?u.CRT:h.certType,k=null!=f&&f.hasHeaders,O=null!=f&&f.hasCA,g=!!d("config.ca"),C=!!d("config.headers"),T=!1===d("config.hasAuth")?null:null!==(t=d("config.authType"))&&void 0!==t?t:r.Basic,U=null!==(a=d("config.certType"))&&void 0!==a?a:u.CRT,L=!!d("config.ca")||"none"===d("config.verificationMode");return Object(s.useEffect)((()=>c("config.hasAuth",Boolean(m))),[m,c]),Object(V.jsx)(n.a.Fragment,null,Object(V.jsx)(i.EuiFlexGroup,null,Object(V.jsx)(i.EuiFlexItem,null,Object(V.jsx)(i.EuiTitle,{size:"xxs"},Object(V.jsx)("h4",null,p)))),Object(V.jsx)(i.EuiSpacer,{size:"m"}),Object(V.jsx)(o.UseField,{path:"config.hasAuth",component:l.HiddenField}),Object(V.jsx)(o.UseField,{path:"config.authType",defaultValue:T,component:l.CardRadioGroupField,componentProps:{options:[{value:null,label:j,"data-test-subj":"authNone"},{value:r.Basic,label:b,children:m===r.Basic&&Object(V.jsx)(q,{readOnly:e}),"data-test-subj":"authBasic"},{value:r.SSL,label:x,children:m===r.SSL&&Object(V.jsx)(H,{readOnly:e,certTypeDefaultValue:U,certType:F}),"data-test-subj":"authSSL"}]}}),Object(V.jsx)(i.EuiSpacer,{size:"m"}),Object(V.jsx)(o.UseField,{path:"__internal__.hasHeaders",component:l.ToggleField,config:{defaultValue:C,label:y},componentProps:{euiFieldProps:{disabled:e,"data-test-subj":"webhookViewHeadersSwitch"}}}),k&&Object(V.jsx)(o.UseArray,{path:"config.headers",initialNumberOfItems:1},(({items:t,addItem:a,removeItem:s})=>Object(V.jsx)(n.a.Fragment,null,Object(V.jsx)(i.EuiTitle,{size:"xxs","data-test-subj":"webhookHeaderText"},Object(V.jsx)("h5",null,w)),Object(V.jsx)(i.EuiSpacer,{size:"s"}),t.map((t=>Object(V.jsx)(i.EuiFlexGroup,{key:t.id},Object(V.jsx)(i.EuiFlexItem,null,Object(V.jsx)(o.UseField,{path:`${t.path}.key`,config:{label:P},component:l.TextField,readDefaultValueOnForm:!t.isNew,componentProps:{euiFieldProps:{readOnly:e,"data-test-subj":"webhookHeadersKeyInput"}}})),Object(V.jsx)(i.EuiFlexItem,null,Object(V.jsx)(o.UseField,{path:`${t.path}.value`,config:{label:v},component:l.TextField,readDefaultValueOnForm:!t.isNew,componentProps:{euiFieldProps:{readOnly:e,"data-test-subj":"webhookHeadersValueInput"}}})),Object(V.jsx)(i.EuiFlexItem,{grow:!1},Object(V.jsx)(i.EuiButtonIcon,{color:"danger",onClick:()=>s(t.id),iconType:"minusInCircle","aria-label":S,style:{marginTop:"28px"}}))))),Object(V.jsx)(i.EuiSpacer,{size:"m"}),Object(V.jsx)(i.EuiButtonEmpty,{iconType:"plusInCircle",onClick:a,"data-test-subj":"webhookAddHeaderButton"},E),Object(V.jsx)(i.EuiSpacer,null)))),Object(V.jsx)(i.EuiSpacer,{size:"m"}),Object(V.jsx)(o.UseField,{path:"__internal__.hasCA",component:l.ToggleField,config:{defaultValue:L,label:I},componentProps:{euiFieldProps:{disabled:e,"data-test-subj":"webhookViewCASwitch"}}}),O&&Object(V.jsx)(n.a.Fragment,null,Object(V.jsx)(i.EuiSpacer,{size:"s"}),Object(V.jsx)(i.EuiFlexGroup,{justifyContent:"spaceBetween"},Object(V.jsx)(i.EuiFlexItem,null,Object(V.jsx)(o.UseField,{path:"config.ca",config:{label:"CA file",validations:[{validator:"none"!==(null==h?void 0:h.verificationMode)?R(M):()=>{}}]},component:l.FilePickerField,componentProps:{euiFieldProps:{display:"default","data-test-subj":"webhookCAInput",accept:".ca,.pem"}}})),Object(V.jsx)(i.EuiFlexItem,null,Object(V.jsx)(o.UseField,{path:"config.verificationMode",component:l.SelectField,config:{label:_,defaultValue:"full",validations:[{validator:R(_)}]},componentProps:{euiFieldProps:{"data-test-subj":"webhookVerificationModeSelect",options:[{text:"None",value:"none"},{text:"Certificate",value:"certificate"},{text:"Full",value:"full"}],fullWidth:!0,readOnly:e}}}))),g&&Object(V.jsx)(n.a.Fragment,null,Object(V.jsx)(i.EuiSpacer,{size:"s"}),Object(V.jsx)(i.EuiCallOut,{size:"s",iconType:"document",title:A}))))}}}]);