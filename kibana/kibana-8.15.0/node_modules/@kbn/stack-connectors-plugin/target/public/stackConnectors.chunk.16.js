/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.stackConnectors_bundle_jsonpfunction=window.stackConnectors_bundle_jsonpfunction||[]).push([[16,52],{102:function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return m}));var o=n(1),i=n.n(o),a=n(3),s=n(34),r=n(36),c=n(70),d=n(53),l=n(6),u=n(2);const m=({actionParams:e,editAction:t,index:n,messageVariables:m,executionMode:g,errors:p})=>{const{subAction:f,subActionParams:b}=e,{body:x,model:k}=null!=b?b:{},O=Object(o.useMemo)((()=>g===a.ActionConnectorMode.Test),[g]);Object(o.useEffect)((()=>{f||t("subAction",O?l.g.TEST:l.g.RUN,n)}),[t,n,O,f]),Object(o.useEffect)((()=>{b||t("subActionParams",{body:c.a},n)}),[t,n,b]),Object(o.useEffect)((()=>()=>{t("subActionParams",void 0,n)}),[]);const C=Object(o.useCallback)((e=>{t("subActionParams",{...b,...e},n)}),[t,n,b]);return Object(u.jsx)(i.a.Fragment,null,Object(u.jsx)(a.JsonEditorWithMessageVariables,{messageVariables:m,paramsProperty:"body",inputTargetValue:x,label:d.BODY,ariaLabel:d.BODY_DESCRIPTION,errors:p.body,onDocumentsChange:e=>{C({body:e.trim()})},onBlur:()=>{x||C({body:""})},dataTestSubj:"gemini-bodyJsonEditor"}),Object(u.jsx)(s.EuiFormRow,{fullWidth:!0,label:d.MODEL,helpText:Object(u.jsx)(r.FormattedMessage,{defaultMessage:"Optionally overwrite default model per request. Current support is for the Gemini 1.5 models. For more information, refer to the {geminiAPIModelDocs}.",id:"xpack.stackConnectors.components.gemini.modelHelpText",values:{geminiAPIModelDocs:Object(u.jsx)(s.EuiLink,{"data-test-subj":"gemini-api-model-doc",href:"https://ai.google.dev/models/gemini/",target:"_blank"},`${d.gemini} ${d.DOCUMENTATION}`)}})},Object(u.jsx)(s.EuiFieldText,{"data-test-subj":"gemini-model",placeholder:l.b,value:k,onChange:e=>{C({model:e.target.value})},fullWidth:!0})))}},53:function(e,t,n){"use strict";n.r(t),n.d(t,"API_URL_LABEL",(function(){return i})),n.d(t,"GCP_REGION",(function(){return a})),n.d(t,"GCP_PROJECT_ID",(function(){return s})),n.d(t,"DEFAULT_MODEL_LABEL",(function(){return r})),n.d(t,"SECRET",(function(){return c})),n.d(t,"CREDENTIALS_JSON",(function(){return d})),n.d(t,"gemini",(function(){return l})),n.d(t,"DOCUMENTATION",(function(){return u})),n.d(t,"URL_LABEL",(function(){return m})),n.d(t,"BODY_REQUIRED",(function(){return g})),n.d(t,"BODY_INVALID",(function(){return p})),n.d(t,"ACTION_REQUIRED",(function(){return f})),n.d(t,"INVALID_ACTION",(function(){return b})),n.d(t,"BODY",(function(){return x})),n.d(t,"BODY_DESCRIPTION",(function(){return k})),n.d(t,"MODEL",(function(){return O})),n.d(t,"USAGE_DASHBOARD_LINK",(function(){return C}));var o=n(0);const i=o.i18n.translate("xpack.stackConnectors.components.gemini.apiUrlTextFieldLabel",{defaultMessage:"URL"}),a=o.i18n.translate("xpack.stackConnectors.components.gemini.gcpRegion",{defaultMessage:"GCP Region"}),s=o.i18n.translate("xpack.stackConnectors.components.gemini.gcpProjectID",{defaultMessage:"GCP Project ID"}),r=o.i18n.translate("xpack.stackConnectors.components.gemini.defaultModelTextFieldLabel",{defaultMessage:"Default model"}),c=o.i18n.translate("xpack.stackConnectors.components.gemini.secret",{defaultMessage:"Secret"}),d=o.i18n.translate("xpack.stackConnectors.components.gemini.credentialsJSON",{defaultMessage:"Credentials JSON"}),l=o.i18n.translate("xpack.stackConnectors.components.gemini.title",{defaultMessage:"Google Gemini"}),u=o.i18n.translate("xpack.stackConnectors.components.gemini.documentation",{defaultMessage:"documentation"}),m=o.i18n.translate("xpack.stackConnectors.components.gemini.urlTextFieldLabel",{defaultMessage:"URL"}),g=o.i18n.translate("xpack.stackConnectors.components.gemini.error.requiredgeminiBodyText",{defaultMessage:"Body is required."}),p=o.i18n.translate("xpack.stackConnectors.security.gemini.params.error.invalidBodyText",{defaultMessage:"Body does not have a valid JSON format."}),f=o.i18n.translate("xpack.stackConnectors.security.gemini.params.error.requiredActionText",{defaultMessage:"Action is required."}),b=o.i18n.translate("xpack.stackConnectors.security.gemini.params.error.invalidActionText",{defaultMessage:"Invalid action name."}),x=o.i18n.translate("xpack.stackConnectors.components.gemini.bodyFieldLabel",{defaultMessage:"Body"}),k=o.i18n.translate("xpack.stackConnectors.components.gemini.bodyCodeEditorAriaLabel",{defaultMessage:"Code editor"}),O=o.i18n.translate("xpack.stackConnectors.components.gemini.model",{defaultMessage:"Model"}),C=(e,t)=>o.i18n.translate("xpack.stackConnectors.components.gemini.dashboardLink",{values:{apiProvider:e,connectorName:t},defaultMessage:'View {apiProvider} Usage Dashboard for "{ connectorName }" Connector'})},70:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return l})),n.d(t,"c",(function(){return u})),n(1);var o=n(36),i=n(34),a=n(6),s=n(53),r=n(2);const c={temperature:0,maxOutputTokens:a.d},d=JSON.stringify({contents:[{role:"user",parts:[{text:"Hello world!"}]}],generation_config:c}),l=[{id:"apiUrl",label:s.API_URL_LABEL,isUrlField:!0,defaultValue:a.c,helpText:Object(r.jsx)(o.FormattedMessage,{defaultMessage:"The Google Gemini API endpoint URL. For more information on the URL, refer to the {geminiAPIUrlDocs}.",id:"xpack.stackConnectors.components.gemini.geminiAPIDocumentation",values:{geminiAPIUrlDocs:Object(r.jsx)(i.EuiLink,{"data-test-subj":"gemini-api-doc",href:"https://cloud.google.com/vertex-ai/generative-ai/docs/start/quickstarts/quickstart-multimodal#gemini-setup-environment-drest",target:"_blank"},`${s.gemini} ${s.DOCUMENTATION}`)}})},{id:"gcpRegion",label:s.GCP_REGION,isUrlField:!1,defaultValue:a.a,helpText:Object(r.jsx)(o.FormattedMessage,{defaultMessage:"Please provide the GCP region where the Vertex AI API(s) is enabled. For more information, refer to the {geminiVertexAIDocs}.",id:"xpack.stackConnectors.components.gemini.geminiRegionDocumentation",values:{geminiVertexAIDocs:Object(r.jsx)(i.EuiLink,{"data-test-subj":"gemini-vertexai-api-doc",href:"https://cloud.google.com/vertex-ai/docs/reference/rest#rest_endpoints",target:"_blank"},`${s.gemini} ${s.DOCUMENTATION}`)}})},{id:"gcpProjectID",label:s.GCP_PROJECT_ID,isUrlField:!1,helpText:Object(r.jsx)(o.FormattedMessage,{defaultMessage:"The GCP Project ID which has Vertex AI API(s) enabled. For more information on the URL, refer to the {geminiVertexAIDocs}.",id:"xpack.stackConnectors.components.gemini.geminiProjectDocumentation",values:{geminiVertexAIDocs:Object(r.jsx)(i.EuiLink,{"data-test-subj":"gemini-api-doc",href:"https://cloud.google.com/vertex-ai/docs/start/cloud-environment",target:"_blank"},`${s.gemini} ${s.DOCUMENTATION}`)}})},{id:"defaultModel",label:s.DEFAULT_MODEL_LABEL,helpText:Object(r.jsx)(o.FormattedMessage,{defaultMessage:"Current support is for the Gemini models. For more information, refer to the {geminiAPIModelDocs}.",id:"xpack.stackConnectors.components.gemini.geminiModelDocumentation",values:{geminiAPIModelDocs:Object(r.jsx)(i.EuiLink,{"data-test-subj":"gemini-api-model-doc",href:"https://cloud.google.com/vertex-ai/generative-ai/docs/learn/models/",target:"_blank"},`${s.gemini} ${s.DOCUMENTATION}`)}}),defaultValue:a.b}],u=[{id:"credentialsJson",label:s.CREDENTIALS_JSON,isPasswordField:!0,helpText:Object(r.jsx)(o.FormattedMessage,{defaultMessage:"To authenticate to Gemini API please provide your GCP Service Account credentials JSON data. For more information, refer to the {geminiAuthDocs}.",id:"xpack.stackConnectors.components.gemini.geminiSecretDocumentation",values:{geminiAuthDocs:Object(r.jsx)(i.EuiLink,{"data-test-subj":"aws-api-keys-doc",href:"https://cloud.google.com/iam/docs/keys-list-get",target:"_blank"},`${s.gemini} ${s.DOCUMENTATION}`)}})}]}}]);