"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultValue = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _components = require("../../../components");
var _use_form = require("../../hooks/use_form");
var _form = require("../form");
var _use_field = require("../use_field");
var _constants = require("./constants");
var _form_utils = require("./form_utils");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

// The defaultValue would probably come from an HTTP request
const formDefaultValue = {
  title: 'Title of the post'
};
const DefaultValue = args => {
  const {
    form
  } = (0, _use_form.useForm)({
    defaultValue: formDefaultValue
  });
  return /*#__PURE__*/_react.default.createElement(_form.Form, (0, _extends2.default)({
    form: form
  }, args), /*#__PURE__*/_react.default.createElement(_use_field.UseField, {
    path: "title",
    component: _components.TextField,
    config: {
      ..._constants.titleConfigBase
    }
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
    onClick: () => (0, _form_utils.submitForm)(form)
  }, "Send"));
};
exports.DefaultValue = DefaultValue;
DefaultValue.parameters = {
  docs: {
    source: {
      code: `
// The defaultValue would probably come from an HTTP request
const formDefaultValue = { title: 'Title of the post' };

const MyFormComponent = () => {
  const { form } = useForm({ defaultValue: formDefaultValue });

  const submitForm = async () => {
    const { isValid, data } = await form.submit();
    if (isValid) {
      // ... do something with the data
    }
  };

  return (
    <Form form={form}>
      <UseField<string> path="title" component={TextField} config={{ ...titleConfigBase }} />
      <EuiButton onClick={submitForm}>Send</EuiButton>
    </Form>
  );
};
      `,
      language: 'tsx'
    }
  }
};