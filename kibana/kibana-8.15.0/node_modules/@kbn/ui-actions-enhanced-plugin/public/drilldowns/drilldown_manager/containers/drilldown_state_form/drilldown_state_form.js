"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DrilldownStateForm = void 0;
var _react = _interopRequireDefault(require("react"));
var _context = require("../context");
var _drilldown_form = require("../../components/drilldown_form");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const DrilldownStateForm = ({
  state,
  disabled
}) => {
  const drilldowns = (0, _context.useDrilldownManager)();
  const name = state.useName();
  const triggers = state.useTriggers();
  const config = state.useConfig();
  const triggerPickerProps = _react.default.useMemo(() => ({
    items: state.uiTriggers.map(id => {
      const trigger = drilldowns.deps.getTrigger(id);
      return trigger;
    }),
    selected: triggers,
    onChange: state.setTriggers
  }), [drilldowns, triggers, state]);
  const context = state.getFactoryContext();
  return /*#__PURE__*/_react.default.createElement(_drilldown_form.DrilldownForm, {
    name: name,
    onNameChange: state.setName,
    triggers: triggerPickerProps,
    disabled: disabled
  }, /*#__PURE__*/_react.default.createElement(state.factory.CollectConfig, {
    config: config,
    onConfig: disabled ? () => {} : state.setConfig,
    context: context
  }));
};
exports.DrilldownStateForm = DrilldownStateForm;