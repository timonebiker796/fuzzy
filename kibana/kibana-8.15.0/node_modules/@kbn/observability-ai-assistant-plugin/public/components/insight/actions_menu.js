"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionsMenu = ActionsMenu;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _connector_selector_base = require("../connector_selector/connector_selector_base");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function ActionsMenu({
  connectors,
  onEditPrompt
}) {
  var _connectors$connector, _connectors$connector2;
  const [isPopoverOpen, setPopover] = (0, _react.useState)(false);
  const onButtonClick = () => {
    setPopover(!isPopoverOpen);
  };
  const closePopover = () => {
    setPopover(false);
  };
  const panels = [{
    id: 0,
    title: 'Actions',
    items: [{
      name: /*#__PURE__*/_react.default.createElement("div", {
        className: "eui-textTruncate"
      }, _i18n.i18n.translate('xpack.observabilityAiAssistant.insight.actions.connector', {
        defaultMessage: 'Connector'
      }), ' ', /*#__PURE__*/_react.default.createElement("strong", null, (_connectors$connector = connectors.connectors) === null || _connectors$connector === void 0 ? void 0 : (_connectors$connector2 = _connectors$connector.find(({
        id
      }) => id === connectors.selectedConnector)) === null || _connectors$connector2 === void 0 ? void 0 : _connectors$connector2.name)),
      icon: 'wrench',
      panel: 1
    }, {
      name: _i18n.i18n.translate('xpack.observabilityAiAssistant.insight.actions.editPrompt', {
        defaultMessage: 'Edit prompt'
      }),
      icon: 'documentEdit',
      onClick: () => {
        onEditPrompt();
        closePopover();
      }
    }]
  }, {
    id: 1,
    title: _i18n.i18n.translate('xpack.observabilityAiAssistant.insight.actions.connector', {
      defaultMessage: 'Connector'
    }),
    content: /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, null, /*#__PURE__*/_react.default.createElement(_connector_selector_base.ConnectorSelectorBase, connectors))
  }];
  const button = /*#__PURE__*/_react.default.createElement(_eui.EuiButtonIcon, {
    "aria-label": _i18n.i18n.translate('xpack.observabilityAiAssistant.insight.openActions', {
      defaultMessage: 'Open insight actions'
    }),
    "data-test-subj": "observabilityAiAssistantInsightActionsButtonIcon",
    iconType: "boxesHorizontal",
    onClick: onButtonClick
  });
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPopover, {
    button: button,
    isOpen: isPopoverOpen,
    closePopover: closePopover,
    panelPaddingSize: "none",
    anchorPosition: "downLeft"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiContextMenu, {
    initialPanelId: 0,
    panels: panels
  }));
}