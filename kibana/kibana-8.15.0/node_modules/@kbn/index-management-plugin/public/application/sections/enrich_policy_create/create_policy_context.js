"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useCreatePolicyContext = exports.CreatePolicyContextProvider = exports.CreatePolicyContext = void 0;
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const CreatePolicyContext = exports.CreatePolicyContext = /*#__PURE__*/(0, _react.createContext)({});
const CreatePolicyContextProvider = ({
  children
}) => {
  const [draft, updateDraft] = (0, _react.useState)({});
  const [completionState, updateCompletionState] = (0, _react.useState)({
    configurationStep: false,
    fieldsSelectionStep: false
  });
  const contextValue = {
    draft,
    updateDraft,
    completionState,
    updateCompletionState
  };
  return /*#__PURE__*/_react.default.createElement(CreatePolicyContext.Provider, {
    value: contextValue
  }, children);
};
exports.CreatePolicyContextProvider = CreatePolicyContextProvider;
const useCreatePolicyContext = () => {
  const ctx = (0, _react.useContext)(CreatePolicyContext);
  if (!ctx) throw new Error('Cannot use outside of create policy context');
  return ctx;
};
exports.useCreatePolicyContext = useCreatePolicyContext;