"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MountWithReduxProvider = void 0;
var _react = _interopRequireDefault(require("react"));
var _redux = require("redux");
var _reactRedux = require("react-redux");
var _reduxSaga = _interopRequireDefault(require("redux-saga"));
var _root_reducer = require("../../state/root_reducer");
var _root_effect = require("../../state/root_effect");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const createRealStore = () => {
  const sagaMW = (0, _reduxSaga.default)();
  const store = (0, _redux.createStore)(_root_reducer.rootReducer, (0, _redux.applyMiddleware)(sagaMW));
  sagaMW.run(_root_effect.rootEffect);
  return store;
};
const MountWithReduxProvider = ({
  children,
  state,
  useRealStore
}) => {
  const store = useRealStore ? createRealStore() : {
    dispatch: jest.fn(),
    getState: jest.fn().mockReturnValue(state || {
      selectedFilters: null
    }),
    subscribe: jest.fn(),
    replaceReducer: jest.fn(),
    [Symbol.observable]: jest.fn()
  };
  return /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
    store: store
  }, children);
};
exports.MountWithReduxProvider = MountWithReduxProvider;