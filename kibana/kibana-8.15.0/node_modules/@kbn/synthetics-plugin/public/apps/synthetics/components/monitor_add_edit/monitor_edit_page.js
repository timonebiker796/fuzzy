"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MonitorEditPage = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRouterDom = require("react-router-dom");
var _reactRedux = require("react-redux");
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _public = require("@kbn/observability-shared-plugin/public");
var _can_use_public_locations_callout = require("./steps/can_use_public_locations_callout");
var _disabled_callout = require("../monitors_page/management/disabled_callout");
var _use_capabilities = require("../../../../hooks/use_capabilities");
var _edit_monitor_not_found = require("./edit_monitor_not_found");
var _monitor_detail_flyout = require("../monitors_page/overview/overview/monitor_detail_flyout");
var _runtime_types = require("../../../../../common/runtime_types");
var _state = require("../../state");
var _alerting_callout = require("../common/alerting_callout/alerting_callout");
var _steps = require("./steps");
var _form = require("./form");
var _locations_loading_error = require("./locations_loading_error");
var _monitor_details_portal = require("./monitor_details_portal");
var _use_breadcrumbs = require("./use_breadcrumbs");
var _api = require("../../state/monitor_management/api");
var _step_config = require("./steps/step_config");
var _use_monitor_not_found = require("./hooks/use_monitor_not_found");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const MonitorEditPage = () => {
  var _data$ConfigKey$ALERT, _data$ConfigKey$ALERT2;
  (0, _public.useTrackPageview)({
    app: 'synthetics',
    path: 'edit-monitor'
  });
  (0, _public.useTrackPageview)({
    app: 'synthetics',
    path: 'edit-monitor',
    delay: 15000
  });
  const {
    monitorId
  } = (0, _reactRouterDom.useParams)();
  (0, _use_breadcrumbs.useMonitorAddEditBreadcrumbs)(true);
  const dispatch = (0, _reactRedux.useDispatch)();
  const {
    locationsLoaded,
    error: locationsError
  } = (0, _reactRedux.useSelector)(_state.selectServiceLocationsState);
  (0, _react.useEffect)(() => {
    if (!locationsLoaded) {
      dispatch((0, _state.getServiceLocations)());
    }
  }, [locationsLoaded, dispatch]);
  const {
    data,
    loading,
    error
  } = (0, _public.useFetcher)(() => {
    return (0, _api.getDecryptedMonitorAPI)({
      id: monitorId
    });
    // FIXME: Dario thinks there is a better way to do this but
    // he's getting tired and maybe the Synthetics folks can fix it
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  const monitorNotFoundError = (0, _use_monitor_not_found.useMonitorNotFound)(error, data === null || data === void 0 ? void 0 : data.id);
  const canUsePublicLocations = (0, _use_capabilities.useCanUsePublicLocations)(data === null || data === void 0 ? void 0 : data[_runtime_types.ConfigKey.LOCATIONS]);
  if (monitorNotFoundError) {
    return /*#__PURE__*/_react.default.createElement(_edit_monitor_not_found.EditMonitorNotFound, null);
  }
  const isReadOnly = (data === null || data === void 0 ? void 0 : data[_runtime_types.ConfigKey.MONITOR_SOURCE_TYPE]) === _runtime_types.SourceType.PROJECT || !canUsePublicLocations;
  const projectId = data === null || data === void 0 ? void 0 : data[_runtime_types.ConfigKey.PROJECT_ID];
  if (locationsError) {
    return /*#__PURE__*/_react.default.createElement(_locations_loading_error.LocationsLoadingError, null);
  }
  if (error) {
    return /*#__PURE__*/_react.default.createElement(_eui.EuiEmptyPrompt, {
      iconType: "warning",
      color: "danger",
      title: /*#__PURE__*/_react.default.createElement("h3", null, _i18n.i18n.translate('xpack.synthetics.monitorEditPage.error.label', {
        defaultMessage: 'Unable to load monitor configuration'
      })),
      body: /*#__PURE__*/_react.default.createElement("p", null, _i18n.i18n.translate('xpack.synthetics.monitorEditPage.error.content', {
        defaultMessage: 'There was an error loading your monitor. Please try again later.'
      }))
    });
  }
  return data && locationsLoaded && !loading && !error ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_disabled_callout.DisabledCallout, null), /*#__PURE__*/_react.default.createElement(_can_use_public_locations_callout.CanUsePublicLocationsCallout, {
    canUsePublicLocations: canUsePublicLocations
  }), /*#__PURE__*/_react.default.createElement(_alerting_callout.AlertingCallout, {
    isAlertingEnabled: (_data$ConfigKey$ALERT = data[_runtime_types.ConfigKey.ALERT_CONFIG]) === null || _data$ConfigKey$ALERT === void 0 ? void 0 : (_data$ConfigKey$ALERT2 = _data$ConfigKey$ALERT.status) === null || _data$ConfigKey$ALERT2 === void 0 ? void 0 : _data$ConfigKey$ALERT2.enabled
  }), /*#__PURE__*/_react.default.createElement(_form.MonitorForm, {
    defaultValues: data,
    readOnly: isReadOnly,
    canUsePublicLocations: canUsePublicLocations
  }, /*#__PURE__*/_react.default.createElement(_steps.MonitorSteps, {
    stepMap: (0, _step_config.EDIT_MONITOR_STEPS)(isReadOnly),
    isEditFlow: true,
    readOnly: isReadOnly,
    projectId: projectId
  }), /*#__PURE__*/_react.default.createElement(_monitor_details_portal.MonitorDetailsLinkPortal, {
    configId: data === null || data === void 0 ? void 0 : data[_runtime_types.ConfigKey.CONFIG_ID],
    name: data === null || data === void 0 ? void 0 : data.name,
    updateUrl: false
  }))) : /*#__PURE__*/_react.default.createElement(_monitor_detail_flyout.LoadingState, null);
};
exports.MonitorEditPage = MonitorEditPage;