"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateMonitorLastRunAction = exports.setStatusFilter = exports.setMonitorDetailsLocationAction = exports.resetMonitorLastRunAction = exports.getMonitorRecentPingsAction = exports.getMonitorLastRunAction = exports.getMonitorAction = void 0;
var _toolkit = require("@reduxjs/toolkit");
var _actions = require("../utils/actions");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const setMonitorDetailsLocationAction = exports.setMonitorDetailsLocationAction = (0, _toolkit.createAction)('[MONITOR SUMMARY] SET LOCATION');
const getMonitorAction = exports.getMonitorAction = (0, _actions.createAsyncAction)('[MONITOR DETAILS] GET MONITOR');
const getMonitorLastRunAction = exports.getMonitorLastRunAction = (0, _actions.createAsyncAction)('[MONITOR DETAILS] GET LAST RUN');
const resetMonitorLastRunAction = exports.resetMonitorLastRunAction = (0, _toolkit.createAction)('[MONITOR DETAILS] LAST RUN RESET');
const updateMonitorLastRunAction = exports.updateMonitorLastRunAction = (0, _toolkit.createAction)('[MONITOR DETAILS] UPdATE LAST RUN');
const getMonitorRecentPingsAction = exports.getMonitorRecentPingsAction = (0, _actions.createAsyncAction)('[MONITOR DETAILS] GET RECENT PINGS');
const setStatusFilter = exports.setStatusFilter = (0, _toolkit.createAction)('SET STATUS FILTER');