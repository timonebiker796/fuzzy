"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LoadingState = LoadingState;
exports.MonitorDetailFlyout = MonitorDetailFlyout;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _public = require("@kbn/kibana-react-plugin/public");
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _public2 = require("@kbn/observability-shared-plugin/public");
var _monitor_details_panel = require("../../../common/components/monitor_details_panel");
var _use_status_by_location = require("../../../../hooks/use_status_by_location");
var _monitor_enabled = require("../../management/monitor_list_table/monitor_enabled");
var _actions_popover = require("./actions_popover");
var _state = require("../../../../state");
var _use_monitor_detail = require("../../../../hooks/use_monitor_detail");
var _types = require("../types");
var _use_monitor_detail_locator = require("../../../../hooks/use_monitor_detail_locator");
var _monitor_status = require("../../../common/components/monitor_status");
var _monitor_location_select = require("../../../common/components/monitor_location_select");
var _api = require("../../../../state/monitor_details/api");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const DEFAULT_DURATION_CHART_FROM = 'now-12h';
const DEFAULT_CURRENT_DURATION_CHART_TO = 'now';
const DEFAULT_PREVIOUS_DURATION_CHART_FROM = 'now-24h';
const DEFAULT_PREVIOUS_DURATION_CHART_TO = 'now-12h';
function DetailFlyoutDurationChart({
  id,
  location,
  currentDurationChartFrom,
  currentDurationChartTo,
  previousDurationChartFrom,
  previousDurationChartTo
}) {
  var _theme$eui, _theme$eui2;
  const theme = (0, _public2.useTheme)();
  const {
    exploratoryView: {
      ExploratoryViewEmbeddable
    }
  } = (0, _public.useKibana)().services;
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPageSection, {
    bottomBorder: "extended"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h3", null, DURATION_HEADER_TEXT)), /*#__PURE__*/_react.default.createElement(ExploratoryViewEmbeddable, {
    customHeight: "200px",
    reportType: "kpi-over-time",
    axisTitlesVisibility: {
      x: false,
      yRight: false,
      yLeft: false
    },
    legendIsVisible: true,
    legendPosition: "bottom",
    attributes: [{
      seriesType: 'area',
      color: theme === null || theme === void 0 ? void 0 : (_theme$eui = theme.eui) === null || _theme$eui === void 0 ? void 0 : _theme$eui.euiColorVis1,
      time: {
        from: currentDurationChartFrom !== null && currentDurationChartFrom !== void 0 ? currentDurationChartFrom : DEFAULT_DURATION_CHART_FROM,
        to: currentDurationChartTo !== null && currentDurationChartTo !== void 0 ? currentDurationChartTo : DEFAULT_CURRENT_DURATION_CHART_TO
      },
      reportDefinitions: {
        'monitor.id': [id],
        'observer.geo.name': [location]
      },
      filters: [{
        field: 'observer.geo.name',
        values: [location]
      }],
      dataType: 'synthetics',
      selectedMetricField: 'monitor.duration.us',
      name: DURATION_SERIES_NAME,
      operationType: 'average'
    }, {
      seriesType: 'line',
      color: theme === null || theme === void 0 ? void 0 : (_theme$eui2 = theme.eui) === null || _theme$eui2 === void 0 ? void 0 : _theme$eui2.euiColorVis7,
      time: {
        from: previousDurationChartFrom !== null && previousDurationChartFrom !== void 0 ? previousDurationChartFrom : DEFAULT_PREVIOUS_DURATION_CHART_FROM,
        to: previousDurationChartTo !== null && previousDurationChartTo !== void 0 ? previousDurationChartTo : DEFAULT_PREVIOUS_DURATION_CHART_TO
      },
      reportDefinitions: {
        'monitor.id': [id],
        'observer.geo.name': [location]
      },
      filters: [{
        field: 'observer.geo.name',
        values: [location]
      }],
      dataType: 'synthetics',
      selectedMetricField: 'monitor.duration.us',
      name: PREVIOUS_PERIOD_SERIES_NAME,
      operationType: 'average'
    }]
  }));
}
function DetailedFlyoutHeader({
  locations,
  currentLocation,
  configId,
  setCurrentLocation,
  monitor,
  onEnabledChange
}) {
  var _locations$find;
  const status = (_locations$find = locations.find(l => l.label === currentLocation)) === null || _locations$find === void 0 ? void 0 : _locations$find.status;
  const {
    locations: allLocations
  } = (0, _reactRedux.useSelector)(_state.selectServiceLocationsState);
  const selectedLocation = allLocations.find(ll => ll.label === currentLocation);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    wrap: true,
    responsive: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_monitor_status.MonitorStatus, {
    status: status,
    monitor: monitor
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_monitor_location_select.MonitorLocationSelect, {
    compressed: true,
    monitorLocations: monitor.locations,
    configId: configId,
    selectedLocation: selectedLocation,
    onChange: (0, _react.useCallback)((id, label) => {
      if (currentLocation !== label) setCurrentLocation(label, id);
    }, [currentLocation, setCurrentLocation])
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiDescriptionList, {
    align: "left",
    compressed: true
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiDescriptionListTitle, null, ENABLED_ITEM_TEXT), /*#__PURE__*/_react.default.createElement(_eui.EuiDescriptionListDescription, null, /*#__PURE__*/_react.default.createElement(_monitor_enabled.MonitorEnabled, {
    configId: configId,
    monitor: monitor,
    reloadPage: onEnabledChange
  })))));
}
function LoadingState() {
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    alignItems: "center",
    justifyContent: "center",
    style: {
      height: '100%'
    }
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiLoadingSpinner, {
    size: "xl"
  })));
}
function MonitorDetailFlyout(props) {
  const {
    id,
    configId,
    onLocationChange,
    locationId
  } = props;
  const {
    data: {
      monitors
    }
  } = (0, _reactRedux.useSelector)(_state.selectOverviewState);
  const monitor = (0, _react.useMemo)(() => {
    const overviewItem = monitors.filter(({
      id: overviewItemId
    }) => overviewItemId === id)[0];
    if (overviewItem) return overviewItem;
  }, [id, monitors]);
  const setLocation = (0, _react.useCallback)((location, locationIdT) => onLocationChange({
    id,
    configId,
    location,
    locationId: locationIdT
  }), [id, configId, onLocationChange]);
  const detailLink = (0, _use_monitor_detail_locator.useMonitorDetailLocator)({
    configId,
    locationId
  });
  const dispatch = (0, _reactRedux.useDispatch)();
  (0, _react.useEffect)(() => {
    return () => {
      dispatch((0, _state.setFlyoutConfig)(null));
    };
  }, [dispatch]);
  const upsertStatus = (0, _reactRedux.useSelector)((0, _state.selectMonitorUpsertStatus)(configId));
  const upsertSuccess = (upsertStatus === null || upsertStatus === void 0 ? void 0 : upsertStatus.status) === 'success';
  const {
    data: monitorObject,
    error,
    status,
    loading
  } = (0, _public2.useFetcher)(() => (0, _api.fetchSyntheticsMonitor)({
    monitorId: configId
  }),
  // FIXME: Dario thinks there is a better way to do this but
  // he's getting tired and maybe the Synthetics folks can fix it
  // eslint-disable-next-line react-hooks/exhaustive-deps
  [configId, upsertSuccess]);
  const [isActionsPopoverOpen, setIsActionsPopoverOpen] = (0, _react.useState)(false);
  const monitorDetail = (0, _use_monitor_detail.useMonitorDetail)(configId, props.location);
  const {
    locations
  } = (0, _use_status_by_location.useStatusByLocation)({
    configId,
    monitorLocations: monitorObject === null || monitorObject === void 0 ? void 0 : monitorObject.locations
  });
  const isOverlay = (0, _eui.useIsWithinMaxBreakpoint)('xl');
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlyout, {
    size: "600px",
    type: isOverlay ? 'overlay' : 'push',
    onClose: props.onClose,
    paddingSize: "none"
  }, status === _public2.FETCH_STATUS.FAILURE && /*#__PURE__*/_react.default.createElement(_eui.EuiErrorBoundary, null, error === null || error === void 0 ? void 0 : error.message), status === _public2.FETCH_STATUS.LOADING && /*#__PURE__*/_react.default.createElement(LoadingState, null), status === _public2.FETCH_STATUS.SUCCESS && monitorObject && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlyoutHeader, {
    hasBorder: true
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, {
    hasBorder: false,
    hasShadow: false,
    paddingSize: "l"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    responsive: false,
    gutterSize: "s"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "s"
  }, /*#__PURE__*/_react.default.createElement("h2", null, monitorObject === null || monitorObject === void 0 ? void 0 : monitorObject[_types.ConfigKey.NAME]))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, monitor && /*#__PURE__*/_react.default.createElement(_actions_popover.ActionsPopover, {
    isPopoverOpen: isActionsPopoverOpen,
    isInspectView: true,
    monitor: monitor,
    setIsPopoverOpen: setIsActionsPopoverOpen,
    position: "default",
    iconHasPanel: false,
    iconSize: "xs",
    locationId: locationId
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(DetailedFlyoutHeader, {
    currentLocation: props.location,
    locations: locations,
    setCurrentLocation: setLocation,
    configId: configId,
    monitor: monitorObject,
    onEnabledChange: props.onEnabledChange
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlyoutBody, null, /*#__PURE__*/_react.default.createElement(DetailFlyoutDurationChart, (0, _extends2.default)({}, props, {
    location: props.location
  })), /*#__PURE__*/_react.default.createElement(_monitor_details_panel.MonitorDetailsPanel, {
    hasBorder: false,
    hideEnabled: true,
    latestPing: monitorDetail.data,
    configId: configId,
    monitor: {
      ...monitorObject,
      id
    },
    loading: Boolean(loading)
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlyoutFooter, null, /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, {
    hasBorder: false,
    hasShadow: false,
    paddingSize: "l",
    color: "transparent"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    justifyContent: "spaceBetween"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, {
    "data-test-subj": "syntheticsMonitorDetailFlyoutButton",
    onClick: props.onClose
  }, CLOSE_FLYOUT_TEXT)), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
    "data-test-subj": "syntheticsMonitorDetailFlyoutButton"
    // `detailLink` can be undefined, in this case, disable the button
    ,
    isDisabled: !detailLink,
    href: detailLink,
    iconType: "sortRight",
    iconSide: "right",
    fill: true
  }, GO_TO_MONITOR_LINK_TEXT)))))));
}
const DURATION_HEADER_TEXT = _i18n.i18n.translate('xpack.synthetics.monitorList.durationHeaderText', {
  defaultMessage: 'Duration'
});
const DURATION_SERIES_NAME = _i18n.i18n.translate('xpack.synthetics.monitorList.durationChart.durationSeriesName', {
  defaultMessage: 'Duration'
});
const PREVIOUS_PERIOD_SERIES_NAME = _i18n.i18n.translate('xpack.synthetics.monitorList.durationChart.previousPeriodSeriesName', {
  defaultMessage: 'Previous period'
});
const ENABLED_ITEM_TEXT = _i18n.i18n.translate('xpack.synthetics.monitorList.enabledItemText', {
  defaultMessage: 'Enabled (all locations)'
});
const CLOSE_FLYOUT_TEXT = _i18n.i18n.translate('xpack.synthetics.monitorList.closeFlyoutText', {
  defaultMessage: 'Close'
});
const GO_TO_MONITOR_LINK_TEXT = _i18n.i18n.translate('xpack.synthetics.monitorList.goToMonitorLinkText', {
  defaultMessage: 'Go to monitor'
});