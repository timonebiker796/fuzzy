"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SyntheticsParamsReadonlyCodec = exports.SyntheticsParamsCodec = exports.SyntheticsParamRequestCodec = exports.DeleteParamsResponseCodec = void 0;
var t = _interopRequireWildcard(require("io-ts"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SyntheticsParamsReadonlyCodec = exports.SyntheticsParamsReadonlyCodec = t.intersection([t.interface({
  id: t.string,
  key: t.string
}), t.partial({
  description: t.string,
  tags: t.array(t.string),
  namespaces: t.array(t.string)
})]);
const SyntheticsParamsCodec = exports.SyntheticsParamsCodec = t.intersection([SyntheticsParamsReadonlyCodec, t.interface({
  value: t.string
})]);
const DeleteParamsResponseCodec = exports.DeleteParamsResponseCodec = t.intersection([t.interface({
  id: t.string,
  deleted: t.boolean
}), t.partial({
  error: t.string
})]);
const SyntheticsParamRequestCodec = exports.SyntheticsParamRequestCodec = t.intersection([t.interface({
  key: t.string,
  value: t.string
}), t.partial({
  description: t.string,
  tags: t.array(t.string),
  share_across_spaces: t.boolean
})]);