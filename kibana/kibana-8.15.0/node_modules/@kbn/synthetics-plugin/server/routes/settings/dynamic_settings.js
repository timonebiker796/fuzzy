"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.validateInteger = exports.createPostDynamicSettingsRoute = exports.createGetDynamicSettingsRoute = exports.VALUE_MUST_BE_AN_INTEGER = exports.DynamicSettingsSchema = void 0;
var _i18n = require("@kbn/i18n");
var _configSchema = require("@kbn/config-schema");
var _saved_objects = require("../../saved_objects");
var _constants = require("../../../common/constants");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const createGetDynamicSettingsRoute = () => ({
  method: 'GET',
  path: _constants.SYNTHETICS_API_URLS.DYNAMIC_SETTINGS,
  validate: false,
  handler: async ({
    savedObjectsClient
  }) => {
    const dynamicSettingsAttributes = await _saved_objects.savedObjectsAdapter.getSyntheticsDynamicSettings(savedObjectsClient);
    return fromAttribute(dynamicSettingsAttributes);
  }
});
exports.createGetDynamicSettingsRoute = createGetDynamicSettingsRoute;
const createPostDynamicSettingsRoute = () => ({
  method: 'PUT',
  path: _constants.SYNTHETICS_API_URLS.DYNAMIC_SETTINGS,
  validate: {
    body: DynamicSettingsSchema
  },
  writeAccess: true,
  handler: async ({
    savedObjectsClient,
    request
  }) => {
    const newSettings = request.body;
    const prevSettings = await _saved_objects.savedObjectsAdapter.getSyntheticsDynamicSettings(savedObjectsClient);
    const attr = await _saved_objects.savedObjectsAdapter.setSyntheticsDynamicSettings(savedObjectsClient, {
      ...prevSettings,
      ...newSettings
    });
    return fromAttribute(attr);
  }
});
exports.createPostDynamicSettingsRoute = createPostDynamicSettingsRoute;
const fromAttribute = attr => {
  return {
    certExpirationThreshold: attr.certExpirationThreshold,
    certAgeThreshold: attr.certAgeThreshold,
    defaultConnectors: attr.defaultConnectors,
    defaultEmail: attr.defaultEmail
  };
};
const VALUE_MUST_BE_AN_INTEGER = exports.VALUE_MUST_BE_AN_INTEGER = _i18n.i18n.translate('xpack.synthetics.settings.invalid.nanError', {
  defaultMessage: 'Value must be an integer.'
});
const validateInteger = value => {
  if (value % 1) {
    return VALUE_MUST_BE_AN_INTEGER;
  }
};
exports.validateInteger = validateInteger;
const DynamicSettingsSchema = exports.DynamicSettingsSchema = _configSchema.schema.object({
  certAgeThreshold: _configSchema.schema.maybe(_configSchema.schema.number({
    min: 1,
    validate: validateInteger
  })),
  certExpirationThreshold: _configSchema.schema.maybe(_configSchema.schema.number({
    min: 1,
    validate: validateInteger
  })),
  defaultConnectors: _configSchema.schema.maybe(_configSchema.schema.arrayOf(_configSchema.schema.string())),
  defaultEmail: _configSchema.schema.maybe(_configSchema.schema.object({
    to: _configSchema.schema.arrayOf(_configSchema.schema.string()),
    cc: _configSchema.schema.maybe(_configSchema.schema.arrayOf(_configSchema.schema.string())),
    bcc: _configSchema.schema.maybe(_configSchema.schema.arrayOf(_configSchema.schema.string()))
  }))
});