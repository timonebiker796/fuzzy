"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabularPage = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var i18n = _interopRequireWildcard(require("../../../common/translations"));
var _use_table_data = require("../../hooks/use_table_data");
var _use_all_inference_endpoints_state = require("../../hooks/use_all_inference_endpoints_state");
var _service_provider_filter = require("./filter/service_provider_filter");
var _task_type_filter = require("./filter/task_type_filter");
var _table_search = require("./search/table_search");
var _deployment_status = require("./render_table_columns/render_deployment_status/deployment_status");
var _endpoint_info = require("./render_table_columns/render_endpoint/endpoint_info");
var _service_provider = require("./render_table_columns/render_service_provider/service_provider");
var _task_type = require("./render_table_columns/render_task_type/task_type");
var _delete_action = require("./render_table_columns/render_actions/actions/delete/delete_action");
var _copy_id_action = require("./render_table_columns/render_actions/actions/copy_id/copy_id_action");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const TabularPage = ({
  inferenceEndpoints
}) => {
  const [searchKey, setSearchKey] = _react.default.useState('');
  const {
    queryParams,
    setQueryParams,
    filterOptions,
    setFilterOptions
  } = (0, _use_all_inference_endpoints_state.useAllInferenceEndpointsState)();
  const onFilterChangedCallback = (0, _react.useCallback)(newFilterOptions => {
    setFilterOptions(newFilterOptions);
  }, [setFilterOptions]);
  const {
    paginatedSortedTableData,
    pagination,
    sorting
  } = (0, _use_table_data.useTableData)(inferenceEndpoints, queryParams, filterOptions, searchKey);
  const tableColumns = [{
    field: 'deployment',
    name: '',
    render: deployment => /*#__PURE__*/_react.default.createElement(_deployment_status.DeploymentStatus, {
      status: deployment
    }),
    align: 'center',
    width: '64px'
  }, {
    field: 'endpoint',
    name: i18n.ENDPOINT,
    render: endpoint => {
      if (endpoint) {
        return /*#__PURE__*/_react.default.createElement(_endpoint_info.EndpointInfo, {
          endpoint: endpoint
        });
      }
      return null;
    },
    sortable: true,
    truncateText: true
  }, {
    field: 'provider',
    name: i18n.SERVICE_PROVIDER,
    render: provider => {
      if (provider) {
        return /*#__PURE__*/_react.default.createElement(_service_provider.ServiceProvider, {
          providerKey: provider
        });
      }
      return null;
    },
    sortable: false,
    width: '185px'
  }, {
    field: 'type',
    name: i18n.TASK_TYPE,
    render: type => {
      if (type) {
        return /*#__PURE__*/_react.default.createElement(_task_type.TaskType, {
          type: type
        });
      }
      return null;
    },
    sortable: false,
    width: '185px'
  }, {
    actions: [{
      render: inferenceEndpoint => /*#__PURE__*/_react.default.createElement(_copy_id_action.CopyIDAction, {
        inferenceId: inferenceEndpoint.endpoint.inference_id
      })
    }, {
      render: inferenceEndpoint => /*#__PURE__*/_react.default.createElement(_delete_action.DeleteAction, {
        selectedEndpoint: inferenceEndpoint
      })
    }],
    width: '165px'
  }];
  const handleTableChange = (0, _react.useCallback)(({
    page,
    sort
  }) => {
    const newQueryParams = {
      ...queryParams,
      ...(sort && {
        sortField: sort.field,
        sortOrder: sort.direction
      }),
      ...(page && {
        page: page.index + 1,
        perPage: page.size
      })
    };
    setQueryParams(newQueryParams);
  }, [queryParams, setQueryParams]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    direction: "column"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "s"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    style: {
      width: '400px'
    },
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_table_search.TableSearch, {
    searchKey: searchKey,
    setSearchKey: setSearchKey
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_service_provider_filter.ServiceProviderFilter, {
    optionKeys: filterOptions.provider,
    onChange: onFilterChangedCallback
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_task_type_filter.TaskTypeFilter, {
    optionKeys: filterOptions.type,
    onChange: onFilterChangedCallback
  })))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiBasicTable, {
    columns: tableColumns,
    itemId: "id",
    items: paginatedSortedTableData,
    onChange: handleTableChange,
    pagination: pagination,
    sorting: sorting
  })));
};
exports.TabularPage = TabularPage;