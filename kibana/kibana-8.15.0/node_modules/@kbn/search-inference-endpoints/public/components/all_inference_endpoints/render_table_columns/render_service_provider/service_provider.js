"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ServiceProvider = exports.SERVICE_PROVIDERS = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireDefault(require("react"));
var _elastic = _interopRequireDefault(require("../../../../assets/images/providers/elastic.svg"));
var _hugging_face = _interopRequireDefault(require("../../../../assets/images/providers/hugging_face.svg"));
var _cohere = _interopRequireDefault(require("../../../../assets/images/providers/cohere.svg"));
var _open_ai = _interopRequireDefault(require("../../../../assets/images/providers/open_ai.svg"));
var _azure_ai_studio = _interopRequireDefault(require("../../../../assets/images/providers/azure_ai_studio.svg"));
var _azure_open_ai = _interopRequireDefault(require("../../../../assets/images/providers/azure_open_ai.svg"));
var _google_ai_studio = _interopRequireDefault(require("../../../../assets/images/providers/google_ai_studio.svg"));
var _mistral = _interopRequireDefault(require("../../../../assets/images/providers/mistral.svg"));
var _amazon_bedrock = _interopRequireDefault(require("../../../../assets/images/providers/amazon_bedrock.svg"));
var _types = require("../../types");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SERVICE_PROVIDERS = exports.SERVICE_PROVIDERS = {
  [_types.ServiceProviderKeys.amazonbedrock]: {
    icon: _amazon_bedrock.default,
    name: 'Amazon Bedrock'
  },
  [_types.ServiceProviderKeys.azureaistudio]: {
    icon: _azure_ai_studio.default,
    name: 'Azure AI Studio'
  },
  [_types.ServiceProviderKeys.azureopenai]: {
    icon: _azure_open_ai.default,
    name: 'Azure OpenAI'
  },
  [_types.ServiceProviderKeys.cohere]: {
    icon: _cohere.default,
    name: 'Cohere'
  },
  [_types.ServiceProviderKeys.elasticsearch]: {
    icon: _elastic.default,
    name: 'Elasticsearch'
  },
  [_types.ServiceProviderKeys.elser]: {
    icon: _elastic.default,
    name: 'ELSER'
  },
  [_types.ServiceProviderKeys.googleaistudio]: {
    icon: _google_ai_studio.default,
    name: 'Google AI Studio'
  },
  [_types.ServiceProviderKeys.hugging_face]: {
    icon: _hugging_face.default,
    name: 'Hugging Face'
  },
  [_types.ServiceProviderKeys.mistral]: {
    icon: _mistral.default,
    name: 'Mistral'
  },
  [_types.ServiceProviderKeys.openai]: {
    icon: _open_ai.default,
    name: 'OpenAI'
  }
};
const ServiceProvider = ({
  providerKey
}) => {
  const provider = SERVICE_PROVIDERS[providerKey];
  return provider ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
    "data-test-subj": `table-column-service-provider-${providerKey}`,
    type: provider.icon,
    style: {
      marginRight: '8px'
    }
  }), /*#__PURE__*/_react.default.createElement("span", null, provider.name)) : /*#__PURE__*/_react.default.createElement("span", null, providerKey);
};
exports.ServiceProvider = ServiceProvider;