"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  ENDPOINT_DELETION_FAILED: true,
  DELETE_SUCCESS: true
};
exports.ENDPOINT_DELETION_FAILED = exports.DELETE_SUCCESS = void 0;
var _i18n = require("@kbn/i18n");
var _translations = require("../../common/translations");
Object.keys(_translations).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _translations[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _translations[key];
    }
  });
});
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ENDPOINT_DELETION_FAILED = exports.ENDPOINT_DELETION_FAILED = _i18n.i18n.translate('xpack.searchInferenceEndpoints.deleteEndpoint.endpointDeletionFailed', {
  defaultMessage: 'Endpoint deletion failed'
});
const DELETE_SUCCESS = exports.DELETE_SUCCESS = _i18n.i18n.translate('xpack.searchInferenceEndpoints.deleteEndpoint.deleteSuccess', {
  defaultMessage: 'The inference endpoint has been deleted sucessfully.'
});