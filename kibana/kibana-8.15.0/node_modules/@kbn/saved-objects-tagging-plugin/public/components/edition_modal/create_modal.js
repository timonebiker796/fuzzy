"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CreateTagModal = void 0;
var _react = _interopRequireWildcard(require("react"));
var _rxjs = require("rxjs");
var _i18n = require("@kbn/i18n");
var _tags = require("../../services/tags");
var _utils = require("./utils");
var _create_or_edit_modal = require("./create_or_edit_modal");
var _use_validation = require("./use_validation");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const getDefaultAttributes = providedDefaults => ({
  name: '',
  description: '',
  color: (0, _utils.getRandomColor)(),
  ...providedDefaults
});
const CreateTagModal = ({
  defaultValues,
  tagClient,
  notifications,
  onClose,
  onSave
}) => {
  const [tagAttributes, setTagAttributes] = (0, _react.useState)(getDefaultAttributes(defaultValues));
  const {
    validation,
    setValidation,
    onNameChange,
    validation$,
    isValidating
  } = (0, _use_validation.useValidation)({
    tagAttributes,
    tagClient,
    validateDuplicateNameOnMount: true
  });
  const setField = (0, _react.useCallback)(field => value => {
    setTagAttributes(current => ({
      ...current,
      [field]: value
    }));
  }, []);
  const onSubmit = (0, _react.useCallback)(async () => {
    const {
      hasDuplicateNameError
    } = await (0, _rxjs.lastValueFrom)(validation$.pipe((0, _rxjs.first)(v => v.isValidating === false)));
    if (hasDuplicateNameError) {
      return;
    }
    const clientValidation = (0, _utils.validateTag)(tagAttributes);
    setValidation(clientValidation);
    if (!clientValidation.valid) {
      return;
    }
    try {
      const createdTag = await tagClient.create(tagAttributes);
      onSave(createdTag);
    } catch (e) {
      // if e is IHttpFetchError, actual server error payload is in e.body
      if ((0, _tags.isServerValidationError)(e.body)) {
        setValidation(e.body.attributes);
      } else {
        notifications.toasts.addDanger({
          title: _i18n.i18n.translate('xpack.savedObjectsTagging.saveTagErrorTitle', {
            defaultMessage: 'An error occurred creating tag'
          }),
          text: e.body.message
        });
      }
    }
  }, [validation$, tagAttributes, setValidation, tagClient, onSave, notifications.toasts]);
  return /*#__PURE__*/_react.default.createElement(_create_or_edit_modal.CreateOrEditModal, {
    onClose: onClose,
    onSubmit: onSubmit,
    onNameChange: onNameChange,
    mode: 'create',
    tag: tagAttributes,
    setField: setField,
    validation: validation,
    isValidating: isValidating
  });
};
exports.CreateTagModal = CreateTagModal;