"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.totalHitsStatusSelector = exports.totalHitsResultSelector = exports.topPanelHeightSelector = exports.timeIntervalSelector = exports.lensEmbeddableOutputSelector$ = exports.lensAdaptersSelector = exports.chartHiddenSelector = exports.breakdownFieldSelector = void 0;
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const breakdownFieldSelector = state => state.breakdownField;
exports.breakdownFieldSelector = breakdownFieldSelector;
const chartHiddenSelector = state => state.chartHidden;
exports.chartHiddenSelector = chartHiddenSelector;
const timeIntervalSelector = state => state.timeInterval;
exports.timeIntervalSelector = timeIntervalSelector;
const topPanelHeightSelector = state => state.topPanelHeight;
exports.topPanelHeightSelector = topPanelHeightSelector;
const totalHitsResultSelector = state => state.totalHitsResult;
exports.totalHitsResultSelector = totalHitsResultSelector;
const totalHitsStatusSelector = state => state.totalHitsStatus;
exports.totalHitsStatusSelector = totalHitsStatusSelector;
const lensAdaptersSelector = state => state.lensAdapters;
exports.lensAdaptersSelector = lensAdaptersSelector;
const lensEmbeddableOutputSelector$ = state => state.lensEmbeddableOutput$;
exports.lensEmbeddableOutputSelector$ = lensEmbeddableOutputSelector$;