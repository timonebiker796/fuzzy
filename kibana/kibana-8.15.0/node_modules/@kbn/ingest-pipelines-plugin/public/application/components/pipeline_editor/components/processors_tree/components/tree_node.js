"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TreeNode = void 0;
var _react = _interopRequireWildcard(require("react"));
var _i18n = require("@kbn/i18n");
var _eui = require("@elastic/eui");
var _pipeline_processors_editor_item = require("../../pipeline_processors_editor_item");
var _add_processor_button = require("../../add_processor_button");
var _private_tree = require("./private_tree");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const INDENTATION_PX = 34;
const TreeNode = ({
  processor,
  processorInfo,
  onAction,
  movingProcessor,
  level
}) => {
  const stringSelector = processorInfo.selector.join('.');
  const handlers = (0, _react.useMemo)(() => {
    return {
      onMove: () => {
        onAction({
          type: 'selectToMove',
          payload: {
            info: processorInfo
          }
        });
      },
      onCancelMove: () => {
        onAction({
          type: 'cancelMove'
        });
      }
    };
  }, [onAction, stringSelector, processor]); // eslint-disable-line react-hooks/exhaustive-deps

  const renderOnFailureHandlersTree = (0, _react.useCallback)(() => {
    var _processor$onFailure;
    if (!((_processor$onFailure = processor.onFailure) !== null && _processor$onFailure !== void 0 && _processor$onFailure.length)) {
      return;
    }
    return /*#__PURE__*/_react.default.createElement("div", {
      className: "pipelineProcessorsEditor__tree__onFailureHandlerContainer",
      style: {
        marginLeft: `${level * INDENTATION_PX}px`
      }
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
      size: "m",
      color: "subdued"
    }, _i18n.i18n.translate('xpack.ingestPipelines.pipelineEditor.onFailureProcessorsLabel', {
      defaultMessage: 'Failure handlers'
    })), /*#__PURE__*/_react.default.createElement(_private_tree.PrivateTree, {
      level: level + 1,
      movingProcessor: movingProcessor,
      onAction: onAction,
      selector: processorInfo.selector.concat('onFailure'),
      processors: processor.onFailure
    }), /*#__PURE__*/_react.default.createElement(_add_processor_button.AddProcessorButton, {
      "data-test-subj": stringSelector,
      renderButtonAsLink: true,
      onClick: () => onAction({
        type: 'addProcessor',
        payload: {
          target: processorInfo.selector.concat('onFailure')
        }
      })
    }));
  }, [processor.onFailure, stringSelector, onAction, movingProcessor, level]); // eslint-disable-line react-hooks/exhaustive-deps

  return /*#__PURE__*/_react.default.createElement(_pipeline_processors_editor_item.PipelineProcessorsEditorItem, {
    movingProcessor: movingProcessor,
    selector: processorInfo.selector,
    processor: processor,
    handlers: handlers,
    description: processor.options.description,
    renderOnFailureHandlers: renderOnFailureHandlersTree
  });
};
exports.TreeNode = TreeNode;