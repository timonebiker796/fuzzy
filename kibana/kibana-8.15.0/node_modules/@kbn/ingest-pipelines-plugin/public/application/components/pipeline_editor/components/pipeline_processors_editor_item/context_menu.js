"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ContextMenu = void 0;
var _classnames = _interopRequireDefault(require("classnames"));
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18n_texts = require("./i18n_texts");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ContextMenu = props => {
  const {
    showAddOnFailure,
    onDuplicate,
    onAddOnFailure,
    onDelete,
    disabled,
    hidden
  } = props;
  const [isOpen, setIsOpen] = (0, _react.useState)(false);
  const containerClasses = (0, _classnames.default)({
    'pipelineProcessorsEditor__item--displayNone': hidden
  });
  const contextMenuItems = [/*#__PURE__*/_react.default.createElement(_eui.EuiContextMenuItem, {
    "data-test-subj": "duplicateButton",
    key: "duplicate",
    icon: "copy",
    onClick: () => {
      setIsOpen(false);
      onDuplicate();
    }
  }, _i18n_texts.i18nTexts.duplicateButtonLabel), showAddOnFailure ? /*#__PURE__*/_react.default.createElement(_eui.EuiContextMenuItem, {
    "data-test-subj": "addOnFailureButton",
    key: "addOnFailure",
    icon: "indexClose",
    onClick: () => {
      setIsOpen(false);
      onAddOnFailure();
    }
  }, _i18n_texts.i18nTexts.addOnFailureButtonLabel) : undefined, /*#__PURE__*/_react.default.createElement(_eui.EuiContextMenuItem, {
    "data-test-subj": "deleteButton",
    key: "delete",
    icon: "trash",
    color: "danger",
    onClick: () => {
      setIsOpen(false);
      onDelete();
    }
  }, _i18n_texts.i18nTexts.deleteButtonLabel)].filter(Boolean);
  return /*#__PURE__*/_react.default.createElement("div", {
    className: containerClasses
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiPopover, {
    "data-test-subj": props['data-test-subj'],
    anchorPosition: "leftCenter",
    panelPaddingSize: "none",
    isOpen: isOpen,
    closePopover: () => setIsOpen(false),
    button: /*#__PURE__*/_react.default.createElement(_eui.EuiButtonIcon, {
      "data-test-subj": "button",
      disabled: disabled,
      onClick: () => setIsOpen(v => !v),
      iconType: "boxesHorizontal",
      "aria-label": _i18n_texts.i18nTexts.moreButtonAriaLabel
    })
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiContextMenuPanel, {
    items: contextMenuItems
  })));
};
exports.ContextMenu = ContextMenu;