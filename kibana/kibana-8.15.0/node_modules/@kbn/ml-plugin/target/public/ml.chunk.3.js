/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[3],{334:function(e,t,s){"use strict";s.d(t,"a",(function(){return i}));var r=s(86),l=s(37);function i(e){return(Object(l.a)(e,["type"])&&1===Object.keys(e).length||Object(l.a)(e,["type","script"])&&("string"==typeof e.script||Object(l.a)(e.script,["source"])&&"string"==typeof e.script.source||Object(l.a)(e.script,["id"])&&"string"==typeof e.script.id))&&r.RUNTIME_FIELD_TYPES.includes(e.type)}},423:function(e,t,s){"use strict";s.d(t,"a",(function(){return i}));var r=s(37),l=s(334);function i(e){return Object(r.a)(e)&&Object.values(e).every((e=>Object(l.a)(e)))}},80:function(e,t,s){"use strict";s.r(t),s.d(t,"mlResultsService",(function(){return p})),s.d(t,"mlResultsServiceProvider",(function(){return v})),s.d(t,"useMlResultsService",(function(){return j}));var r=s(2),l=s(7),i=s(8),c=s(37),o=s(830),n=s(252),a=s(423),u=s(123),d=s(180),m=s(333);function g(e){return{getMetricData(t,s,r,i,n,g,_,f,y,b,h){const p=null==h?void 0:h.script_fields,v=Object(m.b)(h),j=[],O=[{range:{[_]:{gte:f,lte:y,format:"epoch_millis"}}},...r?[r]:[]];s.forEach((e=>{0!==e.fieldValue.length?O.push({term:{[e.fieldName]:e.fieldValue}}):(j.push({bool:{must:[{term:{[e.fieldName]:""}}]}}),j.push({bool:{must_not:[{exists:{field:e.fieldName}}]}}))}));const q={query:{bool:{must:O}},size:0,_source:!1,aggs:{byTime:{date_histogram:{field:_,fixed_interval:`${b}ms`,min_doc_count:0}}},...Object(a.a)(null==h?void 0:h.runtime_mappings)?{runtime_mappings:null==h?void 0:h.runtime_mappings}:{}};if(j.length>0&&(q.query.bool.should=j,q.query.bool.minimum_should_match=j.length/2),q.aggs.byTime.aggs={},void 0!==n&&""!==n&&i){const e={[i]:{}};if(void 0!==p&&void 0!==p[n]?e[i].script=p[n].script:e[i].field=n,"percentiles"===i&&(e[i].percents=[u.b]),Object(c.a)(v)){var k;const e=Object.keys(v)[0],t={...null!==(k=v[e].aggs)&&void 0!==k?k:v[e].aggregations},s=Object(d.a)(t,n);void 0!==s&&(t.metric=s,delete t[n]),q.aggs.byTime.aggs=t}else q.aggs.byTime.aggs.metric=e}else if(void 0!==g&&i===o.a.CARDINALITY&&"object"==typeof v&&Object.keys(v).length>0){var x;const e=Object.keys(v)[0],t={...null!==(x=v[e].aggs)&&void 0!==x?x:v[e].aggregations},s=Object(d.a)(t,g);void 0!==s&&(t.metric=s),q.aggs.byTime.aggs=t}return e.esSearch$({index:t,body:q}).pipe(Object(l.map)((e=>{var t,s,r;const l={success:!0,results:{}};return(null!==(t=null==e||null===(s=e.aggregations)||void 0===s||null===(r=s.byTime)||void 0===r?void 0:r.buckets)&&void 0!==t?t:[]).forEach((e=>{if("count"===i)l.results[e.key]=e.doc_count;else{var t,s;const r=null==e||null===(t=e.metric)||void 0===t?void 0:t.value,i=null==e||null===(s=e.metric)||void 0===s?void 0:s.values;if(0===e.doc_count)l.results[e.key]=null;else if(void 0!==r)l.results[e.key]=r;else if(void 0!==i){const t=i[u.b];l.results[e.key]=isNaN(t)?null:t}else l.results[e.key]=null}})),l})))},getModelPlotOutput(t,s,r,c,o,n,a){const u={success:!0,results:{}},d=void 0===a?{max:"max",min:"min"}:{max:a.max,min:a.min},m=[{term:{job_id:t}},{range:{timestamp:{gte:c,lte:o,format:"epoch_millis"}}}];Object(i.each)(r,(e=>{m.push({term:{[e.fieldName]:e.fieldValue}})}));const g=[{term:{detector_index:s}},{bool:{must_not:[{exists:{field:"detector_index"}}]}}];return e.results.anomalySearch$({body:{size:0,query:{bool:{filter:[{query_string:{query:"result_type:model_plot",analyze_wildcard:!0}},{bool:{must:m,should:g,minimum_should_match:1}}]}},aggs:{times:{date_histogram:{field:"timestamp",fixed_interval:`${n}ms`,min_doc_count:0},aggs:{actual:{avg:{field:"actual"}},modelUpper:{[d.max]:{field:"model_upper"}},modelLower:{[d.min]:{field:"model_lower"}}}}}}},[t]).pipe(Object(l.map)((e=>{const t=Object(i.get)(e,["aggregations","times","buckets"],[]);return Object(i.each)(t,(e=>{const t=e.key,s=Object(i.get)(e,["modelUpper","value"]),r=Object(i.get)(e,["modelLower","value"]),l=Object(i.get)(e,["actual","value"]);u.results[t]={actual:l,modelUpper:void 0===s||!1===isFinite(s)?null:s,modelLower:void 0===r||!1===isFinite(r)?null:r}})),u})))},getRecordsForCriteria(t,s,r,c,o,a,u){const d={success:!0,records:[]},m=[{range:{timestamp:{gte:c,lte:o,format:"epoch_millis"}}},{range:{record_score:{gte:r}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(i.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),m.push({query_string:{analyze_wildcard:!1,query:e}})}if(Object(i.each)(s,(e=>{m.push({term:{[e.fieldName]:e.fieldValue}})})),void 0!==u){const e=void 0!==u?n.b.toML(u):u;m.push({term:{function_description:e}})}return e.results.anomalySearch$({body:{size:void 0!==a?a:100,query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:m}}]}},sort:[{record_score:{order:"desc"}}]}},t).pipe(Object(l.map)((e=>(e.hits.total.value>0&&Object(i.each)(e.hits.hits,(e=>{d.records.push(e._source)})),d))))},getScheduledEventsByBucket(t,s,r,c,o,n){const a={success:!0,events:{}},u=[{range:{timestamp:{gte:s,lte:r,format:"epoch_millis"}}},{exists:{field:"scheduled_events"}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(i.each)(t,((t,s)=>{e+=`${s>0?" OR ":""}job_id:${t}`})),u.push({query_string:{analyze_wildcard:!1,query:e}})}return e.results.anomalySearch$({body:{size:0,query:{bool:{filter:[{query_string:{query:"result_type:bucket",analyze_wildcard:!1}},{bool:{must:u}}]}},aggs:{jobs:{terms:{field:"job_id",min_doc_count:1,size:o},aggs:{times:{date_histogram:{field:"timestamp",fixed_interval:`${c}ms`,min_doc_count:1},aggs:{events:{terms:{field:"scheduled_events",size:n}}}}}}}}},t).pipe(Object(l.map)((e=>{const t=Object(i.get)(e,["aggregations","jobs","buckets"],[]);return Object(i.each)(t,(e=>{const t=e.key,s={},r=Object(i.get)(e,["times","buckets"],[]);Object(i.each)(r,(e=>{const t=e.key,r=Object(i.get)(e,["events","buckets"]);s[t]=r.map((e=>e.key))})),a.events[t]=s})),a})))},fetchPartitionFieldsValues:(t,s,r,l,i)=>e.results.fetchPartitionFieldsValues(t,s,r,l,i),getRecordsForInfluencer$(t,s,r,c,o,n,a){const u={success:!0,records:[]},d=[{range:{timestamp:{gte:c,lte:o,format:"epoch_millis"}}},{range:{record_score:{gte:r}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(i.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),d.push({query_string:{analyze_wildcard:!1,query:e}})}return void 0!==a&&d.push(a),s.length>0&&d.push({bool:{should:s.map((e=>({nested:{path:"influencers",query:{bool:{must:[{match:{"influencers.influencer_field_name":e.fieldName}},{match:{"influencers.influencer_field_values":e.fieldValue}}]}}}}))),minimum_should_match:1}}),e.results.anomalySearch$({body:{size:void 0!==n?n:100,query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:d}}]}},sort:[{record_score:{order:"desc"}}]}},t).pipe(Object(l.map)((e=>(e.hits.total.value>0&&Object(i.each)(e.hits.hits,(e=>{u.records.push(e._source)})),u))))}}}var _=s(135),f=s(132);function y(e){const t=2e4;return{getScoresByBucket:(t,s,r,l,c=10,o=1,n=0)=>new Promise(((a,u)=>{var d;const m={success:!0,results:{}},g=[{range:{timestamp:{gte:s,lte:r,format:"epoch_millis"}}},{range:{anomaly_score:{gte:n}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(i.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),g.push({query_string:{analyze_wildcard:!1,query:e}})}e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:bucket",analyze_wildcard:!1}},{bool:{must:g}}]}},aggs:{jobsCardinality:{cardinality:{field:"job_id"}},jobId:{terms:{field:"job_id",size:null!==(d=null==t?void 0:t.length)&&void 0!==d?d:1,order:{anomalyScore:"desc"}},aggs:{anomalyScore:{max:{field:"anomaly_score"}},bucketTruncate:{bucket_sort:{from:(o-1)*c,size:0===c?1:c}},byTime:{date_histogram:{field:"timestamp",fixed_interval:`${l}ms`,min_doc_count:1,extended_bounds:{min:s,max:r}},aggs:{anomalyScore:{max:{field:"anomaly_score"}}}}}}}}},t).then((e=>{var t,s,r;const l=Object(i.get)(e,["aggregations","jobId","buckets"],[]);Object(i.each)(l,(e=>{const t=e.key,s={},r=Object(i.get)(e,["byTime","buckets"],[]);Object(i.each)(r,(e=>{if(void 0!==Object(i.get)(e,["anomalyScore","value"])){const t=e.key;s[t]=Object(i.get)(e,["anomalyScore","value"])}})),m.results[t]=s})),m.cardinality=null!==(t=null===(s=e.aggregations)||void 0===s||null===(r=s.jobsCardinality)||void 0===r?void 0:r.value)&&void 0!==t?t:0,a(m)})).catch((e=>{u(e)}))})),getTopInfluencers:(t,s,r,l=f.a,c=10,o=1,n=[],a)=>new Promise(((u,d)=>{const m={success:!0,influencers:{}},g=[{range:{timestamp:{gte:s,lte:r,format:"epoch_millis"}}},{range:{influencer_score:{gt:0}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(i.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),g.push({query_string:{analyze_wildcard:!1,query:e}})}void 0!==a&&g.push(a),n.length>0&&g.push({bool:{should:n.map((e=>({bool:{must:[{term:{influencer_field_name:e.fieldName}},{term:{influencer_field_value:e.fieldValue}}]}}))),minimum_should_match:1}}),e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:influencer",analyze_wildcard:!1}},{bool:{must:g}}]}},aggs:{influencerFieldNames:{terms:{field:"influencer_field_name",size:5,order:{maxAnomalyScore:"desc"}},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}},influencerFieldValues:{terms:{field:"influencer_field_value",size:l||f.a,order:{maxAnomalyScore:"desc"}},aggs:{bucketTruncate:{bucket_sort:{from:(o-1)*c,size:c}},maxAnomalyScore:{max:{field:"influencer_score"}},sumAnomalyScore:{sum:{field:"influencer_score"}}}}}}}}},t).then((e=>{const t=Object(i.get)(e,["aggregations","influencerFieldNames","buckets"],[]);Object(i.each)(t,(e=>{const t=e.key,s=[],r=Object(i.get)(e,["influencerFieldValues","buckets"],[]);Object(i.each)(r,(e=>{const t={influencerFieldValue:e.key,maxAnomalyScore:e.maxAnomalyScore.value,sumAnomalyScore:e.sumAnomalyScore.value};s.push(t)})),m.influencers[t]=s})),u(m)})).catch((e=>{d(e)}))})),getTopInfluencerValues:(t,s,r,l,c)=>new Promise(((o,n)=>{const a={success:!0,results:[]},u=[{range:{timestamp:{gte:r,lte:l,format:"epoch_millis"}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(i.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),u.push({query_string:{analyze_wildcard:!1,query:e}})}e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:`result_type:influencer AND influencer_field_name: ${Object(_.c)(s)}`,analyze_wildcard:!1}},{bool:{must:u}}]}},aggs:{influencerFieldValues:{terms:{field:"influencer_field_value",size:c||2,order:{maxAnomalyScore:"desc"}},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}},sumAnomalyScore:{sum:{field:"influencer_score"}}}}}}},t).then((e=>{const t=Object(i.get)(e,["aggregations","influencerFieldValues","buckets"],[]);Object(i.each)(t,(e=>{const t={influencerFieldValue:e.key,maxAnomalyScore:e.maxAnomalyScore.value,sumAnomalyScore:e.sumAnomalyScore.value};a.results.push(t)})),o(a)})).catch((e=>{n(e)}))})),getOverallBucketScores:(t,s,r,l,c,o)=>new Promise(((n,a)=>{const u={success:!0,results:{}};e.overallBuckets({jobId:t,topN:s,bucketSpan:c,start:r,end:l,overallScore:o}).then((e=>{const t=Object(i.get)(e,["overall_buckets"],[]);Object(i.each)(t,(e=>{const t=Object(i.get)(e,["overall_score"]);void 0!==t&&(u.results[e.timestamp]=t)})),n(u)})).catch((e=>{a(e)}))})),getInfluencerValueMaxScoreByTime:(t,s,r,l,c,o,n=f.a,a=f.i,u=1,d,m)=>new Promise(((g,y)=>{const b={success:!0,results:{}},h=[{range:{timestamp:{gte:l,lte:c,format:"epoch_millis"}}},{range:{influencer_score:{gt:void 0!==m?m:0}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(i.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+=`job_id:${t}`})),h.push({query_string:{analyze_wildcard:!1,query:e}})}if(void 0!==d&&h.push(d),r&&r.length>0){let e="";Object(i.each)(r,((t,s)=>{s>0&&(e+=" OR "),t.trim().length>0?e+=`influencer_field_value:${Object(_.c)(t)}`:e+=`influencer_field_value:"${t}"`})),h.push({query_string:{analyze_wildcard:!1,query:e}})}e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:`result_type:influencer AND influencer_field_name: ${Object(_.c)(s)}`,analyze_wildcard:!1}},{bool:{must:h}}]}},aggs:{influencerValuesCardinality:{cardinality:{field:"influencer_field_value"}},influencerFieldValues:{terms:{field:"influencer_field_value",size:n||f.a,order:{maxAnomalyScore:"desc"}},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}},bucketTruncate:{bucket_sort:{from:(u-1)*a,size:a}},byTime:{date_histogram:{field:"timestamp",fixed_interval:`${o}ms`,min_doc_count:1},aggs:{maxAnomalyScore:{max:{field:"influencer_score"}}}}}}}}},t).then((e=>{var t,s,r;const l=Object(i.get)(e,["aggregations","influencerFieldValues","buckets"],[]);Object(i.each)(l,(e=>{const t=e.key,s={},r=Object(i.get)(e,["byTime","buckets"],[]);Object(i.each)(r,(e=>{const t=e.key,r=e.maxAnomalyScore.value;s[t]=r})),b.results[t]=s})),b.cardinality=null!==(t=null===(s=e.aggregations)||void 0===s||null===(r=s.influencerValuesCardinality)||void 0===r?void 0:r.value)&&void 0!==t?t:0,g(b)})).catch((e=>{y(e)}))})),getRecordInfluencers:(t,s,r,l,c)=>new Promise(((o,n)=>{const a={success:!0,records:[]},u=[{nested:{path:"influencers",query:{bool:{must:[{exists:{field:"influencers"}}]}}}},{range:{timestamp:{gte:r,lte:l,format:"epoch_millis"}}},{range:{record_score:{gte:s}}}];if(t&&t.length>0&&(1!==t.length||"*"!==t[0])){let e="";Object(i.each)(t,((t,s)=>{s>0&&(e+=" OR "),e+="job_id:",e+=t})),u.push({query_string:{analyze_wildcard:!1,query:e}})}e.results.anomalySearch({size:void 0!==c?c:100,body:{_source:["job_id","detector_index","influencers","record_score"],query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:u}}]}},sort:[{record_score:{order:"desc"}}]}},t).then((e=>{e.hits.total.value>0&&Object(i.each)(e.hits.hits,(e=>{a.records.push(e._source)})),o(a)})).catch((e=>{n(e)}))})),getRecordsForDetector:(t,s,r,l,c,o,n,a,u)=>new Promise(((d,m)=>{const g={success:!0,records:[]},_=[{range:{timestamp:{gte:n,lte:a,format:"epoch_millis"}}},{term:{job_id:t}},{term:{detector_index:s}},{range:{record_score:{gte:o}}}];l&&c?_.push({nested:{path:"influencers",query:{bool:{must:[{match:{"influencers.influencer_field_name":l}},{match:{"influencers.influencer_field_values":c}}]}}}}):!0===r&&_.push({nested:{path:"influencers",query:{bool:{must:[{exists:{field:"influencers"}}]}}}}),e.results.anomalySearch({size:void 0!==u?u:100,body:{query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!1}},{bool:{must:_}}]}},sort:[{record_score:{order:"desc"}}]}},[t]).then((e=>{e.hits.total.value>0&&Object(i.each)(e.hits.hits,(e=>{g.records.push(e._source)})),d(g)})).catch((e=>{m(e)}))})),getEventRateData:(t,s,r,l,o,n,a,u)=>new Promise(((d,m)=>{const g={success:!0,results:{}},_=[{range:{[r]:{gte:l,lte:o,format:"epoch_millis"}}}];s&&_.push(s),e.esSearch({index:t,size:0,body:{query:{bool:{must:_}},_source:{excludes:[]},aggs:{eventRate:{date_histogram:{field:r,fixed_interval:`${n}ms`,min_doc_count:0,extended_bounds:{min:l,max:o}}}},...Object(c.a)(a)&&s?{runtime_mappings:a}:{}},...null!=u?u:{}}).then((e=>{const t=Object(i.get)(e,["aggregations","eventRate","buckets"],[]);Object(i.each)(t,(e=>{const t=e.key;g.results[t]=e.doc_count})),g.total=e.hits.total.value,d(g)})).catch((e=>{m(e)}))})),getEventDistributionData:(s,r,l=null,c,o,n,a,d,m,g)=>new Promise(((_,f)=>{if(void 0===r)return _([]);const y=[];y.push({range:{[a]:{gte:d,lte:m,format:"epoch_millis"}}}),c&&y.push(c),null!==l&&y.push({term:{[l.fieldName]:l.fieldValue}});const b={query:{function_score:{query:{bool:{must:y}},functions:[{random_score:{seed:10,field:"_seq_no"}}]}},size:0,_source:{excludes:[]},aggs:{sample:{sampler:{shard_size:t},aggs:{byTime:{date_histogram:{field:a,fixed_interval:`${g}ms`,min_doc_count:1},aggs:{entities:{terms:{field:r.fieldName,size:10,min_doc_count:1}}}}}}}};if(void 0!==n&&""!==n&&"string"==typeof o){b.aggs.sample.aggs.byTime.aggs.entities.aggs={};const e={[o]:{field:n}};"percentiles"===o&&(e[o].percents=[u.b]),"cardinality"===o&&(e[o].precision_threshold=100),b.aggs.sample.aggs.byTime.aggs.entities.aggs.metric=e}e.esSearch({index:s,body:b,track_total_hits:!0}).then((e=>{const s=e.hits.total.value,r=Object(i.get)(e,["_shards","successful"],0);let l=1;s>r*t&&(l=s/(r*t));const c=Object(i.get)(e,["aggregations","sample","byTime","buckets"],[]).reduce(((e,t)=>{const s=+t.key;return Object(i.get)(t,["entities","buckets"],[]).forEach((t=>{let r="count"===o?t.doc_count:t.metric.value;"count"!==o&&"cardinality"!==o&&"sum"!==o||(r*=l),e.push({date:s,entity:t.key,value:r})})),e}),[]);_(c)})).catch((e=>{f(e)}))})),getRecordMaxScoreByTime:(t,s,r,l,c,o)=>new Promise(((a,u)=>{const d={success:!0,results:{}},m=[{range:{timestamp:{gte:r,lte:l,format:"epoch_millis"}}},{term:{job_id:t}}];if(Object(i.each)(s,(e=>{m.push({term:{[e.fieldName]:e.fieldValue}})})),void 0!==o){const e=void 0!==o?n.b.toML(o):o;m.push({term:{function_description:e}})}e.results.anomalySearch({size:0,body:{query:{bool:{filter:[{query_string:{query:"result_type:record",analyze_wildcard:!0}},{bool:{must:m}}]}},aggs:{times:{date_histogram:{field:"timestamp",fixed_interval:`${c}ms`,min_doc_count:1},aggs:{recordScore:{max:{field:"record_score"}}}}}}},[t]).then((e=>{const t=Object(i.get)(e,["aggregations","times","buckets"],[]);Object(i.each)(t,(e=>{const t=e.key;d.results[t]={score:Object(i.get)(e,["recordScore","value"])}})),a(d)})).catch((e=>{u(e)}))}))}}var b=s(11),h=s(10);const p=v(b.ml);function v(e){return{...y(e),...g(e)}}function j(){const{services:{mlServices:{mlApiServices:e}}}=Object(h.d)();return Object(r.useMemo)((()=>v(e)),[e])}}}]);