/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[34],{232:function(e,t,a){"use strict";a.d(t,"b",(function(){return n})),a.d(t,"e",(function(){return r})),a.d(t,"a",(function(){return l})),a.d(t,"c",(function(){return o})),a.d(t,"d",(function(){return s}));var i=a(288);const n="SWIM_LANE_SELECTION_TRIGGER",r={id:n,title:"",description:"Swim lane selection triggered"},l="EXPLORER_ENTITY_FIELD_SELECTION_TRIGGER",o={id:l,title:"",description:"Entity field selection triggered"},s=e=>Object(i.a)(e)&&void 0!==e.data},288:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var i=a(37),n=a(136),r=a(43);function l(e){return Object(i.a)(e,["embeddable"])&&Object(n.e)(e.embeddable,r.c)}},389:function(e,t,a){"use strict";a.d(t,"a",(function(){return g.b})),a.d(t,"b",(function(){return J}));var i=a(93);const n="createMLADCategorizationJobAction",r="CREATE_PATTERN_ANALYSIS_TO_ML_AD_JOB_TRIGGER";var l=a(97),o=a(75),s=a(5),c=a(252),d=a(161),m=a(53);const p="applyEntityFieldFiltersAction";var u=a(110),b=a(7),g=a(232),y=a(132);const f="applyInfluencerFiltersAction",w=[u.DASHBOARD_APP_ID];var A=a(39),h=a.n(A);const v="applyTimeRangeSelectionAction",T=[u.DASHBOARD_APP_ID],V="clearSelectionAction";var E=a(120),I=a.n(E),S=(a(2),a(0)),M=a(6);const j=async e=>{const{apiIsPresentationContainer:t}=await a.e(23).then(a.bind(null,222));return t(e)?e:void 0};var x=a(12);const N=async e=>{const{apiIsPresentationContainer:t}=await a.e(23).then(a.bind(null,222));return t(e)?e:void 0},P={id:r,title:s.i18n.translate("xpack.ml.actions.createADJobFromPatternAnalysis",{defaultMessage:"Create categorization anomaly detection job"}),description:s.i18n.translate("xpack.ml.actions.createADJobFromPatternAnalysis",{defaultMessage:"Create categorization anomaly detection job"})};var D=a(37),_=a(136),H=a(1),O=a(288);const C=e=>{var t;let a=null===(t=e.timeRange$)||void 0===t?void 0:t.getValue();return!a&&Object(_.b)(e)&&Object(_.f)(e.parentApi)&&(a=e.parentApi.timeRange$.getValue()),a},F="openInAnomalyExplorerAction";function R(e){return Object(D.a)(e,["embeddable"])&&Object(_.e)(e.embeddable,d.a)}const L="openInSingleMetricViewerAction";function k(e){return Object(D.a)(e,["embeddable"])&&Object(_.e)(e.embeddable,d.b)}var G=a(91),B=a(98);const Z="createMLADJobAction",q=e=>Object(_.c)(e),$=async e=>{const{apiIsPresentationContainer:t}=await a.e(23).then(a.bind(null,222));return t(e)?e:void 0};function J(e,t){const u=(A=t.getStartServices,{id:"create-single-metric-viewer",grouping:[{id:S.g,getDisplayName:()=>S.a,getIconType:()=>S.e}],order:20,getIconType:()=>"visLine",getDisplayName:()=>s.i18n.translate("xpack.ml.components.singleMetricViewerEmbeddable.displayName",{defaultMessage:"Single metric viewer"}),getDisplayNameTooltip:()=>s.i18n.translate("xpack.ml.components.singleMetricViewerEmbeddable.description",{defaultMessage:"View anomaly detection results for a single metric on a focused date range."}),isCompatible:async e=>Boolean(await N(e.embeddable)),async execute(e){const t=await N(e.embeddable);if(!t)throw new l.IncompatibleActionError;const[i,{data:n,share:r}]=await A();try{const{resolveEmbeddableSingleMetricViewerUserInput:l}=await Promise.all([a.e(0),a.e(1),a.e(2),a.e(3),a.e(19),a.e(31)]).then(a.bind(null,886)),{mlApiServicesProvider:o}=await Promise.resolve().then(a.bind(null,11)),s=o(new x.a(i.http)),c=await l(i,e.embeddable,e.embeddable.uuid,{data:n,share:r},s);t.addNewPanel({panelType:d.b,initialState:{...c,title:c.panelTitle}})}catch(e){return Promise.reject()}}});var A;const E=function(e){return{id:"create-anomaly-swimlane",grouping:[{id:S.g,getDisplayName:()=>S.a,getIconType:()=>S.e}],order:40,getIconType:()=>e=>Object(M.jsx)("svg",I()({width:"16",height:"16",viewBox:"0 0 16 16",xmlns:"http://www.w3.org/2000/svg"},e),Object(M.jsx)("path",{d:"M1 5V1H5V5H1ZM4 4V2H2V4H4ZM6 5V1H10V5H6ZM9 4V2H7V4H9ZM11 5V1H15V5H11ZM12 4H14V2H12V4ZM1 10V6H5V10H1ZM4 9V7H2V9H4ZM6 10V6H10V10H6ZM9 9V7H7V9H9ZM11 10V6H15V10H11ZM14 9V7H12V9H14ZM1 15V11H5V15H1ZM2 14H4V12H2V14ZM6 15V11H10V15H6ZM7 14H9V12H7V14ZM11 15V11H15V15H11ZM12 14H14V12H12V14Z",fill:"currentColor"}),Object(M.jsx)("rect",{width:"4",height:"4",transform:"translate(6 1)",fill:"currentColor"}),Object(M.jsx)("rect",{width:"4",height:"4",transform:"translate(11 6)",fill:"currentColor"}),Object(M.jsx)("rect",{width:"4",height:"4",transform:"translate(6 6)",fill:"currentColor"}),Object(M.jsx)("rect",{width:"4",height:"4",transform:"translate(1 11)",fill:"currentColor"})),getDisplayName:()=>s.i18n.translate("xpack.ml.components.jobAnomalyScoreEmbeddable.displayName",{defaultMessage:"Anomaly swim lane"}),getDisplayNameTooltip:()=>s.i18n.translate("xpack.ml.components.jobAnomalyScoreEmbeddable.description",{defaultMessage:"View anomaly detection results in a timeline."}),isCompatible:async e=>Boolean(await j(e.embeddable)),async execute(t){const i=await j(t.embeddable);if(!i)throw new l.IncompatibleActionError;const[n,r]=await e();try{const{resolveAnomalySwimlaneUserInput:e}=await Promise.all([a.e(0),a.e(58)]).then(a.bind(null,816)),l=await e({...n,...r},t.embeddable,t.embeddable.uuid);i.addNewPanel({panelType:d.c,initialState:{...l,title:l.panelTitle}})}catch(e){return Promise.reject()}}}}(t.getStartServices),D=function(e){return{id:"open-in-anomaly-explorer",type:F,order:40,getIconType:()=>"visTable",getDisplayName:()=>s.i18n.translate("xpack.ml.actions.openInAnomalyExplorerTitle",{defaultMessage:"Open in Anomaly Explorer"}),async getHref(t){const[,a]=await e(),i=a.share.url.locators.get(H.a);if(Object(O.a)(t)){const{data:e,embeddable:a}=t,{viewBy:n,jobIds:r,perPage:l,fromPage:o}=a;return i.getUrl({page:"explorer",pageState:{jobIds:r.getValue(),timeRange:C(a),mlExplorerSwimlane:{viewByFromPage:o.getValue(),viewByPerPage:l.getValue(),viewByFieldName:n.getValue(),...e?{selectedType:e.type,selectedTimes:e.times,selectedLanes:e.lanes}:{}}}})}if(R(t)){var n;const{embeddable:e}=t,{jobIds$:a,selectedEntities$:r}=e,l=null!==(n=null==a?void 0:a.getValue())&&void 0!==n?n:[];let o;const s=null==r?void 0:r.getValue();if(Array.isArray(s)&&1===s.length&&s[0].operation===c.a.ADD){const{fieldName:e,fieldValue:t}=s[0];if(void 0!==e&&void 0!==t){const a=[e,t];o={influencersFilterQuery:{bool:{should:[{match_phrase:{[e]:String(t)}}],minimum_should_match:1}},filterActive:!0,queryString:`${e}:"${t}"`,...Array.isArray(a)?{filteredFields:a}:{}}}}return i.getUrl({page:"explorer",pageState:{jobIds:l,timeRange:C(e),...o?{mlExplorerFilter:o}:{},query:{}}})}},async execute(t){if(!t.embeddable)throw new Error("Not possible to execute an action without the embeddable context");const[{application:a}]=await e(),i=await this.getHref(t);i&&await a.navigateToUrl(i)},isCompatible:async e=>Object(O.a)(e)||R(e)}}(t.getStartServices),J=function(e){return{id:"open-in-single-metric-viewer",type:L,order:100,getIconType:()=>"visLine",getDisplayName:()=>s.i18n.translate("xpack.ml.actions.openInSingleMetricViewerTitle",{defaultMessage:"Open in Single Metric Viewer"}),async getHref(t){const[,a]=await e(),i=a.share.url.locators.get(H.a);if(k(t)){const{embeddable:e}=t,{jobIds:a,selectedEntities:n,selectedDetectorIndex:r}=e;return i.getUrl({page:H.b.SINGLE_METRIC_VIEWER,pageState:{timeRange:C(e),refreshInterval:{display:"Off",pause:!0,value:0},jobIds:a.getValue(),query:{},entities:null==n?void 0:n.getValue(),detectorIndex:null==r?void 0:r.getValue()}},{absolute:!0})}},async execute(t){if(!k(t))throw new l.IncompatibleActionError;const[{application:a}]=await e(),i=await this.getHref(t);i&&await a.navigateToUrl(i)},isCompatible:async e=>k(e)}}(t.getStartServices),U=function(e){return{id:"apply-to-current-view",type:f,getIconType:()=>"filter",getDisplayName:()=>s.i18n.translate("xpack.ml.actions.applyInfluencersFiltersTitle",{defaultMessage:"Filter for value"}),async execute({data:t}){if(!t)throw new Error("No swim lane selection data provided");const[,a]=await e();a.data.query.filterManager.addFilters(t.lanes.map((e=>({$state:{store:o.FilterStateStore.APP_STATE},meta:{alias:s.i18n.translate("xpack.ml.actions.influencerFilterAliasLabel",{defaultMessage:"{labelValue}",values:{labelValue:`${t.viewByFieldName}:${e}`}}),controlledBy:m.b,disabled:!1,key:t.viewByFieldName,negate:!1,params:{query:e},type:"phrase"},query:{match_phrase:{[t.viewByFieldName]:e}}}))))},async isCompatible(t){const[{application:a}]=await e(),i=await Object(b.firstValueFrom)(a.currentAppId$);return w.includes(i)&&Object(g.d)(t)&&void 0!==t.data&&t.data.type===y.h.VIEW_BY&&t.data.viewByFieldName!==y.j&&1===t.data.lanes.length}}}(t.getStartServices),z=function(e){return{id:"apply-entity-field-filters",type:p,getIconType:e=>"filter",getDisplayName:()=>s.i18n.translate("xpack.ml.actions.applyEntityFieldsFiltersTitle",{defaultMessage:"Filter for value"}),async execute({data:t}){if(!t)throw new Error("No entities provided");const[,a]=await e(),i=a.data.query.filterManager;i.addFilters(t.filter((e=>e.operation===c.a.ADD)).map((({fieldName:e,fieldValue:t})=>({$state:{store:o.FilterStateStore.APP_STATE},meta:{alias:s.i18n.translate("xpack.ml.actions.entityFieldFilterAliasLabel",{defaultMessage:"{labelValue}",values:{labelValue:`${e}:${t}`}}),controlledBy:m.a,negate:!1,disabled:!1,type:"phrase",key:e,params:{query:t}},query:{match_phrase:{[e]:t}}})))),t.filter((e=>e.operation===c.a.REMOVE)).forEach((e=>{const t=i.getFilters().find((t=>t.meta.key===e.fieldName&&"object"==typeof t.meta.params&&"query"in t.meta.params&&t.meta.params.query===e.fieldValue));t&&i.removeFilter(t)}))},isCompatible:async({embeddable:e,data:t})=>e.type===d.a&&void 0!==t}}(t.getStartServices),X=function(e){return{id:"apply-time-range-selection",type:v,getIconType:e=>"timeline",getDisplayName:()=>s.i18n.translate("xpack.ml.actions.applyTimeRangeSelectionTitle",{defaultMessage:"Apply time range selection"}),async execute({embeddable:t,data:a}){if(!a)throw new Error("No swim lane selection data provided");const[,i]=await e(),n=i.data.query.timefilter.timefilter,{interval:r}=t;if(!r.getValue())throw new Error("Interval is required to set a time range");let[l,o]=a.times;l*=1e3,o*=1e3,n.setTime({from:h()(l),to:h()(o),mode:"absolute"})},async isCompatible(t){const[{application:a}]=await e(),i=await Object(b.firstValueFrom)(a.currentAppId$);return Object(g.d)(t)&&T.includes(i)}}}(t.getStartServices),W=(t.getStartServices,{id:"clear-selection-action",type:V,getIconType:e=>"cross",getDisplayName:()=>s.i18n.translate("xpack.ml.actions.clearSelectionTitle",{defaultMessage:"Clear selection"}),shouldAutoExecute:()=>Promise.resolve(!1),async execute({updateCallback:e}){e()},isCompatible:async({updateCallback:e})=>"function"==typeof e}),Y=function(e){return{id:"create-ml-ad-job-action",type:Z,getIconType:e=>"machineLearningApp",getDisplayName:()=>s.i18n.translate("xpack.ml.actions.createADJobFromLens",{defaultMessage:"Detect anomalies"}),async execute({embeddable:t}){if(!t)throw new Error("Not possible to execute an action without the embeddable context");try{if(Object(G.isLensApi)(t)){const[{showLensVisToADJobFlyout:i},[n,{share:r,data:l,lens:o,dashboard:s}]]=await Promise.all([Promise.all([a.e(0),a.e(1),a.e(5),a.e(16),a.e(75)]).then(a.bind(null,872)),e()]);if(void 0===o)return;await i(t,n,r,l,s,o)}else if(Object(B.isMapApi)(t)){const[{showMapVisToADJobFlyout:i},[n,{share:r,data:l,dashboard:o}]]=await Promise.all([Promise.all([a.e(0),a.e(1),a.e(5),a.e(16),a.e(76)]).then(a.bind(null,874)),e()]);await i(t,n,r,l,o)}}catch(e){return Promise.reject()}},async isCompatible({embeddable:t}){var i,n;if(!q(t)||!Object(_.e)(t,"lens")&&!Object(_.e)(t,"map"))return!1;const[{getChartInfoFromVisualization:r,isCompatibleVisualizationType:l},[o,{lens:s}]]=await Promise.all([Promise.all([a.e(0),a.e(1),a.e(5),a.e(85)]).then(a.bind(null,272)),e()]),{isCompatibleMapVisualization:c}=await Promise.all([a.e(0),a.e(1),a.e(5),a.e(86)]).then(a.bind(null,273));if(null===(i=o.application.capabilities.ml)||void 0===i||!i.canCreateJob||null===(n=o.application.capabilities.ml)||void 0===n||!n.canStartStopDatafeed)return!1;try{if(Object(G.isLensApi)(t)&&s){const e=t.getSavedVis();return!!e&&l(await r(s,e))}return!!Object(B.isMapApi)(t)&&c(t)}catch(e){return console.error("Error attempting to check for ML job compatibility",e),!1}}}}(t.getStartServices),Q=function(e){return{id:"create-ml-categorization-ad-job-action",type:n,getIconType:e=>"machineLearningApp",getDisplayName:()=>s.i18n.translate("xpack.ml.actions.createADJobFromPatternAnalysis",{defaultMessage:"Create categorization anomaly detection job"}),async execute({dataView:t,field:i,query:n,timeRange:r}){if(!t)throw new Error("Not possible to execute an action without the embeddable context");try{const[{showPatternAnalysisToADJobFlyout:l},[o,{share:s,data:c,dashboard:d}]]=await Promise.all([Promise.all([a.e(0),a.e(1),a.e(5),a.e(16),a.e(87)]).then(a.bind(null,877)),e()]);await l(t,i,n,r,o,s,c,d)}catch(e){return Promise.reject()}},isCompatible:async({dataView:e,field:t})=>void 0!==e.timeFieldName&&void 0!==e.fields.find((e=>e.name===t.name))}}(t.getStartServices),K=function(e){return{id:"create-anomaly-charts",grouping:[{id:S.g,getDisplayName:()=>S.a,getIconType:()=>S.e}],order:30,getIconType:()=>"visLine",getDisplayName:()=>s.i18n.translate("xpack.ml.components.mlAnomalyExplorerEmbeddable.displayName",{defaultMessage:"Anomaly chart"}),getDisplayNameTooltip:()=>s.i18n.translate("xpack.ml.components.mlAnomalyExplorerEmbeddable.description",{defaultMessage:"View anomaly detection results in a chart."}),isCompatible:async e=>Boolean(await $(e.embeddable)),async execute(t){const i=await $(t.embeddable);if(!i)throw new l.IncompatibleActionError;const[n,r]=await e();try{const{resolveEmbeddableAnomalyChartsUserInput:e}=await Promise.all([a.e(0),a.e(1),a.e(30),a.e(77)]).then(a.bind(null,777)),l=await e(n,r,t.embeddable,t.embeddable.uuid);i.addNewPanel({panelType:d.a,initialState:l})}catch(e){return console.error(e),Promise.reject()}}}}(t.getStartServices);e.registerAction(z),e.registerAction(X),e.registerAction(Q),e.registerAction(K),e.addTriggerAction(l.ADD_PANEL_TRIGGER,u),e.addTriggerAction(l.ADD_PANEL_TRIGGER,E),e.addTriggerAction(l.ADD_PANEL_TRIGGER,K),e.addTriggerAction(i.CONTEXT_MENU_TRIGGER,D),e.attachAction(i.CONTEXT_MENU_TRIGGER,J.id),e.registerTrigger(g.e),e.registerTrigger(g.c),e.registerTrigger(P),e.addTriggerAction(g.b,U),e.addTriggerAction(g.b,X),e.addTriggerAction(g.b,D),e.addTriggerAction(g.b,J),e.addTriggerAction(g.b,W),e.addTriggerAction(g.a,z),e.addTriggerAction(i.CONTEXT_MENU_TRIGGER,Y),e.addTriggerAction(r,Q)}}}]);