/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[95],{880:function(e,t,a){"use strict";a.r(t),a.d(t,"ImportJobsFlyout",(function(){return C}));var s=a(2),o=a.n(s),i=a(172),l=a.n(i),n=a(25),d=a(5),r=a(15),c=a(322),b=a(10),j=a(6);const u=({jobs:e,autoExpand:t=!1})=>0===e.length?null:Object(j.jsx)(o.a.Fragment,null,Object(j.jsx)(n.EuiCallOut,{title:d.i18n.translate("xpack.ml.importExport.importFlyout.cannotImportJobCallout.title",{defaultMessage:"{num, plural, one {# job} other {# jobs}} cannot be imported",values:{num:e.length}}),color:"warning","data-test-subj":"mlJobMgmtImportJobsCannotBeImportedCallout"},t?Object(j.jsx)(m,{jobs:e}):Object(j.jsx)(n.EuiAccordion,{id:"advancedOptions",paddingSize:"s","aria-label":d.i18n.translate("xpack.ml.importExport.importFlyout.cannotImportJobCallout.jobListAria",{defaultMessage:"view jobs"}),buttonContent:Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.cannotImportJobCallout.jobListButton",defaultMessage:"View jobs"})},Object(j.jsx)(m,{jobs:e}))),Object(j.jsx)(n.EuiSpacer,{size:"m"})),m=({jobs:e})=>Object(j.jsx)(o.a.Fragment,null,e.length>0&&Object(j.jsx)(o.a.Fragment,null,e.map((({jobId:e,missingIndices:t,missingFilters:a})=>Object(j.jsx)(n.EuiText,{size:"s"},Object(j.jsx)("h5",null,e),t.length>0&&Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.cannotImportJobCallout.missingIndex",defaultMessage:"Missing index {num, plural, one {pattern} other {patterns}}: {indices}",values:{num:t.length,indices:t.join(",")}}),a.length>0&&Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.cannotImportJobCallout.missingFilters",defaultMessage:"Missing filter {num, plural, one {list} other {lists}}: {filters}",values:{num:a.length,filters:a.join(",")}})))))),p=()=>Object(j.jsx)(o.a.Fragment,null,Object(j.jsx)(n.EuiSpacer,{size:"l"}),Object(j.jsx)(n.EuiCallOut,{title:d.i18n.translate("xpack.ml.importExport.importFlyout.cannotReadFileCallout.title",{defaultMessage:"File cannot be read"}),color:"warning"},Object(j.jsx)("div",{"data-test-subj":"mlJobMgmtImportJobsFileReadErrorCallout"},Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.cannotReadFileCallout.body",defaultMessage:"Please select a file contained Machine Learning jobs which have been exported from Kibana using the Export Jobs option"}))));var x=a(71);class JobImportService{_readFile(e){return new Promise(((t,a)=>{if(e&&e.size){const s=new FileReader;s.readAsText(e),s.onload=()=>{const e=s.result;if("string"==typeof e)try{const a=JSON.parse(e);t(a)}catch(e){a()}else a()}}else a()}))}async readJobConfigs(e){try{const a=await this._readFile(e),s=Array.isArray(a)?a:[a];if(t=s,Array.isArray(t)&&t.some((e=>e.job&&e.datafeed))){const e=s.map((e=>e.job.job_id));return{jobs:s,jobIds:e,jobType:"anomaly-detector"}}if(function(e){return Array.isArray(e)&&e.some((e=>e.dest&&e.analysis))}(s)){const e=s.map((e=>e.id));return{jobs:s,jobIds:e,jobType:"data-frame-analytics"}}return{jobs:[],jobIds:[],jobType:null}}catch(e){return{jobs:[],jobIds:[],jobType:null}}var t}renameAdJobs(e,t){return t.length!=t.length?t:t.map(((t,a)=>{const{jobId:s}=e[a];return t.job.job_id=s,t.datafeed.job_id=s,t.datafeed.datafeed_id=`datafeed-${s}`,t}))}renameDfaJobs(e,t){return t.length!=t.length?t:t.map(((t,a)=>{const{jobId:s,destIndex:o}=e[a];return t.id=s,void 0!==o&&(t.dest.index=o),t}))}async validateJobs(e,t,a,s){const o=new Set(await a()),i=new Set((await s()).map((e=>e.filter_id))),l=[],n=[];return("anomaly-detector"===t?e.map((e=>({jobId:e.job.job_id,indices:e.datafeed.indices,filters:I(e.job)}))):e.map((e=>({jobId:e.id,destIndex:e.dest.index,indices:Array.isArray(e.source.index)?e.source.index:[e.source.index]})))).forEach((({jobId:e,indices:a,filters:s=[],destIndex:d})=>{const r=a.filter((e=>!1===o.has(e))),c=s.filter((e=>!1===i.has(e)));0===r.length&&0===c.length?l.push({jobId:e,..."data-frame-analytics"===t?{destIndex:d}:{}}):n.push({jobId:e,missingIndices:r,missingFilters:c})})),{jobs:l,skippedJobs:n}}}function I(e){const t=new Set;return e.analysis_config.detectors.forEach((e=>{void 0!==e.custom_rules&&e.custom_rules.forEach((e=>{void 0!==e.scope&&Object.values(e.scope).forEach((e=>{t.add(e.filter_id)}))}))})),[...t]}var f=a(292),g=a(123),y=a(42);const O=d.i18n.translate("xpack.ml.importExport.importFlyout.validateJobId.jobNameEmpty",{defaultMessage:"Enter a valid job ID"}),h=d.i18n.translate("xpack.ml.importExport.importFlyout.validateJobId.jobNameAllowedCharacters",{defaultMessage:"Job ID can contain lowercase alphanumeric (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"}),E=d.i18n.translate("xpack.ml.importExport.importFlyout.validateJobId.jobIdInvalidMaxLengthErrorMessage",{defaultMessage:"Job ID must be no more than {maxLength, plural, one {# character} other {# characters}} long.",values:{maxLength:y.b}}),F=d.i18n.translate("xpack.ml.importExport.importFlyout.validateJobId.jobNameAlreadyExists",{defaultMessage:"Job ID already exists. A job ID cannot be the same as an existing job or group."}),v=d.i18n.translate("xpack.ml.importExport.importFlyout.validateDestIndex.destIndexEmpty",{defaultMessage:"Enter a valid destination index"}),M=d.i18n.translate("xpack.ml.importExport.importFlyout.validateDestIndex.destIndexInvalid",{defaultMessage:"Invalid destination index name."}),k=d.i18n.translate("xpack.ml.importExport.importFlyout.validateDestIndex.destIndexExists",{defaultMessage:"An index with this name already exists. Be aware that running this analytics job will modify this destination index."});var J=a(122);const C=({isDisabled:e,onImportComplete:t})=>{const{services:{data:{dataViews:{getTitles:a}},notifications:{toasts:i},mlServices:{mlUsageCollection:m,mlApiServices:{jobs:{bulkCreateJobs:I},dataFrameAnalytics:{createDataFrameAnalytics:C},filters:{filters:S}}}}}=Object(b.d)(),_=Object(s.useMemo)((()=>new JobImportService),[]),[T,A]=Object(s.useState)(!1),[D,B]=Object(s.useState)([]),[z,P]=Object(s.useState)([]),[R,L]=Object(s.useState)([]),[N,G]=Object(s.useState)([]),[H,K]=Object(s.useState)(!1),[U,W]=Object(s.useState)(null),[$,q]=Object(s.useState)(0),[Q,X]=Object(s.useState)(!0),[Y,Z]=Object(s.useState)(!0),[ee,te]=Object(s.useState)(""),[ae,se]=Object(s.useState)(!1),[oe,ie]=Object(s.useState)(!1),{displayErrorToast:le,displaySuccessToast:ne}=Object(s.useMemo)((()=>Object(x.toastNotificationServiceProvider)(i)),[i]),{isADEnabled:de,isDFAEnabled:re}=Object(J.d)(),[ce]=((e,t,a,o,i)=>{const{jobs:{jobsExist:l},dataFrameAnalytics:{jobsExist:n},checkIndicesExists:d}=Object(b.c)();return[Object(s.useCallback)((async()=>{const a=[],s=[],r="anomaly-detector"===e;if(t.filter((({jobIdValidated:e})=>!1===e)).forEach((e=>{e.jobIdValid=!0,e.jobIdInvalidMessage="",""===e.jobId?(e.jobIdValid=!1,e.jobIdInvalidMessage=O,e.jobIdValidated=r):e.jobId.length>y.b?(e.jobIdValid=!1,e.jobIdInvalidMessage=E,e.jobIdValidated=r):!1===Object(g.l)(e.jobId)&&(e.jobIdValid=!1,e.jobIdInvalidMessage=h,e.jobIdValidated=r),!0===e.jobIdValid&&a.push(e.jobId)})),"data-frame-analytics"===e&&t.filter((({destIndexValidated:e})=>!1===e)).forEach((e=>{void 0!==e.destIndex&&(e.destIndexValid=!0,e.destIndexInvalidMessage="",""===e.destIndex?(e.destIndexValid=!1,e.destIndexInvalidMessage=v,e.destIndexValidated=!0):!1===Object(f.a)(e.destIndex)&&(e.destIndexValid=!1,e.destIndexInvalidMessage=M,e.destIndexValidated=!0),!0===e.destIndexValid&&s.push(e.destIndex))})),null!==e){const r="anomaly-detector"===e?l:n,c=await r(a,!0);if(t.forEach((e=>{const t=c[e.jobId];if(t){const{exists:a}=t;e.jobIdValid=!a,e.jobIdInvalidMessage=a?F:"",e.jobIdValidated=!0}})),"data-frame-analytics"===e){const e=await d({indices:s});t.forEach((t=>{if(void 0!==t.destIndex&&!1===t.destIndexValidated){var a;const s=!0===(null===(a=e[t.destIndex])||void 0===a?void 0:a.exists);t.destIndexInvalidMessage=s?k:"",t.destIndexValidated=!0}}))}o([...t]),i(!1)}}),[a,t])]})(U,R,ee,L,se);l()(ce,400,[ee]);const be=Object(s.useCallback)(((e=!1)=>{B([]),P([]),L([]),te(""),K(!1),W(null),q(0),se(!1),ie(e)}),[]);Object(s.useEffect)((function(){be()}),[T]);const je=Object(s.useCallback)((async e=>{if(ie(!1),0!==e.length)try{const t=await _.readJobConfigs(e[0]);if(null===t.jobType||"anomaly-detector"===t.jobType&&!1===de||"data-frame-analytics"===t.jobType&&!1===re)return void be(!0);q(t.jobs.length);const s=await _.validateJobs(t.jobs,t.jobType,a,S);if("anomaly-detector"===t.jobType){const e=t.jobs.filter((e=>s.jobs.map((({jobId:e})=>e)).includes(e.job.job_id)));B(e)}else if("data-frame-analytics"===t.jobType){const e=t.jobs.filter((e=>s.jobs.map((({jobId:e})=>e)).includes(e.id)));P(e)}W(t.jobType),L(s.jobs.map((({jobId:e,destIndex:t})=>({jobId:e,originalId:e,jobIdValid:!0,jobIdInvalidMessage:"",jobIdValidated:!1,destIndex:t,originalDestIndex:t,destIndexValid:!0,destIndexInvalidMessage:"",destIndexValidated:!1}))));const o=V(s.jobs,t.jobType);te(o),se(!0),G(s.skippedJobs)}catch(e){le(e)}else be()}),[]),ue=Object(s.useCallback)((async()=>{K(!0);try{if("anomaly-detector"===U&&!0===de){const e=_.renameAdJobs(R,D);await me(e),m.count("imported_anomaly_detector_jobs",e.length)}else if("data-frame-analytics"===U&&!0===re){const e=_.renameDfaJobs(R,z);await pe(e),m.count("imported_data_frame_analytics_jobs",e.length)}}catch(e){le(e)}K(!1),A(!1),"function"==typeof t&&t()}),[U,R,D,z]),me=Object(s.useCallback)((async e=>{const t=await I(e);let a=0;const s=[],o=new Set;Object.entries(t).forEach((([e,{job:t,datafeed:i}])=>{t.error||i.error?(o.add(e),t.error&&s.push(t.error),i.error&&s.push(i.error)):a++})),a>0&&xe(a),s.length>0&&(Ie(s,o.size),m.count("import_failed_anomaly_detector_jobs",o.size))}),[]),pe=Object(s.useCallback)((async e=>{const t=[],a=await Promise.all(e.map((async({id:e,...a})=>{try{return await C(e,a)}catch(e){t.push(e)}}))),s=Object.values(a).filter((e=>void 0!==e)).length;s>0&&xe(s),t.length>0&&(Ie(t,t.length),m.count("import_failed_data_frame_analytics_jobs",t.length))}),[]),xe=Object(s.useCallback)((e=>{const t=d.i18n.translate("xpack.ml.importExport.importFlyout.importJobSuccessToast",{defaultMessage:"{count, plural, one {# job} other {# jobs}} successfully imported",values:{count:e}});ne(t)}),[]),Ie=Object(s.useCallback)(((e,t)=>{const a=d.i18n.translate("xpack.ml.importExport.importFlyout.importJobErrorToast",{defaultMessage:"{count, plural, one {# job} other {# jobs}} failed to import correctly",values:{count:t}}),s=e.map(c.b);le(s,a)}),[]),fe=Object(s.useCallback)((e=>{if("anomaly-detector"===U){const t=[...D];t.splice(e,1),B(t)}else if("data-frame-analytics"===U){const t=[...z];t.splice(e,1),P(t)}const t=[...R];t.splice(e,1),L(t);const a=V(t,U);te(a),se(!0)}),[R,D,z]);Object(s.useEffect)((()=>{const e=0===R.length||!0===H||!0===ae||R.some((({jobIdValid:e,destIndexValid:t})=>!1===e||!1===t));X(e),Z(!0===H||!0===ae)}),[R,ee,ae,H]);const ge=Object(s.useCallback)(((e,t)=>{R[t].jobId=e,R[t].jobIdValid=!1,R[t].jobIdValidated=!1,L([...R]);const a=V(R,U);te(a),se(!0)}),[R]),ye=Object(s.useCallback)(((e,t)=>{R[t].destIndex=e,R[t].destIndexValid=!1,R[t].destIndexValidated=!1,R[t].destIndexInvalidMessage="",L([...R]);const a=V(R,U);te(a),se(!0)}),[R]),Oe=({index:e})=>Object(j.jsx)(n.EuiButtonIcon,{iconType:"trash","aria-label":d.i18n.translate("xpack.ml.importExport.importFlyout.deleteButtonAria",{defaultMessage:"Delete"}),color:Y?"text":"danger",disabled:Y,onClick:()=>fe(e)});return!1===de&&!1===re?null:Object(j.jsx)(o.a.Fragment,null,Object(j.jsx)(w,{onClick:function(){A(!T)},isDisabled:e}),!0===T&&!1===e&&Object(j.jsx)(n.EuiFlyout,{onClose:A.bind(null,!1),hideCloseButton:!0,size:"m","data-test-subj":"mlJobMgmtImportJobsFlyout"},Object(j.jsx)(n.EuiFlyoutHeader,{hasBorder:!0},Object(j.jsx)(n.EuiTitle,{size:"m"},Object(j.jsx)("h2",null,Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.flyoutHeader",defaultMessage:"Import jobs"})))),Object(j.jsx)(n.EuiFlyoutBody,null,Object(j.jsx)(o.a.Fragment,null,Object(j.jsx)(n.EuiText,{textAlign:"center"},Object(j.jsx)(n.EuiFilePicker,{disabled:H,fullWidth:!0,id:"filePicker",initialPromptText:d.i18n.translate("xpack.ml.importExport.importFlyout.fileSelect",{defaultMessage:"Select or drag and drop a file"}),onChange:je,className:"file-datavisualizer-file-picker"})),oe?Object(j.jsx)(p,null):null,$>0&&null!==U&&Object(j.jsx)("div",{"data-test-subj":"mlJobMgmtImportJobsFileRead"},Object(j.jsx)(n.EuiSpacer,{size:"l"}),"anomaly-detector"===U&&Object(j.jsx)("div",{"data-test-subj":"mlJobMgmtImportJobsADTitle"},Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.selectedFiles.ad",defaultMessage:"{num} anomaly detection {num, plural, one {job} other {jobs}} read from file",values:{num:$}})),"data-frame-analytics"===U&&Object(j.jsx)("div",{"data-test-subj":"mlJobMgmtImportJobsDFATitle"},Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.selectedFiles.dfa",defaultMessage:"{num} data frame analytics {num, plural, one {job} other {jobs}} read from file",values:{num:$}})),Object(j.jsx)(n.EuiSpacer,{size:"m"}),Object(j.jsx)(u,{jobs:N,autoExpand:0===R.length||1===N.length}),Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.importableFiles",defaultMessage:"Import {num, plural, one {# job} other {# jobs}}",values:{num:R.length}}),Object(j.jsx)(n.EuiSpacer,{size:"m"}),R.map(((e,t)=>Object(j.jsx)("div",{key:e.originalId},Object(j.jsx)(n.EuiPanel,{hasBorder:!0},Object(j.jsx)(n.EuiFlexGroup,null,Object(j.jsx)(n.EuiFlexItem,null,Object(j.jsx)(n.EuiFormRow,{error:e.jobIdInvalidMessage,isInvalid:!1===e.jobIdValid},Object(j.jsx)(n.EuiFieldText,{prepend:d.i18n.translate("xpack.ml.importExport.importFlyout.jobId",{defaultMessage:"Job ID"}),disabled:H,compressed:!0,value:e.jobId,onChange:e=>ge(e.target.value,t),isInvalid:!1===e.jobIdValid,"data-test-subj":"mlJobMgmtImportJobIdInput"})),"data-frame-analytics"===U&&Object(j.jsx)(n.EuiFormRow,{helpText:!0===e.destIndexValid?e.destIndexInvalidMessage:"",error:!1===e.destIndexValid?e.destIndexInvalidMessage:"",isInvalid:!1===e.destIndexValid},Object(j.jsx)(n.EuiFieldText,{prepend:d.i18n.translate("xpack.ml.importExport.importFlyout.destIndex",{defaultMessage:"Destination index"}),disabled:H,compressed:!0,value:e.destIndex,onChange:e=>ye(e.target.value,t),isInvalid:!1===e.destIndexValid}))),Object(j.jsx)(n.EuiFlexItem,{grow:!1},Object(j.jsx)(Oe,{index:t})))),Object(j.jsx)(n.EuiSpacer,{size:"m"}))))))),Object(j.jsx)(n.EuiFlyoutFooter,null,Object(j.jsx)(n.EuiFlexGroup,{justifyContent:"spaceBetween"},Object(j.jsx)(n.EuiFlexItem,{grow:!1},Object(j.jsx)(n.EuiButtonEmpty,{iconType:"cross",onClick:A.bind(null,!1),flush:"left"},Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.closeButton",defaultMessage:"Close"}))),Object(j.jsx)(n.EuiFlexItem,{grow:!1},Object(j.jsx)(n.EuiButton,{disabled:Q,onClick:ue,fill:!0,"data-test-subj":"mlJobMgmtImportImportButton"},Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importFlyout.closeButton.importButton",defaultMessage:"Import"})))))))},w=({isDisabled:e,onClick:t})=>Object(j.jsx)(n.EuiButtonEmpty,{iconType:"importAction",onClick:t,isDisabled:e,"data-test-subj":"mlJobsImportButton"},Object(j.jsx)(r.FormattedMessage,{id:"xpack.ml.importExport.importButton",defaultMessage:"Import jobs"}));function V(e,t){return e.map((({jobId:e})=>e)).join("")+("data-frame-analytics"===t?e.map((({destIndex:e})=>e)).join(""):"")}}}]);