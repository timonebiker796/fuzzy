/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[96],{230:function(e,t,s){"use strict";s.r(t),s.d(t,"JobSpacesSyncFlyout",(function(){return f}));var a=s(2),c=s.n(a),n=s(5),l=s(15),j=s(25),o=s(10),u=s(122),d=s(6);const i=({syncItems:e})=>{const{isADEnabled:t}=Object(u.d)();return null===e?null:Object(d.jsx)(c.a.Fragment,null,Object(d.jsx)(b,{syncItems:e}),Object(d.jsx)(j.EuiHorizontalRule,{margin:"l"}),Object(d.jsx)(r,{syncItems:e}),Object(d.jsx)(j.EuiHorizontalRule,{margin:"l"}),t?Object(d.jsx)(c.a.Fragment,null,Object(d.jsx)(O,{syncItems:e}),Object(d.jsx)(j.EuiHorizontalRule,{margin:"l"}),Object(d.jsx)(m,{syncItems:e}),Object(d.jsx)(j.EuiHorizontalRule,{margin:"l"})):null)},b=({syncItems:e})=>{const t=y(e.savedObjectsCreated),s=Object(d.jsx)(c.a.Fragment,null,Object(d.jsx)(j.EuiTitle,{size:"xs","data-test-subj":"mlJobMgmtSyncFlyoutMissingObjectsTitle"},Object(d.jsx)("h3",null,Object(d.jsx)(j.EuiTextColor,{color:t?"default":"subdued"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.savedObjectsCreated.title",defaultMessage:"Missing saved objects ({count})",values:{count:t}})))),Object(d.jsx)(j.EuiText,{size:"s"},Object(d.jsx)("p",null,Object(d.jsx)(j.EuiTextColor,{color:"subdued"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.savedObjectsCreated.description",defaultMessage:"If there are jobs that do not have accompanying saved objects, they will be created in the current space."})))));return Object(d.jsx)(x,{id:"savedObjectsCreated",title:s,results:e.savedObjectsCreated})},r=({syncItems:e})=>{const t=y(e.savedObjectsDeleted),s=Object(d.jsx)(c.a.Fragment,null,Object(d.jsx)(j.EuiTitle,{size:"xs","data-test-subj":"mlJobMgmtSyncFlyoutUnmatchedObjectsTitle"},Object(d.jsx)("h3",null,Object(d.jsx)(j.EuiTextColor,{color:t?"default":"subdued"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.savedObjectsDeleted.title",defaultMessage:"Unmatched saved objects ({count})",values:{count:t}})))),Object(d.jsx)(j.EuiText,{size:"s"},Object(d.jsx)("p",null,Object(d.jsx)(j.EuiTextColor,{color:"subdued"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.savedObjectsDeleted.description",defaultMessage:"If there are saved objects that do not have an accompanying job, they will be deleted."})))));return Object(d.jsx)(x,{id:"savedObjectsDeleted",title:s,results:e.savedObjectsDeleted})},O=({syncItems:e})=>{const t=y(e.datafeedsAdded),s=Object(d.jsx)(c.a.Fragment,null,Object(d.jsx)(j.EuiTitle,{size:"xs","data-test-subj":"mlJobMgmtSyncFlyoutObjectsMissingDatafeedTitle"},Object(d.jsx)("h3",null,Object(d.jsx)(j.EuiTextColor,{color:t?"default":"subdued"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.datafeedsAdded.title",defaultMessage:"Saved objects with missing datafeeds ({count})",values:{count:t}})))),Object(d.jsx)(j.EuiText,{size:"s"},Object(d.jsx)("p",null,Object(d.jsx)(j.EuiTextColor,{color:"subdued"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.datafeedsAdded.description",defaultMessage:"If there are saved objects that are missing the datafeed ID for anomaly detection jobs, the ID will be added."})))));return Object(d.jsx)(x,{id:"datafeedsAdded",title:s,results:e.datafeedsAdded})},m=({syncItems:e})=>{const t=y(e.datafeedsRemoved),s=Object(d.jsx)(c.a.Fragment,null,Object(d.jsx)(j.EuiTitle,{size:"xs","data-test-subj":"mlJobMgmtSyncFlyoutObjectsUnmatchedDatafeedTitle"},Object(d.jsx)("h3",null,Object(d.jsx)(j.EuiTextColor,{color:t?"default":"subdued"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.datafeedsRemoved.title",defaultMessage:"Saved objects with unmatched datafeed IDs ({count})",values:{count:t}})))),Object(d.jsx)(j.EuiText,{size:"s"},Object(d.jsx)("p",null,Object(d.jsx)(j.EuiTextColor,{color:"subdued"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.datafeedsRemoved.description",defaultMessage:"If there are saved objects that use a datafeed that does not exist, they will be deleted."})))));return Object(d.jsx)(x,{id:"datafeedsRemoved",title:s,results:e.datafeedsRemoved})},x=({id:e,title:t,results:s})=>Object(d.jsx)(j.EuiAccordion,{id:e,buttonContent:t,paddingSize:"l"},Object.entries(s).map((([e,t])=>Object(d.jsx)(a.Fragment,{key:e},Object(d.jsx)(j.EuiText,{size:"s"},Object(d.jsx)("h4",null,e),Object(d.jsx)("ul",null,Object.keys(t).map((e=>Object(d.jsx)("li",{key:e},e))))),Object(d.jsx)(j.EuiSpacer,{size:"s"})))));function y(e){return Object.values(e).flatMap((e=>Object.keys(e))).length}var g=s(71);const f=({onClose:e})=>{const{displayErrorToast:t,displaySuccessToast:s}=Object(g.useToastNotificationService)(),[u,b]=Object(a.useState)(!1),[r,O]=Object(a.useState)(!1),[m,x]=Object(a.useState)(null),{savedObjects:{syncSavedObjects:y}}=Object(o.c)();async function f(e=!0){b(!0);try{const t=await y(e);x(t);const s=Object.values(t).reduce(((e,t)=>e+Object.keys(t).length),0);return O(s>0),b(!1),t}catch(e){t(e),b(!1)}return null}return Object(a.useEffect)((()=>{f()}),[]),Object(d.jsx)(c.a.Fragment,null,Object(d.jsx)(j.EuiFlyout,{maxWidth:600,onClose:e,"data-test-subj":"mlJobMgmtSyncFlyout"},Object(d.jsx)(j.EuiFlyoutHeader,{hasBorder:!0},Object(d.jsx)(j.EuiTitle,{size:"m"},Object(d.jsx)("h2",null,Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.headerLabel",defaultMessage:"Synchronize saved objects"})))),Object(d.jsx)(j.EuiFlyoutBody,null,Object(d.jsx)(j.EuiCallOut,{color:"primary"},Object(d.jsx)(j.EuiText,{size:"s"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.description",defaultMessage:"Synchronize the saved objects if they are out of sync with the machine learning jobs in Elasticsearch."}))),Object(d.jsx)(j.EuiSpacer,null),Object(d.jsx)(i,{syncItems:m})),Object(d.jsx)(j.EuiFlyoutFooter,null,Object(d.jsx)(j.EuiFlexGroup,{justifyContent:"spaceBetween"},Object(d.jsx)(j.EuiFlexItem,{grow:!1},Object(d.jsx)(j.EuiButtonEmpty,{iconType:"cross",onClick:e,flush:"left","data-test-subj":"mlJobMgmtSyncFlyoutCloseButton"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.closeButton",defaultMessage:"Close"}))),Object(d.jsx)(j.EuiFlexItem,{grow:!1},Object(d.jsx)(j.EuiButton,{onClick:async function(){if(r){const e=await f(!1);if(await f(!0),null===e)return;const{successCount:a,errorCount:c}=function(e){let t=0,s=0;return Object.values(e).forEach((e=>{Object.values(e).forEach((e=>{Object.values(e).forEach((({success:e,error:a})=>{!0===e?t++:void 0!==a&&s++}))}))})),{successCount:t,errorCount:s}}(e);if(c>0){const s=n.i18n.translate("xpack.ml.management.syncSavedObjectsFlyout.sync.error",{defaultMessage:"Some jobs or trained models cannot be synchronized."});return void t(e,s)}s(n.i18n.translate("xpack.ml.management.syncSavedObjectsFlyout.sync.success",{defaultMessage:"{successCount} {successCount, plural, one {item} other {items}} synchronized",values:{successCount:a}}))}},fill:!0,isDisabled:!1===r||!0===u,"data-test-subj":"mlJobMgmtSyncFlyoutSyncButton"},Object(d.jsx)(l.FormattedMessage,{id:"xpack.ml.management.syncSavedObjectsFlyout.syncButton",defaultMessage:"Synchronize"})))))))}}}]);