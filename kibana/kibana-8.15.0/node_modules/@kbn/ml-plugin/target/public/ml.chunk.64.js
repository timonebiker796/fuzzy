/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[64],{138:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var s=t(2);a.default=function(){var e=s.useRef(!1),a=s.useCallback((function(){return e.current}),[]);return s.useEffect((function(){return e.current=!0,function(){e.current=!1}})),a}},168:function(e,a,t){"use strict";t.d(a,"a",(function(){return b}));var s=t(2),l=t(5),n=t(15),o=t(25),i=t(138),r=t.n(i),c=t(10),u=t(13),d=t(6);const b=({jobsAndGroupIds:e,onChange:a,adJobsApiService:t,errors:i,multiSelect:b=!1,label:m,allowSelectAll:g=!1,createJobUrl:p,options:j})=>{const{services:{notifications:{toasts:f},application:{navigateToUrl:v}}}=Object(c.d)(),y=r()(),[h,x]=Object(s.useState)([]),M=Object(s.useMemo)((()=>new Set),[]),O=Object(s.useMemo)((()=>new Set),[]),_=Object(s.useMemo)((()=>(null!=e?e:[]).map((e=>({label:e})))),[e]),J=Object(s.useCallback)((async()=>{try{const{jobIds:e,groupIds:a}=await t.getAllJobAndGroupIds();if(e.forEach((e=>{M.add(e)})),a.forEach((e=>{O.add(e)})),!y())return;x([...g?[{label:l.i18n.translate("xpack.ml.jobSelector.selectAllGroupLabel",{defaultMessage:"Select all"}),options:[{label:l.i18n.translate("xpack.ml.jobSelector.selectAllOptionLabel",{defaultMessage:"*"}),value:u.e}]}]:[],{label:l.i18n.translate("xpack.ml.jobSelector.jobOptionsLabel",{defaultMessage:"Jobs"}),options:[...p?[{label:l.i18n.translate("xpack.ml.jobSelector.createNewLabel",{defaultMessage:"--- Create new ---"}),value:"createNew"}]:[],...e.map((e=>({label:e})))]},...b?[{label:l.i18n.translate("xpack.ml.jobSelector.groupOptionsLabel",{defaultMessage:"Groups"}),options:a.map((e=>({label:e})))}]:[]])}catch(e){f.addError(e,{title:l.i18n.translate("xpack.ml.jobSelector.fetchJobErrorTitle",{defaultMessage:"Failed to load anomaly detection jobs"})})}}),[t,g,p,O,y,M,b,f]),w=Object(s.useCallback)((async e=>{if(e.some((e=>e.value===u.e)))return void a({jobIds:[u.e]});if(p&&e.some((e=>"createNew"===e.value)))return void await v(p);const t=[],s=[];e.forEach((({label:e})=>{M.has(e)?t.push(e):O.has(e)?s.push(e):null!=j&&j.some((a=>{var t;return null===(t=a.options)||void 0===t?void 0:t.some((a=>a.label===e))}))&&t.push(e)})),a({...t.length>0?{jobIds:t}:{},...s.length>0?{groupIds:s}:{}})}),[M,O,j,p]);return Object(s.useEffect)((()=>{j||J()}),[p]),Object(d.jsx)(o.EuiFormRow,{"data-test-subj":"mlAnomalyJobSelectionControls",fullWidth:!0,label:null!=m?m:Object(d.jsx)(n.FormattedMessage,{id:"xpack.ml.jobSelector.formControlLabel",defaultMessage:"Select job"}),isInvalid:!(null==i||!i.length),error:i},Object(d.jsx)(o.EuiComboBox,{singleSelection:!b,selectedOptions:_,options:null!=j?j:h,onChange:w,fullWidth:!0,"data-test-subj":"mlAnomalyAlertJobSelection",isInvalid:!(null==i||!i.length)}))}},172:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var s=t(58),l=t(2),n=s.__importDefault(t(223));a.default=function(e,a,t){void 0===a&&(a=0),void 0===t&&(t=[]);var s=n.default(e,a),o=s[0],i=s[1],r=s[2];return l.useEffect(r,t),[o,i]}},198:function(e,a,t){"use strict";t.d(a,"b",(function(){return o})),t.d(a,"a",(function(){return i}));var s=t(5),l=t(42),n=t(18);function o(e,a,t,o){const r=Object(n.d)();if(e.contains("job_id_empty"))a.jobId.valid=!1;else if(e.contains("job_id_invalid")){a.jobId.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAllowedCharactersDescription",{defaultMessage:"Job ID can contain lowercase alphanumeric (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"});a.jobId.message=e}else if(e.contains("job_id_invalid_max_length"))a.jobId.valid=!1,a.jobId.message=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobIdInvalidMaxLengthErrorMessage",{defaultMessage:"Job ID must be no more than {maxLength, plural, one {# character} other {# characters}} long.",values:{maxLength:l.b}});else if(e.contains("job_id_already_exists")){a.jobId.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAlreadyExists",{defaultMessage:"Job ID already exists. A job ID cannot be the same as an existing job or group."});a.jobId.message=e}if(e.contains("job_group_id_invalid")){a.groupIds.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobGroupAllowedCharactersDescription",{defaultMessage:"Job group names can contain lowercase alphanumeric (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"});a.groupIds.message=e}else if(e.contains("job_group_id_invalid_max_length"))a.groupIds.valid=!1,a.groupIds.message=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobGroupMaxLengthDescription",{defaultMessage:"Job group name must be no more than {maxLength, plural, one {# character} other {# characters}} long.",values:{maxLength:l.b}});else if(e.contains("job_group_id_already_exists")){a.groupIds.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.groupNameAlreadyExists",{defaultMessage:"Group ID already exists. A group ID cannot be the same as an existing job or group."});a.groupIds.message=e}if(e.contains("model_memory_limit_units_invalid")){a.modelMemoryLimit.valid=!1;const e=`${l.a.slice(0,l.a.length-1).join(", ")} or ${[...l.a].pop()}`,t=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.modelMemoryLimitUnitsInvalidErrorMessage",{defaultMessage:"Model memory limit data unit unrecognized. It must be {str}",values:{str:e}});a.modelMemoryLimit.message=t}if(e.contains("model_memory_limit_invalid")){a.modelMemoryLimit.valid=!1;const e=(r.max_model_memory_limit||"").toUpperCase(),t=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.modelMemoryLimitRangeInvalidErrorMessage",{defaultMessage:"Model memory limit cannot be higher than the maximum value of {maxModelMemoryLimit}",values:{maxModelMemoryLimit:e}});a.modelMemoryLimit.message=t}if(e.contains("detectors_duplicates")){a.duplicateDetectors.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.duplicatedDetectorsErrorMessage",{defaultMessage:"Duplicate detectors were found."});a.duplicateDetectors.message=e}if(e.contains("categorizer_detector_missing_per_partition_field")){a.categorizerMissingPerPartition.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.categorizerMissingPerPartitionFieldMessage",{defaultMessage:'Partition field must be set for detectors that reference "mlcategory" when per-partition categorization is enabled.'});a.categorizerMissingPerPartition.message=e}if(e.contains("categorizer_varying_per_partition_fields")){a.categorizerVaryingPerPartitionField.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.categorizerVaryingPerPartitionFieldNamesMessage",{defaultMessage:'Detectors with keyword "mlcategory" cannot have different partition_field_name when per-partition categorization is enabled.'});a.categorizerVaryingPerPartitionField.message=e}if(e.contains("bucket_span_empty")){a.bucketSpan.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.bucketSpanMustBeSetErrorMessage",{defaultMessage:"Bucket span must be set"});a.bucketSpan.message=e}else e.contains("bucket_span_invalid")&&(a.bucketSpan.valid=!1,a.bucketSpan.message=i(t.analysis_config.bucket_span));if(e.contains("query_empty")){a.query.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.queryCannotBeEmpty",{defaultMessage:"Datafeed query cannot be empty."});a.query.message=e}else if(e.contains("query_invalid")){a.query.valid=!1;const e=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.queryIsInvalidEsQuery",{defaultMessage:"Datafeed query must be a valid elasticsearch query."});a.query.message=e}e.contains("query_delay_invalid")&&(a.queryDelay.valid=!1,a.queryDelay.message=i(o.query_delay)),e.contains("frequency_invalid")&&(a.frequency.valid=!1,a.frequency.message=i(o.frequency)),e.contains("missing_summary_count_field_name")&&(a.summaryCountField.valid=!1,a.summaryCountField.message=s.i18n.translate("xpack.ml.newJob.wizard.validateJob.summaryCountFieldMissing",{defaultMessage:"Required field as the datafeed uses aggregations."}))}function i(e){return s.i18n.translate("xpack.ml.newJob.wizard.validateJob.frequencyInvalidTimeIntervalFormatErrorMessage",{defaultMessage:"{value} is not a valid time interval format e.g. {thirtySeconds}, {tenMinutes}, {oneHour}, {sevenDays}. It also needs to be higher than zero.",values:{value:e,thirtySeconds:"30s",tenMinutes:"10m",oneHour:"1h",sevenDays:"7d"}})}},223:function(e,a,t){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var s=t(2);a.default=function(e,a){void 0===a&&(a=0);var t=s.useRef(!1),l=s.useRef(),n=s.useRef(e),o=s.useCallback((function(){return t.current}),[]),i=s.useCallback((function(){t.current=!1,l.current&&clearTimeout(l.current),l.current=setTimeout((function(){t.current=!0,n.current()}),a)}),[a]),r=s.useCallback((function(){t.current=null,l.current&&clearTimeout(l.current)}),[]);return s.useEffect((function(){n.current=e}),[e]),s.useEffect((function(){return i(),r}),[a]),[o,r,i]}},386:function(e,a,t){"use strict";t.d(a,"a",(function(){return d}));var s=t(120),l=t.n(s),n=t(25),o=t(2),i=t(198),r=t(59),c=t(32),u=t(6);const d=({value:e,onChange:a,label:t,...s})=>{const d=Object(o.useMemo)((()=>Object(r.composeValidators)(Object(c.g)())),[]),b=Object(o.useMemo)((()=>d(e)),[e]),m=!!e&&!!b;return Object(u.jsx)(n.EuiFormRow,{label:t,isInvalid:m,error:Object(i.a)(null!=e?e:void 0),"data-test-subj":"mlAnomalyAlertAdvancedSettingsLookbackInterval"},Object(u.jsx)(n.EuiFieldText,l()({},s,{placeholder:"15d, 6m",value:null!=e?e:"",onChange:e=>{a(e.target.value)},isInvalid:m})))}},887:function(e,a,t){"use strict";t.r(a);var s=t(2),l=t.n(s),n=t(25),o=t(5),i=t(15),r=t(172),c=t.n(r),u=t(37),d=t(67),b=t(168),m=t(52),g=t(12),p=t(10),j=t(347),f=t(13),v=t(386),y=t(6);const h=l.a.memo((({config:e,onChange:a,errors:t})=>{const o=Object(j.b)(e),r=Object(s.useCallback)((t=>{a({...null!=e?e:{},...t})}),[a,e]);return Object(y.jsx)(l.a.Fragment,null,Object(y.jsx)(n.EuiForm,{component:"div",isInvalid:!(null==t||!t.length),error:t},Object.entries(o).map((([e,a],t)=>{var s,c;return Object(y.jsx)(n.EuiDescribedFormGroup,{key:e,title:Object(y.jsx)("h4",null,null===(s=f.f[e])||void 0===s?void 0:s.name),description:null===(c=f.f[e])||void 0===c?void 0:c.description,fullWidth:!0,gutterSize:"s"},Object(y.jsx)(n.EuiFormRow,null,Object(y.jsx)(n.EuiSwitch,{label:Object(y.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.enableTestLabel",defaultMessage:"Enable"}),onChange:r.bind(null,{[e]:{...o[e],enabled:!o[e].enabled}}),checked:o[e].enabled})),"delayedData"===e?Object(y.jsx)(l.a.Fragment,null,Object(y.jsx)(n.EuiSpacer,{size:"m"}),Object(y.jsx)(n.EuiFormRow,{label:Object(y.jsx)(l.a.Fragment,null,Object(y.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.delayedData.docsCountLabel",defaultMessage:"Number of documents"}),Object(y.jsx)(n.EuiToolTip,{position:"bottom",content:Object(y.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.delayedData.docsCountHint",defaultMessage:"The threshold for the amount of missing documents to alert upon."})},Object(y.jsx)(n.EuiIcon,{type:"questionInCircle"})))},Object(y.jsx)(n.EuiFieldNumber,{value:o.delayedData.docsCount,onChange:a=>{r({[e]:{...o[e],docsCount:Number(a.target.value)}})},min:1})),Object(y.jsx)(n.EuiSpacer,{size:"m"}),Object(y.jsx)(v.a,{label:Object(y.jsx)(l.a.Fragment,null,Object(y.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.delayedData.timeIntervalLabel",defaultMessage:"Time interval"}),Object(y.jsx)(n.EuiToolTip,{position:"bottom",content:Object(y.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.testsSelection.delayedData.timeIntervalHint",defaultMessage:"The lookback interval to check during rule execution for delayed data. By default derived from the longest bucket span and query delay."})},Object(y.jsx)(n.EuiIcon,{type:"questionInCircle"}))),value:o.delayedData.timeInterval,onChange:a=>{r({[e]:{...o[e],timeInterval:a}})}})):null)}))),Object(y.jsx)(n.EuiSpacer,{size:"l"}))}));a.default=({ruleParams:e,setRuleParams:a,errors:t})=>{const{services:{http:l}}=Object(p.d)(),r=Object(s.useMemo)((()=>new g.a(l)),[l]),j=Object(s.useMemo)((()=>Object(m.jobsApiProvider)(r)),[r]),[v,x]=Object(s.useState)([]),M=Object(s.useMemo)((()=>{var a;return Object.values(null!==(a=e.includeJobs)&&void 0!==a?a:{}).flat()}),[e.includeJobs]),O=Object(s.useMemo)((()=>{var a;return Object.values(null!==(a=e.excludeJobs)&&void 0!==a?a:{}).flat()}),[e.excludeJobs]),_=Object(s.useCallback)((e=>t=>{a(e,t)}),[]),J=Object.values(t).flat(),w=J.length>0;return c()((function(){var a,t,s,l;const n=(null===(a=e.includeJobs)||void 0===a||null===(t=a.jobIds)||void 0===t?void 0:t[0])===f.e;n||null!==(s=e.includeJobs)&&void 0!==s&&null!==(l=s.groupIds)&&void 0!==l&&l.length?j.jobs(n?[]:e.includeJobs.groupIds).then((a=>{x([{label:o.i18n.translate("xpack.ml.jobSelector.jobOptionsLabel",{defaultMessage:"Jobs"}),options:a.map((e=>({label:e.job_id})))},{label:o.i18n.translate("xpack.ml.jobSelector.groupOptionsLabel",{defaultMessage:"Groups"}),options:[...new Set(a.map((e=>e.groups)).flat().filter((a=>{var t;return Object(d.a)(a)&&!(null!==(t=e.includeJobs.groupIds)&&void 0!==t&&t.includes(a))})))].map((e=>({label:e})))}])})):x([])}),500,[e.includeJobs]),Object(y.jsx)(n.EuiForm,{"data-test-subj":"mlJobsHealthAlertingRuleForm",invalidCallout:"none",error:J,isInvalid:w},Object(y.jsx)(b.a,{jobsAndGroupIds:M,adJobsApiService:j,onChange:Object(s.useCallback)(_("includeJobs"),[]),errors:Array.isArray(t.includeJobs)?t.includeJobs:[],multiSelect:!0,allowSelectAll:!0,label:Object(y.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.includeJobs.label",defaultMessage:"Include jobs or groups"})}),Object(y.jsx)(n.EuiSpacer,{size:"m"}),Object(y.jsx)(b.a,{jobsAndGroupIds:O,adJobsApiService:j,onChange:Object(s.useCallback)((e=>{const a=_("excludeJobs");Object(u.a)(e)?a(e):a(null)}),[]),errors:Array.isArray(t.excludeJobs)?t.excludeJobs:[],multiSelect:!0,label:Object(y.jsx)(i.FormattedMessage,{id:"xpack.ml.alertTypes.jobsHealthAlertingRule.excludeJobs.label",defaultMessage:"Exclude jobs or groups"}),options:v}),Object(y.jsx)(n.EuiSpacer,{size:"m"}),Object(y.jsx)(h,{config:e.testsConfig,onChange:Object(s.useCallback)(_("testsConfig"),[]),errors:Array.isArray(t.testsConfig)?t.testsConfig:[]}))}}}]);