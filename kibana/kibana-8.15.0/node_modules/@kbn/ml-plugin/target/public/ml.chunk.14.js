/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[14],{194:function(e,t,r){"use strict";r.d(t,"b",(function(){return i})),r.d(t,"a",(function(){return o}));var a=r(39),n=r.n(a);const l=3;function i(e,t,r,a){return Array.isArray(e)?1===e.length?o(e[0],t,r,a):`[${e.map((e=>o(e,t,void 0,a)))}]`:o(e,t,r,a)}function o(e,t,r,a){if(null==e)return"";if("time_of_week"===t){const t=void 0!==a&&void 0!==a.timestamp?new Date(a.timestamp):new Date,r=n()(t).unix()%n.a.duration(1,"week").asSeconds(),l=n.a.duration(r,"seconds"),i=n.a.utc(t).subtract(l).startOf("day").add(e,"s");return n()(i.valueOf()).format("ddd HH:mm")}if("time_of_day"===t){const t=void 0!==a&&void 0!==a.timestamp?new Date(a.timestamp):new Date,r=n.a.utc(t).startOf("day").add(e,"s");return n()(r.valueOf()).format("HH:mm")}if(void 0!==r)return r.convert(e,"text");{const t=Math.abs(e);if(t>=1e4||t===Math.floor(t))return void 0!==r?r.convert(e,"text"):Number(e.toFixed(0));if(t>=10)return Number(e.toFixed(1));{let t;return t=e>0?Math.pow(10,l-Math.floor(Math.log(e)/Math.LN10)-1):Math.pow(10,l-Math.floor(Math.log(-1*e)/Math.LN10)-1),Math.round(e*t)/t}}}},208:function(e,t,r){"use strict";r.d(t,"b",(function(){return p})),r.d(t,"a",(function(){return m})),r.d(t,"c",(function(){return b})),r.d(t,"d",(function(){return g})),r.d(t,"e",(function(){return h}));var a=r(25),n=r(78),l=r(75),i=r(349),o=r(415),s=r(247),u=r(150),c=r(219),d=r(321);const p={TYPICAL:"typical",ACTUAL:"actual",TYPICAL_TO_ACTUAL:"typical to actual"},m={type:n.STYLE_TYPE.DYNAMIC,options:{customColorRamp:i.d,field:{name:"record_score",origin:n.FIELD_ORIGIN.SOURCE},useCustomColorRamp:!0}},y={type:"VECTOR",properties:{fillColor:m,lineColor:m},isTimeAware:!1},f={type:"VECTOR",properties:{fillColor:{type:"STATIC",options:{color:"#98A2B2"}},lineColor:{type:"STATIC",options:{color:"#fff"}},lineWidth:{type:"STATIC",options:{size:2}},iconSize:{type:"STATIC",options:{size:6}}}};function _(e){return e.split(",").map((e=>Number(e))).reverse()}function b(e){const t=[];for(const r in p)p.hasOwnProperty(r)&&t.push({id:Object(a.htmlIdGenerator)()(),type:n.LAYER_TYPE.GEOJSON_VECTOR,sourceDescriptor:d.AnomalySource.createDescriptor({jobId:e,typicalActual:p[r]}),style:p[r]===p.TYPICAL?f:y});return t}function g(e){const t=[];for(const r in e)if(e.hasOwnProperty(r)){const{dataViewId:l,geoFields:i}=e[r];i.forEach((e=>{const i=Object(u.a)(e);t.push({id:Object(a.htmlIdGenerator)()(),type:n.LAYER_TYPE.GEOJSON_VECTOR,style:{type:"VECTOR",properties:{fillColor:{type:"STATIC",options:{color:i}},lineColor:{type:"STATIC",options:{color:i}}}},sourceDescriptor:{id:Object(a.htmlIdGenerator)()(),type:n.SOURCE_TYPES.ES_SEARCH,tooltipProperties:[e],label:r,indexPatternId:l,geoField:e,scalingType:n.SCALING_TYPES.MVT}})}))}return t}async function h(e,t,r,a){var n;const{query:i,timeFilters:u}=a,d=i&&""!==i.query;let m;const y=Object(c.a)([{id:t}]);d&&i.language===s.a.KUERY?m=Object(l.toElasticsearchQuery)(Object(l.fromKueryExpression)(i.query),y):d&&(null==i?void 0:i.language)===s.a.LUCENE&&(m=Object(l.luceneStringToDsl)(i.query));const f=[{term:{job_id:t}},{term:{result_type:"record"}}];let b={must:f};m&&m.bool?b={...b,...m.bool}:m&&b.must.push(m);const g={query:{bool:b},size:1e3,_source:{excludes:[]}};if(u){const e={range:{timestamp:{gte:`${u.from}`,lte:u.to}}};f.push(e)}let h=null;try{h=await e.anomalySearch({body:g},[t])}catch(e){}return{type:"FeatureCollection",features:(null===(n=h)||void 0===n?void 0:n.hits.hits.map((({_source:e})=>{const t=e.geo_results,a=t&&t.actual_point?_(t.actual_point):[0,0],n=t&&t.typical_point?_(t.typical_point):[0,0];let l;l=r===p.TYPICAL||r===p.ACTUAL?{type:"Point",coordinates:r===p.TYPICAL?n:a}:{type:"LineString",coordinates:[n,a]};const i={...e.partition_field_name?{[e.partition_field_name]:e.partition_field_value}:{},...e.by_field_name?{[e.by_field_name]:e.by_field_value}:{},...e.over_field_name?{[e.over_field_name]:e.over_field_value}:{}},s=Object.keys(i),u=e.influencers?e.influencers.filter((({influencer_field_name:e,influencer_field_values:t})=>t.length&&!s.includes(e))):[];return{type:"Feature",geometry:l,properties:{actual:a,typical:n,fieldName:e.field_name,functionDescription:e.function_description,timestamp:Object(o.c)(e.timestamp),record_score:Math.floor(e.record_score),...Object.keys(i).length>0?i:{},...u.length?{influencers:u}:{}}}})))||[]}}},258:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"e",(function(){return c})),r.d(t,"f",(function(){return d})),r.d(t,"b",(function(){return p})),r.d(t,"d",(function(){return AnomalySourceTooltipProperty})),r.d(t,"c",(function(){return AnomalySourceField}));var a=r(4),n=r.n(a),l=(r(2),r(8)),i=r(5),o=r(78),s=r(6);const u=i.i18n.translate("xpack.ml.maps.anomalyLayerActualLabel",{defaultMessage:"Actual"}),c=i.i18n.translate("xpack.ml.maps.anomalyLayerTypicalLabel",{defaultMessage:"Typical"}),d=i.i18n.translate("xpack.ml.maps.anomalyLayerTypicalToActualLabel",{defaultMessage:"Typical to actual"}),p={record_score:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerRecordScoreLabel",{defaultMessage:"Record score"}),type:"number"},timestamp:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerTimeStampLabel",{defaultMessage:"Time"}),type:"string"},fieldName:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerFieldNameLabel",{defaultMessage:"Field name"}),type:"string"},functionDescription:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerFunctionDescriptionLabel",{defaultMessage:"Function"}),type:"string"},actual:{label:u,type:"string"},typical:{label:c,type:"string"},partition_field_name:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerPartitionFieldNameLabel",{defaultMessage:"Partition field name"}),type:"string"},partition_field_value:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerPartitionFieldValueLabel",{defaultMessage:"Partition field value"}),type:"string"},by_field_name:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerByFieldNameLabel",{defaultMessage:"By field name"}),type:"string"},by_field_value:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerByFieldValueLabel",{defaultMessage:"By field value"}),type:"string"},over_field_name:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerOverFieldNameLabel",{defaultMessage:"Over field name"}),type:"string"},over_field_value:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerOverFieldValueLabel",{defaultMessage:"Over field value"}),type:"string"},influencers:{label:i.i18n.translate("xpack.ml.maps.anomalyLayerInfluencersLabel",{defaultMessage:"Influencers"}),type:"string"}},m=Math.pow(10,o.DECIMAL_DEGREES_PRECISION);function y(e){return Math.round(Number(e)*m)/m}class AnomalySourceTooltipProperty{constructor(e,t){this._field=e,this._value=t}async getESFilters(){return[]}getHtmlDisplayValue(){if("influencers"===this._field)try{const e=JSON.parse(this._value);return Object(s.jsx)("ul",null,e.map((({influencer_field_name:e,influencer_field_values:t})=>Object(s.jsx)("li",null,`${e}: ${t.slice(0,3).join(", ")}`))))}catch(e){}else if("actual"===this._field||"typical"===this._field)try{const e=JSON.parse(this._value);return`[${y(e[0])}, ${y(e[1])}]`}catch(e){}return this._value.toString()}getPropertyKey(){return this._field}getPropertyName(){return p[this._field]&&p[this._field].label?p[this._field].label:this._field}getRawValue(){return this._value.toString()}isFilterable(){return!1}}class AnomalySourceField{constructor({source:e,field:t}){n()(this,"_source",void 0),n()(this,"_field",void 0),this._source=e,this._field=t}async createTooltipProperty(e){return new AnomalySourceTooltipProperty(this._field,Object(l.escape)(Array.isArray(e)?e.join():e||""))}async getDataType(){return p[this._field].type}async getLabel(){return p[this._field].label}getName(){return this._field}getMbFieldName(){return this.getName()}getOrigin(){return o.FIELD_ORIGIN.SOURCE}getRootName(){return this.getName()}getSource(){return this._source}isEqual(e){return this.getName()===e.getName()}isValid(){return!0}supportsFieldMetaFromLocalData(){return!0}supportsFieldMetaFromEs(){return!1}canValueBeFormatted(){return!1}async getExtendedStatsFieldMetaRequest(){return null}async getPercentilesFieldMetaRequest(e){return null}async getCategoricalFieldMetaRequest(e){return null}pluckRangeFromTileMetaFeature(e){return null}isCount(){return!1}}},290:function(e,t,r){"use strict";r.d(t,"a",(function(){return LayerSelector}));var a=r(4),n=r.n(a),l=r(2),i=r(25),o=r(5),s=r(208),u=r(258),c=r(6);class LayerSelector extends l.Component{constructor(...e){super(...e),n()(this,"_isMounted",!1),n()(this,"state",{}),n()(this,"onSelect",(e=>{const t=e[0].value;this._isMounted&&(this.setState({typicalActual:t}),this.props.onChange(t))}))}componentDidMount(){this._isMounted=!0}componentWillUnmount(){this._isMounted=!1}render(){const e=[{value:this.props.typicalActual,label:this.props.typicalActual}];return Object(c.jsx)(i.EuiFormRow,{label:o.i18n.translate("xpack.ml.maps.typicalActualLabel",{defaultMessage:"Type"}),display:"columnCompressed"},Object(c.jsx)(i.EuiComboBox,{singleSelection:!0,onChange:this.onSelect,options:[{value:s.b.ACTUAL,label:u.a},{value:s.b.TYPICAL,label:u.e},{value:s.b.TYPICAL_TO_ACTUAL,label:u.f}],selectedOptions:e}))}}},309:function(e,t,r){"use strict";r(337);var a=r(286);r.d(t,"a",(function(){return a.b}))},321:function(e,t,r){"use strict";r.r(t),r.d(t,"AnomalySource",(function(){return anomaly_source_AnomalySource}));var a=r(4),n=r.n(a),l=r(5),i=r(2),o=r(78),s=r(98),u=r(258),c=r(1),d=r(208),p=r(15),m=r(25),y=r(290),f=r(6);class update_anomaly_source_editor_UpdateAnomalySourceEditor extends i.Component{constructor(...e){super(...e),n()(this,"state",{})}render(){return Object(f.jsx)(i.Fragment,null,Object(f.jsx)(m.EuiPanel,null,Object(f.jsx)(m.EuiTitle,{size:"xs"},Object(f.jsx)("h6",null,Object(f.jsx)(p.FormattedMessage,{id:"xpack.ml.maps.settingsEditorLabel",defaultMessage:"Anomalies"}))),Object(f.jsx)(m.EuiSpacer,{size:"s"}),Object(f.jsx)(y.a,{onChange:e=>{this.props.onChange({propName:"typicalActual",value:e})},typicalActual:this.props.typicalActual})),Object(f.jsx)(m.EuiSpacer,{size:"s"}))}}class anomaly_source_AnomalySource{static createDescriptor(e){if("string"!=typeof e.jobId)throw new Error("Job id is required for anomaly layer creation");return{type:o.SOURCE_TYPES.ES_ML_ANOMALIES,jobId:e.jobId,typicalActual:e.typicalActual||d.b.ACTUAL}}constructor(e,t){n()(this,"_descriptor",void 0),this._descriptor=anomaly_source_AnomalySource.createDescriptor(e)}async getGeoJsonWithMeta(e,t,r,a){const n=await Object(d.e)(anomaly_source_AnomalySource.mlResultsService,this._descriptor.jobId,this._descriptor.typicalActual,t);return{data:n,meta:{areResultsTrimmed:1e3===n.features.length}}}canFormatFeatureProperties(){return!1}cloneDescriptor(){return{type:this._descriptor.type,jobId:this._descriptor.jobId,typicalActual:this._descriptor.typicalActual}}createField({fieldName:e}){if("record_score"!==e)throw new Error("Record score field name is required");return new u.c({source:this,field:e})}async createFieldFormatter(e){return null}destroy(){}getApplyGlobalQuery(){return!0}getApplyForceRefresh(){return!1}getApplyGlobalTime(){return!0}async getAttributions(){return[]}async getBoundsForFilters(e,t){return null}async getDisplayName(){return l.i18n.translate("xpack.ml.maps.anomalySource.displayLabel",{defaultMessage:"{typicalActual} for {jobId}",values:{typicalActual:this._descriptor.typicalActual,jobId:this._descriptor.jobId}})}getFieldByName(e){return"record_score"===e?new u.c({source:this,field:e}):null}getSourceStatus(e){const t=e?e.getMeta():null;return null!=t&&t.areResultsTrimmed?{tooltipContent:l.i18n.translate("xpack.ml.maps.resultsTrimmedMsg",{defaultMessage:"Results limited to first {count} documents.",values:{count:1e3}}),areResultsTrimmed:!0}:{tooltipContent:null,areResultsTrimmed:!1}}getType(){return this._descriptor.type}isMvt(){return!1}supportsJoins(){return!1}async getFields(){return Object.keys(u.b).map((e=>new u.c({source:this,field:e})))}getGeoGridPrecision(e){return 0}isBoundsAware(){return!1}async getImmutableProperties(e){let t;try{var r;t=await(null===(r=anomaly_source_AnomalySource.mlLocator)||void 0===r?void 0:r.getUrl({page:c.b.ANOMALY_EXPLORER,pageState:{jobIds:[this._descriptor.jobId],timeRange:e.timeFilters}}))}catch(e){}return[{label:l.i18n.translate("xpack.ml.maps.anomalySourcePropLabel",{defaultMessage:"Job Id"}),value:this._descriptor.jobId,...t?{link:t}:{}}]}async isTimeAware(){return!0}renderSourceSettingsEditor({onChange:e}){return Object(f.jsx)(update_anomaly_source_editor_UpdateAnomalySourceEditor,{onChange:e,typicalActual:this._descriptor.typicalActual})}async supportsFitToBounds(){return!0}async getLicensedFeatures(){return[]}getMaxZoom(){return o.MAX_ZOOM}getMinZoom(){return o.MIN_ZOOM}getSourceTooltipContent(e){var t;const r=e?e.getMeta():null;return{tooltipContent:l.i18n.translate("xpack.ml.maps.sourceTooltip",{defaultMessage:"Shows anomalies"}),areResultsTrimmed:null!==(t=null==r?void 0:r.areResultsTrimmed)&&void 0!==t&&t}}async getSupportedShapeTypes(){return this._descriptor.typicalActual===d.b.TYPICAL_TO_ACTUAL?[o.VECTOR_SHAPE_TYPE.LINE]:[o.VECTOR_SHAPE_TYPE.POINT]}getSyncMeta(){return{jobId:this._descriptor.jobId,typicalActual:this._descriptor.typicalActual}}async getTooltipProperties(e){const t=[];for(const r in e)r!==s.GEOJSON_FEATURE_ID_PROPERTY_NAME&&e.hasOwnProperty(r)&&t.push(new u.d(r,e[r]));return t}isFieldAware(){return!0}async getValueSuggestions(e,t){return[]}getAttributionProvider(){return null}getInspectorAdapters(){}getJoinsDisabledReason(){return null}async getLeftJoinFields(){return[]}getFeatureActions(e){return[]}isFilterByMapBounds(){return!1}isGeoGridPrecisionAware(){return!1}isQueryAware(){return!0}isRefreshTimerAware(){return!0}async getTimesliceMaskFieldName(){return null}async supportsFeatureEditing(){return!1}hasTooltipProperties(){return!0}async addFeature(){}async deleteFeature(){}getUpdateDueToTimeslice(){return!0}async getDefaultFields(){return{}}getInspectorRequestIds(){return[]}}n()(anomaly_source_AnomalySource,"mlResultsService",void 0),n()(anomaly_source_AnomalySource,"mlLocator",void 0)},349:function(e,t,r){"use strict";r.d(t,"d",(function(){return l})),r.d(t,"a",(function(){return i})),r.d(t,"c",(function(){return o})),r.d(t,"b",(function(){return s}));var a=r(140),n=r(175);const l=[{stop:a.a.LOW,color:n.a.WARNING},{stop:a.a.MINOR,color:n.a.MINOR},{stop:a.a.MAJOR,color:n.a.MAJOR},{stop:a.a.CRITICAL,color:n.a.CRITICAL}],i={BUCKET:"bucket",RECORD:"record",INFLUENCER:"influencer"},o=["partition_field","over_field","by_field"],s="job_id"}}]);