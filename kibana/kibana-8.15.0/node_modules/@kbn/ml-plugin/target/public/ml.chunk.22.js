/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[22],{432:function(e,t,s){"use strict";s.d(t,"a",(function(){return u}));var i=s(6),a=(s(2),s(25)),l=s(5),n=s(15),d=s(29),o=s(45),c={name:"ovk77c",styles:"min-width:0"},r={name:"1gz2b5f",styles:"overflow:hidden;text-overflow:ellipsis"};const u=({models:e,hideColumns:t=["node_name"]})=>{const s=Object(o.b)(d.FIELD_FORMAT_IDS.BYTES),u=Object(o.b)(d.FIELD_FORMAT_IDS.DATE),j=Object(o.b)(d.FIELD_FORMAT_IDS.DURATION),m=Object(a.useEuiTheme)(),b=[{width:"10%",id:"deployment_id",field:"deployment_id",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.deploymentIdHeader",{defaultMessage:"ID"}),sortable:!0,truncateText:!1,isExpander:!1,"data-test-subj":"mlAllocatedModelsTableDeploymentId"},{width:"8%",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.modelRoutingStateHeader",{defaultMessage:"Routing state"}),"data-test-subj":"mlAllocatedModelsTableRoutingState",render:e=>{const{routing_state:t,reason:s}=e.node.routing_state;return Object(i.jsx)(a.EuiToolTip,{content:s||""},Object(i.jsx)(a.EuiBadge,{color:s?"danger":"hollow"},t))}},{width:"8%",id:"node_name",field:"node.name",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.nodeNameHeader",{defaultMessage:"Node name"}),sortable:!0,truncateText:!1,"data-test-subj":"mlAllocatedModelsTableNodeName"},{width:"10%",id:"model_id",field:"model_id",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.modelNameHeader",{defaultMessage:"Name"}),sortable:!0,truncateText:!1,"data-test-subj":"mlAllocatedModelsTableName"},{width:"8%",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.modelSizeHeader",{defaultMessage:"Size"}),truncateText:!0,"data-test-subj":"mlAllocatedModelsTableSize",render:e=>s(e.required_native_memory_bytes)},{width:"8%",name:Object(i.jsx)(a.EuiToolTip,{content:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.allocationTooltip",{defaultMessage:"number_of_allocations times threads_per_allocation"})},Object(i.jsx)("span",null,l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.allocationHeader",{defaultMessage:"Allocation"}),Object(i.jsx)(a.EuiIcon,{size:"s",color:"subdued",type:"questionInCircle",className:"eui-alignTop"}))),truncateText:!1,"data-test-subj":"mlAllocatedModelsTableAllocation",render:e=>void 0===e.node.number_of_allocations||void 0===e.node.threads_per_allocation?"-":`${e.node.number_of_allocations} * ${e.node.threads_per_allocation}`},{width:"8%",name:Object(i.jsx)(a.EuiToolTip,{content:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.throughputLastMinuteTooltip",{defaultMessage:"The number of requests processed in the last 1 minute."})},Object(i.jsx)("span",null,l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.throughputLastMinuteHeader",{defaultMessage:"Throughput"}),Object(i.jsx)(a.EuiIcon,{size:"s",color:"subdued",type:"questionInCircle",className:"eui-alignTop"}))),field:"node.throughput_last_minute",truncateText:!1,"data-test-subj":"mlAllocatedModelsTableThroughput"},{width:"8%",name:Object(i.jsx)(a.EuiToolTip,{display:"block",title:Object(i.jsx)(n.FormattedMessage,{id:"xpack.ml.trainedModels.nodesList.modelsList.modelAvgInferenceTimeTooltipHeader",defaultMessage:"Average inference time"}),content:Object(i.jsx)(n.FormattedMessage,{id:"xpack.ml.trainedModels.nodesList.modelsList.modelAvgInferenceTimeTooltipMessage",defaultMessage:"If caching is enabled, fast cache hits are included when calculating the average inference time."})},Object(i.jsx)(a.EuiFlexGroup,{gutterSize:"xs"},Object(i.jsx)(a.EuiFlexItem,{grow:!1,css:c},Object(i.jsx)("span",{css:r},Object(i.jsx)(n.FormattedMessage,{id:"xpack.ml.trainedModels.nodesList.modelsList.modelAvgInferenceTimeHeader",defaultMessage:"Avg inference time"}))),Object(i.jsx)(a.EuiFlexItem,{grow:!1,css:Object(i.css)({minWidth:m.euiTheme.size.m},"","")},Object(i.jsx)(a.EuiIcon,{size:"s",color:"subdued",type:"questionInCircle",className:"eui-alignTop"})))),truncateText:!1,"data-test-subj":"mlAllocatedModelsTableAvgInferenceTime",render:e=>e.node.average_inference_time_ms?j(e.node.average_inference_time_ms):"-"},{width:"8%",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.modelInferenceCountHeader",{defaultMessage:"Inference count"}),"data-test-subj":"mlAllocatedModelsTableInferenceCount",render:e=>e.node.inference_count},{width:"12%",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.modelStartTimeHeader",{defaultMessage:"Start time"}),"data-test-subj":"mlAllocatedModelsTableStartedTime",render:e=>u(e.node.start_time)},{width:"12%",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.modelLastAccessHeader",{defaultMessage:"Last access"}),"data-test-subj":"mlAllocatedModelsTableInferenceCount",render:e=>e.node.last_access?u(e.node.last_access):"-"},{width:"8%",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.modelNumberOfPendingRequestsHeader",{defaultMessage:"Pending requests"}),"data-test-subj":"mlAllocatedModelsTableNumberOfPendingRequests",render:e=>e.node.number_of_pending_requests},{width:"8%",name:l.i18n.translate("xpack.ml.trainedModels.nodesList.modelsList.errorCountHeader",{defaultMessage:"Errors"}),"data-test-subj":"mlAllocatedModelsTableErrorCount",render:e=>{var t;return null!==(t=e.node.error_count)&&void 0!==t?t:0}}].filter((e=>!t.includes(e.id)));return Object(i.jsx)(a.EuiInMemoryTable,{responsiveBreakpoint:"xl",allowNeutralSort:!1,columns:b,items:e,itemId:"key",rowProps:e=>({"data-test-subj":`mlAllocatedModelTableRow row-${e.model_id}`}),onTableChange:()=>{},"data-test-subj":"mlNodesAllocatedModels"})}},812:function(e,t,s){"use strict";s.r(t),s.d(t,"useListItemsFormatter",(function(){return I})),s.d(t,"ExpandedRow",(function(){return S}));var i=s(6),a=s(2),l=s.n(a),n=s(8),d=s(25),o=s(15),c=s(29),r=s(37),u=s(67),j=s(297),m=s(116);const b=({inferenceApis:e})=>Object(i.jsx)(l.a.Fragment,null,e.map(((e,t)=>{const s=t<=2,a=e.inference_id;return Object(i.jsx)(l.a.Fragment,{key:a},Object(i.jsx)(d.EuiAccordion,{id:a,buttonContent:Object(i.jsx)(d.EuiTitle,{size:"xs"},Object(i.jsx)("h5",null,a)),paddingSize:"l",initialIsOpen:s},Object(i.jsx)(d.EuiFlexGrid,{columns:2},Object(i.jsx)(d.EuiFlexItem,{"data-test-subj":`mlTrainedModelPipelineDefinition_${a}`},Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xxs"},Object(i.jsx)("h6",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.inferenceApiDefinitionTitle",defaultMessage:"Definition"}))),Object(i.jsx)(d.EuiCodeBlock,{language:"json",fontSize:"m",paddingSize:"m",overflowHeight:300,isCopyable:!0},JSON.stringify(e,null,2)))))))})));var x=s(10),p=s(5),O=s(45);const g=({content:e})=>Object(i.jsx)(d.EuiToolTip,{position:"top",content:e},Object(i.jsx)(d.EuiIcon,{tabIndex:0,type:"questionInCircle",color:"subdued",className:"eui-alignTop",size:"s"})),f=({stats:e})=>{Object(O.b)(c.FIELD_FORMAT_IDS.DURATION);const t=e.map(((e,t)=>{const s=Object.keys(e)[0];return{...e[s],id:`${s}_${t}`}})),s=[{field:"type",name:p.i18n.translate("xpack.ml.trainedModels.modelsList.pipelines.processorStats.typeHeader",{defaultMessage:"Processor type"}),width:"100px",sortable:!0,truncateText:!1,render:e=>Object(i.jsx)(d.EuiBadge,{color:"hollow"},e),"data-test-subj":"mlProcessorStatsType"},{field:"stats.count",name:Object(i.jsx)(d.EuiFlexGroup,{gutterSize:"xs"},Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.pipelines.processorStats.countHeader",defaultMessage:"Count"})),Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(g,{content:Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.pipelines.processorStats.countDescription",defaultMessage:"Total number of documents ingested during the lifetime of this node"})}))),width:"100px",truncateText:!0,"data-test-subj":"mlProcessorStatsCount"},{field:"stats.current",name:Object(i.jsx)(d.EuiFlexGroup,{gutterSize:"xs"},Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.pipelines.processorStats.currentHeader",defaultMessage:"Current"})),Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(g,{content:Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.pipelines.processorStats.currentDescription",defaultMessage:"Total number of documents currently being ingested"})}))),width:"100px",truncateText:!1,"data-test-subj":"mlProcessorStatsCurrent"},{field:"stats.failed",name:Object(i.jsx)(d.EuiFlexGroup,{gutterSize:"xs"},Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.pipelines.processorStats.failedHeader",defaultMessage:"Failed"})),Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(g,{content:Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.pipelines.processorStats.failedDescription",defaultMessage:"Total number of failed ingest operations during the lifetime of this node"})}))),width:"100px","data-test-subj":"mlProcessorStatsFailed"}];return Object(i.jsx)(d.EuiInMemoryTable,{allowNeutralSort:!1,columns:s,items:t,itemId:"id",rowProps:e=>({"data-test-subj":`mlProcessorStatsTableRow row-${e.id}`}),onTableChange:()=>{},"data-test-subj":"mlProcessorStatsTable"})},M=({pipelines:e,ingestStats:t})=>{var s;const{services:{share:a}}=Object(x.d)(),n=Object.keys(null!==(s=null!=e?e:null==t?void 0:t.pipelines)&&void 0!==s?s:{});return n.length?Object(i.jsx)(l.a.Fragment,null,n.map(((s,n)=>{var c,r;const u=n<=2,j=null==e?void 0:e[s];return Object(i.jsx)(l.a.Fragment,{key:s},Object(i.jsx)(d.EuiAccordion,{id:s,buttonContent:Object(i.jsx)(d.EuiTitle,{size:"xs"},Object(i.jsx)("h5",null,s)),extraAction:j?Object(i.jsx)(d.EuiButtonEmpty,{"data-test-subj":`mlTrainedModelPipelineEditButton_${s}`,onClick:()=>{const e=a.url.locators.get("INGEST_PIPELINES_APP_LOCATOR");e&&e.navigate({page:"pipeline_edit",pipelineId:s,absolute:!0})},iconType:"documentEdit",iconSide:"left"},Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.editPipelineLabel",defaultMessage:"Edit"})):void 0,paddingSize:"l",initialIsOpen:u},Object(i.jsx)(d.EuiFlexGrid,{columns:2},null!==(c=t.pipelines[s])&&void 0!==c&&c.processors?Object(i.jsx)(d.EuiFlexItem,{"data-test-subj":`mlTrainedModelPipelineIngestStats_${s}`},Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xxs"},Object(i.jsx)("h6",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.ingestStatsTitle",defaultMessage:"Ingest stats"}))),Object(i.jsx)(f,{stats:null===(r=t.pipelines[s])||void 0===r?void 0:r.processors}))):null,j?Object(i.jsx)(d.EuiFlexItem,{"data-test-subj":`mlTrainedModelPipelineDefinition_${s}`},Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xxs"},Object(i.jsx)("h6",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.processorsTitle",defaultMessage:"Definition"}))),Object(i.jsx)(d.EuiCodeBlock,{language:"json",fontSize:"m",paddingSize:"m",overflowHeight:300,isCopyable:!0},JSON.stringify(j,null,2)))):null)))}))):null};var _=s(432),T=s(122);const E=Object(m.a)((async()=>({default:(await Promise.all([s.e(4),s.e(7),s.e(9),s.e(15)]).then(s.bind(null,491))).JobMap}))),h=()=>{const e=Object(d.useEuiPaddingSize)("xs");return{badgeFormatter:function(t){if(0!==t.length)return Object(i.jsx)("div",null,t.map((t=>Object(i.jsx)("span",{css:Object(i.css)({marginRight:e},"",""),key:t},Object(i.jsx)(d.EuiBadge,{color:"hollow",css:Object(i.css)({marginRight:e},"","")},t)))))}}};function I(){const e=Object(O.b)(c.FIELD_FORMAT_IDS.BYTES),t=Object(O.b)(c.FIELD_FORMAT_IDS.DATE),{badgeFormatter:s}=h(),l=Object(a.useMemo)((()=>({tags:s,roles:s,create_time:t,timestamp:t,model_size_bytes:e,required_native_memory_bytes:e})),[]);return Object(a.useCallback)((e=>Object.entries(e).filter((([,e])=>Object(u.a)(e))).map((([e,t])=>e in l?{title:e,description:l[e](t)}:{title:e,description:"object"==typeof t?Object(i.jsx)(d.EuiCodeBlock,{language:"json",fontSize:"s",paddingSize:"s",overflowHeight:300,isCopyable:!1},JSON.stringify(t,null,2)):t.toString()}))),[l])}var L={name:"fhw977",styles:"height:300px"},F={name:"1d3w5wq",styles:"width:100%"};const S=({item:e})=>{const t=I(),{showLicenseInfo:s,showNodeInfo:c}=Object(T.d)(),{inference_config:u,stats:m,metadata:x,tags:p,version:O,estimated_operations:g,estimated_heap_memory_usage_bytes:f,default_field_map:h,license_level:S,pipelines:w,description:y}=e,k=Object(a.useMemo)((()=>{if(Object(r.a)(m.inference_stats)&&e.model_type!==j.j.PYTORCH)return m.inference_stats}),[m.inference_stats,e.model_type]),{analytics_config:z,...v}=null!=x?x:{},A=Object(a.useMemo)((()=>({description:y,tags:p,version:O,estimated_operations:g,estimated_heap_memory_usage_bytes:f,default_field_map:h,...s?{license_level:S}:{}})),[y,p,O,g,f,h,s,S]),C=Object(a.useMemo)((()=>{const e=m.deployment_stats,t=m.model_size_stats;return e&&t?e.flatMap((e=>e.nodes.map((s=>{const i=Object.values(s.node)[0].name;return{key:`${e.deployment_id}_${i}`,...e,...t,node:{...Object(n.pick)(s,["average_inference_time_ms","inference_count","routing_state","last_access","number_of_pending_requests","start_time","throughput_last_minute","number_of_allocations","threads_per_allocation","error_count"]),name:i}}})))):[]}),[m]),P=Object(a.useMemo)((()=>c?["model_id"]:["model_id","node_name"]),[c]),R=Object(a.useMemo)((()=>[{id:"details","data-test-subj":"mlTrainedModelDetails",name:Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.detailsTabLabel",defaultMessage:"Details"}),content:Object(i.jsx)("div",{"data-test-subj":"mlTrainedModelDetailsContent"},Object(i.jsx)(d.EuiSpacer,{size:"s"}),Object(i.jsx)(d.EuiFlexGrid,{columns:2,gutterSize:"m"},Object(i.jsx)(d.EuiFlexItem,null,Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xs"},Object(i.jsx)("h5",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.detailsTitle",defaultMessage:"Details"}))),Object(i.jsx)(d.EuiSpacer,{size:"m"}),Object(i.jsx)(d.EuiDescriptionList,{compressed:!0,type:"column",listItems:t(A)}))),Object(r.a)(v)?Object(i.jsx)(d.EuiFlexItem,null,Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xs"},Object(i.jsx)("h5",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.metadataTitle",defaultMessage:"Metadata"}))),Object(i.jsx)(d.EuiSpacer,{size:"m"}),Object(i.jsx)(d.EuiDescriptionList,{compressed:!0,type:"column",listItems:t(v)}))):null))},...u?[{id:"config","data-test-subj":"mlTrainedModelInferenceConfig",name:Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.configTabLabel",defaultMessage:"Config"}),content:Object(i.jsx)("div",{"data-test-subj":"mlTrainedModelInferenceConfigContent"},Object(i.jsx)(d.EuiSpacer,{size:"s"}),Object(i.jsx)(d.EuiFlexGrid,{columns:2,gutterSize:"m"},Object(i.jsx)(d.EuiFlexItem,null,Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xs"},Object(i.jsx)("h5",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.inferenceConfigTitle",defaultMessage:"Inference configuration"}))),Object(i.jsx)(d.EuiSpacer,{size:"m"}),Object(i.jsx)(d.EuiDescriptionList,{compressed:!0,type:"column",listItems:t(u[Object.keys(u)[0]])}))),z&&Object(i.jsx)(d.EuiFlexItem,null,Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xs"},Object(i.jsx)("h5",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.analyticsConfigTitle",defaultMessage:"Analytics configuration"}))),Object(i.jsx)(d.EuiSpacer,{size:"m"}),Object(i.jsx)(d.EuiDescriptionList,{compressed:!0,type:"column",listItems:t(z)})))))}]:[],...Object(r.a)(Object(n.omit)(m,["pipeline_count","ingest"]))?[{id:"stats","data-test-subj":"mlTrainedModelStats",name:Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.statsTabLabel",defaultMessage:"Stats"}),content:Object(i.jsx)("div",{"data-test-subj":"mlTrainedModelStatsContent"},Object(i.jsx)(d.EuiSpacer,{size:"s"}),null!=C&&C.length?Object(i.jsx)(l.a.Fragment,null,Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xs"},Object(i.jsx)("h5",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.deploymentStatsTitle",defaultMessage:"Deployment stats"}))),Object(i.jsx)(d.EuiSpacer,{size:"m"}),Object(i.jsx)(_.a,{models:C,hideColumns:P})),Object(i.jsx)(d.EuiSpacer,{size:"s"})):null,Object(i.jsx)(d.EuiFlexGrid,{columns:2,gutterSize:"m"},k?Object(i.jsx)(d.EuiFlexItem,null,Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xs"},Object(i.jsx)("h5",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.inferenceStatsTitle",defaultMessage:"Inference stats"}))),Object(i.jsx)(d.EuiSpacer,{size:"m"}),Object(i.jsx)(d.EuiDescriptionList,{compressed:!0,type:"column",listItems:t(k)}))):null,Object(r.a)(m.model_size_stats)&&!Object(r.a)(k)?Object(i.jsx)(d.EuiFlexItem,null,Object(i.jsx)(d.EuiPanel,null,Object(i.jsx)(d.EuiTitle,{size:"xs"},Object(i.jsx)("h5",null,Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.modelSizeStatsTitle",defaultMessage:"Model size stats"}))),Object(i.jsx)(d.EuiSpacer,{size:"m"}),Object(i.jsx)(d.EuiDescriptionList,{compressed:!0,type:"column",listItems:t(m.model_size_stats)}))):null))}]:[],...Object(r.a)(w)&&Object.keys(w).length>0||m.ingest?[{id:"pipelines","data-test-subj":"mlTrainedModelPipelines",name:Object(i.jsx)(d.EuiFlexGroup,{alignItems:"center",gutterSize:"xs"},Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.pipelinesTabLabel",defaultMessage:"Pipelines"})),Object(r.a)(w)?Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(d.EuiNotificationBadge,null,Object.keys(w).length)):null),content:Object(i.jsx)("div",{"data-test-subj":"mlTrainedModelPipelinesContent"},Object(i.jsx)(d.EuiSpacer,{size:"s"}),Object(i.jsx)(M,{pipelines:w,ingestStats:m.ingest}))}]:[],...Array.isArray(e.inference_apis)&&e.inference_apis.length>0?[{id:"inferenceApi","data-test-subj":"inferenceAPIs",name:Object(i.jsx)(d.EuiFlexGroup,{alignItems:"center",gutterSize:"xs"},Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.inferenceAPIsTabLabel",defaultMessage:"Inference services"})),Object(i.jsx)(d.EuiFlexItem,{grow:!1},Object(i.jsx)(d.EuiNotificationBadge,null,e.inference_apis.length))),content:Object(i.jsx)("div",{"data-test-subj":"mlTrainedModelInferenceAPIContent"},Object(i.jsx)(d.EuiSpacer,{size:"s"}),Object(i.jsx)(b,{inferenceApis:e.inference_apis}))}]:[],{id:"models_map","data-test-subj":"mlTrainedModelMap",name:Object(i.jsx)(o.FormattedMessage,{id:"xpack.ml.trainedModels.modelsList.expandedRow.modelsMapLabel",defaultMessage:"Models map"}),content:Object(i.jsx)("div",{"data-test-subj":"mlTrainedModelMapContent"},Object(i.jsx)(d.EuiSpacer,{size:"s"}),Object(i.jsx)(d.EuiFlexItem,{css:L},Object(i.jsx)(E,{analyticsId:void 0,modelId:e.model_id,forceRefresh:!1,defaultHeight:200})))}]),[z,C,A,t,u,k,w,v,m,e.model_id,e.inference_apis,P]),D="started"===e.state?R.find((e=>"stats"===e.id)):R[0];return Object(i.jsx)(d.EuiTabbedContent,{size:"s",css:F,tabs:R,initialSelectedTab:D,autoFocus:"selected","data-test-subj":"mlTrainedModelRowDetails"})}}}]);