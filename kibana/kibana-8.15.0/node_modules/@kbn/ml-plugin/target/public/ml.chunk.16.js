/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.ml_bundle_jsonpfunction=window.ml_bundle_jsonpfunction||[]).push([[16,37,38,77,80],{143:function(e,t,a){"use strict";a.d(t,"a",(function(){return E}));var i=a(120),n=a.n(i),s=a(2),r=a(88),o=a(149),l=a(26),c=a.n(l),u=a(84),d=a.n(u),b=a(25);const m="eui-global",p="eui-utilities",g={darkMode:!1};var j=a(6);const f=[b.euiStylisPrefixer],v=d()({key:"css",stylisPlugins:f,container:document.querySelector('meta[name="emotion"]')}),h=d()({key:m,stylisPlugins:f,container:document.querySelector(`meta[name="${m}"]`)}),x=d()({key:p,stylisPlugins:f,container:document.querySelector(`meta[name="${p}"]`)});v.compat=!0,h.compat=!0,x.compat=!0;const y={default:v,global:h,utility:x},_=({theme:{theme$:e},globalStyles:t,colorMode:a,modify:i,children:n})=>{const r=c()(e,g),o=Object(s.useMemo)((()=>(e=>e.darkMode?b.COLOR_MODES_STANDARD.dark:b.COLOR_MODES_STANDARD.light)(r)),[r]),l=a||o,u=!1!==t&&void 0;return Object(j.jsx)(b.EuiProvider,{cache:y,modify:i,colorMode:l,globalStyles:u,utilityClasses:u},n)},S=({children:e,i18n:t,...a})=>Object(r.useIsNestedEuiProvider)()?(Object(o.emitEuiProviderWarning)("KibanaRootContextProvider has likely been nested in this React tree, either by direct reference or by KibanaRenderContextProvider.  The result of this nesting is a nesting of EuiProvider, which has negative effects.  Check your React tree for nested Kibana context providers."),Object(j.jsx)(t.Context,null,e)):Object(j.jsx)(_,a,Object(j.jsx)(t.Context,null,e));var O=a(89);const E=({children:e,...t})=>Object(j.jsx)(S,n()({globalStyles:!1},t),Object(j.jsx)(O.KibanaErrorBoundaryProvider,{analytics:t.analytics},Object(j.jsx)(O.KibanaErrorBoundary,null,e)))},149:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setEuiDevProviderWarning=t.getEuiDevProviderWarning=t.emitEuiProviderWarning=void 0;var i=void 0;t.setEuiDevProviderWarning=function(e){return i=e},t.getEuiDevProviderWarning=function(){return i},t.emitEuiProviderWarning=function(e){if("function"==typeof i)return i(e);switch(i){case"log":console.log(e);break;case"warn":console.warn(e);break;case"error":throw new Error(e)}}},155:function(e,t,a){"use strict";a.d(t,"a",(function(){return l}));var i=a(2),n=a(79),s=a.n(n),r=a(143),o=a(6);const l=(e,t)=>a=>(s.a.render(Object(o.jsx)(r.a,t,e),a),()=>s.a.unmountComponentAtNode(a));a(4),a(5),i.Component},156:function(e,t,a){"use strict";a.d(t,"a",(function(){return s})),a.d(t,"b",(function(){return r})),a.d(t,"c",(function(){return n}));let i=null;function n(e){return i=e,i}function s(){return null!==i&&i.hasLicenseExpired()}function r(){return null!==i&&i.isFullLicense()}},172:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(58),n=a(2),s=i.__importDefault(a(223));t.default=function(e,t,a){void 0===t&&(t=0),void 0===a&&(a=[]);var i=s.default(e,t),r=i[0],o=i[1],l=i[2];return n.useEffect(l,a),[r,o]}},198:function(e,t,a){"use strict";a.d(t,"b",(function(){return r})),a.d(t,"a",(function(){return o}));var i=a(5),n=a(42),s=a(18);function r(e,t,a,r){const l=Object(s.d)();if(e.contains("job_id_empty"))t.jobId.valid=!1;else if(e.contains("job_id_invalid")){t.jobId.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAllowedCharactersDescription",{defaultMessage:"Job ID can contain lowercase alphanumeric (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"});t.jobId.message=e}else if(e.contains("job_id_invalid_max_length"))t.jobId.valid=!1,t.jobId.message=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobIdInvalidMaxLengthErrorMessage",{defaultMessage:"Job ID must be no more than {maxLength, plural, one {# character} other {# characters}} long.",values:{maxLength:n.b}});else if(e.contains("job_id_already_exists")){t.jobId.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAlreadyExists",{defaultMessage:"Job ID already exists. A job ID cannot be the same as an existing job or group."});t.jobId.message=e}if(e.contains("job_group_id_invalid")){t.groupIds.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobGroupAllowedCharactersDescription",{defaultMessage:"Job group names can contain lowercase alphanumeric (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"});t.groupIds.message=e}else if(e.contains("job_group_id_invalid_max_length"))t.groupIds.valid=!1,t.groupIds.message=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobGroupMaxLengthDescription",{defaultMessage:"Job group name must be no more than {maxLength, plural, one {# character} other {# characters}} long.",values:{maxLength:n.b}});else if(e.contains("job_group_id_already_exists")){t.groupIds.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.groupNameAlreadyExists",{defaultMessage:"Group ID already exists. A group ID cannot be the same as an existing job or group."});t.groupIds.message=e}if(e.contains("model_memory_limit_units_invalid")){t.modelMemoryLimit.valid=!1;const e=`${n.a.slice(0,n.a.length-1).join(", ")} or ${[...n.a].pop()}`,a=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.modelMemoryLimitUnitsInvalidErrorMessage",{defaultMessage:"Model memory limit data unit unrecognized. It must be {str}",values:{str:e}});t.modelMemoryLimit.message=a}if(e.contains("model_memory_limit_invalid")){t.modelMemoryLimit.valid=!1;const e=(l.max_model_memory_limit||"").toUpperCase(),a=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.modelMemoryLimitRangeInvalidErrorMessage",{defaultMessage:"Model memory limit cannot be higher than the maximum value of {maxModelMemoryLimit}",values:{maxModelMemoryLimit:e}});t.modelMemoryLimit.message=a}if(e.contains("detectors_duplicates")){t.duplicateDetectors.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.duplicatedDetectorsErrorMessage",{defaultMessage:"Duplicate detectors were found."});t.duplicateDetectors.message=e}if(e.contains("categorizer_detector_missing_per_partition_field")){t.categorizerMissingPerPartition.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.categorizerMissingPerPartitionFieldMessage",{defaultMessage:'Partition field must be set for detectors that reference "mlcategory" when per-partition categorization is enabled.'});t.categorizerMissingPerPartition.message=e}if(e.contains("categorizer_varying_per_partition_fields")){t.categorizerVaryingPerPartitionField.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.categorizerVaryingPerPartitionFieldNamesMessage",{defaultMessage:'Detectors with keyword "mlcategory" cannot have different partition_field_name when per-partition categorization is enabled.'});t.categorizerVaryingPerPartitionField.message=e}if(e.contains("bucket_span_empty")){t.bucketSpan.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.bucketSpanMustBeSetErrorMessage",{defaultMessage:"Bucket span must be set"});t.bucketSpan.message=e}else e.contains("bucket_span_invalid")&&(t.bucketSpan.valid=!1,t.bucketSpan.message=o(a.analysis_config.bucket_span));if(e.contains("query_empty")){t.query.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.queryCannotBeEmpty",{defaultMessage:"Datafeed query cannot be empty."});t.query.message=e}else if(e.contains("query_invalid")){t.query.valid=!1;const e=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.queryIsInvalidEsQuery",{defaultMessage:"Datafeed query must be a valid elasticsearch query."});t.query.message=e}e.contains("query_delay_invalid")&&(t.queryDelay.valid=!1,t.queryDelay.message=o(r.query_delay)),e.contains("frequency_invalid")&&(t.frequency.valid=!1,t.frequency.message=o(r.frequency)),e.contains("missing_summary_count_field_name")&&(t.summaryCountField.valid=!1,t.summaryCountField.message=i.i18n.translate("xpack.ml.newJob.wizard.validateJob.summaryCountFieldMissing",{defaultMessage:"Required field as the datafeed uses aggregations."}))}function o(e){return i.i18n.translate("xpack.ml.newJob.wizard.validateJob.frequencyInvalidTimeIntervalFormatErrorMessage",{defaultMessage:"{value} is not a valid time interval format e.g. {thirtySeconds}, {tenMinutes}, {oneHour}, {sevenDays}. It also needs to be higher than zero.",values:{value:e,thirtySeconds:"30s",tenMinutes:"10m",oneHour:"1h",sevenDays:"7d"}})}},223:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i=a(2);t.default=function(e,t){void 0===t&&(t=0);var a=i.useRef(!1),n=i.useRef(),s=i.useRef(e),r=i.useCallback((function(){return a.current}),[]),o=i.useCallback((function(){a.current=!1,n.current&&clearTimeout(n.current),n.current=setTimeout((function(){a.current=!0,s.current()}),t)}),[t]),l=i.useCallback((function(){a.current=null,n.current&&clearTimeout(n.current)}),[]);return i.useEffect((function(){s.current=e}),[e]),i.useEffect((function(){return o(),l}),[t]),[r,l,o]}},228:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var i=a(35),n=a(70),s=a(85),r=a(12),o=a(11),l=a(103),c=a(0);function u(e){if(void 0===e){const e=(e,t)=>{};return{click:e,count:e}}return{click:(t,a)=>e.reportUiCounter(c.g,l.METRIC_TYPE.CLICK,t,a),count:(t,a)=>e.reportUiCounter(c.g,l.METRIC_TYPE.COUNT,t,a)}}var d=a(77);function b(e,t,a){const l=new r.a(e),c=Object(o.mlApiServicesProvider)(l),b=Object(d.indexServiceFactory)(t);return{httpService:l,mlApiServices:c,mlFieldFormatService:Object(s.fieldFormatServiceFactory)(c,b),mlUsageCollection:u(a),mlCapabilities:new n.MlCapabilitiesService(c),mlLicense:new i.a}}},271:function(e,t,a){"use strict";a.d(t,"a",(function(){return n}));var i=a(21);const n=()=>Object(i.useKibana)()},384:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a(2);var i=a(7),n=a(21),s=a(155),r=a(228),o=a(6);function l(e,t,a,l,c,u){const{http:d,overlays:b,application:{currentAppId$:m},...p}=t;return new Promise((async(g,j)=>{try{const j=()=>{f.close(),g()},f=b.openFlyout(Object(s.a)(Object(o.jsx)(n.KibanaContextProvider,{services:{...t,share:a,data:l,lens:u,dashboardService:c,mlServices:Object(r.a)(d,l.dataViews)}},Object(o.jsx)(e,{onClose:()=>{j(),g()}})),p),{"data-test-subj":"mlFlyoutLayerSelector",ownFocus:!0,onClose:j,size:"35vw"});m.pipe(Object(i.skip)(1),Object(i.takeUntil)(Object(i.from)(f.onClose)),Object(i.distinctUntilChanged)()).subscribe((()=>{f.close()}))}catch(e){j(e)}}))}},385:function(e,t,a){"use strict";a.d(t,"a",(function(){return h}));var i=a(2),n=a.n(i),s=a(172),r=a.n(s),o=a(25),l=a(5),c=a(15),u=a(322),d=a(125),b=a(123),m=a(42),p=a(198),g=a(1),j=a(271),f=a(6),v=function(e){return e[e.DEFAULT=0]="DEFAULT",e[e.VALIDATING=1]="VALIDATING",e[e.SAVING=2]="SAVING",e[e.SAVE_SUCCESS=3]="SAVE_SUCCESS",e[e.SAVE_FAILED=4]="SAVE_FAILED",e}(v||{});const h=({children:e,createADJobInWizard:t,createADJob:a,layer:s,layerIndex:u,timeRange:h,incomingCreateError:y,outerFormComplete:_})=>{var S;const{services:{share:O,application:E,mlServices:{mlApiServices:I}}}=Object(j.a)(),[w,M]=Object(i.useState)(""),[C,k]=Object(i.useState)(!0),[J,F]=Object(i.useState)(!0),[L,A]=Object(i.useState)(d.b),[P,D]=Object(i.useState)(""),[T,z]=Object(i.useState)(""),[$,V]=Object(i.useState)(v.DEFAULT),[U,B]=Object(i.useState)(null),R=null!==(S=null==s?void 0:s.jobType)&&void 0!==S?S:d.f.GEO,N=Object(i.useCallback)((async e=>{const t=O.url.locators.get(g.a);if(t){const a=C?e===d.f.MULTI_METRIC||e===d.f.GEO?g.b.ANOMALY_EXPLORER:g.b.SINGLE_METRIC_VIEWER:g.b.ANOMALY_DETECTION_JOBS_MANAGE,i=C?{jobIds:[w],timeRange:h}:{jobId:w},n=await t.getUrl({page:a,pageState:i});E.navigateToUrl(n)}}),[O,C,w,h,E]);return r()((function(){if(void 0===w||""===w)return;D(""),z("");const e=Object(b.e)({job_id:w,analysis_config:{detectors:[],bucket_span:L}},void 0,{max_model_memory_limit:"",effective_max_model_memory_limit:""},!0);e.contains("job_id_invalid")?D(l.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAllowedCharactersDescription",{defaultMessage:"Job ID can contain lowercase alphanumeric (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"})):e.contains("job_id_invalid_max_length")?D(l.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobIdInvalidMaxLengthErrorMessage",{defaultMessage:"Job ID must be no more than {maxLength, plural, one {# character} other {# characters}} long.",values:{maxLength:m.b}})):I.jobs.jobsExist([w]).then((e=>{e[w].exists&&D(l.i18n.translate("xpack.ml.newJob.wizard.validateJob.jobNameAlreadyExists",{defaultMessage:"Job ID already exists. A job ID cannot be the same as an existing job or group."}))})).catch((e=>{console.error("Could not validate whether job ID exists")})),e.contains("bucket_span_invalid")?z(Object(p.a)(L)):e.contains("bucket_span_empty")&&z(l.i18n.translate("xpack.ml.newJob.wizard.validateJob.bucketSpanMustBeSetErrorMessage",{defaultMessage:"Bucket span must be set"})),V(v.DEFAULT)}),500,[w,L]),Object(f.jsx)(n.a.Fragment,null,$!==v.SAVE_SUCCESS&&$!==v.SAVING||y?Object(f.jsx)(n.a.Fragment,null,null!=e?e:null,Object(f.jsx)(o.EuiSpacer,{size:"m"}),Object(f.jsx)(o.EuiForm,null,Object(f.jsx)(o.EuiFormRow,{label:l.i18n.translate("xpack.ml.newJob.wizard.jobDetailsStep.jobId.title",{defaultMessage:"Job ID"}),error:P,isInvalid:""!==P},Object(f.jsx)(o.EuiFieldText,{"data-test-subj":`mlLensLayerJobIdInput_${u}`,value:w,onChange:e=>{M(e.target.value),V(v.VALIDATING)}})),Object(f.jsx)(o.EuiSpacer,{size:"s"}),Object(f.jsx)(o.EuiAccordion,{"data-test-subj":`mlLensLayerAdditionalSettingsButton_${u}`,id:"additional-section",buttonContent:l.i18n.translate("xpack.ml.embeddables.lensLayerFlyout.createJobCallout.additionalSettings.title",{defaultMessage:"Additional settings"})},Object(f.jsx)(o.EuiSpacer,{size:"s"}),Object(f.jsx)(o.EuiFormRow,{label:l.i18n.translate("xpack.ml.newJob.wizard.pickFieldsStep.bucketSpan.placeholder",{defaultMessage:"Bucket span"}),error:T,isInvalid:""!==T},Object(f.jsx)(o.EuiFieldText,{"data-test-subj":`mlLensLayerBucketSpanInput_${u}`,value:L,onChange:e=>{A(e.target.value),V(v.VALIDATING)}})),Object(f.jsx)(o.EuiSpacer,{size:"l"}),Object(f.jsx)(o.EuiFormRow,null,Object(f.jsx)(o.EuiCheckbox,{id:"startJob","data-test-subj":`mlLensLayerStartJobCheckbox_${u}`,checked:C,onChange:e=>{return t=e.target.checked,k(t),void F(t&&J);var t},label:l.i18n.translate("xpack.ml.embeddables.lensLayerFlyout.createJobCallout.additionalSettings.start",{defaultMessage:"Start the job after saving"})})),Object(f.jsx)(o.EuiSpacer,{size:"s"}),Object(f.jsx)(o.EuiFormRow,null,Object(f.jsx)(o.EuiCheckbox,{id:"realTime",disabled:!1===C,"data-test-subj":`mlLensLayerRealTimeCheckbox_${u}`,checked:J,onChange:e=>F(e.target.checked),label:l.i18n.translate("xpack.ml.embeddables.lensLayerFlyout.createJobCallout.additionalSettings.realTime",{defaultMessage:"Leave the job running for new data"})})),Object(f.jsx)(o.EuiSpacer,{size:"m"}))),Object(f.jsx)(o.EuiSpacer,{size:"m"}),Object(f.jsx)(o.EuiFlexGroup,null,Object(f.jsx)(o.EuiFlexItem,null,Object(f.jsx)(o.EuiButton,{disabled:$===v.VALIDATING||""===w||""!==P||""!==T||!1===_,onClick:async function(){if(void 0===w||""===w)return;V(v.SAVING),B(null);const e=await a({jobId:w,bucketSpan:L,startJob:C,runInRealTime:J}),t=x(e);null===t?V(v.SAVE_SUCCESS):(V(v.SAVE_FAILED),B(t))}.bind(null,u),size:"s","data-test-subj":`mlLensLayerCreateJobButton_${u}`},Object(f.jsx)(c.FormattedMessage,{id:"xpack.ml.embeddables.lensLayerFlyout.createJobButton.saving",defaultMessage:"Create job"}))),Object(f.jsx)(o.EuiFlexItem,{grow:!1},Object(f.jsx)(o.EuiButtonEmpty,{onClick:t.bind(null,u),size:"s",iconType:"popout",iconSide:"right","data-test-subj":`mlLensLayerCreateWithWizardButton_${u}`},Object(f.jsx)(c.FormattedMessage,{id:"xpack.ml.embeddables.lensLayerFlyout.createJobButton",defaultMessage:"Create job using wizard"}))))):null,$===v.SAVE_SUCCESS?Object(f.jsx)(n.a.Fragment,null,Object(f.jsx)(o.EuiFlexGroup,{gutterSize:"s","data-test-subj":`mlLensLayerCompatible.jobCreated.success_${u}`},Object(f.jsx)(o.EuiFlexItem,{grow:!1},Object(f.jsx)(o.EuiText,{size:"s"},Object(f.jsx)(o.EuiIcon,{type:"checkInCircleFilled",color:"success"}))),Object(f.jsx)(o.EuiFlexItem,null,Object(f.jsx)(o.EuiText,{size:"s"},Object(f.jsx)(c.FormattedMessage,{id:"xpack.ml.embeddables.flyout.flyoutAdditionalSettings.saveSuccess",defaultMessage:"Job created"})))),Object(f.jsx)(o.EuiSpacer,{size:"s"}),Object(f.jsx)(o.EuiButtonEmpty,{onClick:N.bind(null,R),flush:"left","data-test-subj":`mlLensLayerResultsButton_${u}`},!1===C?Object(f.jsx)(c.FormattedMessage,{id:"xpack.ml.embeddables.flyoutAdditionalSettings.saveSuccess.resultsLink.jobList",defaultMessage:"View in job management page"}):R===d.f.MULTI_METRIC||R===d.f.GEO?Object(f.jsx)(c.FormattedMessage,{id:"xpack.ml.embeddables.flyoutAdditionalSettings.saveSuccess.resultsLink.multiMetric",defaultMessage:"View results in Anomaly Explorer"}):Object(f.jsx)(c.FormattedMessage,{id:"xpack.ml.embeddables.flyoutAdditionalSettings.saveSuccess.resultsLink.singleMetric",defaultMessage:"View results in Single Metric Viewer"}))):null,$===v.SAVING&&void 0===y?Object(f.jsx)(n.a.Fragment,null,Object(f.jsx)(o.EuiFlexGroup,null,Object(f.jsx)(o.EuiFlexItem,{grow:!1},Object(f.jsx)(c.FormattedMessage,{id:"xpack.ml.embeddables.flyoutAdditionalSettings.creatingJob",defaultMessage:"Creating job"})),Object(f.jsx)(o.EuiFlexItem,{grow:!1},Object(f.jsx)(o.EuiLoadingSpinner,null)))):null,$===v.SAVE_FAILED&&null!==U?Object(f.jsx)(n.a.Fragment,null,Object(f.jsx)(o.EuiSpacer,null),Object(f.jsx)(o.EuiCallOut,{color:"danger",title:U.text},U.errorText)):null,y?Object(f.jsx)(n.a.Fragment,null,Object(f.jsx)(o.EuiSpacer,null),Object(f.jsx)(o.EuiCallOut,{color:"danger",title:y.text},y.errorText)):null)},x=e=>e.jobCreated.error?{text:l.i18n.translate("xpack.ml.embeddables.flyoutAdditionalSettings.jobCreateError.jobCreated",{defaultMessage:"Job could not be created."}),errorText:Object(u.a)(e.jobCreated.error)}:e.datafeedCreated.error?{text:l.i18n.translate("xpack.ml.embeddables.flyoutAdditionalSettings.jobCreateError.datafeedCreated",{defaultMessage:"Job created but datafeed could not be created."}),errorText:Object(u.a)(e.datafeedCreated.error)}:e.jobOpened.error?{text:l.i18n.translate("xpack.ml.embeddables.flyoutAdditionalSettings.jobCreateError.jobOpened",{defaultMessage:"Job and datafeed created but the job could not be opened."}),errorText:Object(u.a)(e.jobOpened.error)}:e.datafeedStarted.error?{text:l.i18n.translate("xpack.ml.embeddables.flyoutAdditionalSettings.jobCreateError.datafeedStarted",{defaultMessage:"Job and datafeed created but the datafeed could not be started."}),errorText:Object(u.a)(e.datafeedStarted.error)}:null},70:function(e,t,a){"use strict";a.r(t),a.d(t,"MlCapabilitiesService",(function(){return check_capabilities_MlCapabilitiesService})),a.d(t,"usePermissionCheck",(function(){return f})),a.d(t,"useUpgradeCheck",(function(){return v})),a.d(t,"checkGetManagementMlJobsResolver",(function(){return h})),a.d(t,"checkCreateJobsCapabilitiesResolver",(function(){return x})),a.d(t,"checkPermission",(function(){return y})),a.d(t,"createPermissionFailureMessage",(function(){return _}));var i=a(4),n=a.n(i),s=a(5),r=a(7),o=a(8),l=a(26),c=a.n(l),u=a(2),d=a(10),b=a(156),m=a(50),p=a(11);let g=Object(m.a)();const j=3e5;class check_capabilities_MlCapabilitiesService{constructor(e){n()(this,"_isLoading$",new r.BehaviorSubject(!0)),n()(this,"_updateRequested$",new r.BehaviorSubject(Date.now())),n()(this,"_capabilities$",new r.BehaviorSubject(null)),n()(this,"_capabilitiesObs$",this._capabilities$.asObservable()),n()(this,"_isPlatinumOrTrialLicense$",new r.BehaviorSubject(null)),n()(this,"_mlFeatureEnabledInSpace$",new r.BehaviorSubject(null)),n()(this,"_isUpgradeInProgress$",new r.BehaviorSubject(null)),n()(this,"capabilities$",this._capabilities$.pipe(Object(r.distinctUntilChanged)(o.isEqual))),n()(this,"_subscription",void 0),this.mlApiServices=e,this.init()}init(){this._subscription=Object(r.combineLatest)([this._updateRequested$,Object(r.timer)(0,j)]).pipe(Object(r.tap)((()=>{this._isLoading$.next(!0)})),Object(r.switchMap)((()=>Object(r.from)(this.mlApiServices.checkMlCapabilities()))),Object(r.retry)({delay:j})).subscribe((e=>{this._capabilities$.next(e.capabilities),this._isPlatinumOrTrialLicense$.next(e.isPlatinumOrTrialLicense),this._mlFeatureEnabledInSpace$.next(e.mlFeatureEnabledInSpace),this._isUpgradeInProgress$.next(e.upgradeInProgress),this._isLoading$.next(!1),g=e.capabilities}))}getCapabilities(){return this._capabilities$.getValue()}isPlatinumOrTrialLicense(){return this._isPlatinumOrTrialLicense$.getValue()}mlFeatureEnabledInSpace(){return this._mlFeatureEnabledInSpace$.getValue()}isUpgradeInProgress$(){return this._isUpgradeInProgress$}isUpgradeInProgress(){return this._isUpgradeInProgress$.getValue()}getCapabilities$(){return this._capabilitiesObs$}refreshCapabilities(){this._updateRequested$.next(Date.now())}destroy(){this._subscription&&this._subscription.unsubscribe()}}function f(e){const{services:{mlServices:{mlCapabilities:t}}}=Object(d.d)(),a=Object(u.useRef)(e),i=c()(t.capabilities$,t.getCapabilities());return Object(u.useMemo)((()=>Array.isArray(a.current)?a.current.map((e=>i[e])):i[a.current]),[i])}function v(){const{services:{mlServices:{mlCapabilities:e}}}=Object(d.d)(),t=c()(e.isUpgradeInProgress$(),e.isUpgradeInProgress());return null!=t&&t}function h({mlCapabilities:e}){return new Promise((async(t,a)=>{try{const i=await Object(r.firstValueFrom)(e.getCapabilities$().pipe(Object(r.filter)((e=>!!e))));return null===i?a():(g=i,!0===(i.isADEnabled&&i.canCreateJob||i.isDFAEnabled&&i.canCreateDataFrameAnalytics||i.isNLPEnabled&&i.canCreateTrainedModels)?t():a({capabilities:i,isPlatinumOrTrialLicense:e.isPlatinumOrTrialLicense(),mlFeatureEnabledInSpace:e.mlFeatureEnabledInSpace(),isUpgradeInProgress:e.isUpgradeInProgress()}))}catch(e){a(e)}}))}function x(e){return new Promise(((t,a)=>{p.ml.checkMlCapabilities().then((async({capabilities:i,isPlatinumOrTrialLicense:n})=>(g=i,g.canCreateJob||!1===n?t(g):(await e(),a())))).catch((async t=>(await e(),a())))}))}function y(e){const t=Object(b.a)();return!0===g[e]&&!0!==t}function _(e){let t="";return Object(b.a)()?t=s.i18n.translate("xpack.ml.privilege.licenseHasExpiredTooltip",{defaultMessage:"Your license has expired."}):"canCreateJob"===e?t=s.i18n.translate("xpack.ml.privilege.noPermission.createMLJobsTooltip",{defaultMessage:"You do not have permission to create Machine Learning jobs."}):"canStartStopDatafeed"===e?t=s.i18n.translate("xpack.ml.privilege.noPermission.startOrStopDatafeedsTooltip",{defaultMessage:"You do not have permission to start or stop datafeeds."}):"canUpdateJob"===e?t=s.i18n.translate("xpack.ml.privilege.noPermission.editJobsTooltip",{defaultMessage:"You do not have permission to edit jobs."}):"canDeleteJob"===e?t=s.i18n.translate("xpack.ml.privilege.noPermission.deleteJobsTooltip",{defaultMessage:"You do not have permission to delete jobs."}):"canCreateCalendar"===e?t=s.i18n.translate("xpack.ml.privilege.noPermission.createCalendarsTooltip",{defaultMessage:"You do not have permission to create calendars."}):"canDeleteCalendar"===e?t=s.i18n.translate("xpack.ml.privilege.noPermission.deleteCalendarsTooltip",{defaultMessage:"You do not have permission to delete calendars."}):"canForecastJob"===e&&(t=s.i18n.translate("xpack.ml.privilege.noPermission.runForecastsTooltip",{defaultMessage:"You do not have permission to run forecasts."})),s.i18n.translate("xpack.ml.privilege.pleaseContactAdministratorTooltip",{defaultMessage:"{message} Please contact your administrator.",values:{message:t}})}},77:function(e,t,a){"use strict";a.r(t),a.d(t,"indexServiceFactory",(function(){return n})),a.d(t,"useMlIndexUtils",(function(){return s}));var i=a(10);function n(e){return{getDataViewIdFromName:async function(t,a){var i;const n=(await e.find(t)).find((e=>e.getIndexPattern()===t));var s;return n?null!==(i=n.id)&&void 0!==i?i:n.getIndexPattern():void 0!==a&&null!==(s=(await e.create({id:void 0,name:t,title:t,timeFieldName:a.data_description.time_field})).id)&&void 0!==s?s:null},getDataViewById:function(t){return t?e.get(t):e.create({})},loadDataViewListItems:async function(){return(await e.getIdsWithTitle()).sort(((e,t)=>e.title.localeCompare(t.title)))}}}const s=()=>n(Object(i.d)().services.data.dataViews)},85:function(e,t,a){"use strict";a.r(t),a.d(t,"fieldFormatServiceFactory",(function(){return o}));var i=a(4),n=a.n(i),s=a(123),r=a(73);class field_format_service_FieldFormatService{constructor(e,t){n()(this,"indexPatternIdsByJob",{}),n()(this,"formatsByJob",{}),this.mlApiServices=e,this.mlIndexUtils=t}async populateFormats(e){(await Promise.all(e.map((async e=>{let t;if(this.mlApiServices){const{jobs:a}=await this.mlApiServices.getJobs({jobId:e});t=a[0]}else t=r.mlJobService.getJob(e);return{jobId:e,dataViewId:await this.mlIndexUtils.getDataViewIdFromName(t.datafeed_config.indices.join(","))}})))).forEach((({jobId:e,dataViewId:t})=>{null!==t&&(this.indexPatternIdsByJob[e]=t)}));const t=e.map((e=>Promise.all([this.getFormatsForJob(e)])));try{return(await Promise.all(t)).forEach(((t,a)=>{this.formatsByJob[e[a]]=t[0]})),this.formatsByJob}catch(e){return console.log("Error populating field formats:",e),{formats:{},error:e}}}getFieldFormat(e,t){if(this.formatsByJob.hasOwnProperty(e))return this.formatsByJob[e][t]}async getFormatsForJob(e){let t;if(this.mlApiServices){const{jobs:a}=await this.mlApiServices.getJobs({jobId:e});t=a[0]}else t=r.mlJobService.getJob(e);const a=t.analysis_config.detectors||[],i=[],n=this.indexPatternIdsByJob[e];if(void 0!==n){const e=await this.mlIndexUtils.getDataViewById(n),t=e.fields;a.forEach((a=>{const n=Object(s.s)(a.function);if(void 0!==a.field_name&&"cardinality"!==n){const n=t.getByName(a.field_name);void 0!==n&&(i[a.detector_index]=e.getFormatterForField(n))}}))}return i}}function o(e,t){return new field_format_service_FieldFormatService(e,t)}}}]);