"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DeleteAnnotationModal = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const DeleteAnnotationModal = ({
  cancelAction,
  deleteAction,
  isVisible
}) => {
  return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, isVisible === true && /*#__PURE__*/_react.default.createElement(_eui.EuiConfirmModal, {
    title: _i18n.i18n.translate('xpack.ml.timeSeriesExplorer.deleteAnnotationModal.deleteAnnotationTitle', {
      defaultMessage: 'Delete this annotation?'
    }),
    onCancel: cancelAction,
    onConfirm: deleteAction,
    cancelButtonText: _i18n.i18n.translate('xpack.ml.timeSeriesExplorer.deleteAnnotationModal.cancelButtonLabel', {
      defaultMessage: 'Cancel'
    }),
    confirmButtonText: _i18n.i18n.translate('xpack.ml.timeSeriesExplorer.deleteAnnotationModal.deleteButtonLabel', {
      defaultMessage: 'Delete'
    }),
    buttonColor: "danger",
    defaultFocusedButton: _eui.EUI_MODAL_CONFIRM_BUTTON,
    className: "eui-textBreakWord",
    "data-test-subj": 'mlAnnotationFlyoutConfirmDeleteModal'
  }));
};
exports.DeleteAnnotationModal = DeleteAnnotationModal;
DeleteAnnotationModal.propTypes = {
  cancelAction: _propTypes.default.func.isRequired,
  deleteAction: _propTypes.default.func.isRequired,
  isVisible: _propTypes.default.bool.isRequired
};