"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mountApp = mountApp;
var _reactDom = _interopRequireWildcard(require("react-dom"));
var _react = _interopRequireDefault(require("react"));
var _components = require("./components");
var _breadcrumbs = require("../breadcrumbs");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const renderApp = (element, history, coreStart, share, data, fieldFormats, isServerless, mlFeatures, spacesApi, usageCollection) => {
  _reactDom.default.render( /*#__PURE__*/_react.default.createElement(_components.JobsListPage, {
    coreStart,
    history,
    share,
    data,
    spacesApi,
    usageCollection,
    fieldFormats,
    isServerless,
    mlFeatures
  }), element);
  return () => {
    (0, _reactDom.unmountComponentAtNode)(element);
  };
};
async function mountApp(core, params, deps, isServerless, mlFeatures) {
  const [coreStart, pluginsStart] = await core.getStartServices();
  params.setBreadcrumbs((0, _breadcrumbs.getJobsListBreadcrumbs)());
  return renderApp(params.element, params.history, coreStart, pluginsStart.share, pluginsStart.data, pluginsStart.fieldFormats, isServerless, mlFeatures, pluginsStart.spaces, deps.usageCollection);
}