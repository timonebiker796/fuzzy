"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFillMaskOutputComponent = void 0;
var _react = _interopRequireDefault(require("react"));
var _useObservable = _interopRequireDefault(require("react-use/lib/useObservable"));
var _eui = require("@elastic/eui");
var _text_classification_output = require("./text_classification_output");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const getFillMaskOutputComponent = inferrer => /*#__PURE__*/_react.default.createElement(FillMaskOutput, {
  inferrer: inferrer
});
exports.getFillMaskOutputComponent = getFillMaskOutputComponent;
const FillMaskOutput = ({
  inferrer
}) => {
  const result = (0, _useObservable.default)(inferrer.getInferenceResult$(), inferrer.getInferenceResult());
  if (!result) {
    return null;
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, result.map(res => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_text_classification_output.PredictionProbabilityList, {
    response: res.response,
    inputText: inferrer.predictedValue(res)
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiHorizontalRule, null))));
};