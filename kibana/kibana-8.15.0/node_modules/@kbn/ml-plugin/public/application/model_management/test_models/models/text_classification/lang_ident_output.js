"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLangIdentOutputComponent = void 0;
var _react = _interopRequireDefault(require("react"));
var _useObservable = _interopRequireDefault(require("react-use/lib/useObservable"));
var _i18n = require("@kbn/i18n");
var _eui = require("@elastic/eui");
var _lang_codes = require("./lang_codes");
var _text_classification_output = require("./text_classification_output");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const getLangIdentOutputComponent = inferrer => /*#__PURE__*/_react.default.createElement(LangIdentOutput, {
  inferrer: inferrer
});
exports.getLangIdentOutputComponent = getLangIdentOutputComponent;
const LangIdentOutput = ({
  inferrer
}) => {
  const result = (0, _useObservable.default)(inferrer.getInferenceResult$(), inferrer.getInferenceResult());
  if (!result) {
    return null;
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, result.map(({
    response,
    inputText
  }) => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(LanguageIdent, {
    response: response,
    inputText: inputText
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiHorizontalRule, null))));
};
const LanguageIdent = ({
  response,
  inputText
}) => {
  const langCode = response[0].value;
  const lang = (0, _lang_codes.getLanguage)(langCode);
  const title = lang !== 'unknown' ? _i18n.i18n.translate('xpack.ml.trainedModels.testModelsFlyout.langIdent.output.title', {
    defaultMessage: 'This looks like {lang}',
    values: {
      lang
    }
  }) : _i18n.i18n.translate('xpack.ml.trainedModels.testModelsFlyout.langIdent.output.titleUnknown', {
    defaultMessage: 'Language code unknown: {langCode}',
    values: {
      langCode
    }
  });
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "s",
    "data-test-subj": 'mlTestModelLangIdentInputText'
  }, inputText), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "xxs"
  }, /*#__PURE__*/_react.default.createElement("h4", {
    "data-test-subj": 'mlTestModelLangIdentTitle'
  }, title)), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, null), /*#__PURE__*/_react.default.createElement(_text_classification_output.PredictionProbabilityList, {
    response: response
  }));
};