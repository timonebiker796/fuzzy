"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SingleMetricView = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _metric_selection = require("./metric_selection");
var _metric_selection_summary = require("./metric_selection_summary");
var _settings = require("./settings");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SingleMetricView = ({
  isActive,
  setCanProceed
}) => {
  const [metricsValid, setMetricValid] = (0, _react.useState)(false);
  const [settingsValid, setSettingsValid] = (0, _react.useState)(false);
  (0, _react.useEffect)(() => {
    if (typeof setCanProceed === 'function') {
      setCanProceed(metricsValid && settingsValid);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [metricsValid, settingsValid]);
  return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, isActive === false ? /*#__PURE__*/_react.default.createElement(_metric_selection_summary.SingleMetricDetectorsSummary, null) : /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_metric_selection.SingleMetricDetectors, {
    setIsValid: setMetricValid
  }), metricsValid && /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiHorizontalRule, {
    margin: "l"
  }), /*#__PURE__*/_react.default.createElement(_settings.SingleMetricSettings, {
    setIsValid: setSettingsValid
  }))));
};
exports.SingleMetricView = SingleMetricView;