"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.swimLaneSelectionTrigger = exports.isAnomalySwimlaneSelectionTriggerContext = exports.entityFieldSelectionTrigger = exports.SWIM_LANE_SELECTION_TRIGGER = exports.EXPLORER_ENTITY_FIELD_SELECTION_TRIGGER = void 0;
var _types = require("../embeddables/anomaly_swimlane/types");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SWIM_LANE_SELECTION_TRIGGER = exports.SWIM_LANE_SELECTION_TRIGGER = 'SWIM_LANE_SELECTION_TRIGGER';
const swimLaneSelectionTrigger = exports.swimLaneSelectionTrigger = {
  id: SWIM_LANE_SELECTION_TRIGGER,
  // This is empty string to hide title of ui_actions context menu that appears
  // when this trigger is executed.
  title: '',
  description: 'Swim lane selection triggered'
};
const EXPLORER_ENTITY_FIELD_SELECTION_TRIGGER = exports.EXPLORER_ENTITY_FIELD_SELECTION_TRIGGER = 'EXPLORER_ENTITY_FIELD_SELECTION_TRIGGER';
const entityFieldSelectionTrigger = exports.entityFieldSelectionTrigger = {
  id: EXPLORER_ENTITY_FIELD_SELECTION_TRIGGER,
  // This is empty string to hide title of ui_actions context menu that appears
  // when this trigger is executed.
  title: '',
  description: 'Entity field selection triggered'
};
const isAnomalySwimlaneSelectionTriggerContext = context => {
  return (0, _types.isSwimLaneEmbeddableContext)(context) && context.data !== undefined;
};
exports.isAnomalySwimlaneSelectionTriggerContext = isAnomalySwimlaneSelectionTriggerContext;