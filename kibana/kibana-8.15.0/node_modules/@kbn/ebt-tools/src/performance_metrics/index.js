"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PerformanceContextProvider = void 0;
Object.defineProperty(exports, "perfomanceMarkers", {
  enumerable: true,
  get: function () {
    return _performance_markers.perfomanceMarkers;
  }
});
Object.defineProperty(exports, "usePerformanceContext", {
  enumerable: true,
  get: function () {
    return _use_performance_context.usePerformanceContext;
  }
});
var _react = _interopRequireWildcard(require("react"));
var _use_performance_context = require("./context/use_performance_context");
var _performance_markers = require("./performance_markers");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; } /*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
function dynamic(loader) {
  const Component = /*#__PURE__*/_react.default.lazy(loader);
  return /*#__PURE__*/_react.default.forwardRef((props, ref) => /*#__PURE__*/_react.default.createElement(_react.Suspense, {
    fallback: null
  }, /*#__PURE__*/_react.default.createElement(Component, {
    ...props,
    ref
  })));
}
const PerformanceContextProvider = exports.PerformanceContextProvider = dynamic(() => Promise.resolve().then(() => _interopRequireWildcard(require('./context/performance_context'))));