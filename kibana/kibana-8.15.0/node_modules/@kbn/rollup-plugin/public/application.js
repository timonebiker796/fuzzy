"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.renderApp = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactDom = require("react-dom");
var _reactRedux = require("react-redux");
var _shared_imports = require("./shared_imports");
var _store = require("./crud_app/store");
var _app = require("./crud_app/app");
require("./index.scss");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

// @ts-ignore

// @ts-ignore

const AppWithExecutionContext = ({
  history,
  executionContext
}) => {
  (0, _shared_imports.useExecutionContext)(executionContext, {
    type: 'application',
    page: 'rollup'
  });
  return /*#__PURE__*/_react.default.createElement(_app.App, {
    history: history
  });
};

/**
 * This module will be loaded asynchronously to reduce the bundle size of your plugin's main bundle.
 */
const renderApp = async (core, {
  history,
  element,
  setBreadcrumbs
}) => {
  const [coreStart] = await core.getStartServices();
  const services = {
    history,
    setBreadcrumbs
  };
  (0, _reactDom.render)( /*#__PURE__*/_react.default.createElement(_shared_imports.KibanaRenderContextProvider, coreStart, /*#__PURE__*/_react.default.createElement(_shared_imports.KibanaContextProvider, {
    services: services
  }, /*#__PURE__*/_react.default.createElement(_reactRedux.Provider, {
    store: _store.rollupJobsStore
  }, /*#__PURE__*/_react.default.createElement(AppWithExecutionContext, {
    executionContext: core.executionContext,
    history: history
  })))), element);
  return () => {
    (0, _reactDom.unmountComponentAtNode)(element);
  };
};
exports.renderApp = renderApp;