/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */!function(t){function e(e){for(var i,a,r=e[0],l=e[1],o=0,c=[];o<r.length;o++)a=r[o],Object.prototype.hasOwnProperty.call(n,a)&&n[a]&&c.push(n[a][0]),n[a]=0;for(i in l)Object.prototype.hasOwnProperty.call(l,i)&&(t[i]=l[i]);for(s&&s(e);c.length;)c.shift()()}var i={},n={0:0};function a(e){if(i[e])return i[e].exports;var n=i[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.e=function(t){var e=[],i=n[t];if(0!==i)if(i)e.push(i[2]);else{var r=new Promise((function(e,a){i=n[t]=[e,a]}));e.push(i[2]=r);var l,o=document.createElement("script");o.charset="utf-8",o.timeout=120,a.nc&&o.setAttribute("nonce",a.nc),o.src=function(t){return a.p+"cloudExperiments.chunk."+t+".js"}(t);var s=new Error;l=function(e){o.onerror=o.onload=null,clearTimeout(c);var i=n[t];if(0!==i){if(i){var a=e&&("load"===e.type?"missing":e.type),r=e&&e.target&&e.target.src;s.message="Loading chunk "+t+" failed.\n("+a+": "+r+")",s.name="ChunkLoadError",s.type=a,s.request=r,i[1](s)}n[t]=void 0}};var c=setTimeout((function(){l({type:"timeout",target:o})}),12e4);o.onerror=o.onload=l,document.head.appendChild(o)}return Promise.all(e)},a.m=t,a.c=i,a.d=function(t,e,i){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)a.d(i,n,function(e){return t[e]}.bind(null,n));return i},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a.oe=function(t){throw console.error(t),t};var r=window.cloudExperiments_bundle_jsonpfunction=window.cloudExperiments_bundle_jsonpfunction||[],l=r.push.bind(r);r.push=e,r=r.slice();for(var o=0;o<r.length;o++)e(r[o]);var s=l;a(a.s=4)}([function(t,e){t.exports=__kbnSharedDeps__.Rxjs},function(t,e,i){t.exports=i(6)(2)},function(t,e){t.exports=__kbnSharedDeps__.Lodash},function(t,e){t.exports=__kbnSharedDeps__.Moment},function(t,e,i){i(5),__kbnBundles__.define("plugin/cloudExperiments/public",i,7)},function(t,e,i){i.p=window.__kbnPublicPath__.cloudExperiments},function(t,e){t.exports=__kbnSharedDeps_npm__},function(t,e,i){"use strict";i.r(e),i.d(e,"plugin",(function(){return u}));var n=i(1),a=i.n(n),r=i(2),l=i(3),o=i(0);class launch_darkly_client_LaunchDarklyClient{constructor(t,e,i){a()(this,"initialized",!1),a()(this,"canceled",!1),a()(this,"launchDarklyClientSub$",new o.BehaviorSubject(null)),a()(this,"loadingClient$",new o.BehaviorSubject(!0)),a()(this,"launchDarklyClient$",this.loadingClient$.pipe(Object(o.filter)((t=>!t)),Object(o.switchMap)((()=>this.launchDarklyClientSub$)))),this.ldConfig=t,this.kibanaVersion=e,this.logger=i}async updateUserMetadata(t){if(this.canceled)return;const{userId:e,...n}=t,a={...n,kind:"user",key:e};let r=null;if(this.initialized&&(r=await this.getClient()),r)await r.identify(a);else{this.initialized=!0;const{initialize:t,basicLogger:e}=await i.e(1).then(i.t.bind(null,8,7));r=t(this.ldConfig.client_id,a,{application:{id:"kibana-browser",version:this.kibanaVersion},logger:e({level:this.ldConfig.client_log_level})}),this.launchDarklyClientSub$.next(r),this.loadingClient$.next(!1)}}async getVariation(t,e){const i=await this.getClient();return i?(await i.waitForInitialization(),await i.variation(t,e)):e}reportMetric(t,e,i){this.getClient().then((n=>{n&&n.track(t,e,i)}))}stop(){this.getClient().then((t=>{null==t||t.flush().catch((t=>{this.logger.warn(t)}))}))}cancel(){this.initialized=!0,this.canceled=!0,this.loadingClient$.next(!1)}getClient(){return Object(o.firstValueFrom)(this.launchDarklyClient$,{defaultValue:null})}}class metadata_service_MetadataService{constructor(t,e){a()(this,"_userMetadata$",new o.BehaviorSubject(void 0)),a()(this,"stop$",new o.Subject),this.config=t,this.logger=e}setup(t){this._userMetadata$.next(t);const e=t.trialEndDate;e&&this.scheduleUntil((()=>({inTrial:Date.now()<=new Date(e).getTime()})),(t=>!1===t.inTrial))}get userMetadata$(){return this._userMetadata$.pipe(Object(o.filter)(Boolean),Object(o.debounceTime)(100),Object(o.distinct)((t=>[t.inTrial,t.hasData].join("-"))),Object(o.shareReplay)(1))}start({hasDataFetcher:t}){this._userMetadata$.value&&this.scheduleUntil((async()=>t()),(t=>!0===t.hasData))}stop(){this.stop$.next(),this._userMetadata$.complete()}scheduleUntil(t,e){Object(o.timer)(0,this.config.metadata_refresh_interval.asMilliseconds()).pipe(Object(o.takeUntil)(this.stop$),Object(o.exhaustMap)((async()=>{try{this._userMetadata$.next({...this._userMetadata$.value,...await t()})}catch(t){this.logger.warn(`Failed to update metadata because ${t}`)}})),Object(o.takeWhile)((()=>!e(this._userMetadata$.value)))).subscribe()}}let s=function(t){return t["security-solutions.add-integrations-url"]="security-solutions.add-integrations-url",t["security-solutions.guided-onboarding-content"]="security-solutions.guided-onboarding-content",t["cloud-chat.enabled"]="cloud-chat.enabled",t["cloud-chat.chat-variant"]="cloud-chat.chat-variant",t["observability_onboarding.experimental_onboarding_flow_enabled"]="observability_onboarding.experimental_onboarding_flow_enabled",t.solutionNavEnabled="solutionNavEnabled",t}({}),c=function(t){return{}}();class plugin_CloudExperimentsPlugin{constructor(t){a()(this,"logger",void 0),a()(this,"metadataService",void 0),a()(this,"launchDarklyClient",void 0),a()(this,"kibanaVersion",void 0),a()(this,"flagOverrides",void 0),a()(this,"isDev",void 0),a()(this,"getVariation",(async(t,e)=>{const i=s[t];return this.flagOverrides&&Object(r.has)(this.flagOverrides,i)?Object(r.get)(this.flagOverrides,i,e):this.launchDarklyClient?await this.launchDarklyClient.getVariation(i,e):e})),a()(this,"reportMetric",(({name:t,meta:e,value:i})=>{var n;const a=c[t];null===(n=this.launchDarklyClient)||void 0===n||n.reportMetric(a,e,i),this.isDev&&console.debug(`Reported experimentation metric ${a}`,{experimentationMetric:{name:t,meta:e,value:i}})})),this.logger=t.logger.get(),this.isDev=t.env.mode.dev,this.kibanaVersion=t.env.packageInfo.version;const e=t.config.get();this.metadataService=new metadata_service_MetadataService({metadata_refresh_interval:Object(l.duration)(e.metadata_refresh_interval)},this.logger.get("metadata")),e.flag_overrides&&(this.flagOverrides=e.flag_overrides);const i=e.launch_darkly;if(!(null!=i&&i.client_id||t.env.mode.dev))throw new Error("xpack.cloud_integrations.experiments.launch_darkly configuration should exist");null!=i&&i.client_id&&(this.launchDarklyClient=new launch_darkly_client_LaunchDarklyClient(i,this.kibanaVersion,this.logger))}setup(t,e){var i,n;e.cloud.isCloudEnabled&&e.cloud.deploymentId&&this.launchDarklyClient?this.metadataService.setup({userId:e.cloud.deploymentId,kibanaVersion:this.kibanaVersion,trialEndDate:null===(i=e.cloud.trialEndDate)||void 0===i?void 0:i.toISOString(),isElasticStaff:e.cloud.isElasticStaffOwned}):null===(n=this.launchDarklyClient)||void 0===n||n.cancel()}start(t,{cloud:e,dataViews:i}){return e.isCloudEnabled&&(this.metadataService.start({hasDataFetcher:async()=>({hasData:await i.hasData.hasUserDataView()})}),this.metadataService.userMetadata$.pipe(Object(o.concatMap)((async t=>{var e;return await(null===(e=this.launchDarklyClient)||void 0===e?void 0:e.updateUserMetadata(t))}))).subscribe()),{getVariation:this.getVariation,reportMetric:this.reportMetric}}stop(){var t;null===(t=this.launchDarklyClient)||void 0===t||t.stop(),this.metadataService.stop()}}function u(t){return new plugin_CloudExperimentsPlugin(t)}}]);