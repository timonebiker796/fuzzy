"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buildBaseFilterCriteria = buildBaseFilterCriteria;
var _default_query = require("./default_query");
var _filter_based_default_query = require("./filter_based_default_query");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * Builds the base filter criteria used in queries,
 * adding criteria for the time range and an optional query.
 *
 * @param timeFieldName - optional time field name of the data view
 * @param earliestMs - optional earliest timestamp of the selected time range
 * @param latestMs - optional latest timestamp of the selected time range
 * @param query - optional query
 * @returns filter criteria
 */
function buildBaseFilterCriteria(timeFieldName, earliestMs, latestMs, query, timeFormat = 'epoch_millis') {
  const filterCriteria = [];
  if (timeFieldName && earliestMs && latestMs) {
    filterCriteria.push({
      range: {
        [timeFieldName]: {
          gte: earliestMs,
          lte: latestMs,
          format: timeFormat
        }
      }
    });
  }
  if (query && typeof query === 'object' && !(0, _default_query.isDefaultQuery)(query) && !(0, _filter_based_default_query.isFilterBasedDefaultQuery)(query)) {
    filterCriteria.push(query);
  }
  return filterCriteria;
}