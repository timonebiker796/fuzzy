"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Logs = void 0;
var _react = _interopRequireWildcard(require("react"));
var _useDebounce = _interopRequireDefault(require("react-use/lib/useDebounce"));
var _i18nReact = require("@kbn/i18n-react");
var _i18n = require("@kbn/i18n");
var _eui = require("@elastic/eui");
var _public = require("@kbn/logs-shared-plugin/public");
var _common = require("@kbn/logs-shared-plugin/common");
var _common2 = require("@kbn/metrics-data-access-plugin/common");
var _use_kibana = require("../../../../hooks/use_kibana");
var _loading = require("../../../loading");
var _use_asset_details_render_props = require("../../hooks/use_asset_details_render_props");
var _use_data_views = require("../../hooks/use_data_views");
var _use_date_picker = require("../../hooks/use_date_picker");
var _use_asset_details_url_state = require("../../hooks/use_asset_details_url_state");
var _use_intersecting_state = require("../../hooks/use_intersecting_state");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const TEXT_QUERY_THROTTLE_INTERVAL_MS = 500;
const Logs = () => {
  var _urlState$logsSearch, _urlState$logsSearch2;
  const ref = (0, _react.useRef)(null);
  const {
    getDateRangeInTimestamp,
    dateRange,
    autoRefresh
  } = (0, _use_date_picker.useDatePickerContext)();
  const [urlState, setUrlState] = (0, _use_asset_details_url_state.useAssetDetailsUrlState)();
  const {
    asset
  } = (0, _use_asset_details_render_props.useAssetDetailsRenderPropsContext)();
  const {
    logs
  } = (0, _use_data_views.useDataViewsContext)();
  const {
    loading: logViewLoading,
    reference: logViewReference
  } = logs !== null && logs !== void 0 ? logs : {};
  const {
    services
  } = (0, _use_kibana.useKibanaContextForPlugin)();
  const {
    nodeLogsLocator
  } = (0, _common.getLogsLocatorsFromUrlService)(services.share.url);
  const [textQuery, setTextQuery] = (0, _react.useState)((_urlState$logsSearch = urlState === null || urlState === void 0 ? void 0 : urlState.logsSearch) !== null && _urlState$logsSearch !== void 0 ? _urlState$logsSearch : '');
  const [textQueryDebounced, setTextQueryDebounced] = (0, _react.useState)((_urlState$logsSearch2 = urlState === null || urlState === void 0 ? void 0 : urlState.logsSearch) !== null && _urlState$logsSearch2 !== void 0 ? _urlState$logsSearch2 : '');
  const currentTimestamp = getDateRangeInTimestamp().to;
  const state = (0, _use_intersecting_state.useIntersectingState)(ref, {
    currentTimestamp,
    startTimestamp: currentTimestamp - 60 * 60 * 1000,
    dateRange,
    autoRefresh
  });
  (0, _useDebounce.default)(() => {
    setUrlState({
      logsSearch: textQuery
    });
    setTextQueryDebounced(textQuery);
  }, TEXT_QUERY_THROTTLE_INTERVAL_MS, [textQuery]);
  const filter = (0, _react.useMemo)(() => {
    const query = [`${(0, _common2.findInventoryFields)(asset.type).id}: "${asset.id}"`, ...(textQueryDebounced !== '' ? [textQueryDebounced] : [])].join(' and ');
    return {
      language: 'kuery',
      query
    };
  }, [asset.type, asset.id, textQueryDebounced]);
  const onQueryChange = (0, _react.useCallback)(e => {
    setTextQuery(e.target.value);
  }, []);
  const logView = (0, _react.useMemo)(() => logViewReference ? logViewReference : _common.DEFAULT_LOG_VIEW, [logViewReference]);
  const logsUrl = (0, _react.useMemo)(() => {
    return nodeLogsLocator.getRedirectUrl({
      nodeField: (0, _common2.findInventoryFields)(asset.type).id,
      nodeId: asset.id,
      time: state.startTimestamp,
      filter: textQueryDebounced,
      logView
    });
  }, [nodeLogsLocator, asset.id, asset.type, state.startTimestamp, textQueryDebounced, logView]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    direction: "column",
    ref: ref
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "m",
    alignItems: "center",
    responsive: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFieldSearch, {
    "data-test-subj": "infraAssetDetailsLogsTabFieldSearch",
    fullWidth: true,
    placeholder: _i18n.i18n.translate('xpack.infra.nodeDetails.logs.textFieldPlaceholder', {
      defaultMessage: 'Search for log entries...'
    }),
    value: textQuery,
    isClearable: true,
    onChange: onQueryChange
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, {
    "data-test-subj": "infraAssetDetailsLogsTabOpenInLogsButton",
    size: "xs",
    flush: "both",
    iconType: "popout",
    href: logsUrl
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.infra.nodeDetails.logs.openLogsLink",
    defaultMessage: "Open in Logs"
  }))))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, logViewLoading || !logViewReference ? /*#__PURE__*/_react.default.createElement(_loading.InfraLoadingPanel, {
    width: "100%",
    height: "60vh",
    text: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.infra.hostsViewPage.tabs.logs.loadingEntriesLabel",
      defaultMessage: "Loading entries"
    })
  }) : /*#__PURE__*/_react.default.createElement(_public.LogStream, {
    logView: logView,
    startTimestamp: state.startTimestamp,
    endTimestamp: state.currentTimestamp,
    startDateExpression: state.autoRefresh && !state.autoRefresh.isPaused ? state.dateRange.from : undefined,
    endDateExpression: state.autoRefresh && !state.autoRefresh.isPaused ? state.dateRange.to : undefined,
    query: filter,
    height: "60vh",
    showFlyoutAction: true,
    isStreaming: state.autoRefresh && !state.autoRefresh.isPaused
  })));
};
exports.Logs = Logs;