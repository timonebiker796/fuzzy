"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LinkToNodeDetails = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireDefault(require("react"));
var _i18nReact = require("@kbn/i18n-react");
var _eui = require("@elastic/eui");
var _datemath = require("@kbn/datemath");
var _link_to = require("../../../pages/link_to");
var _use_asset_details_url_state = require("../hooks/use_asset_details_url_state");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const LinkToNodeDetails = ({
  assetId,
  assetName,
  assetType
}) => {
  var _parse, _dateRange$from, _parse2, _dateRange$to;
  const [state] = (0, _use_asset_details_url_state.useAssetDetailsUrlState)();
  const {
    getNodeDetailUrl
  } = (0, _link_to.useNodeDetailsRedirect)();

  // don't propagate the autoRefresh to the details page
  const {
    dateRange,
    autoRefresh: _,
    ...assetDetails
  } = state !== null && state !== void 0 ? state : {};
  const nodeDetailMenuItemLinkProps = getNodeDetailUrl({
    assetType,
    assetId,
    search: {
      ...assetDetails,
      name: assetName,
      from: (_parse = (0, _datemath.parse)((_dateRange$from = dateRange === null || dateRange === void 0 ? void 0 : dateRange.from) !== null && _dateRange$from !== void 0 ? _dateRange$from : '')) === null || _parse === void 0 ? void 0 : _parse.valueOf(),
      to: (_parse2 = (0, _datemath.parse)((_dateRange$to = dateRange === null || dateRange === void 0 ? void 0 : dateRange.to) !== null && _dateRange$to !== void 0 ? _dateRange$to : '')) === null || _parse2 === void 0 ? void 0 : _parse2.valueOf()
    }
  });
  return /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, (0, _extends2.default)({
    "data-test-subj": "infraAssetDetailsOpenAsPageButton",
    size: "xs",
    flush: "both"
  }, nodeDetailMenuItemLinkProps), /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.infra.infra.nodeDetails.openAsPage",
    defaultMessage: "Open as page"
  }));
};
exports.LinkToNodeDetails = LinkToNodeDetails;