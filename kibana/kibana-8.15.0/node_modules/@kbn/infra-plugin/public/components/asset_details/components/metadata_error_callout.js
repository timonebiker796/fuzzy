"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MetadataErrorCallout = void 0;
var _react = _interopRequireDefault(require("react"));
var _i18n = require("@kbn/i18n");
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _use_metadata_state = require("../hooks/use_metadata_state");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const MetadataErrorCallout = () => {
  const {
    refresh
  } = (0, _use_metadata_state.useMetadataStateContext)();
  return /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
    title: _i18n.i18n.translate('xpack.infra.metadataEmbeddable.errorTitle', {
      defaultMessage: 'Sorry, there was an error'
    }),
    color: "danger",
    iconType: "error",
    "data-test-subj": "infraAssetDetailsMetadataErrorCallout"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.infra.metadataEmbeddable.errorMessage",
    defaultMessage: "There was an error loading your data. Try to {refetch} and open the host details again.",
    values: {
      refetch: /*#__PURE__*/_react.default.createElement(_eui.EuiLink, {
        "data-test-subj": "infraMetadataReloadPageLink",
        onClick: refresh
      }, _i18n.i18n.translate('xpack.infra.metadataEmbeddable.errorAction', {
        defaultMessage: 'refetch the metadata'
      }))
    }
  }));
};
exports.MetadataErrorCallout = MetadataErrorCallout;