"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NOT_AVAILABLE_LABEL = exports.HOST_METRIC_GROUP_TITLES = exports.CONTAINER_METRIC_GROUP_TITLES = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const NOT_AVAILABLE_LABEL = exports.NOT_AVAILABLE_LABEL = _i18n.i18n.translate('xpack.infra.assetDetails.notApplicableLabel', {
  defaultMessage: 'N/A'
});
const HOST_METRIC_GROUP_TITLES = exports.HOST_METRIC_GROUP_TITLES = {
  cpu: _i18n.i18n.translate('xpack.infra.metricsGroup.cpu', {
    defaultMessage: 'CPU'
  }),
  memory: _i18n.i18n.translate('xpack.infra.metricsGroup.memory', {
    defaultMessage: 'Memory'
  }),
  network: _i18n.i18n.translate('xpack.infra.metricsGroup.network', {
    defaultMessage: 'Network'
  }),
  disk: _i18n.i18n.translate('xpack.infra.metricsGroup.disk', {
    defaultMessage: 'Disk'
  }),
  log: _i18n.i18n.translate('xpack.infra.metricsGroup.log', {
    defaultMessage: 'Log Rate'
  }),
  kubernetes: _i18n.i18n.translate('xpack.infra.metricsGroup.kubernetes', {
    defaultMessage: 'Kubernetes'
  })
};
const CONTAINER_METRIC_GROUP_TITLES = exports.CONTAINER_METRIC_GROUP_TITLES = {
  cpu: _i18n.i18n.translate('xpack.infra.metricsGroup.containerCpu', {
    defaultMessage: 'CPU'
  }),
  memory: _i18n.i18n.translate('xpack.infra.metricsGroup.containerMemory', {
    defaultMessage: 'Memory'
  }),
  network: _i18n.i18n.translate('xpack.infra.metricsGroup.containerNetwork', {
    defaultMessage: 'Network'
  }),
  disk: _i18n.i18n.translate('xpack.infra.metricsGroup.containerDisk', {
    defaultMessage: 'Disk'
  })
};