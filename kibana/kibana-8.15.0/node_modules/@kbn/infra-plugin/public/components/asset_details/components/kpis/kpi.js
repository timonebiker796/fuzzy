"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Kpi = void 0;
var _react = _interopRequireWildcard(require("react"));
var _visualizations = require("../../../../common/visualizations");
var _lens = require("../../../lens");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const Kpi = ({
  id,
  dateRange,
  query,
  filters,
  searchSessionId,
  loading,
  ...chartProps
}) => {
  const tooltipContent = (0, _react.useMemo)(() => id in _visualizations.METRICS_TOOLTIP ? /*#__PURE__*/_react.default.createElement(_lens.TooltipContent, {
    description: _visualizations.METRICS_TOOLTIP[id]
  }) : undefined, [id]);
  return /*#__PURE__*/_react.default.createElement(_lens.LensChart, {
    id: `infraAssetDetailsKPI${id}`,
    dateRange: dateRange,
    height: _visualizations.KPI_CHART_HEIGHT,
    filters: filters,
    lensAttributes: chartProps,
    query: query,
    loading: loading,
    toolTip: tooltipContent,
    searchSessionId: searchSessionId,
    disableTriggers: true,
    hidePanelTitles: true
  });
};
exports.Kpi = Kpi;