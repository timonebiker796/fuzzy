"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MetricsSideNav = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const MetricsSideNav = ({
  loading,
  name,
  items
}) => {
  const [isOpenOnMobile, setMobileState] = (0, _react.useState)(false);
  const toggle = (0, _react.useCallback)(() => {
    setMobileState(!isOpenOnMobile);
  }, [isOpenOnMobile]);
  const content = loading ? null : /*#__PURE__*/_react.default.createElement(_eui.EuiSideNav, {
    items: items
  });
  const mobileContent = loading ? null : /*#__PURE__*/_react.default.createElement(_eui.EuiSideNav, {
    items: items,
    mobileTitle: name,
    toggleOpenOnMobile: toggle,
    isOpenOnMobile: isOpenOnMobile
  });
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiHideFor, {
    sizes: ['xs', 's', 'm']
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiPageSidebar, {
    sticky: true
  }, content)), /*#__PURE__*/_react.default.createElement(_eui.EuiShowFor, {
    sizes: ['xs', 's', 'm']
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiPageSidebar, null, mobileContent)));
};
exports.MetricsSideNav = MetricsSideNav;