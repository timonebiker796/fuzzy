"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useLicenseUrl = exports.useLicense = void 0;
var _url = _interopRequireDefault(require("url"));
var _react = require("react");
var _rxjs = require("rxjs");
var _useObservable = _interopRequireDefault(require("react-use/lib/useObservable"));
var _use_kibana = require("./use_kibana");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const useLicense = () => {
  var _licensing$license$;
  const {
    licensing
  } = (0, _use_kibana.useKibanaContextForPlugin)().services;
  const license = (0, _useObservable.default)((_licensing$license$ = licensing === null || licensing === void 0 ? void 0 : licensing.license$) !== null && _licensing$license$ !== void 0 ? _licensing$license$ : new _rxjs.Observable(), null);
  return {
    getLicense: () => license,
    hasAtLeast: (0, _react.useCallback)(level => {
      if (!license) return;
      return license.isAvailable && license.isActive && license.hasAtLeast(level);
    }, [license])
  };
};
exports.useLicense = useLicense;
const useLicenseUrl = () => {
  var _licenseManagement$lo;
  const {
    licenseManagement,
    http
  } = (0, _use_kibana.useKibanaContextForPlugin)().services;
  const licensePageUrl = _url.default.format({
    pathname: http.basePath.prepend('/app/management/stack/license_management')
  });
  return (licenseManagement === null || licenseManagement === void 0 ? void 0 : (_licenseManagement$lo = licenseManagement.locator) === null || _licenseManagement$lo === void 0 ? void 0 : _licenseManagement$lo.useUrl({
    page: 'dashboard'
  })) || licensePageUrl;
};
exports.useLicenseUrl = useLicenseUrl;