/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.infra_bundle_jsonpfunction=window.infra_bundle_jsonpfunction||[]).push([[4],{153:function(e,t,n){"use strict";n.d(t,"d",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"f",(function(){return s})),n.d(t,"c",(function(){return f})),n.d(t,"b",(function(){return w})),n.d(t,"a",(function(){return S}));var o=n(90),i=n(19),r=n(36),a=n(76),u=n.n(a),c=n(5);const l=e=>Number.isNaN(e)||null==e?e=>e:s(c.defaultPositionStateKey,{position:{time:u()(e).toISOString(),tiebreaker:0}}),d=e=>s("logView",e),s=(e,t)=>n=>{const a=Object(r.parse)(n,{sort:!1}),u=void 0===t?a:{...a,[e]:(c=t,Object(i.encode)(c))};var c;return Object(r.stringify)(o.url.encodeQuery(u),{sort:!1,encode:!1})},f=(e,t,n)=>s(c.defaultFilterStateKey,{query:e,...g(t,n),refreshInterval:c.DEFAULT_REFRESH_INTERVAL}),g=(e,t)=>t?{timeRange:{from:new Date(t.startTime).toISOString(),to:new Date(t.endTime).toISOString()}}:e?{timeRange:{from:w(e),to:S(e)}}:{},m={hours:1},w=e=>u()(e).subtract(m).toISOString(),S=e=>u()(e).add(m).toISOString()},636:function(e,t,n){"use strict";n.r(t),n.d(t,"createSearchString",(function(){return u})),n.d(t,"getLocationToDiscover",(function(){return c}));var o=n(5),i=n(13),r=n(15),a=n(153);const u=({time:e,timeRange:t,filter:n="",logView:r=o.DEFAULT_LOG_VIEW})=>Object(i.flowRight)(Object(a.c)({language:"kuery",query:n},e,t),Object(a.d)(e),Object(a.e)(r))(""),c=async({core:e,timeRange:t,filter:n,logView:i=o.DEFAULT_LOG_VIEW})=>{const[,r]=await e.getStartServices(),{discover:a,logsShared:u}=r,{logViews:c}=u,d=await c.client.getResolvedLogView(i),s={...t?{from:t.startTime,to:t.endTime}:{},...n?{query:{language:"kuery",query:n}}:{}},f=await l(a,s,d);if(!f)throw new Error("Discover location not found");return f},l=async(e,t,n)=>{var o,i;if(!n)return await(null===(i=e.locator)||void 0===i?void 0:i.getLocation(t));const r=d(n.columns),a=n.dataViewReference.toSpec();return await(null===(o=e.locator)||void 0===o?void 0:o.getLocation({...t,columns:r,dataViewId:a.id,dataViewSpec:a}))},d=e=>e.map(s).filter(Boolean),s=e=>"messageColumn"in e?r.h:"timestampColumn"in e?r.m:"fieldColumn"in e?e.fieldColumn.field:null}}]);