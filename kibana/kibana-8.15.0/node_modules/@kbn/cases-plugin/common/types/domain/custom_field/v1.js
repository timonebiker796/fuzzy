"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CustomFieldTypes = exports.CustomFieldToggleTypeRt = exports.CustomFieldTextTypeRt = exports.CaseCustomFieldsRt = exports.CaseCustomFieldToggleRt = exports.CaseCustomFieldRt = void 0;
var rt = _interopRequireWildcard(require("io-ts"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */
let CustomFieldTypes = exports.CustomFieldTypes = /*#__PURE__*/function (CustomFieldTypes) {
  CustomFieldTypes["TEXT"] = "text";
  CustomFieldTypes["TOGGLE"] = "toggle";
  return CustomFieldTypes;
}({});
const CustomFieldTextTypeRt = exports.CustomFieldTextTypeRt = rt.literal(CustomFieldTypes.TEXT);
const CustomFieldToggleTypeRt = exports.CustomFieldToggleTypeRt = rt.literal(CustomFieldTypes.TOGGLE);
const CaseCustomFieldTextRt = rt.strict({
  key: rt.string,
  type: CustomFieldTextTypeRt,
  value: rt.union([rt.string, rt.null])
});
const CaseCustomFieldToggleRt = exports.CaseCustomFieldToggleRt = rt.strict({
  key: rt.string,
  type: CustomFieldToggleTypeRt,
  value: rt.union([rt.boolean, rt.null])
});
const CaseCustomFieldRt = exports.CaseCustomFieldRt = rt.union([CaseCustomFieldTextRt, CaseCustomFieldToggleRt]);
const CaseCustomFieldsRt = exports.CaseCustomFieldsRt = rt.array(CaseCustomFieldRt);