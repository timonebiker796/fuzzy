"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getOrEmptyTagFromValue = exports.getOrEmptyTag = exports.getEmptyValue = exports.getEmptyStringTag = exports.getEmptyString = exports.getEmptyCellValue = exports.defaultToEmptyTag = void 0;
var _fp = require("lodash/fp");
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@emotion/react");
var _uiTheme = require("@kbn/ui-theme");
var i18n = _interopRequireWildcard(require("./translations"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const emptyWrapperCss = (0, _react2.css)`
  color: ${_uiTheme.euiThemeVars.euiColorMediumShade};
`;
const getEmptyValue = () => 'â€”';
exports.getEmptyValue = getEmptyValue;
const getEmptyString = () => `(${i18n.EMPTY_STRING})`;
exports.getEmptyString = getEmptyString;
const getEmptyCellValue = () => /*#__PURE__*/_react.default.createElement("span", {
  css: emptyWrapperCss
}, getEmptyValue());
exports.getEmptyCellValue = getEmptyCellValue;
const getEmptyStringTag = () => /*#__PURE__*/_react.default.createElement("span", {
  css: emptyWrapperCss
}, getEmptyString());
exports.getEmptyStringTag = getEmptyStringTag;
const defaultToEmptyTag = item => {
  if (item == null) {
    return getEmptyCellValue();
  } else if ((0, _fp.isString)(item) && item === '') {
    return getEmptyStringTag();
  } else {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, item);
  }
};
exports.defaultToEmptyTag = defaultToEmptyTag;
const getOrEmptyTag = (path, item) => {
  const text = (0, _fp.get)(path, item);
  return getOrEmptyTagFromValue(text);
};
exports.getOrEmptyTag = getOrEmptyTag;
const getOrEmptyTagFromValue = value => {
  if (value == null) {
    return getEmptyCellValue();
  } else if (value === '') {
    return getEmptyStringTag();
  } else {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, value);
  }
};
exports.getOrEmptyTagFromValue = getOrEmptyTagFromValue;