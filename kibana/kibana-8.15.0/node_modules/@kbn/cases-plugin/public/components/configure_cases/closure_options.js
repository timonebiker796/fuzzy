"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ClosureOptions = void 0;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _closure_options_radio = require("./closure_options_radio");
var i18n = _interopRequireWildcard(require("./translations"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ClosureOptionsComponent = ({
  closureTypeSelected,
  disabled,
  onChangeClosureType
}) => /*#__PURE__*/_react.default.createElement(_eui.EuiDescribedFormGroup, {
  fullWidth: true,
  title: /*#__PURE__*/_react.default.createElement("h3", null, i18n.CASE_CLOSURE_OPTIONS_TITLE),
  description: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("p", null, i18n.CASE_CLOSURE_OPTIONS_DESC)),
  "data-test-subj": "case-closure-options-form-group"
}, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
  fullWidth: true,
  label: i18n.CASE_CLOSURE_OPTIONS_LABEL,
  "data-test-subj": "case-closure-options-form-row"
}, /*#__PURE__*/_react.default.createElement(_closure_options_radio.ClosureOptionsRadio, {
  closureTypeSelected: closureTypeSelected,
  disabled: disabled,
  onChangeClosureType: onChangeClosureType,
  "data-test-subj": "case-closure-options-radio"
})));
ClosureOptionsComponent.displayName = 'ClosureOptions';
const ClosureOptions = exports.ClosureOptions = /*#__PURE__*/_react.default.memo(ClosureOptionsComponent);