"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  ADD_CONNECTOR: true,
  PUSH_DISABLE_BECAUSE_CASE_CLOSED_TITLE: true,
  ERROR_PUSH_SERVICE_CALLOUT_TITLE: true
};
exports.PUSH_DISABLE_BECAUSE_CASE_CLOSED_TITLE = exports.ERROR_PUSH_SERVICE_CALLOUT_TITLE = exports.ADD_CONNECTOR = void 0;
var _i18n = require("@kbn/i18n");
var _translations = require("../translations");
Object.keys(_translations).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _translations[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _translations[key];
    }
  });
});
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ADD_CONNECTOR = exports.ADD_CONNECTOR = _i18n.i18n.translate('xpack.cases.addConnector.title', {
  defaultMessage: 'Add connector'
});
const PUSH_DISABLE_BECAUSE_CASE_CLOSED_TITLE = exports.PUSH_DISABLE_BECAUSE_CASE_CLOSED_TITLE = _i18n.i18n.translate('xpack.cases.caseView.pushToServiceDisableBecauseCaseClosedTitle', {
  defaultMessage: 'Reopen the case'
});
const ERROR_PUSH_SERVICE_CALLOUT_TITLE = exports.ERROR_PUSH_SERVICE_CALLOUT_TITLE = _i18n.i18n.translate('xpack.cases.caseView.errorsPushServiceCallOutTitle', {
  defaultMessage: 'Select an external connector'
});