"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CasesTimelineIntegrationProvider = exports.CasesTimelineIntegrationContext = void 0;
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * @description - manage the plugins, hooks, and ui components needed to enable timeline functionality within the cases plugin
 * @TODO - To better encapsulate the timeline logic needed by cases, we are managing it in this top level context.
 * This helps us avoid any prop drilling and makes it much easier later on to remove this logic when timeline becomes it's own plugin.
 */

// TODO: copied from 'use_insert_timeline' in security_solution till timeline moved into it's own plugin.

// This context is available to all children of the stateful_event component where the provider is currently set
const CasesTimelineIntegrationContext = exports.CasesTimelineIntegrationContext = /*#__PURE__*/_react.default.createContext(null);
const CasesTimelineIntegrationProvider =
// TODO: Fix this manually. Issue #123375
// eslint-disable-next-line react/display-name
({
  children,
  timelineIntegration
}) => {
  const [activeTimelineIntegration] = (0, _react.useState)(timelineIntegration !== null && timelineIntegration !== void 0 ? timelineIntegration : null);
  return /*#__PURE__*/_react.default.createElement(CasesTimelineIntegrationContext.Provider, {
    value: activeTimelineIntegration
  }, children);
};
exports.CasesTimelineIntegrationProvider = CasesTimelineIntegrationProvider;