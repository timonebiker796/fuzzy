/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.cloudSecurityPosture_bundle_jsonpfunction=window.cloudSecurityPosture_bundle_jsonpfunction||[]).push([[5],{170:function(e,a,t){"use strict";t.d(a,"a",(function(){return u}));var n=t(5),i=t.n(n),s=(t(1),t(28)),l=t.n(s),r=t(6),o=t(0);const d={iconType:"questionInCircle",color:"gray"},c={binary:{iconType:"tokenBinary"},boolean:{iconType:"tokenBoolean"},conflict:{iconType:"warning",color:"euiColorVis9",shape:"square"},date:{iconType:"tokenDate"},date_range:{iconType:"tokenDate"},dense_vector:{iconType:"tokenVectorDense"},geo_point:{iconType:"tokenGeo"},geo_shape:{iconType:"tokenGeo"},ip:{iconType:"tokenIP"},ip_range:{iconType:"tokenIP"},flattened:{iconType:"tokenFlattened"},match_only_text:{iconType:"tokenString"},murmur3:{iconType:"tokenSearchType"},number:{iconType:"tokenNumber"},number_range:{iconType:"tokenNumber"},rank_feature:{iconType:"tokenRankFeature"},rank_features:{iconType:"tokenRankFeatures"},histogram:{iconType:"tokenHistogram"},_source:{iconType:"editorCodeBlock",color:"gray"},point:{iconType:"tokenShape"},shape:{iconType:"tokenShape"},sparse_vector:{iconType:"tokenVectorSparse"},string:{iconType:"tokenString"},text:{iconType:"tokenString"},keyword:{iconType:"tokenKeyword"},gauge:{iconType:"tokenMetricGauge"},counter:{iconType:"tokenMetricCounter"},nested:{iconType:"tokenNested"},version:{iconType:"tokenTag"}};function u({type:e,label:a,size:t="s",scripted:n,className:s,...u}){const f=c[e]||d;return Object(o.jsx)(r.EuiToken,i()({},f,{className:l()("kbnFieldIcon",s),"aria-label":a||e,title:a||e,size:t,fill:n?"dark":void 0},u))}},184:function(e,a,t){"use strict";t.r(a);var n=t(5),i=t.n(n),s=t(1),l=t.n(s),r=t(170),o=t(3),d=t(69),c=t(96);const u=o.i18n.translate("fieldUtils.fieldNameIcons.unknownFieldAriaLabel",{defaultMessage:"Unknown field"});function f(e){if(!e||e===d.b.UNKNOWN)return u;if("source"===e)return o.i18n.translate("fieldUtils.fieldNameIcons.sourceFieldAriaLabel",{defaultMessage:"Source field"});const a=e;switch(a){case c.a.DOCUMENT:return o.i18n.translate("fieldUtils.fieldNameIcons.recordAriaLabel",{defaultMessage:"Records"});case c.a.BINARY:return o.i18n.translate("fieldUtils.fieldNameIcons.binaryAriaLabel",{defaultMessage:"Binary"});case c.a.BOOLEAN:return o.i18n.translate("fieldUtils.fieldNameIcons.booleanAriaLabel",{defaultMessage:"Boolean"});case c.a.CONFLICT:return o.i18n.translate("fieldUtils.fieldNameIcons.conflictFieldAriaLabel",{defaultMessage:"Conflict"});case c.a.COUNTER:return o.i18n.translate("fieldUtils.fieldNameIcons.counterFieldAriaLabel",{defaultMessage:"Counter metric"});case c.a.DATE:return o.i18n.translate("fieldUtils.fieldNameIcons.dateFieldAriaLabel",{defaultMessage:"Date"});case c.a.DATE_RANGE:return o.i18n.translate("fieldUtils.fieldNameIcons.dateRangeFieldAriaLabel",{defaultMessage:"Date range"});case c.a.DENSE_VECTOR:return o.i18n.translate("fieldUtils.fieldNameIcons.denseVectorFieldAriaLabel",{defaultMessage:"Dense vector"});case c.a.GAUGE:return o.i18n.translate("fieldUtils.fieldNameIcons.gaugeFieldAriaLabel",{defaultMessage:"Gauge metric"});case c.a.GEO_POINT:return o.i18n.translate("fieldUtils.fieldNameIcons.geoPointFieldAriaLabel",{defaultMessage:"Geo point"});case c.a.GEO_SHAPE:return o.i18n.translate("fieldUtils.fieldNameIcons.geoShapeFieldAriaLabel",{defaultMessage:"Geo shape"});case c.a.HISTOGRAM:return o.i18n.translate("fieldUtils.fieldNameIcons.histogramFieldAriaLabel",{defaultMessage:"Histogram"});case c.a.IP:return o.i18n.translate("fieldUtils.fieldNameIcons.ipAddressFieldAriaLabel",{defaultMessage:"IP address"});case c.a.IP_RANGE:return o.i18n.translate("fieldUtils.fieldNameIcons.ipRangeFieldAriaLabel",{defaultMessage:"IP range"});case c.a.FLATTENED:return o.i18n.translate("fieldUtils.fieldNameIcons.flattenedFieldAriaLabel",{defaultMessage:"Flattened"});case c.a.MURMUR3:return o.i18n.translate("fieldUtils.fieldNameIcons.murmur3FieldAriaLabel",{defaultMessage:"Murmur3"});case c.a.NUMBER:return o.i18n.translate("fieldUtils.fieldNameIcons.numberFieldAriaLabel",{defaultMessage:"Number"});case c.a.RANK_FEATURE:return o.i18n.translate("fieldUtils.fieldNameIcons.rankFeatureFieldAriaLabel",{defaultMessage:"Rank feature"});case c.a.RANK_FEATURES:return o.i18n.translate("fieldUtils.fieldNameIcons.rankFeaturesFieldAriaLabel",{defaultMessage:"Rank features"});case c.a.POINT:return o.i18n.translate("fieldUtils.fieldNameIcons.pointFieldAriaLabel",{defaultMessage:"Point"});case c.a.SHAPE:return o.i18n.translate("fieldUtils.fieldNameIcons.shapeFieldAriaLabel",{defaultMessage:"Shape"});case c.a.SPARSE_VECTOR:return o.i18n.translate("fieldUtils.fieldNameIcons.sparseVectorFieldAriaLabel",{defaultMessage:"Sparse vector"});case c.a.SEMANTIC_TEXT:return o.i18n.translate("fieldUtils.fieldNameIcons.semanticTextFieldAriaLabel",{defaultMessage:"Semantic text"});case c.a.STRING:return o.i18n.translate("fieldUtils.fieldNameIcons.stringFieldAriaLabel",{defaultMessage:"String"});case c.a.TEXT:return o.i18n.translate("fieldUtils.fieldNameIcons.textFieldAriaLabel",{defaultMessage:"Text"});case c.a.KEYWORD:return o.i18n.translate("fieldUtils.fieldNameIcons.keywordFieldAriaLabel",{defaultMessage:"Keyword"});case c.a.NESTED:return o.i18n.translate("fieldUtils.fieldNameIcons.nestedFieldAriaLabel",{defaultMessage:"Nested"});case c.a.VERSION:return o.i18n.translate("fieldUtils.fieldNameIcons.versionFieldAriaLabel",{defaultMessage:"Version"});default:return a||a}}var g=t(0);const p=({type:e,...a})=>Object(g.jsx)(r.a,i()({type:m(e),label:f(e)},a)),N=l.a.memo(p);function m(e){return"document"===e?"number":e}a.default=N}}]);