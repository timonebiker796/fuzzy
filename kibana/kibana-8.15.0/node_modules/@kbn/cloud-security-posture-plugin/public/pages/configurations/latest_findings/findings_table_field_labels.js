"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.findingsTableFieldLabels = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const findingsTableFieldLabels = exports.findingsTableFieldLabels = {
  'result.evaluation': _i18n.i18n.translate('xpack.csp.findings.findingsTable.findingsTableColumn.resultColumnLabel', {
    defaultMessage: 'Result'
  }),
  'resource.id': _i18n.i18n.translate('xpack.csp.findings.findingsTable.findingsTableColumn.resourceIdColumnLabel', {
    defaultMessage: 'Resource ID'
  }),
  'resource.name': _i18n.i18n.translate('xpack.csp.findings.findingsTable.findingsTableColumn.resourceNameColumnLabel', {
    defaultMessage: 'Resource Name'
  }),
  'resource.sub_type': _i18n.i18n.translate('xpack.csp.findings.findingsTable.findingsTableColumn.resourceTypeColumnLabel', {
    defaultMessage: 'Resource Type'
  }),
  'rule.benchmark.rule_number': _i18n.i18n.translate('xpack.csp.findings.findingsTable.findingsTableColumn.ruleNumberColumnLabel', {
    defaultMessage: 'Rule Number'
  }),
  'rule.name': _i18n.i18n.translate('xpack.csp.findings.findingsTable.findingsTableColumn.ruleNameColumnLabel', {
    defaultMessage: 'Rule Name'
  }),
  'rule.section': _i18n.i18n.translate('xpack.csp.findings.findingsTable.findingsTableColumn.ruleSectionColumnLabel', {
    defaultMessage: 'CIS Section'
  }),
  '@timestamp': _i18n.i18n.translate('xpack.csp.findings.findingsTable.findingsTableColumn.lastCheckedColumnLabel', {
    defaultMessage: 'Last Checked'
  })
};