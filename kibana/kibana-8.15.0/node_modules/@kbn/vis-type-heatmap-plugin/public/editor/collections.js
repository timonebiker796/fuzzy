"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.scaleTypes = exports.legendPositions = void 0;
var _i18n = require("@kbn/i18n");
var _charts = require("@elastic/charts");
var _types = require("../types");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const legendPositions = exports.legendPositions = [{
  text: _i18n.i18n.translate('visTypeHeatmap.legendPositions.topText', {
    defaultMessage: 'Top'
  }),
  value: _charts.Position.Top
}, {
  text: _i18n.i18n.translate('visTypeHeatmap.legendPositions.leftText', {
    defaultMessage: 'Left'
  }),
  value: _charts.Position.Left
}, {
  text: _i18n.i18n.translate('visTypeHeatmap.legendPositions.rightText', {
    defaultMessage: 'Right'
  }),
  value: _charts.Position.Right
}, {
  text: _i18n.i18n.translate('visTypeHeatmap.legendPositions.bottomText', {
    defaultMessage: 'Bottom'
  }),
  value: _charts.Position.Bottom
}];
const scaleTypes = exports.scaleTypes = [{
  text: _i18n.i18n.translate('visTypeHeatmap.scaleTypes.linearText', {
    defaultMessage: 'Linear'
  }),
  value: _types.ScaleType.Linear
}, {
  text: _i18n.i18n.translate('visTypeHeatmap.scaleTypes.logText', {
    defaultMessage: 'Log'
  }),
  value: _types.ScaleType.Log
}, {
  text: _i18n.i18n.translate('visTypeHeatmap.scaleTypes.squareRootText', {
    defaultMessage: 'Square root'
  }),
  value: _types.ScaleType.SquareRoot
}];