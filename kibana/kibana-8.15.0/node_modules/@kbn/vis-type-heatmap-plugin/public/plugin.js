"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.VisTypeHeatmapPlugin = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _common = require("../common");
var _vis_type = require("./vis_type");
var _services = require("./services");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/** @internal */

/** @internal */

/** @internal */

class VisTypeHeatmapPlugin {
  constructor(initializerContext) {
    (0, _defineProperty2.default)(this, "initializerContext", void 0);
    this.initializerContext = initializerContext;
  }
  setup(core, {
    visualizations,
    charts,
    usageCollection
  }) {
    if (!core.uiSettings.get(_common.LEGACY_HEATMAP_CHARTS_LIBRARY)) {
      const {
        readOnly
      } = this.initializerContext.config.get();
      visualizations.createBaseVisualization({
        ...(0, _vis_type.heatmapVisType)({
          showElasticChartsOptions: true,
          palettes: charts.palettes
        }),
        disableCreate: Boolean(readOnly),
        disableEdit: Boolean(readOnly)
      });
    }
    return {};
  }
  start(core, {
    dataViews
  }) {
    (0, _services.setDataViewsStart)(dataViews);
  }
}
exports.VisTypeHeatmapPlugin = VisTypeHeatmapPlugin;