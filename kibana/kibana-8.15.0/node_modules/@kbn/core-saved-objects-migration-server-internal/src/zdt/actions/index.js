"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bulkOverwriteTransformedDocuments", {
  enumerable: true,
  get: function () {
    return _actions.bulkOverwriteTransformedDocuments;
  }
});
Object.defineProperty(exports, "cleanupUnknownAndExcluded", {
  enumerable: true,
  get: function () {
    return _actions.cleanupUnknownAndExcluded;
  }
});
Object.defineProperty(exports, "closePit", {
  enumerable: true,
  get: function () {
    return _actions.closePit;
  }
});
Object.defineProperty(exports, "createIndex", {
  enumerable: true,
  get: function () {
    return _actions.createIndex;
  }
});
Object.defineProperty(exports, "fetchIndices", {
  enumerable: true,
  get: function () {
    return _actions.fetchIndices;
  }
});
exports.isTypeof = isTypeof;
Object.defineProperty(exports, "noop", {
  enumerable: true,
  get: function () {
    return _actions.noop;
  }
});
Object.defineProperty(exports, "openPit", {
  enumerable: true,
  get: function () {
    return _actions.openPit;
  }
});
Object.defineProperty(exports, "readWithPit", {
  enumerable: true,
  get: function () {
    return _actions.readWithPit;
  }
});
Object.defineProperty(exports, "refreshIndex", {
  enumerable: true,
  get: function () {
    return _actions.refreshIndex;
  }
});
Object.defineProperty(exports, "transformDocs", {
  enumerable: true,
  get: function () {
    return _actions.transformDocs;
  }
});
Object.defineProperty(exports, "updateAliases", {
  enumerable: true,
  get: function () {
    return _actions.updateAliases;
  }
});
Object.defineProperty(exports, "updateAndPickupMappings", {
  enumerable: true,
  get: function () {
    return _actions.updateAndPickupMappings;
  }
});
Object.defineProperty(exports, "updateIndexMeta", {
  enumerable: true,
  get: function () {
    return _update_index_meta.updateIndexMeta;
  }
});
Object.defineProperty(exports, "updateMappings", {
  enumerable: true,
  get: function () {
    return _actions.updateMappings;
  }
});
Object.defineProperty(exports, "waitForDelay", {
  enumerable: true,
  get: function () {
    return _wait_for_delay.waitForDelay;
  }
});
Object.defineProperty(exports, "waitForDeleteByQueryTask", {
  enumerable: true,
  get: function () {
    return _actions.waitForDeleteByQueryTask;
  }
});
Object.defineProperty(exports, "waitForIndexStatus", {
  enumerable: true,
  get: function () {
    return _actions.waitForIndexStatus;
  }
});
Object.defineProperty(exports, "waitForPickupUpdatedMappingsTask", {
  enumerable: true,
  get: function () {
    return _actions.waitForPickupUpdatedMappingsTask;
  }
});
var _actions = require("../../actions");
var _update_index_meta = require("./update_index_meta");
var _wait_for_delay = require("./wait_for_delay");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

// alias in case we need to extend it with zdt specific actions/errors

/** Type guard for narrowing the type of a left */
function isTypeof(res, typeString) {
  return res.type === typeString;
}