"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UXActionMenu = UXActionMenu;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _public = require("@kbn/observability-shared-plugin/public");
var _public2 = require("@kbn/exploratory-view-plugin/public");
var _use_url_params = require("../../../../context/url_params_context/use_url_params");
var _elasticsearch_fieldnames = require("../../../../../common/elasticsearch_fieldnames");
var _inpector_link = require("./inpector_link");
var _use_kibana_services = require("../../../../hooks/use_kibana_services");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const ANALYZE_DATA = _i18n.i18n.translate('xpack.ux.analyzeDataButtonLabel', {
  defaultMessage: 'Explore data'
});
const ANALYZE_MESSAGE = _i18n.i18n.translate('xpack.ux.analyzeDataButtonLabel.message', {
  defaultMessage: 'Go to Explore Data, where you can select and filter result data in any dimension and look for the cause or impact of performance problems.'
});
function UXActionMenu({
  appMountParameters,
  isDev
}) {
  const {
    http,
    application
  } = (0, _use_kibana_services.useKibanaServices)();
  const {
    urlParams
  } = (0, _use_url_params.useLegacyUrlParams)();
  const {
    rangeTo,
    rangeFrom,
    serviceName
  } = urlParams;
  const uxExploratoryViewLink = (0, _public2.createExploratoryViewUrl)({
    reportType: 'kpi-over-time',
    allSeries: [{
      dataType: 'ux',
      name: `${serviceName}-page-views`,
      time: {
        from: rangeFrom,
        to: rangeTo
      },
      reportDefinitions: {
        [_elasticsearch_fieldnames.SERVICE_NAME]: serviceName ? [serviceName] : []
      },
      selectedMetricField: _public2.RECORDS_FIELD
    }]
  }, http.basePath.get());
  return /*#__PURE__*/_react.default.createElement(_public.HeaderMenuPortal, {
    setHeaderActionMenu: appMountParameters.setHeaderActionMenu,
    theme$: appMountParameters.theme$
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    responsive: false,
    gutterSize: "s"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiHeaderLinks, {
    gutterSize: "xs"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
    position: "top",
    content: /*#__PURE__*/_react.default.createElement("p", null, ANALYZE_MESSAGE)
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiHeaderLink, {
    "data-test-subj": "uxAnalyzeBtn",
    color: "text",
    href: uxExploratoryViewLink,
    iconType: "visBarVerticalStacked"
  }, ANALYZE_DATA)), /*#__PURE__*/_react.default.createElement(_eui.EuiHeaderLink, {
    color: "primary",
    iconType: "indexOpen",
    iconSide: "left",
    href: application.getUrlForApp('/apm/tutorial')
  }, _i18n.i18n.translate('xpack.ux.addDataButtonLabel', {
    defaultMessage: 'Add data'
  })), /*#__PURE__*/_react.default.createElement(_inpector_link.UxInspectorHeaderLink, {
    isDev: isDev
  })))));
}