"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TooltipContent = void 0;
var _moment = _interopRequireDefault(require("moment"));
var _i18n = require("@kbn/i18n");
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _common = require("@kbn/alerting-plugin/common");
var _react2 = require("@emotion/react");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const START_TIME = _i18n.i18n.translate('xpack.triggersActionsUI.alertsTable.maintenanceWindowTooltip.startTime', {
  defaultMessage: 'Start'
});
const END_TIME = _i18n.i18n.translate('xpack.triggersActionsUI.alertsTable.maintenanceWindowTooltip.endTime', {
  defaultMessage: 'End'
});
const textStyle = (0, _react2.css)`
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  overflow: hidden;
  word-break: break-word;
`;
const TooltipContent = exports.TooltipContent = /*#__PURE__*/(0, _react.memo)(props => {
  const {
    maintenanceWindow,
    timestamp
  } = props;
  const {
    title,
    events,
    eventStartTime,
    eventEndTime
  } = maintenanceWindow;
  const defaultEvent = (0, _react.useMemo)(() => {
    return {
      gte: eventStartTime,
      lte: eventEndTime
    };
  }, [eventStartTime, eventEndTime]);
  const event = (0, _react.useMemo)(() => {
    if (!timestamp) {
      return defaultEvent;
    }
    const time = events.find(({
      gte,
      lte
    }) => {
      return (0, _moment.default)(timestamp).isBetween(gte, lte, undefined, '[]');
    });
    return time || defaultEvent;
  }, [events, timestamp, defaultEvent]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    "data-test-subj": "maintenance-window-tooltip-content",
    gutterSize: "xs",
    direction: "column"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "relative",
    css: textStyle
  }, /*#__PURE__*/_react.default.createElement("strong", null, title))), /*#__PURE__*/_react.default.createElement(_eui.EuiHorizontalRule, {
    margin: "none"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "xs",
    direction: "row"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "relative"
  }, START_TIME, ":")), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "relative"
  }, (0, _eui.formatDate)(event.gte, _common.MAINTENANCE_WINDOW_DATE_FORMAT))))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "xs",
    direction: "row"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "relative"
  }, END_TIME, ":")), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "relative"
  }, (0, _eui.formatDate)(event.lte, _common.MAINTENANCE_WINDOW_DATE_FORMAT))))));
});