"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RuleActionsPopover = void 0;
var _i18n = require("@kbn/i18n");
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
require("./rule_actions_popopver.scss");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const RuleActionsPopover = ({
  rule,
  canSaveRule,
  onDelete,
  onApiKeyUpdate,
  onEnableDisable,
  onRunRule
}) => {
  const [isPopoverOpen, setIsPopoverOpen] = (0, _react.useState)(false);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPopover, {
    button: /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, {
      disabled: false,
      "data-test-subj": "ruleActionsButton",
      "data-testid": "ruleActionsButton",
      iconType: "boxesHorizontal",
      onClick: () => setIsPopoverOpen(!isPopoverOpen),
      "aria-label": _i18n.i18n.translate('xpack.triggersActionsUI.sections.ruleDetails.popoverButtonTitle', {
        defaultMessage: 'Actions'
      })
    }),
    isOpen: isPopoverOpen,
    closePopover: () => setIsPopoverOpen(false),
    ownFocus: true,
    panelPaddingSize: "none"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiContextMenu, {
    initialPanelId: 0,
    panels: [{
      id: 0,
      items: [{
        disabled: !canSaveRule,
        'data-test-subj': 'disableButton',
        onClick: async () => {
          setIsPopoverOpen(false);
          onEnableDisable(!rule.enabled);
        },
        name: !rule.enabled ? _i18n.i18n.translate('xpack.triggersActionsUI.sections.ruleDetails.enableRuleButtonLabel', {
          defaultMessage: 'Enable'
        }) : _i18n.i18n.translate('xpack.triggersActionsUI.sections.ruleDetails.disableRuleButtonLabel', {
          defaultMessage: 'Disable'
        })
      }, {
        disabled: !canSaveRule,
        'data-test-subj': 'updateAPIKeyButton',
        onClick: () => {
          setIsPopoverOpen(false);
          onApiKeyUpdate(rule.id);
        },
        name: _i18n.i18n.translate('xpack.triggersActionsUI.sections.ruleDetails.updateAPIKeyButtonLabel', {
          defaultMessage: 'Update API key'
        })
      }, {
        disabled: !canSaveRule,
        'data-test-subj': 'runRuleButton',
        onClick: () => {
          setIsPopoverOpen(false);
          onRunRule(rule.id);
        },
        name: _i18n.i18n.translate('xpack.triggersActionsUI.sections.ruleDetails.runRuleButtonLabel', {
          defaultMessage: 'Run rule'
        })
      }, {
        disabled: !canSaveRule,
        className: 'ruleActionsPopover__deleteButton',
        'data-test-subj': 'deleteRuleButton',
        onClick: () => {
          setIsPopoverOpen(false);
          onDelete(rule.id);
        },
        name: _i18n.i18n.translate('xpack.triggersActionsUI.sections.ruleDetails.deleteRuleButtonLabel', {
          defaultMessage: 'Delete rule'
        })
      }]
    }],
    className: "ruleActionsPopover",
    "data-test-subj": "ruleActionsPopover",
    "data-testid": "ruleActionsPopover"
  }));
};
exports.RuleActionsPopover = RuleActionsPopover;