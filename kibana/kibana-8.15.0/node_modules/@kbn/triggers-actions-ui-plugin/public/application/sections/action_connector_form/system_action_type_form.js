"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SystemActionTypeForm = void 0;
var _react = _interopRequireWildcard(require("react"));
var _i18n = require("@kbn/i18n");
var _i18nReact = require("@kbn/i18n-react");
var _eui = require("@elastic/eui");
var _lodash = require("lodash");
var _translations = require("../translations");
var _types = require("../../../types");
var _action_variables = require("../../lib/action_variables");
var _kibana = require("../../../common/lib/kibana");
var _validate_params_for_warnings = require("../../lib/validate_params_for_warnings");
var _use_rule_aad_template_fields = require("../../hooks/use_rule_aad_template_fields");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SystemActionTypeForm = ({
  actionItem,
  actionConnector,
  index,
  onDeleteAction,
  setActionParamsProperty,
  actionTypesIndex,
  connectors,
  defaultActionMessage,
  messageVariables,
  summaryMessageVariables,
  actionTypeRegistry,
  defaultSummaryMessage,
  producerId,
  featureId,
  ruleTypeId,
  disableErrorMessages
}) => {
  var _actionTypeRegistered;
  const {
    http
  } = (0, _kibana.useKibana)().services;
  const [isOpen, setIsOpen] = (0, _react.useState)(true);
  const [actionParamsErrors, setActionParamsErrors] = (0, _react.useState)({
    errors: {}
  });
  const [warning, setWarning] = (0, _react.useState)(null);
  const {
    fields: aadTemplateFields
  } = (0, _use_rule_aad_template_fields.useRuleTypeAadTemplateFields)(http, ruleTypeId, true);
  const getDefaultParams = (0, _react.useCallback)(() => {
    const connectorType = actionTypeRegistry.get(actionItem.actionTypeId);
    return connectorType.defaultActionParams;
  }, [actionItem.actionTypeId, actionTypeRegistry]);
  const availableActionVariables = (0, _react.useMemo)(() => messageVariables ? getAvailableActionVariables(messageVariables, summaryMessageVariables, undefined, true) : [], [messageVariables, summaryMessageVariables]);
  (0, _react.useEffect)(() => {
    const defaultParams = getDefaultParams();
    if (defaultParams) {
      for (const [key, paramValue] of Object.entries(defaultParams)) {
        const defaultAADParams = {};
        if (actionItem.params[key] === undefined || actionItem.params[key] === null) {
          setActionParamsProperty(key, paramValue, index);
          // Add default param to AAD defaults only if it does not contain any template code
          if (typeof paramValue !== 'string' || !paramValue.match(/{{.*?}}/g)) {
            defaultAADParams[key] = paramValue;
          }
        }
      }
    }
  }, [actionItem.params, getDefaultParams, index, messageVariables, setActionParamsProperty, summaryMessageVariables]);
  (0, _react.useEffect)(() => {
    const defaultParams = getDefaultParams();
    if (defaultParams) {
      const defaultAADParams = {};
      for (const [key, paramValue] of Object.entries(defaultParams)) {
        setActionParamsProperty(key, paramValue, index);
        if (!paramValue.match(/{{.*?}}/g)) {
          defaultAADParams[key] = paramValue;
        }
      }
    }
  }, [getDefaultParams, index, setActionParamsProperty]);
  (0, _react.useEffect)(() => {
    (async _actionTypeRegistry$g => {
      if (disableErrorMessages) {
        setActionParamsErrors({
          errors: {}
        });
        return;
      }
      const res = await ((_actionTypeRegistry$g = actionTypeRegistry.get(actionItem.actionTypeId)) === null || _actionTypeRegistry$g === void 0 ? void 0 : _actionTypeRegistry$g.validateParams(actionItem.params));
      setActionParamsErrors(res);
    })();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [actionItem, disableErrorMessages]);
  const actionTypeRegistered = actionTypeRegistry.get(actionConnector.actionTypeId);
  if (!actionTypeRegistered) return null;
  const showActionGroupErrorIcon = () => {
    return !isOpen && (0, _lodash.some)(actionParamsErrors.errors, error => !(0, _lodash.isEmpty)(error));
  };
  const ParamsFieldsComponent = actionTypeRegistered.actionParamsFields;
  const accordionContent = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSplitPanel.Inner, {
    color: "plain"
  }, ParamsFieldsComponent ? /*#__PURE__*/_react.default.createElement(_eui.EuiErrorBoundary, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "m",
    direction: "column"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_react.Suspense, {
    fallback: null
  }, /*#__PURE__*/_react.default.createElement(ParamsFieldsComponent, {
    actionParams: actionItem.params,
    errors: actionParamsErrors.errors,
    index: index,
    editAction: (key, value, i) => {
      setWarning((0, _validate_params_for_warnings.validateParamsForWarnings)(value, http.basePath.publicBaseUrl, availableActionVariables));
      setActionParamsProperty(key, value, i);
    },
    messageVariables: aadTemplateFields,
    defaultMessage: defaultSummaryMessage,
    useDefaultMessage: true,
    actionConnector: actionConnector,
    executionMode: _types.ActionConnectorMode.ActionForm,
    ruleTypeId: ruleTypeId,
    producerId: producerId
  }), warning ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
    size: "s",
    color: "warning",
    title: warning
  })) : null)))) : null));
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSplitPanel.Outer, {
    hasShadow: isOpen
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiAccordion, {
    initialIsOpen: true,
    key: index,
    id: index.toString(),
    onToggle: setIsOpen,
    paddingSize: "none",
    className: "actAccordionActionForm",
    buttonContentClassName: "actAccordionActionForm__button",
    "data-test-subj": `alertActionAccordion-${index}`,
    buttonContent: /*#__PURE__*/_react.default.createElement(ButtonContent, {
      showActionGroupErrorIcon: showActionGroupErrorIcon(),
      showWarning: Boolean(warning && !isOpen),
      connectorName: actionConnector.name,
      isExperimental: Boolean(actionTypeRegistered && actionTypeRegistered.isExperimental),
      iconClass: (_actionTypeRegistered = actionTypeRegistered.iconClass) !== null && _actionTypeRegistered !== void 0 ? _actionTypeRegistered : 'empty'
    }),
    extraAction: /*#__PURE__*/_react.default.createElement(_eui.EuiButtonIcon, {
      iconType: "minusInCircle",
      color: "danger",
      className: "actAccordionActionForm__extraAction",
      "aria-label": _i18n.i18n.translate('xpack.triggersActionsUI.sections.actionTypeForm.accordion.deleteIconAriaLabel', {
        defaultMessage: 'Delete'
      }),
      onClick: onDeleteAction,
      "data-test-subj": "system-action-delete-button"
    })
  }, accordionContent)), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "l"
  }));
};
exports.SystemActionTypeForm = SystemActionTypeForm;
function getAvailableActionVariables(actionVariables, summaryActionVariables, actionGroup, isSummaryAction) {
  const transformedActionVariables = (0, _action_variables.transformActionVariables)(actionVariables, summaryActionVariables, actionGroup === null || actionGroup === void 0 ? void 0 : actionGroup.omitMessageVariables, isSummaryAction);

  // partition deprecated items so they show up last
  const partitionedActionVariables = (0, _lodash.partition)(transformedActionVariables, v => v.deprecated !== true);
  return partitionedActionVariables.reduce((acc, curr) => {
    return [...acc, ...curr.sort((a, b) => a.name.toUpperCase().localeCompare(b.name.toUpperCase()))];
  }, []);
}
const ButtonContent = ({
  showActionGroupErrorIcon,
  iconClass,
  showWarning,
  isExperimental,
  connectorName
}) => {
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "s",
    alignItems: "center"
  }, showActionGroupErrorIcon ? /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
    content: _i18n.i18n.translate('xpack.triggersActionsUI.sections.actionTypeForm.actionErrorToolTip', {
      defaultMessage: 'Action contains errors.'
    })
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
    "data-test-subj": "action-group-error-icon",
    type: "warning",
    color: "danger",
    size: "m"
  }))) : /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
    type: iconClass,
    size: "m"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiText, null, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "s",
    alignItems: "center"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    defaultMessage: "{actionConnectorName}",
    id: "xpack.triggersActionsUI.sections.actionTypeForm.existingAlertActionTypeEditTitle",
    values: {
      actionConnectorName: `${connectorName}`
    }
  })), showWarning && /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiBadge, {
    "data-test-subj": "warning-badge",
    iconType: "warning",
    color: "warning"
  }, _i18n.i18n.translate('xpack.triggersActionsUI.sections.actionTypeForm.actionWarningsTitle', {
    defaultMessage: '1 warning'
  }))))))), isExperimental && /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiBetaBadge, {
    "data-test-subj": "action-type-form-beta-badge",
    label: _translations.TECH_PREVIEW_LABEL,
    tooltipContent: _translations.TECH_PREVIEW_DESCRIPTION
  })));
};