"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.timelineEqlSearchStrategyProvider = void 0;
var _rxjs = require("rxjs");
var _server = require("@kbn/data-plugin/server");
var _common = require("@kbn/data-plugin/common");
var _helpers = require("./helpers");
var _parse_options = require("./parse_options");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const timelineEqlSearchStrategyProvider = data => {
  const esEql = data.search.getSearchStrategy(_common.EQL_SEARCH_STRATEGY);
  return {
    search: (request, options, deps) => {
      const parsedOptions = (0, _parse_options.parseOptions)(request);
      const dsl = (0, _helpers.buildEqlDsl)(parsedOptions);
      return esEql.search({
        ...request,
        params: dsl
      }, options, deps).pipe((0, _rxjs.map)(response => {
        return {
          ...response,
          ...{
            rawResponse: (0, _server.shimHitsTotal)(response.rawResponse)
          }
        };
      }), (0, _rxjs.mergeMap)(async esSearchRes => (0, _helpers.parseEqlResponse)(parsedOptions, esSearchRes)));
    },
    cancel: async (id, options, deps) => {
      if (esEql.cancel) {
        return esEql.cancel(id, options, deps);
      }
    }
  };
};
exports.timelineEqlSearchStrategyProvider = timelineEqlSearchStrategyProvider;