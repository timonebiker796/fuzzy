/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.logsExplorer_bundle_jsonpfunction=window.logsExplorer_bundle_jsonpfunction||[]).push([[6],{129:function(e,a,t){"use strict";t.r(a);var n=t(59),i=t.n(n),l=t(4),s=t.n(l),r=t(50),o=t.n(r),d=t(34),c=t(6);const u={iconType:"questionInCircle",color:"gray"},f={binary:{iconType:"tokenBinary"},boolean:{iconType:"tokenBoolean"},conflict:{iconType:"warning",color:"euiColorVis9",shape:"square"},date:{iconType:"tokenDate"},date_range:{iconType:"tokenDate"},dense_vector:{iconType:"tokenVectorDense"},geo_point:{iconType:"tokenGeo"},geo_shape:{iconType:"tokenGeo"},ip:{iconType:"tokenIP"},ip_range:{iconType:"tokenIP"},flattened:{iconType:"tokenFlattened"},match_only_text:{iconType:"tokenString"},murmur3:{iconType:"tokenSearchType"},number:{iconType:"tokenNumber"},number_range:{iconType:"tokenNumber"},rank_feature:{iconType:"tokenRankFeature"},rank_features:{iconType:"tokenRankFeatures"},histogram:{iconType:"tokenHistogram"},_source:{iconType:"editorCodeBlock",color:"gray"},point:{iconType:"tokenShape"},shape:{iconType:"tokenShape"},sparse_vector:{iconType:"tokenVectorSparse"},string:{iconType:"tokenString"},text:{iconType:"tokenString"},keyword:{iconType:"tokenKeyword"},gauge:{iconType:"tokenMetricGauge"},counter:{iconType:"tokenMetricCounter"},nested:{iconType:"tokenNested"},version:{iconType:"tokenTag"}};function g({type:e,label:a,size:t="s",scripted:n,className:l,...s}){const r=f[e]||u;return Object(c.jsx)(d.EuiToken,i()({},r,{className:o()("kbnFieldIcon",l),"aria-label":a||e,title:a||e,size:t,fill:n?"dark":void 0},s))}var p=t(14),N=t(77),m=t(83);const T=p.i18n.translate("fieldUtils.fieldNameIcons.unknownFieldAriaLabel",{defaultMessage:"Unknown field"});function b(e){if(!e||e===N.a.UNKNOWN)return T;if("source"===e)return p.i18n.translate("fieldUtils.fieldNameIcons.sourceFieldAriaLabel",{defaultMessage:"Source field"});const a=e;switch(a){case m.a.DOCUMENT:return p.i18n.translate("fieldUtils.fieldNameIcons.recordAriaLabel",{defaultMessage:"Records"});case m.a.BINARY:return p.i18n.translate("fieldUtils.fieldNameIcons.binaryAriaLabel",{defaultMessage:"Binary"});case m.a.BOOLEAN:return p.i18n.translate("fieldUtils.fieldNameIcons.booleanAriaLabel",{defaultMessage:"Boolean"});case m.a.CONFLICT:return p.i18n.translate("fieldUtils.fieldNameIcons.conflictFieldAriaLabel",{defaultMessage:"Conflict"});case m.a.COUNTER:return p.i18n.translate("fieldUtils.fieldNameIcons.counterFieldAriaLabel",{defaultMessage:"Counter metric"});case m.a.DATE:return p.i18n.translate("fieldUtils.fieldNameIcons.dateFieldAriaLabel",{defaultMessage:"Date"});case m.a.DATE_RANGE:return p.i18n.translate("fieldUtils.fieldNameIcons.dateRangeFieldAriaLabel",{defaultMessage:"Date range"});case m.a.DENSE_VECTOR:return p.i18n.translate("fieldUtils.fieldNameIcons.denseVectorFieldAriaLabel",{defaultMessage:"Dense vector"});case m.a.GAUGE:return p.i18n.translate("fieldUtils.fieldNameIcons.gaugeFieldAriaLabel",{defaultMessage:"Gauge metric"});case m.a.GEO_POINT:return p.i18n.translate("fieldUtils.fieldNameIcons.geoPointFieldAriaLabel",{defaultMessage:"Geo point"});case m.a.GEO_SHAPE:return p.i18n.translate("fieldUtils.fieldNameIcons.geoShapeFieldAriaLabel",{defaultMessage:"Geo shape"});case m.a.HISTOGRAM:return p.i18n.translate("fieldUtils.fieldNameIcons.histogramFieldAriaLabel",{defaultMessage:"Histogram"});case m.a.IP:return p.i18n.translate("fieldUtils.fieldNameIcons.ipAddressFieldAriaLabel",{defaultMessage:"IP address"});case m.a.IP_RANGE:return p.i18n.translate("fieldUtils.fieldNameIcons.ipRangeFieldAriaLabel",{defaultMessage:"IP range"});case m.a.FLATTENED:return p.i18n.translate("fieldUtils.fieldNameIcons.flattenedFieldAriaLabel",{defaultMessage:"Flattened"});case m.a.MURMUR3:return p.i18n.translate("fieldUtils.fieldNameIcons.murmur3FieldAriaLabel",{defaultMessage:"Murmur3"});case m.a.NUMBER:return p.i18n.translate("fieldUtils.fieldNameIcons.numberFieldAriaLabel",{defaultMessage:"Number"});case m.a.RANK_FEATURE:return p.i18n.translate("fieldUtils.fieldNameIcons.rankFeatureFieldAriaLabel",{defaultMessage:"Rank feature"});case m.a.RANK_FEATURES:return p.i18n.translate("fieldUtils.fieldNameIcons.rankFeaturesFieldAriaLabel",{defaultMessage:"Rank features"});case m.a.POINT:return p.i18n.translate("fieldUtils.fieldNameIcons.pointFieldAriaLabel",{defaultMessage:"Point"});case m.a.SHAPE:return p.i18n.translate("fieldUtils.fieldNameIcons.shapeFieldAriaLabel",{defaultMessage:"Shape"});case m.a.SPARSE_VECTOR:return p.i18n.translate("fieldUtils.fieldNameIcons.sparseVectorFieldAriaLabel",{defaultMessage:"Sparse vector"});case m.a.SEMANTIC_TEXT:return p.i18n.translate("fieldUtils.fieldNameIcons.semanticTextFieldAriaLabel",{defaultMessage:"Semantic text"});case m.a.STRING:return p.i18n.translate("fieldUtils.fieldNameIcons.stringFieldAriaLabel",{defaultMessage:"String"});case m.a.TEXT:return p.i18n.translate("fieldUtils.fieldNameIcons.textFieldAriaLabel",{defaultMessage:"Text"});case m.a.KEYWORD:return p.i18n.translate("fieldUtils.fieldNameIcons.keywordFieldAriaLabel",{defaultMessage:"Keyword"});case m.a.NESTED:return p.i18n.translate("fieldUtils.fieldNameIcons.nestedFieldAriaLabel",{defaultMessage:"Nested"});case m.a.VERSION:return p.i18n.translate("fieldUtils.fieldNameIcons.versionFieldAriaLabel",{defaultMessage:"Version"});default:return a||a}}const A=({type:e,...a})=>Object(c.jsx)(g,i()({type:y(e),label:b(e)},a)),I=s.a.memo(A);function y(e){return"document"===e?"number":e}a.default=I}}]);