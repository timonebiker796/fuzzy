"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uncategorizedLabel = exports.tryEsql = exports.technicalPreview = exports.sortOrdersLabel = exports.sortOptions = exports.showAllLogsLabel = exports.selectDataViewTypeLabel = exports.openDiscoverLabel = exports.noIntegrationsLabel = exports.noIntegrationsDescriptionLabel = exports.noDatasetsLabel = exports.noDatasetsDescriptionLabel = exports.noDataViewsLabel = exports.noDataViewsDescriptionLabel = exports.noDataRetryLabel = exports.logsDataViewTypeLabel = exports.integrationsLabel = exports.errorLabel = exports.dataViewsLabel = exports.allDataViewTypesLabel = exports.addDataLabel = exports.UNCATEGORIZED_TAB_ID = exports.UNCATEGORIZED_PANEL_ID = exports.POPOVER_ID = exports.INTEGRATIONS_TAB_ID = exports.INTEGRATIONS_PANEL_ID = exports.DATA_VIEWS_TAB_ID = exports.DATA_VIEWS_PANEL_ID = exports.DATA_SOURCE_SELECTOR_WIDTH = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const POPOVER_ID = exports.POPOVER_ID = 'data-source-selector-popover';
const INTEGRATIONS_PANEL_ID = exports.INTEGRATIONS_PANEL_ID = 'data-source-selector-integrations-panel';
const INTEGRATIONS_TAB_ID = exports.INTEGRATIONS_TAB_ID = 'data-source-selector-integrations-tab';
const UNCATEGORIZED_PANEL_ID = exports.UNCATEGORIZED_PANEL_ID = 'data-source-selector-uncategorized-panel';
const UNCATEGORIZED_TAB_ID = exports.UNCATEGORIZED_TAB_ID = 'data-source-selector-uncategorized-tab';
const DATA_VIEWS_PANEL_ID = exports.DATA_VIEWS_PANEL_ID = 'data-source-selector-data-views-panel';
const DATA_VIEWS_TAB_ID = exports.DATA_VIEWS_TAB_ID = 'data-source-selector-data-views-tab';
const DATA_SOURCE_SELECTOR_WIDTH = exports.DATA_SOURCE_SELECTOR_WIDTH = 520;
const showAllLogsLabel = exports.showAllLogsLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.showAllLogs', {
  defaultMessage: 'Show all logs'
});
const addDataLabel = exports.addDataLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.addDataLabel', {
  defaultMessage: 'Add data'
});
const integrationsLabel = exports.integrationsLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.integrations', {
  defaultMessage: 'Integrations'
});
const uncategorizedLabel = exports.uncategorizedLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.uncategorized', {
  defaultMessage: 'Uncategorized'
});
const dataViewsLabel = exports.dataViewsLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.dataViews', {
  defaultMessage: 'Data Views'
});
const openDiscoverLabel = exports.openDiscoverLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.openDiscover', {
  defaultMessage: 'Opens in Discover'
});
const sortOrdersLabel = exports.sortOrdersLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.sortOrders', {
  defaultMessage: 'Sort directions'
});
const noDatasetsLabel = exports.noDatasetsLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.noDatasets', {
  defaultMessage: 'No data streams found'
});
const noDatasetsDescriptionLabel = exports.noDatasetsDescriptionLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.noDatasetsDescription', {
  defaultMessage: 'No datasets or search results found.'
});
const noDataViewsLabel = exports.noDataViewsLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.noDataViews', {
  defaultMessage: 'No data views found'
});
const noDataViewsDescriptionLabel = exports.noDataViewsDescriptionLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.noDataViewsDescription', {
  defaultMessage: 'No data views or search results found.'
});
const noIntegrationsLabel = exports.noIntegrationsLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.noIntegrations', {
  defaultMessage: 'No integrations found'
});
const noIntegrationsDescriptionLabel = exports.noIntegrationsDescriptionLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.noIntegrationsDescription', {
  defaultMessage: 'No integrations or search results found.'
});
const errorLabel = exports.errorLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.error', {
  defaultMessage: 'error'
});
const noDataRetryLabel = exports.noDataRetryLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.noDataRetry', {
  defaultMessage: 'Retry'
});
const tryEsql = exports.tryEsql = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.TryEsql', {
  defaultMessage: 'Language: ES|QL'
});
const technicalPreview = exports.technicalPreview = _i18n.i18n.translate('xpack.logsExplorer.TechPreview', {
  defaultMessage: 'Technical preview'
});
const selectDataViewTypeLabel = exports.selectDataViewTypeLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.dataViewFilter.selectDataViewType', {
  defaultMessage: 'Select type'
});
const allDataViewTypesLabel = exports.allDataViewTypesLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.dataViewFilter.allDataViewTypes', {
  defaultMessage: 'Show all'
});
const logsDataViewTypeLabel = exports.logsDataViewTypeLabel = _i18n.i18n.translate('xpack.logsExplorer.dataSourceSelector.dataViewFilter.logsDataViewType', {
  defaultMessage: 'Logs-only'
});
const sortOptions = exports.sortOptions = [{
  id: 'asc',
  iconType: 'sortAscending',
  label: 'Ascending'
}, {
  id: 'desc',
  iconType: 'sortDescending',
  label: 'Descending'
}];