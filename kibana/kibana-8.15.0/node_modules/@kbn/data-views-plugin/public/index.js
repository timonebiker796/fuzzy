"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "CONTAINS_SPACES_KEY", {
  enumerable: true,
  get: function () {
    return _lib.CONTAINS_SPACES_KEY;
  }
});
Object.defineProperty(exports, "DATA_VIEW_SAVED_OBJECT_TYPE", {
  enumerable: true,
  get: function () {
    return _common.DATA_VIEW_SAVED_OBJECT_TYPE;
  }
});
Object.defineProperty(exports, "DataView", {
  enumerable: true,
  get: function () {
    return _data_views.DataView;
  }
});
Object.defineProperty(exports, "DataViewField", {
  enumerable: true,
  get: function () {
    return _common.DataViewField;
  }
});
Object.defineProperty(exports, "DataViewSavedObjectConflictError", {
  enumerable: true,
  get: function () {
    return _common.DataViewSavedObjectConflictError;
  }
});
Object.defineProperty(exports, "DataViewType", {
  enumerable: true,
  get: function () {
    return _common.DataViewType;
  }
});
Object.defineProperty(exports, "DataViewsApiClient", {
  enumerable: true,
  get: function () {
    return _data_views.DataViewsApiClient;
  }
});
Object.defineProperty(exports, "DataViewsService", {
  enumerable: true,
  get: function () {
    return _data_views.DataViewsService;
  }
});
Object.defineProperty(exports, "ILLEGAL_CHARACTERS", {
  enumerable: true,
  get: function () {
    return _lib.ILLEGAL_CHARACTERS;
  }
});
Object.defineProperty(exports, "ILLEGAL_CHARACTERS_KEY", {
  enumerable: true,
  get: function () {
    return _lib.ILLEGAL_CHARACTERS_KEY;
  }
});
Object.defineProperty(exports, "ILLEGAL_CHARACTERS_VISIBLE", {
  enumerable: true,
  get: function () {
    return _lib.ILLEGAL_CHARACTERS_VISIBLE;
  }
});
Object.defineProperty(exports, "INDEX_PATTERN_TYPE", {
  enumerable: true,
  get: function () {
    return _types.INDEX_PATTERN_TYPE;
  }
});
Object.defineProperty(exports, "META_FIELDS", {
  enumerable: true,
  get: function () {
    return _common.META_FIELDS;
  }
});
Object.defineProperty(exports, "UiSettingsPublicToCommon", {
  enumerable: true,
  get: function () {
    return _ui_settings_wrapper.UiSettingsPublicToCommon;
  }
});
Object.defineProperty(exports, "getFieldSubtypeMulti", {
  enumerable: true,
  get: function () {
    return _common.getFieldSubtypeMulti;
  }
});
Object.defineProperty(exports, "getFieldSubtypeNested", {
  enumerable: true,
  get: function () {
    return _common.getFieldSubtypeNested;
  }
});
exports.plugin = plugin;
Object.defineProperty(exports, "validateDataView", {
  enumerable: true,
  get: function () {
    return _lib.validateDataView;
  }
});
var _lib = require("../common/lib");
var _common = require("../common");
var _types = require("./types");
var _data_views = require("./data_views");
var _ui_settings_wrapper = require("./ui_settings_wrapper");
var _plugin = require("./plugin");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

/*
 * Plugin setup
 */

function plugin(initializerContext) {
  return new _plugin.DataViewsPublicPlugin(initializerContext);
}

// Export plugin after all other imports