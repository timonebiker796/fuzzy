"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.listOperatorType = exports.listOperator = exports.ListOperatorTypeEnum = exports.ListOperatorEnum = void 0;
var t = _interopRequireWildcard(require("io-ts"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const listOperator = exports.listOperator = t.keyof({
  excluded: null,
  included: null
});
let ListOperatorEnum = exports.ListOperatorEnum = /*#__PURE__*/function (ListOperatorEnum) {
  ListOperatorEnum["INCLUDED"] = "included";
  ListOperatorEnum["EXCLUDED"] = "excluded";
  return ListOperatorEnum;
}({});
const listOperatorType = exports.listOperatorType = t.keyof({
  nested: null,
  match: null,
  match_any: null,
  wildcard: null,
  exists: null,
  list: null
});
let ListOperatorTypeEnum = exports.ListOperatorTypeEnum = /*#__PURE__*/function (ListOperatorTypeEnum) {
  ListOperatorTypeEnum["NESTED"] = "nested";
  ListOperatorTypeEnum["MATCH"] = "match";
  ListOperatorTypeEnum["MATCH_ANY"] = "match_any";
  ListOperatorTypeEnum["WILDCARD"] = "wildcard";
  ListOperatorTypeEnum["EXISTS"] = "exists";
  ListOperatorTypeEnum["LIST"] = "list";
  return ListOperatorTypeEnum;
}({});