"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.exceptionListItemSchema = void 0;
var t = _interopRequireWildcard(require("io-ts"));
var _namespace_type = require("../../common/namespace_type");
var _meta = require("../../common/meta");
var _name = require("../../common/name");
var _created_at = require("../../common/created_at");
var _created_by = require("../../common/created_by");
var _id = require("../../common/id");
var _tie_breaker_id = require("../../common/tie_breaker_id");
var _updated_at = require("../../common/updated_at");
var _updated_by = require("../../common/updated_by");
var _list_id = require("../../common/list_id");
var _description = require("../../common/description");
var _os_type = require("../../common/os_type");
var _tags = require("../../common/tags");
var _underscore_version = require("../../common/underscore_version");
var _comment = require("../../common/comment");
var _entries = require("../../common/entries");
var _item_id = require("../../common/item_id");
var _exception_list_item_type = require("../../common/exception_list_item_type");
var _expire_time = require("../../common/expire_time");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const exceptionListItemSchema = exports.exceptionListItemSchema = t.exact(t.type({
  _version: _underscore_version._versionOrUndefined,
  comments: _comment.commentsArray,
  created_at: _created_at.created_at,
  created_by: _created_by.created_by,
  description: _description.description,
  entries: _entries.entriesArray,
  expire_time: _expire_time.expireTimeOrUndefined,
  id: _id.id,
  item_id: _item_id.item_id,
  list_id: _list_id.list_id,
  meta: _meta.metaOrUndefined,
  name: _name.name,
  namespace_type: _namespace_type.namespace_type,
  os_types: _os_type.osTypeArray,
  tags: _tags.tags,
  tie_breaker_id: _tie_breaker_id.tie_breaker_id,
  type: _exception_list_item_type.exceptionListItemType,
  updated_at: _updated_at.updated_at,
  updated_by: _updated_by.updated_by
}));