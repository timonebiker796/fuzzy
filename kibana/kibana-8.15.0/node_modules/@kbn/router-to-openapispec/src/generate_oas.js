"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.openApiVersion = exports.generateOpenApiDocument = void 0;
var _oas_converter = require("./oas_converter");
var _operation_id_counter = require("./operation_id_counter");
var _process_router = require("./process_router");
var _process_versioned_router = require("./process_versioned_router");
var _util = require("./util");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const openApiVersion = exports.openApiVersion = '3.0.0';
const generateOpenApiDocument = (appRouters, opts) => {
  const {
    filters
  } = opts;
  const converter = new _oas_converter.OasConverter();
  const getOpId = (0, _operation_id_counter.createOperationIdCounter)();
  const paths = {};
  for (const router of appRouters.routers) {
    const result = (0, _process_router.processRouter)(router, converter, getOpId, filters);
    Object.assign(paths, result.paths);
  }
  for (const router of appRouters.versionedRouters) {
    const result = (0, _process_versioned_router.processVersionedRouter)(router, converter, getOpId, filters);
    Object.assign(paths, result.paths);
  }
  const tags = (0, _util.buildGlobalTags)(paths, opts.tags);
  return {
    openapi: openApiVersion,
    info: {
      title: opts.title,
      description: opts.description,
      version: opts.version
    },
    servers: [{
      url: opts.baseUrl
    }],
    paths,
    components: {
      ...converter.getSchemaComponents(),
      securitySchemes: {
        basicAuth: {
          type: 'http',
          scheme: 'basic'
        },
        apiKeyAuth: {
          type: 'apiKey',
          in: 'header',
          name: 'Authorization'
        }
      }
    },
    security: [{
      basicAuth: []
    }],
    tags,
    externalDocs: opts.docsUrl ? {
      url: opts.docsUrl
    } : undefined
  };
};
exports.generateOpenApiDocument = generateOpenApiDocument;