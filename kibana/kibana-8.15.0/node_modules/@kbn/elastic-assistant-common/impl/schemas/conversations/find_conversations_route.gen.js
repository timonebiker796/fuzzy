"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FindConversationsSortFieldEnum = exports.FindConversationsSortField = exports.FindConversationsResponse = exports.FindConversationsRequestQuery = void 0;
var _zod = require("zod");
var _zodHelpers = require("@kbn/zod-helpers");
var _common_attributes = require("../common_attributes.gen");
var _common_attributes2 = require("./common_attributes.gen");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Find Conversations API endpoint
 *   version: 1
 */

const FindConversationsSortField = exports.FindConversationsSortField = _zod.z.enum(['created_at', 'is_default', 'title', 'updated_at']);
const FindConversationsSortFieldEnum = exports.FindConversationsSortFieldEnum = FindConversationsSortField.enum;
const FindConversationsRequestQuery = exports.FindConversationsRequestQuery = _zod.z.object({
  fields: (0, _zodHelpers.ArrayFromString)(_zod.z.string()).optional(),
  /**
   * Search query
   */
  filter: _zod.z.string().optional(),
  /**
   * Field to sort by
   */
  sort_field: FindConversationsSortField.optional(),
  /**
   * Sort order
   */
  sort_order: _common_attributes.SortOrder.optional(),
  /**
   * Page number
   */
  page: _zod.z.coerce.number().int().min(1).optional().default(1),
  /**
   * Conversations per page
   */
  per_page: _zod.z.coerce.number().int().min(0).optional().default(20)
});
const FindConversationsResponse = exports.FindConversationsResponse = _zod.z.object({
  page: _zod.z.number().int(),
  perPage: _zod.z.number().int(),
  total: _zod.z.number().int(),
  data: _zod.z.array(_common_attributes2.ConversationResponse)
});