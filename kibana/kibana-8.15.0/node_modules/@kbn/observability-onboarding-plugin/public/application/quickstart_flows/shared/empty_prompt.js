"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmptyPrompt = void 0;
var _react = _interopRequireDefault(require("react"));
var _i18n = require("@kbn/i18n");
var _eui = require("@elastic/eui");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const EmptyPrompt = ({
  error,
  onRetryClick
}) => {
  var _error$response;
  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403) {
    return /*#__PURE__*/_react.default.createElement(_eui.EuiEmptyPrompt, {
      color: "plain",
      iconType: "lock",
      title: /*#__PURE__*/_react.default.createElement("h2", null, _i18n.i18n.translate('xpack.observability_onboarding.autoDetectPanel.h2.contactYourAdministratorForLabel', {
        defaultMessage: 'Contact your administrator for access'
      })),
      body: /*#__PURE__*/_react.default.createElement("p", null, _i18n.i18n.translate('xpack.observability_onboarding.autoDetectPanel.p.toInstallIntegrationsAndLabel', {
        defaultMessage: 'To install integrations and ingest data, you need additional privileges.'
      }))
    });
  }
  return /*#__PURE__*/_react.default.createElement(_eui.EuiEmptyPrompt, {
    color: "danger",
    iconType: "error",
    title: /*#__PURE__*/_react.default.createElement("h2", null, _i18n.i18n.translate('xpack.observability_onboarding.autoDetectPanel.h2.unableToInitiateDataLabel', {
      defaultMessage: 'Unable to load content'
    })),
    body: /*#__PURE__*/_react.default.createElement("p", null, _i18n.i18n.translate('xpack.observability_onboarding.autoDetectPanel.p.thereWasAProblemLabel', {
      defaultMessage: 'There was a problem loading the application. Retry or contact your administrator for help.'
    })),
    actions: /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
      color: "danger",
      iconType: "refresh",
      fill: true,
      "data-test-subj": "observabilityOnboardingAutoDetectPanelGoBackButton",
      onClick: onRetryClick
    }, _i18n.i18n.translate('xpack.observability_onboarding.autoDetectPanel.backToSelectionButtonLabel', {
      defaultMessage: 'Retry'
    }))
  });
};
exports.EmptyPrompt = EmptyPrompt;