"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useVirtualSearchResults = useVirtualSearchResults;
var _i18n = require("@kbn/i18n");
var _public = require("@kbn/kibana-react-plugin/public");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function useVirtualSearchResults() {
  const {
    services: {
      application
    }
  } = (0, _public.useKibana)();
  const getUrlForApp = application === null || application === void 0 ? void 0 : application.getUrlForApp;
  return [{
    id: 'upload-file-virtual',
    type: 'virtual',
    title: _i18n.i18n.translate('xpack.observability_onboarding.packageList.uploadFileTitle', {
      defaultMessage: 'Upload a file'
    }),
    description: _i18n.i18n.translate('xpack.observability_onboarding.packageList.uploadFileDescription', {
      defaultMessage: 'Upload data from a CSV, TSV, JSON or other log file to Elasticsearch for analysis.'
    }),
    name: 'upload-file',
    categories: [],
    icons: [{
      type: 'eui',
      src: 'addDataApp'
    }],
    url: `${getUrlForApp === null || getUrlForApp === void 0 ? void 0 : getUrlForApp('home')}#/tutorial_directory/fileDataViz`,
    version: '',
    integration: '',
    isCollectionCard: false
  }];
}