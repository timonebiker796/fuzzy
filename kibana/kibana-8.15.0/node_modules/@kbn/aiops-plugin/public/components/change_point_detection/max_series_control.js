"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MaxSeriesControl = void 0;
var _react = _interopRequireDefault(require("react"));
var _i18nReact = require("@kbn/i18n-react");
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _mlAggUtils = require("@kbn/ml-agg-utils");
var _const = require("../../embeddables/change_point_chart/const");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const maxSeriesValidator = (0, _mlAggUtils.numberValidator)({
  min: 1,
  max: _const.MAX_SERIES,
  integerOnly: true
});
const MaxSeriesControl = ({
  value,
  onChange,
  onValidationChange,
  disabled,
  inline = true
}) => {
  const maxSeriesValidationResult = maxSeriesValidator(value);
  const maxSeriesInvalid = maxSeriesValidationResult !== null;
  const label = _i18n.i18n.translate('xpack.aiops.changePointDetection.maxSeriesToPlotLabel', {
    defaultMessage: 'Max series'
  });
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    fullWidth: true,
    isInvalid: maxSeriesInvalid,
    error: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.aiops.changePointDetection.maxSeriesToPlotError",
      defaultMessage: "Max series value must be between {minValue} and {maxValue}",
      values: {
        minValue: 1,
        maxValue: _const.MAX_SERIES
      }
    }),
    label: inline ? undefined : label
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFieldNumber, {
    "data-test-subj": "aiopsMaxSeriesControlFieldNumber",
    disabled: disabled,
    prepend: inline ? label : undefined,
    append: /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
      content: _i18n.i18n.translate('xpack.aiops.changePointDetection.maxSeriesToPlotDescription', {
        defaultMessage: 'The maximum number of change points to visualize.'
      })
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
      type: 'questionInCircle'
    })),
    compressed: true,
    fullWidth: true,
    isInvalid: maxSeriesInvalid,
    value: value,
    onChange: e => {
      const newValue = Number(e.target.value);
      onChange(newValue);
      if (onValidationChange) {
        onValidationChange(maxSeriesValidator(newValue));
      }
    },
    min: 1,
    max: _const.MAX_SERIES
  }));
};
exports.MaxSeriesControl = MaxSeriesControl;