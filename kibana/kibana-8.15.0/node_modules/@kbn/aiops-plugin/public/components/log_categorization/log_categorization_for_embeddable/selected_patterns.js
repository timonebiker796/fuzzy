"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SelectedPatterns = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _get_category_query = require("@kbn/aiops-log-pattern-analysis/get_category_query");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const SelectedPatterns = ({
  openInDiscover
}) => {
  const {
    labels,
    openFunction
  } = openInDiscover;
  const [showMenu, setShowMenu] = (0, _react.useState)(false);
  const togglePopover = () => setShowMenu(!showMenu);
  const button = /*#__PURE__*/_react.default.createElement(_eui.EuiDataGridToolbarControl, {
    "data-test-subj": "aiopsEmbeddableMenuOptionsButton",
    iconType: "documents",
    onClick: () => togglePopover(),
    badgeContent: openInDiscover.count
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.aiops.logCategorization.selectedResultsButtonLabel",
    defaultMessage: "Selected",
    description: "Selected results"
  }));
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPopover, {
    closePopover: () => setShowMenu(false),
    isOpen: showMenu,
    panelPaddingSize: "none",
    button: button,
    className: "unifiedDataTableToolbarControlButton"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiContextMenuPanel, {
    items: [/*#__PURE__*/_react.default.createElement(_eui.EuiContextMenuItem, {
      key: "in",
      icon: "plusInCircle",
      onClick: () => openFunction(_get_category_query.QUERY_MODE.INCLUDE)
    }, labels.multiSelect.in), /*#__PURE__*/_react.default.createElement(_eui.EuiContextMenuItem, {
      key: "out",
      icon: "minusInCircle",
      onClick: () => openFunction(_get_category_query.QUERY_MODE.EXCLUDE)
    }, labels.multiSelect.out)]
  }));
};
exports.SelectedPatterns = SelectedPatterns;