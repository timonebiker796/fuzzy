"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("@emotion/react");
var _constants = require("@kbn/aiops-common/constants");
var _dataService = require("@kbn/data-service");
var _mlDatePicker = require("@kbn/ml-date-picker");
var _reactKibanaContextRender = require("@kbn/react-kibana-context-render");
var _lodash = require("lodash");
var _react2 = _interopRequireWildcard(require("react"));
var _rxjs = require("rxjs");
var _change_point_detection_context = require("../components/change_point_detection/change_point_detection_context");
var _embeddable_chart_component_wrapper = require("../embeddables/change_point_chart/embeddable_chart_component_wrapper");
var _use_aiops_app_context = require("../hooks/use_aiops_app_context");
var _use_data_source = require("../hooks/use_data_source");
var _use_filters_query = require("../hooks/use_filters_query");
var _use_reload = require("../hooks/use_reload");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * Only used to initialize internally
 */

const ChangePointDetectionWrapper = ({
  // Component dependencies
  coreStart,
  pluginStart,
  // Component props
  viewType,
  dataViewId,
  fn,
  metricField,
  splitField,
  partitions,
  maxSeriesToPlot,
  timeRange,
  onLoading,
  onError,
  onRenderComplete,
  embeddingOrigin,
  lastReloadRequestTime
}) => {
  const deps = (0, _react2.useMemo)(() => {
    const {
      http,
      uiSettings,
      notifications,
      ...startServices
    } = coreStart;
    const {
      lens,
      data,
      usageCollection,
      fieldFormats
    } = pluginStart;
    return {
      http,
      uiSettings,
      data,
      notifications,
      lens,
      usageCollection,
      fieldFormats,
      ...startServices
    };
  }, [coreStart, pluginStart]);
  const datePickerDeps = {
    ...(0, _lodash.pick)(deps, ['data', 'http', 'notifications', 'theme', 'uiSettings', 'i18n']),
    uiSettingsKeys: _dataService.UI_SETTINGS
  };
  const aiopsAppContextValue = (0, _react2.useMemo)(() => {
    return {
      embeddingOrigin: embeddingOrigin !== null && embeddingOrigin !== void 0 ? embeddingOrigin : _constants.EMBEDDABLE_ORIGIN,
      ...deps
    };
  }, [deps, embeddingOrigin]);
  const [manualReload$] = (0, _react2.useState)(new _rxjs.BehaviorSubject(lastReloadRequestTime !== null && lastReloadRequestTime !== void 0 ? lastReloadRequestTime : Date.now()));
  (0, _react2.useEffect)(function updateManualReloadSubject() {
    if (!lastReloadRequestTime) return;
    manualReload$.next(lastReloadRequestTime);
  }, [lastReloadRequestTime, manualReload$]);
  const resultObservable$ = (0, _react2.useMemo)(() => {
    return (0, _rxjs.combineLatest)([manualReload$]).pipe((0, _rxjs.map)(([manualReload]) => Math.max(manualReload)), (0, _rxjs.distinctUntilChanged)());
  }, [manualReload$]);

  // TODO: Remove data-shared-item as part of https://github.com/elastic/kibana/issues/179376>
  return /*#__PURE__*/_react2.default.createElement("div", {
    "data-shared-item": "",
    "data-test-subj": "aiopsEmbeddableChangePointChart",
    css: (0, _react.css)`
        width: 100%;
      `
  }, /*#__PURE__*/_react2.default.createElement(_reactKibanaContextRender.KibanaRenderContextProvider, coreStart, /*#__PURE__*/_react2.default.createElement(_use_aiops_app_context.AiopsAppContext.Provider, {
    value: aiopsAppContextValue
  }, /*#__PURE__*/_react2.default.createElement(_mlDatePicker.DatePickerContextProvider, datePickerDeps, /*#__PURE__*/_react2.default.createElement(_use_reload.ReloadContextProvider, {
    reload$: resultObservable$
  }, /*#__PURE__*/_react2.default.createElement(_use_data_source.DataSourceContextProvider, {
    dataViewId: dataViewId
  }, /*#__PURE__*/_react2.default.createElement(_use_filters_query.FilterQueryContextProvider, {
    timeRange: timeRange
  }, /*#__PURE__*/_react2.default.createElement(_change_point_detection_context.ChangePointDetectionControlsContextProvider, null, /*#__PURE__*/_react2.default.createElement(_embeddable_chart_component_wrapper.ChartGridEmbeddableWrapper, {
    viewType: viewType,
    timeRange: timeRange,
    fn: fn,
    metricField: metricField,
    splitField: splitField,
    maxSeriesToPlot: maxSeriesToPlot,
    dataViewId: dataViewId,
    partitions: partitions,
    onLoading: onLoading,
    onRenderComplete: onRenderComplete,
    onError: onError
  })))))))));
};

// eslint-disable-next-line import/no-default-export
var _default = exports.default = ChangePointDetectionWrapper;
module.exports = exports.default;