/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.aiops_bundle_jsonpfunction=window.aiops_bundle_jsonpfunction||[]).push([[23],{272:function(e,n,t){"use strict";t.r(n),t.d(n,"registerAiopsUiActions",(function(){return m}));var a=t(22),i=t(35),o=t(187),r=t(12),c=t(57);const d=async e=>{const{apiIsPresentationContainer:n}=await t.e(26).then(t.bind(null,154));return n(e)?e:void 0};var l=t(83),s=t(167);function p(e){return Object(s.a)(e,["embeddable"])&&Object(l.d)(e.embeddable,c.d)}const g="openChangePointInMlAppAction",u=e=>{var n;let t=null===(n=e.timeRange$)||void 0===n?void 0:n.getValue();return!t&&Object(l.b)(e)&&Object(l.e)(e.parentApi)&&(t=e.parentApi.timeRange$.getValue()),t};var b=t(241);function m(e,n,l){const s=function(e,n){return{id:"open-change-point-in-ml-app",type:g,getIconType:e=>"link",getDisplayName:()=>r.i18n.translate("xpack.aiops.actions.openChangePointInMlAppName",{defaultMessage:"Open in AIOps Labs"}),async getHref(e){if(!p(e))throw new a.IncompatibleActionError;const t=n.share.url.locators.get("ML_APP_LOCATOR"),{metricField:i,fn:o,splitField:r,dataViewId:c}=e.embeddable;return t.getUrl({page:"aiops/change_point_detection",pageState:{index:c.getValue(),timeRange:u(e.embeddable),fieldConfigs:[{fn:o.getValue(),metricField:i.getValue(),...r.getValue()?{splitField:r.getValue()}:{}}]}})},async execute(n){if(!p(n))throw new a.IncompatibleActionError;const t=await this.getHref(n);t&&await e.application.navigateToUrl(t)},isCompatible:async e=>p(e)}}(n,l),m=function(e,n){return{id:"create-change-point-chart",grouping:[{id:"ml",getDisplayName:()=>r.i18n.translate("xpack.aiops.navMenu.mlAppNameText",{defaultMessage:"Machine Learning and Analytics"}),getIconType:()=>"machineLearningApp"}],order:10,getIconType:()=>"machineLearningApp",getDisplayName:()=>r.i18n.translate("xpack.aiops.embeddableChangePointChartDisplayName",{defaultMessage:"Change point detection"}),isCompatible:async e=>Boolean(await d(e.embeddable)),async execute(i){const o=await d(i.embeddable);if(!o)throw new a.IncompatibleActionError;try{const{resolveEmbeddableChangePointUserInput:a}=await t.e(7).then(t.bind(null,275)),r=await a(e,n,i.embeddable,i.embeddable.uuid);o.addNewPanel({panelType:c.d,initialState:r})}catch(e){return Promise.reject()}}}}(n,l);e.addTriggerAction(a.ADD_PANEL_TRIGGER,m),e.registerTrigger(o.c),e.addTriggerAction(o.b,Object(b.createCategorizeFieldAction)(n,l)),e.addTriggerAction(i.CONTEXT_MENU_TRIGGER,s)}},57:function(e,n,t){"use strict";t.d(n,"a",(function(){return a})),t.d(n,"d",(function(){return i})),t.d(n,"b",(function(){return o})),t.d(n,"c",(function(){return r}));const a="aiopsChangePointChart",i="aiopsChangePointChart",o="aiopsChangePointChartDataViewId",r={CHARTS:"charts",TABLE:"table"}}}]);