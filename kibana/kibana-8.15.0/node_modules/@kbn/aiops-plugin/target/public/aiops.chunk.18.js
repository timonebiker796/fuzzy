/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.aiops_bundle_jsonpfunction=window.aiops_bundle_jsonpfunction||[]).push([[18],{265:function(e,n,_){"use strict";_.r(n),_.d(n,"getPatternAnalysisAvailable",(function(){return i}));var t=_(55),T=_(3);function i(e){const n=Object(T.firstValueFrom)(e.license$);return async e=>(await n).hasAtLeast("platinum")&&e.isTimeBased()&&e.fields.some((e=>{var n;return null===(n=e.esTypes)||void 0===n?void 0:n.includes(t.a.TEXT)}))}},55:function(e,n,_){"use strict";_.d(n,"c",(function(){return r})),_.d(n,"b",(function(){return s})),_.d(n,"a",(function(){return i}));var t=_(59),T=_.n(t);let i=function(e){return e._ID="_id",e._INDEX="_index",e._SOURCE="_source",e._TYPE="_type",e.STRING="string",e.TEXT="text",e.MATCH_ONLY_TEXT="match_only_text",e.KEYWORD="keyword",e.VERSION="version",e.BOOLEAN="boolean",e.OBJECT="object",e.DATE="date",e.DATE_NANOS="date_nanos",e.DATE_RANGE="date_range",e.GEO_POINT="geo_point",e.GEO_SHAPE="geo_shape",e.FLOAT="float",e.HALF_FLOAT="half_float",e.SCALED_FLOAT="scaled_float",e.DOUBLE="double",e.INTEGER="integer",e.LONG="long",e.SHORT="short",e.UNSIGNED_LONG="unsigned_long",e.AGGREGATE_METRIC_DOUBLE="aggregate_metric_double",e.FLOAT_RANGE="float_range",e.DOUBLE_RANGE="double_range",e.INTEGER_RANGE="integer_range",e.LONG_RANGE="long_range",e.NESTED="nested",e.BYTE="byte",e.IP="ip",e.IP_RANGE="ip_range",e.ATTACHMENT="attachment",e.TOKEN_COUNT="token_count",e.MURMUR3="murmur3",e.HISTOGRAM="histogram",e}({}),s=function(e){return e._SOURCE="_source",e.ATTACHMENT="attachment",e.BOOLEAN="boolean",e.DATE="date",e.DATE_RANGE="date_range",e.GEO_POINT="geo_point",e.GEO_SHAPE="geo_shape",e.IP="ip",e.IP_RANGE="ip_range",e.MURMUR3="murmur3",e.NUMBER="number",e.NUMBER_RANGE="number_range",e.STRING="string",e.UNKNOWN="unknown",e.CONFLICT="conflict",e.OBJECT="object",e.NESTED="nested",e.HISTOGRAM="histogram",e.MISSING="missing",e}({});class kbn_field_type_KbnFieldType{constructor(e={}){T()(this,"name",void 0),T()(this,"sortable",void 0),T()(this,"filterable",void 0),T()(this,"esTypes",void 0),this.name=e.name||s.UNKNOWN,this.sortable=e.sortable||!1,this.filterable=e.filterable||!1,this.esTypes=Object.freeze((e.esTypes||[]).slice())}}const E=new kbn_field_type_KbnFieldType({name:s.UNKNOWN}),l=[new kbn_field_type_KbnFieldType({name:s.STRING,sortable:!0,filterable:!0,esTypes:[i.STRING,i.TEXT,i.MATCH_ONLY_TEXT,i.KEYWORD,i.VERSION,i._TYPE,i._ID]}),new kbn_field_type_KbnFieldType({name:s.NUMBER,sortable:!0,filterable:!0,esTypes:[i.FLOAT,i.HALF_FLOAT,i.SCALED_FLOAT,i.DOUBLE,i.INTEGER,i.LONG,i.UNSIGNED_LONG,i.SHORT,i.BYTE,i.TOKEN_COUNT,i.AGGREGATE_METRIC_DOUBLE]}),new kbn_field_type_KbnFieldType({name:s.NUMBER_RANGE,sortable:!0,filterable:!0,esTypes:[i.FLOAT_RANGE,i.DOUBLE_RANGE,i.INTEGER_RANGE,i.LONG_RANGE]}),new kbn_field_type_KbnFieldType({name:s.DATE,sortable:!0,filterable:!0,esTypes:[i.DATE,i.DATE_NANOS]}),new kbn_field_type_KbnFieldType({name:s.DATE_RANGE,sortable:!0,filterable:!0,esTypes:[i.DATE_RANGE]}),new kbn_field_type_KbnFieldType({name:s.IP,sortable:!0,filterable:!0,esTypes:[i.IP]}),new kbn_field_type_KbnFieldType({name:s.IP_RANGE,sortable:!0,filterable:!0,esTypes:[i.IP_RANGE]}),new kbn_field_type_KbnFieldType({name:s.BOOLEAN,sortable:!0,filterable:!0,esTypes:[i.BOOLEAN]}),new kbn_field_type_KbnFieldType({name:s.OBJECT,esTypes:[i.OBJECT]}),new kbn_field_type_KbnFieldType({name:s.NESTED,esTypes:[i.NESTED]}),new kbn_field_type_KbnFieldType({name:s.GEO_POINT,esTypes:[i.GEO_POINT]}),new kbn_field_type_KbnFieldType({name:s.GEO_SHAPE,esTypes:[i.GEO_SHAPE]}),new kbn_field_type_KbnFieldType({name:s.ATTACHMENT,esTypes:[i.ATTACHMENT]}),new kbn_field_type_KbnFieldType({name:s.MURMUR3,esTypes:[i.MURMUR3]}),new kbn_field_type_KbnFieldType({name:s._SOURCE,esTypes:[i._SOURCE]}),new kbn_field_type_KbnFieldType({name:s.HISTOGRAM,filterable:!0,esTypes:[i.HISTOGRAM]}),new kbn_field_type_KbnFieldType({name:s.CONFLICT}),E],a=e=>{const n=l.find((n=>n.esTypes.includes(e)));return n&&n.name?n.name:s.UNKNOWN};function r(e){switch(e){case i._INDEX:return s.STRING;case"_version":return s.NUMBER;case"datetime":return s.DATE;default:return a(e)}}},59:function(e,n,_){e.exports=_(6)(2)}}]);