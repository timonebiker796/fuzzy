"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultHandlers = exports.Render = void 0;
var _addonActions = require("@storybook/addon-actions");
var _react = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const defaultHandlers = exports.defaultHandlers = {
  destroy: () => (0, _addonActions.action)('destroy'),
  getElementId: () => 'element-id',
  getFilter: () => 'filter',
  getRenderMode: () => 'view',
  isSyncColorsEnabled: () => false,
  isSyncCursorEnabled: () => true,
  isSyncTooltipsEnabled: () => false,
  isInteractive: () => true,
  onComplete: fn => undefined,
  onEmbeddableDestroyed: (0, _addonActions.action)('onEmbeddableDestroyed'),
  onEmbeddableInputChange: (0, _addonActions.action)('onEmbeddableInputChange'),
  onResize: (0, _addonActions.action)('onResize'),
  resize: (0, _addonActions.action)('resize'),
  done: (0, _addonActions.action)('done'),
  onDestroy: (0, _addonActions.action)('onDestroy'),
  reload: (0, _addonActions.action)('reload'),
  update: (0, _addonActions.action)('update'),
  event: (0, _addonActions.action)('event'),
  getExecutionContext: () => undefined
};

/*
  Uses a RenderDefinitionFactory and Config to render into an element.

  Intended to be used for stories for RenderDefinitionFactory
*/

const Render = ({
  renderer,
  config,
  ...rest
}) => {
  const {
    height,
    width,
    handlers
  } = {
    height: '200px',
    width: '200px',
    handlers: defaultHandlers,
    ...rest
  };
  const containerRef = (0, _react.useRef)(null);
  (0, _react.useEffect)(() => {
    if (renderer && containerRef.current !== null) {
      renderer().render(containerRef.current, config, handlers);
    }
  }, [renderer, config, handlers]);
  return /*#__PURE__*/_react.default.createElement("div", {
    style: {
      width,
      height
    },
    ref: containerRef
  }, ' ');
};
exports.Render = Render;