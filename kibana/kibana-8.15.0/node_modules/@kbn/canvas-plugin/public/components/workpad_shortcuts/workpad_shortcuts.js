"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WorkpadShortcuts = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _reactFastCompare = _interopRequireDefault(require("react-fast-compare"));
var _reactShortcuts = require("react-shortcuts");
var _is_text_input = require("../../lib/is_text_input");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

// @ts-expect-error no @types definition

class WorkpadShortcuts extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "_keyMap", {
      CUT: this.props.cutNodes,
      COPY: this.props.copyNodes,
      PASTE: this.props.pasteNodes,
      CLONE: this.props.cloneNodes,
      DELETE: this.props.deleteNodes,
      BRING_TO_FRONT: this.props.bringToFront,
      BRING_FORWARD: this.props.bringForward,
      SEND_BACKWARD: this.props.sendBackward,
      SEND_TO_BACK: this.props.sendToBack,
      GROUP: this.props.groupNodes,
      UNGROUP: this.props.ungroupNodes,
      SHIFT_UP: this.props.shiftUp,
      SHIFT_DOWN: this.props.shiftDown,
      SHIFT_LEFT: this.props.shiftLeft,
      SHIFT_RIGHT: this.props.shiftRight,
      NUDGE_UP: this.props.nudgeUp,
      NUDGE_DOWN: this.props.nudgeDown,
      NUDGE_LEFT: this.props.nudgeLeft,
      NUDGE_RIGHT: this.props.nudgeRight
    });
  }
  render() {
    return /*#__PURE__*/_react.default.createElement(_reactShortcuts.Shortcuts, {
      name: "ELEMENT",
      handler: (action, event) => {
        if (!(0, _is_text_input.isTextInput)(event.target) && typeof this._keyMap[action] === 'function') {
          event.preventDefault();
          this._keyMap[action]();
        }
      },
      targetNodeSelector: `body`,
      global: true
    });
  }
  shouldComponentUpdate(nextProps) {
    return !(0, _reactFastCompare.default)(nextProps, this.props);
  }
}
exports.WorkpadShortcuts = WorkpadShortcuts;