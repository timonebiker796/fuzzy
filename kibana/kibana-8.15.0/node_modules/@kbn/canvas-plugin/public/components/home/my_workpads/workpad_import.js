"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WorkpadImport = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _react = _interopRequireWildcard(require("react"));
var _reactRedux = require("react-redux");
var _app = require("../../../state/selectors/app");
var _hooks = require("../hooks");
var _workpad_import = require("./workpad_import.component");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const WorkpadImport = props => {
  const importWorkpad = (0, _hooks.useImportWorkpad)();
  const [uniqueKey, setUniqueKey] = (0, _react.useState)(Date.now());
  const {
    canUserWrite
  } = (0, _reactRedux.useSelector)(state => ({
    canUserWrite: (0, _app.canUserWrite)(state)
  }));
  const onImportWorkpad = files => {
    if (files) {
      importWorkpad(files[0]);
    }
    setUniqueKey(Date.now());
  };
  return /*#__PURE__*/_react.default.createElement(_workpad_import.WorkpadImport, (0, _extends2.default)({}, props, {
    uniqueKey,
    onImportWorkpad,
    canUserWrite
  }));
};
exports.WorkpadImport = WorkpadImport;