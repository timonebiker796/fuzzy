"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BorderForm = void 0;
Object.defineProperty(exports, "BorderStyle", {
  enumerable: true,
  get: function () {
    return _types.BorderStyle;
  }
});
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _eui = require("@elastic/eui");
var _color_picker_popover = require("../../../components/color_picker_popover");
var _types = require("../../../../types");
var _i18n = require("../../../../i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const {
  ContainerStyle: strings
} = _i18n.ArgTypesStrings;
const BorderForm = ({
  value = '',
  radius = '',
  onChange,
  colors
}) => {
  const [borderWidth = '', borderStyle = '', borderColor = ''] = value.split(' ');
  const borderStyleVal = (0, _types.isBorderStyle)(borderStyle) ? borderStyle : _types.BorderStyle.NONE;
  const borderWidthVal = borderWidth ? borderWidth.replace('px', '') : '';
  const radiusVal = typeof radius === 'string' ? radius.replace('px', '') : radius;
  const namedChange = name => val => {
    if (name === 'borderWidth') {
      return onChange('border', `${val}px ${borderStyle} ${borderColor}`);
    }
    if (name === 'borderStyle') {
      if (val === '') {
        return onChange('border', `0px`);
      }
      return onChange('border', `${borderWidth} ${val} ${borderColor}`);
    }
    if (name === 'borderRadius') {
      if (val === '') {
        return onChange('borderRadius', `0px`);
      }
      return onChange('borderRadius', `${val}px`);
    }
    onChange(name, val);
  };
  const borderColorChange = color => onChange('border', `${borderWidth} ${borderStyle} ${color}`);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "s"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: 2
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    label: strings.getThicknessLabel(),
    display: "rowCompressed"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFieldNumber, {
    compressed: true,
    value: Number(borderWidthVal),
    onChange: e => namedChange('borderWidth')(Number(e.target.value))
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: 3
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    label: strings.getStyleLabel(),
    display: "rowCompressed"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiSuperSelect, {
    compressed: true,
    valueOfSelected: borderStyleVal || 'none',
    options: Object.values(_types.BorderStyle).map(style => ({
      value: style,
      inputDisplay: /*#__PURE__*/_react.default.createElement("div", {
        style: {
          height: 16,
          border: `4px ${style}`
        }
      })
    })),
    onChange: namedChange('borderStyle')
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: 2
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    label: strings.getRadiusLabel(),
    display: "rowCompressed"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFieldNumber, {
    compressed: true,
    value: Number(radiusVal),
    onChange: e => namedChange('borderRadius')(e.target.value)
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: 1
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    display: "rowCompressed",
    label: strings.getColorLabel(),
    style: {
      fontSize: 0
    }
  }, /*#__PURE__*/_react.default.createElement(_color_picker_popover.ColorPickerPopover, {
    value: borderColor,
    onChange: borderColorChange,
    colors: colors,
    anchorPosition: "upCenter",
    ariaLabel: strings.getBorderTitle()
  }))));
};
exports.BorderForm = BorderForm;
BorderForm.propTypes = {
  value: _propTypes.default.string,
  radius: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  onChange: _propTypes.default.func.isRequired,
  colors: _propTypes.default.array.isRequired
};