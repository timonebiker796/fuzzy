"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WEB_APPLICATION_LABEL = exports.URL_LABEL = exports.UP_LABEL = exports.TRANSACTIONS_PER_MINUTE = exports.TBT_LABEL = exports.TAGS_LABEL = exports.SYSTEM_MEMORY_USAGE = exports.SYSTEM_CPU_USAGE = exports.STEP_NAME_LABEL = exports.STEP_DURATION_LABEL = exports.SINGLE_METRIC_LABEL = exports.SERVICE_VERSION = exports.SERVICE_TYPE_LABEL = exports.SERVICE_NAME_LABEL = exports.RESPONSE_LATENCY = exports.REQUEST_METHOD = exports.PORT_LABEL = exports.PINGS_LABEL = exports.PERF_DIST_LABEL = exports.PAGE_VIEWS_LABEL = exports.PAGE_LOAD_TIME_LABEL = exports.PAGES_LOADED_LABEL = exports.OS_PLATFORM = exports.OS_LABEL = exports.OBSERVER_LOCATION_LABEL = exports.NUMBER_OF_DEVICES = exports.NETWORK_TIMINGS_LABEL = exports.MONITOR_TYPE_LABEL = exports.MONITOR_STATUS_LABEL = exports.MONITOR_NAME_LABEL = exports.MONITOR_ID_LABEL = exports.MONITORS_DURATION_LABEL = exports.MOBILE_RESPONSE_LABEL = exports.MOBILE_APP = exports.METRIC_LABEL = exports.MESSAGE_LABEL = exports.MEMORY_USAGE_LABEL = exports.LOG_RATE = exports.LOCATION_LABEL = exports.LCP_LABEL = exports.LABELS_FIELD = exports.LABELS_BREAKDOWN = exports.KPI_OVER_TIME_LABEL = exports.KPI_LABEL = exports.K8S_POD_CPU_USAGE = exports.INP_LABEL = exports.HOST_OS = exports.HOST_NAME_LABEL = exports.HEATMAP_LABEL = exports.FID_LABEL = exports.FCP_LABEL = exports.EVENT_DATASET_LABEL = exports.ENVIRONMENT_LABEL = exports.DOWN_LABEL = exports.DOCUMENT_ONLOAD_LABEL = exports.DOCKER_CPU_USAGE = exports.DEVICE_MODEL = exports.DEVICE_LABEL = exports.DEVICE_DISTRIBUTION_LABEL = exports.DCL_LABEL = exports.CPU_USAGE = exports.CORE_WEB_VITALS_LABEL = exports.CONNECTION_TYPE = exports.CLS_LABEL = exports.CARRIER_NAME = exports.CARRIER_LOCATION = exports.BROWSER_VERSION_LABEL = exports.BROWSER_FAMILY_LABEL = exports.BACKEND_TIME_LABEL = exports.AGENT_TYPE_LABEL = exports.AGENT_HOST_LABEL = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const BROWSER_FAMILY_LABEL = exports.BROWSER_FAMILY_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.browserFamily', {
  defaultMessage: 'Browser family'
});
const BROWSER_VERSION_LABEL = exports.BROWSER_VERSION_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.browserVersion', {
  defaultMessage: 'Browser version'
});
const OS_LABEL = exports.OS_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.os', {
  defaultMessage: 'Operating system'
});
const LOCATION_LABEL = exports.LOCATION_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.location', {
  defaultMessage: 'Location'
});
const DEVICE_LABEL = exports.DEVICE_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.device', {
  defaultMessage: 'Device'
});
const OBSERVER_LOCATION_LABEL = exports.OBSERVER_LOCATION_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.obsLocation', {
  defaultMessage: 'Observer location'
});
const SERVICE_NAME_LABEL = exports.SERVICE_NAME_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.serviceName', {
  defaultMessage: 'Service name'
});
const SERVICE_TYPE_LABEL = exports.SERVICE_TYPE_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.serviceType', {
  defaultMessage: 'Service type'
});
const ENVIRONMENT_LABEL = exports.ENVIRONMENT_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.environment', {
  defaultMessage: 'Environment'
});
const EVENT_DATASET_LABEL = exports.EVENT_DATASET_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.eventDataset', {
  defaultMessage: 'Dataset'
});
const LCP_LABEL = exports.LCP_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.lcp', {
  defaultMessage: 'Largest contentful paint'
});
const FCP_LABEL = exports.FCP_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.fcp', {
  defaultMessage: 'First contentful paint'
});
const TBT_LABEL = exports.TBT_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.tbt', {
  defaultMessage: 'Total blocking time'
});
const FID_LABEL = exports.FID_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.fid', {
  defaultMessage: 'First input delay'
});
const INP_LABEL = exports.INP_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.inp', {
  defaultMessage: 'Interaction to next paint'
});
const CLS_LABEL = exports.CLS_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.cls', {
  defaultMessage: 'Cumulative layout shift'
});
const NETWORK_TIMINGS_LABEL = exports.NETWORK_TIMINGS_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.networkTimings', {
  defaultMessage: 'Network timings'
});
const DCL_LABEL = exports.DCL_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.dcl', {
  defaultMessage: 'DOM content loaded'
});
const DOCUMENT_ONLOAD_LABEL = exports.DOCUMENT_ONLOAD_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.onload', {
  defaultMessage: 'Document complete (onLoad)'
});
const BACKEND_TIME_LABEL = exports.BACKEND_TIME_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.backend', {
  defaultMessage: 'Backend time'
});
const PAGE_LOAD_TIME_LABEL = exports.PAGE_LOAD_TIME_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.pageLoadTime', {
  defaultMessage: 'Page load time'
});
const PAGE_VIEWS_LABEL = exports.PAGE_VIEWS_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.pageViews', {
  defaultMessage: 'Page views'
});
const PAGES_LOADED_LABEL = exports.PAGES_LOADED_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.pagesLoaded', {
  defaultMessage: 'Pages loaded'
});
const PINGS_LABEL = exports.PINGS_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.pings', {
  defaultMessage: 'Pings'
});
const MONITOR_ID_LABEL = exports.MONITOR_ID_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.monitorId', {
  defaultMessage: 'Monitor Id'
});
const MONITOR_STATUS_LABEL = exports.MONITOR_STATUS_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.monitorStatus', {
  defaultMessage: 'Monitor Status'
});
const AGENT_HOST_LABEL = exports.AGENT_HOST_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.agentHost', {
  defaultMessage: 'Agent host'
});
const AGENT_TYPE_LABEL = exports.AGENT_TYPE_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.agentType', {
  defaultMessage: 'Agent type'
});
const MESSAGE_LABEL = exports.MESSAGE_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.message', {
  defaultMessage: 'Message'
});
const HOST_NAME_LABEL = exports.HOST_NAME_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.hostName', {
  defaultMessage: 'Host name'
});
const MONITOR_NAME_LABEL = exports.MONITOR_NAME_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.monitorName', {
  defaultMessage: 'Monitor name'
});
const MONITOR_TYPE_LABEL = exports.MONITOR_TYPE_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.monitorType', {
  defaultMessage: 'Monitor type'
});
const PORT_LABEL = exports.PORT_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.port', {
  defaultMessage: 'Port'
});
const URL_LABEL = exports.URL_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.url', {
  defaultMessage: 'URL'
});
const TAGS_LABEL = exports.TAGS_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.tags', {
  defaultMessage: 'Tags'
});
const METRIC_LABEL = exports.METRIC_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.metric', {
  defaultMessage: 'Metric'
});
const LABELS_FIELD = exports.LABELS_FIELD = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.labels', {
  defaultMessage: 'Labels'
});
const LABELS_BREAKDOWN = exports.LABELS_BREAKDOWN = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.chooseField', {
  defaultMessage: 'Labels field'
});
const KPI_LABEL = exports.KPI_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.kpi', {
  defaultMessage: 'KPI'
});
const PERF_DIST_LABEL = exports.PERF_DIST_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.performanceDistribution', {
  defaultMessage: 'Performance distribution'
});
const CORE_WEB_VITALS_LABEL = exports.CORE_WEB_VITALS_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.coreWebVitals', {
  defaultMessage: 'Core web vitals'
});
const DEVICE_DISTRIBUTION_LABEL = exports.DEVICE_DISTRIBUTION_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.deviceDistribution', {
  defaultMessage: 'Device distribution'
});
const SINGLE_METRIC_LABEL = exports.SINGLE_METRIC_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.singleMetric', {
  defaultMessage: 'Single metric'
});
const HEATMAP_LABEL = exports.HEATMAP_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.heatMap', {
  defaultMessage: 'Heatmap'
});
const MOBILE_RESPONSE_LABEL = exports.MOBILE_RESPONSE_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.mobileResponse', {
  defaultMessage: 'Mobile response'
});
const MEMORY_USAGE_LABEL = exports.MEMORY_USAGE_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.memoryUsage', {
  defaultMessage: 'System memory usage'
});
const KPI_OVER_TIME_LABEL = exports.KPI_OVER_TIME_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.kpiOverTime', {
  defaultMessage: 'KPI over time'
});
const MONITORS_DURATION_LABEL = exports.MONITORS_DURATION_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.monitorDurationLabel', {
  defaultMessage: 'Monitor duration'
});
const STEP_DURATION_LABEL = exports.STEP_DURATION_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.stepDurationLabel', {
  defaultMessage: 'Step duration'
});
const STEP_NAME_LABEL = exports.STEP_NAME_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.stepNameLabel', {
  defaultMessage: 'Step name'
});
const WEB_APPLICATION_LABEL = exports.WEB_APPLICATION_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.webApplication', {
  defaultMessage: 'Web Application'
});
const UP_LABEL = exports.UP_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.upPings', {
  defaultMessage: 'Up Pings'
});
const DOWN_LABEL = exports.DOWN_LABEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.downPings', {
  defaultMessage: 'Down Pings'
});
const CARRIER_NAME = exports.CARRIER_NAME = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.carrierName', {
  defaultMessage: 'Carrier Name'
});
const REQUEST_METHOD = exports.REQUEST_METHOD = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.requestMethod', {
  defaultMessage: 'Request Method'
});
const CONNECTION_TYPE = exports.CONNECTION_TYPE = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.connectionType', {
  defaultMessage: 'Connection Type'
});
const HOST_OS = exports.HOST_OS = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.hostOS', {
  defaultMessage: 'Host OS'
});
const SERVICE_VERSION = exports.SERVICE_VERSION = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.serviceVersion', {
  defaultMessage: 'Service Version'
});
const OS_PLATFORM = exports.OS_PLATFORM = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.osPlatform', {
  defaultMessage: 'OS Platform'
});
const DEVICE_MODEL = exports.DEVICE_MODEL = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.deviceModel', {
  defaultMessage: 'Device Model'
});
const CARRIER_LOCATION = exports.CARRIER_LOCATION = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.carrierLocation', {
  defaultMessage: 'Carrier Location'
});
const RESPONSE_LATENCY = exports.RESPONSE_LATENCY = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.responseLatency', {
  defaultMessage: 'Latency'
});
const MOBILE_APP = exports.MOBILE_APP = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.mobileApp', {
  defaultMessage: 'Mobile App'
});
const SYSTEM_MEMORY_USAGE = exports.SYSTEM_MEMORY_USAGE = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.mobile.memoryUsage', {
  defaultMessage: 'System memory usage'
});
const CPU_USAGE = exports.CPU_USAGE = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.cpuUsage', {
  defaultMessage: 'CPU usage'
});
const SYSTEM_CPU_USAGE = exports.SYSTEM_CPU_USAGE = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.cpuUsage.system', {
  defaultMessage: 'System CPU usage'
});
const DOCKER_CPU_USAGE = exports.DOCKER_CPU_USAGE = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.cpuUsage.docker', {
  defaultMessage: 'Docker CPU usage'
});
const K8S_POD_CPU_USAGE = exports.K8S_POD_CPU_USAGE = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.cpuUsage.k8sDocker', {
  defaultMessage: 'K8s pod CPU usage'
});
const TRANSACTIONS_PER_MINUTE = exports.TRANSACTIONS_PER_MINUTE = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.transactionPerMinute', {
  defaultMessage: 'Throughput'
});
const NUMBER_OF_DEVICES = exports.NUMBER_OF_DEVICES = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.numberOfDevices', {
  defaultMessage: 'Number of Devices'
});
const LOG_RATE = exports.LOG_RATE = _i18n.i18n.translate('xpack.exploratoryView.expView.fieldLabels.logRate', {
  defaultMessage: 'Log rate'
});