"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Tooltip = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _tooltip_content = require("./tooltip_content");
var _skeleton = require("./skeleton");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const CaseTooltipComponent = /*#__PURE__*/_react.default.memo(props => {
  const {
    dataTestSubj,
    children,
    loading = false,
    className = '',
    content
  } = props;
  return /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
    "data-test-subj": dataTestSubj ? dataTestSubj : 'cases-components-tooltip',
    anchorClassName: className,
    content: loading ? /*#__PURE__*/_react.default.createElement(_skeleton.Skeleton, null) : /*#__PURE__*/_react.default.createElement(_tooltip_content.TooltipContent, content)
  }, /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children));
});
CaseTooltipComponent.displayName = 'Tooltip';
const Tooltip = exports.Tooltip = /*#__PURE__*/(0, _react.memo)(CaseTooltipComponent);