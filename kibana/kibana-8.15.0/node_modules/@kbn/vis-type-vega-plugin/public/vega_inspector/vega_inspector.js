"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getVegaInspectorView = exports.createInspectorAdapters = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _public = require("@kbn/kibana-react-plugin/public");
var _public2 = require("@kbn/inspector-plugin/public");
var _vega_adapter = require("./vega_adapter");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; } /*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
const VegaDataInspector = /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./vega_data_inspector'))));
const vegaDebugLabel = _i18n.i18n.translate('visTypeVega.inspector.vegaDebugLabel', {
  defaultMessage: 'Vega debug'
});
const getVegaInspectorView = dependencies => ({
  title: vegaDebugLabel,
  shouldShow(adapters) {
    return Boolean(adapters.vega);
  },
  component: props => /*#__PURE__*/_react.default.createElement(_public.KibanaContextProvider, {
    services: dependencies
  }, /*#__PURE__*/_react.default.createElement(_react.Suspense, {
    fallback: /*#__PURE__*/_react.default.createElement(_eui.EuiLoadingSpinner, null)
  }, /*#__PURE__*/_react.default.createElement(VegaDataInspector, props)))
});
exports.getVegaInspectorView = getVegaInspectorView;
const createInspectorAdapters = () => ({
  requests: new _public2.RequestAdapter(),
  vega: new _vega_adapter.VegaAdapter()
});
exports.createInspectorAdapters = createInspectorAdapters;