"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EmbeddableFunctions = EmbeddableFunctions;
var _react = _interopRequireWildcard(require("react"));
var _async_embeddable_component = require("../async_embeddable_component");
var _profiling_embeddable_provider = require("../profiling_embeddable_provider");
var _embeddable_functions_grid = require("./embeddable_functions_grid");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function EmbeddableFunctions({
  data,
  isLoading,
  rangeFrom,
  rangeTo,
  ...deps
}) {
  const totalSeconds = (0, _react.useMemo)(() => (rangeTo - rangeFrom) / 1000, [rangeFrom, rangeTo]);
  return /*#__PURE__*/_react.default.createElement(_profiling_embeddable_provider.ProfilingEmbeddableProvider, {
    deps: deps
  }, /*#__PURE__*/_react.default.createElement(_async_embeddable_component.AsyncEmbeddableComponent, {
    isLoading: isLoading
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: {
      width: '100%'
    }
  }, /*#__PURE__*/_react.default.createElement(_embeddable_functions_grid.EmbeddableFunctionsGrid, {
    data: data,
    totalSeconds: totalSeconds
  }))));
}