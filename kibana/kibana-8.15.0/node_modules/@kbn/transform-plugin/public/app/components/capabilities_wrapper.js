"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotAuthorizedSection = exports.CapabilitiesWrapper = void 0;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _to_array = require("../../../common/utils/to_array");
var _hooks = require("../hooks");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const NotAuthorizedSection = ({
  title,
  message
}) => /*#__PURE__*/_react.default.createElement(_eui.EuiEmptyPrompt, {
  iconType: "securityApp",
  title: /*#__PURE__*/_react.default.createElement("h2", null, title),
  body: /*#__PURE__*/_react.default.createElement("p", null, message)
});
exports.NotAuthorizedSection = NotAuthorizedSection;
const MissingCapabilities = () => /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
  justifyContent: "spaceAround"
}, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
  grow: false
}, /*#__PURE__*/_react.default.createElement(_eui.EuiPageTemplate.EmptyPrompt, {
  color: "danger"
}, /*#__PURE__*/_react.default.createElement(NotAuthorizedSection, {
  title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.transform.app.missingCapabilitiesTitle",
    defaultMessage: "Missing permission"
  }),
  message: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.transform.app.missingCapabilitiesDescription",
    defaultMessage: "You're missing permissions to use this section of Transforms."
  })
}))));
const CapabilitiesWrapper = ({
  children,
  requiredCapabilities
}) => {
  const capabilities = (0, _hooks.useTransformCapabilities)();
  const hasCapabilities = (0, _to_array.toArray)(requiredCapabilities).every(c => capabilities[c]);
  return hasCapabilities ? /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children) : /*#__PURE__*/_react.default.createElement(MissingCapabilities, null);
};
exports.CapabilitiesWrapper = CapabilitiesWrapper;