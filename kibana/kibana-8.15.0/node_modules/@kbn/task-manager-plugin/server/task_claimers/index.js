"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getEmptyClaimOwnershipResult = getEmptyClaimOwnershipResult;
exports.getTaskClaimer = getTaskClaimer;
var _strategy_default = require("./strategy_default");
var _strategy_mget = require("./strategy_mget");
var _config = require("../config");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

let WarnedOnInvalidClaimer = false;
function getTaskClaimer(logger, strategy) {
  switch (strategy) {
    case _config.CLAIM_STRATEGY_DEFAULT:
      return _strategy_default.claimAvailableTasksDefault;
    case _config.CLAIM_STRATEGY_MGET:
      return _strategy_mget.claimAvailableTasksMget;
  }
  if (!WarnedOnInvalidClaimer) {
    WarnedOnInvalidClaimer = true;
    logger.warn(`Unknown task claiming strategy "${strategy}", falling back to default`);
  }
  return _strategy_default.claimAvailableTasksDefault;
}
function getEmptyClaimOwnershipResult() {
  return {
    stats: {
      tasksUpdated: 0,
      tasksConflicted: 0,
      tasksClaimed: 0,
      tasksRejected: 0
    },
    docs: []
  };
}