"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HDFSDetails = void 0;
var _react = _interopRequireWildcard(require("react"));
var _i18nReact = require("@kbn/i18n-react");
var _eui = require("@elastic/eui");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const HDFSDetails = ({
  repository
}) => {
  const {
    settings
  } = repository;
  const {
    uri,
    path,
    loadDefaults,
    compress,
    chunkSize,
    readonly,
    maxSnapshotBytesPerSec,
    maxRestoreBytesPerSec,
    'security.principal': securityPrincipal,
    ...rest
  } = settings;
  const listItems = [{
    title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.snapshotRestore.repositoryDetails.typeHDFS.uriLabel",
      defaultMessage: "URI"
    }),
    description: uri || ''
  }, {
    title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.snapshotRestore.repositoryDetails.typeHDFS.pathLabel",
      defaultMessage: "Path"
    }),
    description: path || ''
  }];
  if (loadDefaults !== undefined) {
    listItems.push({
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.snapshotRestore.repositoryDetails.typeHDFS.loadDefaultsLabel",
        defaultMessage: "Load defaults"
      }),
      description: String(loadDefaults)
    });
  }
  if (compress !== undefined) {
    listItems.push({
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.snapshotRestore.repositoryDetails.typeHDFS.compressLabel",
        defaultMessage: "Snapshot compression"
      }),
      description: String(compress)
    });
  }
  if (chunkSize !== undefined) {
    listItems.push({
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.snapshotRestore.repositoryDetails.typeHDFS.chunkSizeLabel",
        defaultMessage: "Chunk size"
      }),
      description: String(chunkSize)
    });
  }
  if (maxSnapshotBytesPerSec !== undefined) {
    listItems.push({
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.snapshotRestore.repositoryDetails.typeHDFS.maxSnapshotBytesLabel",
        defaultMessage: "Max snapshot bytes per second"
      }),
      description: maxSnapshotBytesPerSec
    });
  }
  if (maxRestoreBytesPerSec !== undefined) {
    listItems.push({
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.snapshotRestore.repositoryDetails.typeHDFS.maxRestoreBytesLabel",
        defaultMessage: "Max restore bytes per second"
      }),
      description: maxRestoreBytesPerSec
    });
  }
  if (readonly !== undefined) {
    listItems.push({
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.snapshotRestore.repositoryDetails.typeHDFS.readonlyLabel",
        defaultMessage: "Read-only"
      }),
      description: String(readonly)
    });
  }
  if (securityPrincipal !== undefined) {
    listItems.push({
      title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
        id: "xpack.snapshotRestore.repositoryDetails.typeHDFS.securityPrincipalLabel",
        defaultMessage: "Security principal"
      }),
      description: securityPrincipal
    });
  }
  Object.keys(rest).forEach(key => {
    listItems.push({
      title: /*#__PURE__*/_react.default.createElement(_react.Fragment, null, key),
      description: String(settings[key])
    });
  });
  return /*#__PURE__*/_react.default.createElement(_react.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "s"
  }, /*#__PURE__*/_react.default.createElement("h3", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.snapshotRestore.repositoryDetails.settingsTitle",
    defaultMessage: "Settings"
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiDescriptionList, {
    textStyle: "reverse",
    listItems: listItems
  }));
};
exports.HDFSDetails = HDFSDetails;