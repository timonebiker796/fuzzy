"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PodMetricsTable = void 0;
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _react = _interopRequireWildcard(require("react"));
var _shared = require("../shared");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const PodMetricsTable = props => {
  const {
    data,
    isLoading,
    setCurrentPageIndex,
    setSortState,
    sortState,
    timerange
  } = props;
  const columns = (0, _react.useMemo)(() => podNodeColumns(timerange), [timerange]);
  const sorting = {
    enableAllColumns: true,
    sort: sortState
  };
  const onTableSortChange = ({
    sort = {
      direction: 'desc',
      field: 'averageCpuUsagePercent'
    }
  }) => {
    setSortState(sort);
    setCurrentPageIndex(0);
  };
  if (data.state === 'error') {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, data.errors.map(error => /*#__PURE__*/_react.default.createElement(_shared.MetricsTableErrorContent, {
      error: error
    })));
  } else if (isLoading && data.state !== 'data') {
    return /*#__PURE__*/_react.default.createElement(_shared.MetricsTableLoadingContent, null);
  } else if (data.state === 'no-indices') {
    return /*#__PURE__*/_react.default.createElement(_shared.MetricsTableNoIndicesContent, null);
  } else if (data.state === 'empty-indices') {
    return /*#__PURE__*/_react.default.createElement(_shared.MetricsTableEmptyIndicesContent, null);
  } else if (data.state === 'data') {
    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiBasicTable, {
      tableCaption: _i18n.i18n.translate('xpack.metricsData.metricsTable.pod.tableCaption', {
        defaultMessage: 'Infrastructure metrics for pods'
      }),
      items: data.rows,
      columns: columns,
      sorting: sorting,
      onChange: onTableSortChange,
      loading: isLoading,
      noItemsMessage: /*#__PURE__*/_react.default.createElement(_shared.MetricsTableLoadingContent, null),
      "data-test-subj": "podMetricsTable"
    }), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
      size: "s"
    }), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
      justifyContent: "flexEnd",
      alignItems: "center",
      responsive: false,
      wrap: true
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
      grow: false
    }, /*#__PURE__*/_react.default.createElement(_shared.StepwisePagination, {
      ariaLabel: _i18n.i18n.translate('xpack.metricsData.metricsTable.pod.paginationAriaLabel', {
        defaultMessage: 'Pod metrics pagination'
      }),
      pageCount: data.pageCount,
      currentPageIndex: data.currentPageIndex,
      setCurrentPageIndex: setCurrentPageIndex,
      "data-test-subj": "podMetricsTablePagination"
    }))));
  } else {
    return null;
  }
};
exports.PodMetricsTable = PodMetricsTable;
function podNodeColumns(timerange) {
  return [{
    name: _i18n.i18n.translate('xpack.metricsData.metricsTable.pod.nameColumnHeader', {
      defaultMessage: 'Name'
    }),
    field: 'name',
    truncateText: true,
    textOnly: true,
    render: (_, {
      id,
      name
    }) => {
      return /*#__PURE__*/_react.default.createElement(_shared.MetricsNodeDetailsLink, {
        id: id,
        label: name,
        nodeType: 'pod',
        timerange: timerange
      });
    }
  }, {
    name: _i18n.i18n.translate('xpack.metricsData.metricsTable.pod.averageCpuUsagePercentColumnHeader', {
      defaultMessage: 'CPU usage (avg.)'
    }),
    field: 'averageCpuUsagePercent',
    align: 'right',
    render: averageCpuUsagePercent => /*#__PURE__*/_react.default.createElement(_shared.NumberCell, {
      value: averageCpuUsagePercent,
      unit: "%"
    })
  }, {
    name: _i18n.i18n.translate('xpack.metricsData.metricsTable.pod.averageMemoryUsageMegabytesColumnHeader', {
      defaultMessage: 'Memory usage (avg.)'
    }),
    field: 'averageMemoryUsageMegabytes',
    align: 'right',
    render: averageMemoryUsageMegabytes => /*#__PURE__*/_react.default.createElement(_shared.NumberCell, {
      value: averageMemoryUsageMegabytes,
      unit: " MB"
    })
  }];
}