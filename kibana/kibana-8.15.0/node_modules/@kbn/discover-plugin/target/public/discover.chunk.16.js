(window.discover_bundle_jsonpfunction=window.discover_bundle_jsonpfunction||[]).push([[16],{224:function(e,t,r){"use strict";r.d(t,"a",(function(){return i})),r.d(t,"b",(function(){return s}));var o=r(68);function i(e){var t;const{ast:r}=Object(o.getAstAndSyntaxErrors)(e),i=r.find((({name:e})=>["from","metrics"].includes(e))),s=(null!==(t=null==i?void 0:i.args)&&void 0!==t?t:[]).filter((e=>"index"===e.sourceType));return null==s?void 0:s.map((e=>e.text)).join(",")}function s(e){const{ast:t}=Object(o.getAstAndSyntaxErrors)(e);if(["stats","keep"].some((e=>t.find((({name:t})=>t===e)))))return!0;const r=t.find((({name:e})=>"metrics"===e));return!(!r||!("aggregates"in r))}},466:function(e,t,r){"use strict";r.r(t),r.d(t,"registerProfileProviders",(function(){return S}));var o=r(5),i=r(3),s=r(22),a=r(10),n=r(224),l=r(60),c=(r(1),r(6)),d=r(28);const u={profileId:"example-data-source-profile",profile:{getCellRenderers:e=>()=>({...e(),"log.level":e=>{const t=f(e.row,"log.level");return t?Object(i.jsx)(s.EuiBadge,{color:{info:"primary",debug:"default",error:"danger"}[t],title:t,"data-test-subj":"exampleDataSourceProfileLogLevel"},Object(o.capitalize)(t)):Object(i.jsx)("span",{css:Object(i.css)({color:l.euiThemeVars.euiTextSubduedColor},"",""),"data-test-subj":"exampleDataSourceProfileLogLevelEmpty"},"(None)")}}),getDocViewer:e=>t=>{const r=t.record.id,o=e(t);return{title:`Record #${r}`,docViewsRegistry:e=>(e.enableById("doc_view_logs_overview"),o.docViewsRegistry(e))}}},resolve:e=>{let t;if(Object(c.d)(e.dataSource,c.a.Esql)){if(!Object(a.isOfAggregateQueryType)(e.query))return{isMatch:!1};t=Object(n.a)(e.query.esql)}else Object(c.d)(e.dataSource,c.a.DataView)&&e.dataView&&(t=e.dataView.getIndexPattern());return"my-example-logs"!==t?{isMatch:!1}:{isMatch:!0,context:{category:d.a.Logs}}}},f=(e,t)=>{const r=e.flattened[t];return Array.isArray(r)?r[0]:r},g={profileId:"example-document-profile",profile:{},resolve:e=>"logs"!==p(e.record,"data_stream.type")?{isMatch:!1}:{isMatch:!0,context:{type:d.d.Log}}},p=(e,t)=>{const r=e.flattened[t];return Array.isArray(r)?r[0]:r},v={profileId:"example-root-profile",profile:{getCellRenderers:e=>()=>({...e(),"@timestamp":e=>{const t=b(e.row,"@timestamp");return Object(i.jsx)(s.EuiBadge,{color:"hollow",title:t,"data-test-subj":"exampleRootProfileTimestamp"},t)}})},resolve:e=>null!=e.solutionNavId?{isMatch:!1}:{isMatch:!0,context:{solutionType:d.f.Default}}},b=(e,t)=>{const r=e.flattened[t];return Array.isArray(r)?r[0]:r},y=e=>t=>{const r=t.flattened[e];return Array.isArray(r)?r:[r]},m=y("data_stream.type"),x=y("_index"),j=e=>t=>Object.keys(t.flattened).some((t=>t.startsWith(e))),P=e=>{const t=`[^,\\s]*(\\b|_)(${(Array.isArray(e)?e:[e]).join("|")})(\\b|_)([^,\\s]*)?`,r=`((${t})|([^:,\\s]*:${t}))`;return new RegExp(`^${r}(,${r})*(,$|$)`,"i")},I=["log","logs","logstash","auditbeat","filebeat","winlogbeat"],O=(e={})=>{const t=[P(I)];return{isLogsIndexPattern:e=>{return"string"==typeof e&&(r=t,e=>{for(const t of r){const r="string"==typeof t&&e===t,o=t instanceof RegExp&&t.test(e);if(r||o)return!0}return!1})(e);var r}}},S=({rootProfileService:e,dataSourceProfileService:t,documentProfileService:r,experimentalProfileIds:i})=>{const s={logsContextService:O()},l=(f=s,{profileId:"logs-data-source-profile",profile:{},resolve:e=>{const t=(({dataSource:e,dataView:t,query:r})=>Object(c.f)(e)&&Object(a.isOfAggregateQueryType)(r)?Object(n.a)(r.esql):Object(c.e)(e)&&t?t.getIndexPattern():null)(e);return f.logsContextService.isLogsIndexPattern(t)?{isMatch:!0,context:{category:d.a.Logs}}:{isMatch:!1}}});var f;const p=(e=>({profileId:"log-document-profile",profile:{},resolve:({record:t})=>((e,t)=>m(e).includes("logs")||j("log.")(e)||x(e).some(t))(t,e.logsContextService.isLogsIndexPattern)?{isMatch:!0,context:{type:d.d.Log}}:{isMatch:!1}}))(s),b=[v],y=[u,l],P=[g,p],I=Object(o.uniq)([l.profileId,p.profileId,...i]);w({profileService:e,availableProviders:b,enabledProfileIds:I}),w({profileService:t,availableProviders:y,enabledProfileIds:I}),w({profileService:r,availableProviders:P,enabledProfileIds:I})},w=({profileService:e,availableProviders:t,enabledProfileIds:r})=>{for(const o of t)r.includes(o.profileId)&&e.registerProvider(o)}}}]);