"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PatternAnalysisTab = void 0;
var _react = _interopRequireWildcard(require("react"));
var _use_query_subscriber = require("@kbn/unified-field-list/src/hooks/use_query_subscriber");
var _discover_state_provider = require("../../state_management/discover_state_provider");
var _pattern_analysis_table = require("./pattern_analysis_table");
var _use_discover_services = require("../../../../hooks/use_discover_services");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const PatternAnalysisTab = exports.PatternAnalysisTab = /*#__PURE__*/(0, _react.memo)(props => {
  const services = (0, _use_discover_services.useDiscoverServices)();
  const querySubscriberResult = (0, _use_query_subscriber.useQuerySubscriber)({
    data: services.data
  });
  const savedSearch = (0, _discover_state_provider.useSavedSearch)();
  return /*#__PURE__*/_react.default.createElement(_pattern_analysis_table.PatternAnalysisTable, {
    dataView: props.dataView,
    filters: querySubscriberResult.filters,
    query: querySubscriberResult.query,
    switchToDocumentView: props.switchToDocumentView,
    savedSearch: savedSearch,
    stateContainer: props.stateContainer,
    trackUiMetric: props.trackUiMetric,
    renderViewModeToggle: props.renderViewModeToggle
  });
});