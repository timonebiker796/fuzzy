"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldStatisticsTab = void 0;
var _react = _interopRequireDefault(require("react"));
var _use_query_subscriber = require("@kbn/unified-field-list/src/hooks/use_query_subscriber");
var _field_stats_table = require("./field_stats_table");
var _use_discover_services = require("../../../../hooks/use_discover_services");
var _use_additional_field_groups = require("../../hooks/sidebar/use_additional_field_groups");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const FieldStatisticsTab = exports.FieldStatisticsTab = /*#__PURE__*/_react.default.memo(props => {
  const services = (0, _use_discover_services.useDiscoverServices)();
  const {
    query,
    filters
  } = (0, _use_query_subscriber.useQuerySubscriber)({
    data: services.data
  });
  const additionalFieldGroups = (0, _use_additional_field_groups.useAdditionalFieldGroups)();
  if (!services.dataVisualizer) return null;
  return /*#__PURE__*/_react.default.createElement(_field_stats_table.FieldStatisticsTable, {
    dataView: props.dataView,
    columns: props.columns,
    stateContainer: props.stateContainer,
    onAddFilter: props.onAddFilter,
    trackUiMetric: props.trackUiMetric,
    isEsqlMode: props.isEsqlMode,
    query: query,
    filters: filters,
    additionalFieldGroups: additionalFieldGroups
  });
});