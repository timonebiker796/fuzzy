"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DiscoverDocTableEmbeddable = DiscoverDocTableEmbeddable;
var _react = _interopRequireDefault(require("react"));
var _doc_table_embeddable = require("./doc_table_embeddable");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

function DiscoverDocTableEmbeddable(renderProps) {
  return /*#__PURE__*/_react.default.createElement(_doc_table_embeddable.DocTableEmbeddable, {
    columns: renderProps.columns,
    rows: renderProps.rows,
    rowsPerPageState: renderProps.rowsPerPageState,
    sampleSizeState: renderProps.sampleSizeState,
    onUpdateRowsPerPage: renderProps.onUpdateRowsPerPage,
    totalHitCount: renderProps.totalHitCount,
    dataView: renderProps.dataView,
    onSort: renderProps.onSort,
    onAddColumn: renderProps.onAddColumn,
    onMoveColumn: renderProps.onMoveColumn,
    onRemoveColumn: renderProps.onRemoveColumn,
    sort: renderProps.sort,
    filters: renderProps.filters,
    onFilter: renderProps.onFilter,
    useNewFieldsApi: renderProps.useNewFieldsApi,
    searchDescription: renderProps.searchDescription,
    sharedItemTitle: renderProps.sharedItemTitle,
    isLoading: renderProps.isLoading,
    isEsqlMode: renderProps.isEsqlMode,
    interceptedWarnings: renderProps.interceptedWarnings
  });
}