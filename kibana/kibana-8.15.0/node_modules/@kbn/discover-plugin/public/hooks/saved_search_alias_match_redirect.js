"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useSavedSearchAliasMatchRedirect = void 0;
var _react = require("react");
var _i18n = require("@kbn/i18n");
var _public = require("@kbn/saved-search-plugin/public");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const useSavedSearchAliasMatchRedirect = ({
  savedSearch,
  spaces,
  history
}) => {
  (0, _react.useEffect)(() => {
    async function aliasMatchRedirect() {
      if (savedSearch) {
        var _savedSearch$sharingS;
        const sharingSavedObjectProps = (_savedSearch$sharingS = savedSearch.sharingSavedObjectProps) !== null && _savedSearch$sharingS !== void 0 ? _savedSearch$sharingS : {};
        const {
          outcome,
          aliasPurpose,
          aliasTargetId
        } = sharingSavedObjectProps;
        if (spaces && aliasTargetId && outcome === 'aliasMatch') {
          await spaces.ui.redirectLegacyUrl({
            path: `${(0, _public.getSavedSearchUrl)(aliasTargetId)}${history.location.search}`,
            aliasPurpose,
            objectNoun: _i18n.i18n.translate('discover.savedSearchAliasMatchRedirect.objectNoun', {
              defaultMessage: '{savedSearch} search',
              values: {
                savedSearch: savedSearch.title
              }
            })
          });
        }
      }
    }
    aliasMatchRedirect();
  }, [savedSearch, spaces, history]);
};
exports.useSavedSearchAliasMatchRedirect = useSavedSearchAliasMatchRedirect;