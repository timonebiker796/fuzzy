"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.indexLifecycleTab = exports.IndexLifecycleSummary = void 0;
var _react = _interopRequireDefault(require("react"));
var _momentTimezone = _interopRequireDefault(require("moment-timezone"));
var _i18n = require("@kbn/i18n");
var _i18nReact = require("@kbn/i18n-react");
var _react2 = require("@emotion/react");
var _eui = require("@elastic/eui");
var _uiTheme = require("@kbn/ui-theme");
var _navigation = require("../../application/services/navigation");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const phaseToBadgeMapping = {
  hot: {
    color: _uiTheme.euiThemeVars.euiColorVis9,
    label: 'Hot'
  },
  warm: {
    color: _uiTheme.euiThemeVars.euiColorVis5,
    label: 'Warm'
  },
  cold: {
    color: _uiTheme.euiThemeVars.euiColorVis1,
    label: 'Cold'
  },
  frozen: {
    color: _uiTheme.euiThemeVars.euiColorVis4,
    label: 'Frozen'
  },
  delete: {
    color: 'default',
    label: 'Delete'
  }
};
const IndexLifecycleSummary = ({
  index,
  getUrlForApp
}) => {
  var _phaseToBadgeMapping;
  const {
    ilm: ilmData
  } = index;
  // only ILM managed indices render the ILM tab
  const ilm = ilmData;

  // if ilm.phase is an unexpected value, then display a default badge
  const phaseBadgeConfig = (_phaseToBadgeMapping = phaseToBadgeMapping[ilm.phase]) !== null && _phaseToBadgeMapping !== void 0 ? _phaseToBadgeMapping : {
    color: 'default',
    label: ilm.phase
  };
  const lifecycleProperties = [{
    title: _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.headers.policyNameTitle', {
      defaultMessage: 'Policy name'
    }),
    description: ilm.policy
  }, {
    title: _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.headers.currentPhaseTitle', {
      defaultMessage: 'Current phase'
    }),
    description: /*#__PURE__*/_react.default.createElement(_eui.EuiBadge, {
      color: phaseBadgeConfig.color
    }, phaseBadgeConfig.label)
  }];
  if (ilm.action) {
    lifecycleProperties.push({
      title: _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.headers.currentActionTitle', {
        defaultMessage: 'Current action'
      }),
      description: /*#__PURE__*/_react.default.createElement(_eui.EuiCode, null, ilm.action)
    });
  }
  if (ilm.action_time_millis) {
    lifecycleProperties.push({
      title: _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.headers.currentActionTimeTitle', {
        defaultMessage: 'Current action time'
      }),
      description: (0, _momentTimezone.default)(ilm.action_time_millis).format('YYYY-MM-DD HH:mm:ss')
    });
  }
  if (ilm.step) {
    lifecycleProperties.push({
      title: _i18n.i18n.translate('xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.headers.currentStepTitle', {
        defaultMessage: 'Current step'
      }),
      description: /*#__PURE__*/_react.default.createElement(_eui.EuiCode, null, ilm.step)
    });
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    wrap: true
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: 1,
    css: (0, _react2.css)`
            min-width: 400px;
          `
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, {
    hasBorder: true,
    grow: false,
    "data-test-subj": "policyPropertiesPanel"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    alignItems: "center",
    justifyContent: "spaceBetween"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h3", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    defaultMessage: "Lifecycle policy",
    id: "xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.policyCardTitle"
  })))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiLink, {
    color: "primary",
    href: getUrlForApp('management', {
      path: `data/index_lifecycle_management/${(0, _navigation.getPolicyEditPath)(ilm.policy)}`
    }),
    target: "_blank"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    defaultMessage: "Edit policy in ILM",
    id: "xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.ilmLinkLabel"
  })))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, null), /*#__PURE__*/_react.default.createElement(_eui.EuiDescriptionList, {
    rowGutterSize: "m",
    type: "responsiveColumn",
    columnWidths: [1, 1],
    listItems: lifecycleProperties
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: 3,
    css: (0, _react2.css)`
            min-width: 600px;
          `
  }, ilm.step_info && ilm.step === 'ERROR' &&
  /*#__PURE__*/
  // there is an error
  _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, {
    color: "danger",
    hasBorder: true,
    grow: false,
    "data-test-subj": "policyErrorPanel"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h3", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    defaultMessage: "Lifecycle error",
    id: "xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.lifecycleErrorTitle"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, null), /*#__PURE__*/_react.default.createElement(_eui.EuiCodeBlock, {
    language: "json",
    isCopyable: true
  }, JSON.stringify({
    failed_step: ilm.failed_step,
    step_info: ilm.step_info
  }, null, 2)))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, null)), ilm.step_info && ilm.step !== 'ERROR' &&
  /*#__PURE__*/
  // ILM is waiting for the step to complete
  _react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, {
    hasBorder: true,
    grow: false,
    "data-test-subj": "policyStepPanel"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h3", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    defaultMessage: "Current step info",
    id: "xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.stepInfoTitle"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, null), /*#__PURE__*/_react.default.createElement(_eui.EuiCodeBlock, {
    language: "json",
    isCopyable: true
  }, JSON.stringify(ilm.step_info, null, 2)))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, null)), ilm.phase_execution && /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, {
    hasBorder: true,
    grow: false,
    "data-test-subj": "phaseDefinitionPanel"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h3", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    defaultMessage: "Current phase definition",
    id: "xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.phaseDefinitionTitle"
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, null), /*#__PURE__*/_react.default.createElement(_eui.EuiCodeBlock, {
    language: "json",
    isCopyable: true
  }, JSON.stringify(ilm.phase_execution, null, 2))))));
};
exports.IndexLifecycleSummary = IndexLifecycleSummary;
const indexLifecycleTab = exports.indexLifecycleTab = {
  id: 'ilm',
  name: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    defaultMessage: "Index lifecycle",
    id: "xpack.indexLifecycleMgmt.indexLifecycleMgmtSummary.tabHeaderLabel"
  }),
  order: 50,
  renderTabContent: IndexLifecycleSummary,
  shouldRenderTab: ({
    index
  }) => {
    return !!index.ilm && index.ilm.managed;
  }
};