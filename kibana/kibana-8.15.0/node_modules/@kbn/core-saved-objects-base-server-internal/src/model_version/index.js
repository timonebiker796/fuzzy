"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "aggregateMappingAdditions", {
  enumerable: true,
  get: function () {
    return _aggregate_model_changes.aggregateMappingAdditions;
  }
});
Object.defineProperty(exports, "assertValidModelVersion", {
  enumerable: true,
  get: function () {
    return _conversion.assertValidModelVersion;
  }
});
Object.defineProperty(exports, "buildModelVersionTransformFn", {
  enumerable: true,
  get: function () {
    return _build_transform_fn.buildModelVersionTransformFn;
  }
});
Object.defineProperty(exports, "compareVirtualVersions", {
  enumerable: true,
  get: function () {
    return _version_compare.compareVirtualVersions;
  }
});
Object.defineProperty(exports, "convertModelVersionBackwardConversionSchema", {
  enumerable: true,
  get: function () {
    return _backward_conversion_schema.convertModelVersionBackwardConversionSchema;
  }
});
Object.defineProperty(exports, "getCurrentVirtualVersion", {
  enumerable: true,
  get: function () {
    return _version_map.getCurrentVirtualVersion;
  }
});
Object.defineProperty(exports, "getLatestMappingsVirtualVersionMap", {
  enumerable: true,
  get: function () {
    return _version_map.getLatestMappingsVirtualVersionMap;
  }
});
Object.defineProperty(exports, "getLatestMigrationVersion", {
  enumerable: true,
  get: function () {
    return _version_map.getLatestMigrationVersion;
  }
});
Object.defineProperty(exports, "getLatestModelVersion", {
  enumerable: true,
  get: function () {
    return _version_map.getLatestModelVersion;
  }
});
Object.defineProperty(exports, "getModelVersionDelta", {
  enumerable: true,
  get: function () {
    return _get_version_delta.getModelVersionDelta;
  }
});
Object.defineProperty(exports, "getModelVersionMapForTypes", {
  enumerable: true,
  get: function () {
    return _version_map.getModelVersionMapForTypes;
  }
});
Object.defineProperty(exports, "getVersionAddedFields", {
  enumerable: true,
  get: function () {
    return _version_mapping_changes.getVersionAddedFields;
  }
});
Object.defineProperty(exports, "getVersionAddedMappings", {
  enumerable: true,
  get: function () {
    return _version_mapping_changes.getVersionAddedMappings;
  }
});
Object.defineProperty(exports, "getVirtualVersionMap", {
  enumerable: true,
  get: function () {
    return _version_map.getVirtualVersionMap;
  }
});
Object.defineProperty(exports, "getVirtualVersionsFromMappingMeta", {
  enumerable: true,
  get: function () {
    return _model_version_from_mappings.getVirtualVersionsFromMappingMeta;
  }
});
Object.defineProperty(exports, "getVirtualVersionsFromMappings", {
  enumerable: true,
  get: function () {
    return _model_version_from_mappings.getVirtualVersionsFromMappings;
  }
});
Object.defineProperty(exports, "globalSwitchToModelVersionAt", {
  enumerable: true,
  get: function () {
    return _constants.globalSwitchToModelVersionAt;
  }
});
Object.defineProperty(exports, "isVirtualModelVersion", {
  enumerable: true,
  get: function () {
    return _conversion.isVirtualModelVersion;
  }
});
Object.defineProperty(exports, "modelVersionToVirtualVersion", {
  enumerable: true,
  get: function () {
    return _conversion.modelVersionToVirtualVersion;
  }
});
Object.defineProperty(exports, "modelVersionVirtualMajor", {
  enumerable: true,
  get: function () {
    return _constants.modelVersionVirtualMajor;
  }
});
Object.defineProperty(exports, "virtualVersionToModelVersion", {
  enumerable: true,
  get: function () {
    return _conversion.virtualVersionToModelVersion;
  }
});
var _constants = require("./constants");
var _conversion = require("./conversion");
var _version_map = require("./version_map");
var _version_compare = require("./version_compare");
var _model_version_from_mappings = require("./model_version_from_mappings");
var _get_version_delta = require("./get_version_delta");
var _build_transform_fn = require("./build_transform_fn");
var _aggregate_model_changes = require("./aggregate_model_changes");
var _backward_conversion_schema = require("./backward_conversion_schema");
var _version_mapping_changes = require("./version_mapping_changes");