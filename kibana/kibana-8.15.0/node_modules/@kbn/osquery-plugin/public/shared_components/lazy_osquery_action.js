"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLazyOsqueryAction = void 0;
var _react = _interopRequireWildcard(require("react"));
var _services_wrapper = _interopRequireDefault(require("./services_wrapper"));
var _contexts = require("../common/contexts");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; } /*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */
const OsqueryAction = /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./osquery_action'))));
const getLazyOsqueryAction = services =>
// eslint-disable-next-line react/display-name
props => {
  const {
    ecsData,
    ...restProps
  } = props;
  const renderAction = (0, _react.useMemo)(() => {
    if (ecsData && ecsData !== null && ecsData !== void 0 && ecsData._id) {
      return /*#__PURE__*/_react.default.createElement(_contexts.AlertAttachmentContext.Provider, {
        value: ecsData
      }, /*#__PURE__*/_react.default.createElement(OsqueryAction, restProps));
    }
    return /*#__PURE__*/_react.default.createElement(OsqueryAction, restProps);
  }, [ecsData, restProps]);
  return /*#__PURE__*/_react.default.createElement(_react.Suspense, {
    fallback: null
  }, /*#__PURE__*/_react.default.createElement(_services_wrapper.default, {
    services: services
  }, renderAction));
};
exports.getLazyOsqueryAction = getLazyOsqueryAction;