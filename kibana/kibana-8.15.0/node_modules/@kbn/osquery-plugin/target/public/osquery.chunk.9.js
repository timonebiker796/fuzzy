/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.osquery_bundle_jsonpfunction=window.osquery_bundle_jsonpfunction||[]).push([[9],{200:function(e,t,a){"use strict";a.r(t),a.d(t,"OsqueryActionResult",(function(){return m})),a.d(t,"default",(function(){return q}));var n=a(2),s=a(0),r=a.n(s),u=a(15),l=a(6),i=a(31),o=a(11),c=a(28),d=a(4),g=a(23),f=a(22),p=a(77),x=a(67),b=a(74),y=a(1);const j=r.a.memo((({actionId:e,ruleName:t,startDate:a,ecsData:r})=>{const{read:l}=Object(d.e)().services.application.capabilities.osquery,[i,o]=Object(s.useState)(!1),{data:g}=Object(b.a)({actionId:e,isLive:i,skip:!l});return Object(s.useEffect)((()=>{o((()=>!("completed"===(null==g?void 0:g.status))))}),[null==g?void 0:g.status]),Object(y.jsx)(f.a.Provider,{value:r},Object(y.jsx)(n.EuiComment,{username:t,timestamp:Object(y.jsx)(u.FormattedRelative,{value:a}),event:x.e,"data-test-subj":"osquery-results-comment"},l?Object(y.jsx)(p.a,{actionId:e,data:null==g?void 0:g.queries,startDate:null==g?void 0:g["@timestamp"],expirationDate:null==g?void 0:g.expiration,agentIds:null==g?void 0:g.agents}):Object(y.jsx)(c.a,null)))})),m=r.a.memo(j),v=({services:e,...t})=>Object(y.jsx)(i.a,e,Object(y.jsx)(l.KibanaContextProvider,{services:e},Object(y.jsx)(o.QueryClientProvider,{client:g.a},Object(y.jsx)(m,t)))),q=r.a.memo(v)},67:function(e,t,a){"use strict";a.d(t,"h",(function(){return s})),a.d(t,"d",(function(){return r})),a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return l})),a.d(t,"c",(function(){return i})),a.d(t,"f",(function(){return o})),a.d(t,"g",(function(){return c})),a.d(t,"e",(function(){return d}));var n=a(7);const s=e=>0===e?"":1===e?n.i18n.translate("xpack.osquery.agents.oneSelectedAgentText",{defaultMessage:"{numAgents} agent selected.",values:{numAgents:e}}):n.i18n.translate("xpack.osquery.agents.mulitpleSelectedAgentsText",{defaultMessage:"{numAgents} agents selected.",values:{numAgents:e}}),r=n.i18n.translate("xpack.osquery.agents.allAgentsLabel",{defaultMessage:"All agents"}),u=n.i18n.translate("xpack.osquery.agents.platformLabel",{defaultMessage:"Platform"}),l=n.i18n.translate("xpack.osquery.agents.policyLabel",{defaultMessage:"Policy"}),i=(n.i18n.translate("xpack.osquery.agents.agent",{defaultMessage:"Agent"}),n.i18n.translate("xpack.osquery.agents.selectionLabel",{defaultMessage:"Agents"})),o=n.i18n.translate("xpack.osquery.agents.noAgentAvailableTitle",{defaultMessage:"No agents available"}),c=(n.i18n.translate("xpack.osquery.agents.query",{defaultMessage:"Query"}),n.i18n.translate("xpack.osquery.agents.selectAgentLabel",{defaultMessage:"Select agents or groups to query"})),d=(n.i18n.translate("xpack.osquery.agents.errorSearchDescription",{defaultMessage:"An error has occurred on all agents search"}),n.i18n.translate("xpack.osquery.agents.failSearchDescription",{defaultMessage:"Failed to fetch agents"}),n.i18n.translate("xpack.osquery.agent.attachedQuery",{defaultMessage:"attached query"}))}}]);