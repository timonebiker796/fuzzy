"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.EXPRESSIONS_LANGUAGE_ID = void 0;
Object.defineProperty(exports, "LABS_PROJECT_PREFIX", {
  enumerable: true,
  get: function () {
    return _labs.LABS_PROJECT_PREFIX;
  }
});
exports.PLUGIN_NAME = exports.PLUGIN_ID = void 0;
Object.defineProperty(exports, "defaultTheme$", {
  enumerable: true,
  get: function () {
    return _lib.defaultTheme$;
  }
});
Object.defineProperty(exports, "encode", {
  enumerable: true,
  get: function () {
    return _lib.encode;
  }
});
Object.defineProperty(exports, "environmentNames", {
  enumerable: true,
  get: function () {
    return _labs.environmentNames;
  }
});
Object.defineProperty(exports, "getElasticLogo", {
  enumerable: true,
  get: function () {
    return _lib.getElasticLogo;
  }
});
Object.defineProperty(exports, "getElasticOutline", {
  enumerable: true,
  get: function () {
    return _lib.getElasticOutline;
  }
});
Object.defineProperty(exports, "getProjectIDs", {
  enumerable: true,
  get: function () {
    return _labs.getProjectIDs;
  }
});
Object.defineProperty(exports, "isProjectEnabledByStatus", {
  enumerable: true,
  get: function () {
    return _labs.isProjectEnabledByStatus;
  }
});
Object.defineProperty(exports, "isValidHttpUrl", {
  enumerable: true,
  get: function () {
    return _lib.isValidHttpUrl;
  }
});
Object.defineProperty(exports, "isValidUrl", {
  enumerable: true,
  get: function () {
    return _lib.isValidUrl;
  }
});
Object.defineProperty(exports, "parseDataUrl", {
  enumerable: true,
  get: function () {
    return _lib.parseDataUrl;
  }
});
Object.defineProperty(exports, "projectIDs", {
  enumerable: true,
  get: function () {
    return _labs.projectIDs;
  }
});
Object.defineProperty(exports, "projects", {
  enumerable: true,
  get: function () {
    return _labs.projects;
  }
});
Object.defineProperty(exports, "resolveFromArgs", {
  enumerable: true,
  get: function () {
    return _lib.resolveFromArgs;
  }
});
Object.defineProperty(exports, "resolveWithMissingImage", {
  enumerable: true,
  get: function () {
    return _lib.resolveWithMissingImage;
  }
});
var _labs = require("./labs");
var _lib = require("./lib");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const PLUGIN_ID = exports.PLUGIN_ID = 'presentationUtil';
const PLUGIN_NAME = exports.PLUGIN_NAME = 'presentationUtil';

/**
 * The unique identifier for the Expressions Language for use in the ExpressionInput
 * and CodeEditor components.
 */
const EXPRESSIONS_LANGUAGE_ID = exports.EXPRESSIONS_LANGUAGE_ID = 'kibana-expressions';