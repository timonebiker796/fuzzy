"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ProjectListItem = void 0;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _classnames = _interopRequireDefault(require("classnames"));
var _labs = require("../../../common/labs");
var _environment_switch = require("./environment_switch");
var _i18n = require("../../i18n");
require("./project_list_item.scss");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const {
  ListItem: strings
} = _i18n.LabsStrings.Components;
const ProjectListItem = ({
  project,
  onStatusChange
}) => {
  const {
    id,
    status,
    isActive,
    name,
    description,
    solutions
  } = project;
  const {
    isEnabled,
    isOverride
  } = status;
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    className: (0, _classnames.default)({
      projectListItem: true,
      'projectListItem--isOverridden': isOverride,
      'projectListItem--isOverriddenEnabled': isOverride && isEnabled
    })
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "m",
    responsive: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    direction: "column",
    gutterSize: "xs",
    responsive: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    className: "projectListItem__title",
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h2", null, name, isOverride ? /*#__PURE__*/_react.default.createElement("span", {
    className: "projectListItem__titlePendingChangesIndicator"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiIconTip, {
    content: strings.getOverriddenIconTipLabel(),
    position: "top",
    type: "dot",
    color: "success"
  })) : null))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "projectListItem__solutions"
  }, solutions.map(solution => /*#__PURE__*/_react.default.createElement(_eui.EuiBadge, {
    key: solution
  }, solution)))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "s",
    color: "subdued"
  }, description)), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "xs"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "xs",
    color: "subdued"
  }, isActive ? strings.getEnabledStatusMessage() : strings.getDisabledStatusMessage())))), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFormFieldset, {
    legend: {
      children: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiScreenReaderOnly, null, /*#__PURE__*/_react.default.createElement("span", null, name)), strings.getOverrideLegend())
    }
  }, _labs.environmentNames.map(env => {
    const envStatus = status[env];
    if (envStatus !== undefined) {
      return /*#__PURE__*/_react.default.createElement(_environment_switch.EnvironmentSwitch, {
        key: env,
        isChecked: envStatus,
        onChange: checked => onStatusChange(id, env, checked),
        env,
        name
      });
    }
  })))));
};
exports.ProjectListItem = ProjectListItem;