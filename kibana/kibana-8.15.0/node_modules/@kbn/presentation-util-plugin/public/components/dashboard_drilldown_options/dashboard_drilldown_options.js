"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DashboardDrilldownOptionsComponent = void 0;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _dashboard_drilldown_config = require("../../i18n/dashboard_drilldown_config");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const DashboardDrilldownOptionsComponent = ({
  options,
  onOptionChange
}) => {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    hasChildLabel: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiSwitch, {
    name: "useCurrentFilters",
    label: _dashboard_drilldown_config.dashboardDrilldownConfigStrings.component.getUseCurrentFiltersLabel(),
    checked: options.useCurrentFilters,
    onChange: () => onOptionChange({
      useCurrentFilters: !options.useCurrentFilters
    }),
    "data-test-subj": "dashboardDrillDownOptions--useCurrentFilters--checkbox"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    hasChildLabel: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiSwitch, {
    name: "useCurrentDateRange",
    label: _dashboard_drilldown_config.dashboardDrilldownConfigStrings.component.getUseCurrentDateRange(),
    checked: options.useCurrentDateRange,
    onChange: () => onOptionChange({
      useCurrentDateRange: !options.useCurrentDateRange
    }),
    "data-test-subj": "dashboardDrillDownOptions--useCurrentDateRange--checkbox"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
    hasChildLabel: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiSwitch, {
    name: "openInNewTab",
    label: _dashboard_drilldown_config.dashboardDrilldownConfigStrings.component.getOpenInNewTab(),
    checked: options.openInNewTab,
    onChange: () => onOptionChange({
      openInNewTab: !options.openInNewTab
    }),
    "data-test-subj": "dashboardDrillDownOptions--openInNewTab--checkbox"
  })));
};
exports.DashboardDrilldownOptionsComponent = DashboardDrilldownOptionsComponent;