"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ManageData = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _public = require("@kbn/kibana-react-plugin/public");
var _sharedUxLinkRedirectApp = require("@kbn/shared-ux-link-redirect-app");
var _synopsis = require("../synopsis");
var _ui_metric = require("../../lib/ui_metric");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const ManageData = ({
  addBasePath,
  features
}) => {
  const {
    services: {
      application
    }
  } = (0, _public.useKibana)();
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, features.length > 1 ? /*#__PURE__*/_react.default.createElement(_eui.EuiHorizontalRule, {
    margin: "xl",
    "aria-hidden": "true"
  }) : null, features.length > 0 ? /*#__PURE__*/_react.default.createElement("section", {
    className: "kbnOverviewDataManage",
    "aria-labelledby": "kbnOverviewDataManage__title",
    "data-test-subj": "kbnOverviewDataManage"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "s"
  }, /*#__PURE__*/_react.default.createElement("h2", {
    id: "kbnOverviewDataManage__title"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "kibanaOverview.manageData.sectionTitle",
    defaultMessage: "Manage your data"
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    className: "kbnOverviewDataManage__content",
    wrap: true
  }, features.map(feature => /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    className: "kbnOverviewDataManage__item",
    key: feature.id
  }, /*#__PURE__*/_react.default.createElement(_sharedUxLinkRedirectApp.RedirectAppLinks, {
    coreStart: {
      application
    }
  }, /*#__PURE__*/_react.default.createElement(_synopsis.Synopsis, {
    id: feature.id,
    description: feature.description,
    iconType: feature.icon,
    title: feature.title,
    url: addBasePath(feature.path),
    wrapInPanel: true,
    onClick: () => {
      (0, _ui_metric.trackUiMetric)(_ui_metric.METRIC_TYPE.CLICK, `ingest_data_card_${feature.id}`);
    }
  })))))) : null);
};
exports.ManageData = ManageData;
ManageData.propTypes = {
  features: _propTypes.default.arrayOf(_propTypes.default.shape({
    id: _propTypes.default.string.isRequired,
    title: _propTypes.default.string.isRequired,
    description: _propTypes.default.string.isRequired,
    icon: _propTypes.default.string.isRequired,
    path: _propTypes.default.string.isRequired,
    showOnHomePage: _propTypes.default.bool.isRequired,
    category: _propTypes.default.string.isRequired,
    order: _propTypes.default.number
  }).isRequired).isRequired
};