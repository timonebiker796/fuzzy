"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createUserMenuLinks = void 0;
var _react = _interopRequireDefault(require("react"));
var _i18n = require("@kbn/i18n");
var _theme_darkmode_toggle = require("./theme_darkmode_toggle");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const createUserMenuLinks = ({
  core,
  cloud,
  security
}) => {
  const {
    profileUrl,
    billingUrl,
    organizationUrl
  } = cloud;
  const userMenuLinks = [];
  if (profileUrl) {
    userMenuLinks.push({
      label: _i18n.i18n.translate('xpack.cloudLinks.userMenuLinks.profileLinkText', {
        defaultMessage: 'Profile'
      }),
      iconType: 'user',
      href: profileUrl,
      order: 100,
      setAsProfile: true
    });
  }
  if (billingUrl) {
    userMenuLinks.push({
      label: _i18n.i18n.translate('xpack.cloudLinks.userMenuLinks.billingLinkText', {
        defaultMessage: 'Billing'
      }),
      iconType: 'visGauge',
      href: billingUrl,
      order: 200
    });
  }
  if (organizationUrl) {
    userMenuLinks.push({
      label: _i18n.i18n.translate('xpack.cloudLinks.userMenuLinks.organizationLinkText', {
        defaultMessage: 'Organization'
      }),
      iconType: 'gear',
      href: organizationUrl,
      order: 300
    });
  }
  userMenuLinks.push({
    content: /*#__PURE__*/_react.default.createElement(_theme_darkmode_toggle.ThemeDarkModeToggle, {
      core: core,
      security: security
    }),
    order: 400,
    label: '',
    iconType: '',
    href: ''
  });
  return userMenuLinks;
};
exports.createUserMenuLinks = createUserMenuLinks;