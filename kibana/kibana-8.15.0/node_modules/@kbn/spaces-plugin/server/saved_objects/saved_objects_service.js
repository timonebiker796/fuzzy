"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SpacesSavedObjectsService = void 0;
var _configSchema = require("@kbn/config-schema");
var _mappings = require("./mappings");
var _migrations = require("./migrations");
var _saved_objects_spaces_extension = require("./saved_objects_spaces_extension");
var _schemas = require("./schemas");
var _usage_stats = require("../usage_stats");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

class SpacesSavedObjectsService {
  setup({
    core,
    getSpacesService
  }) {
    core.savedObjects.registerType({
      name: 'space',
      hidden: true,
      namespaceType: 'agnostic',
      mappings: _mappings.SpacesSavedObjectMappings,
      schemas: _schemas.SpacesSavedObjectSchemas,
      migrations: {
        '6.6.0': _migrations.spaceMigrations.migrateTo660
      },
      modelVersions: {
        1: {
          changes: [{
            type: 'mappings_addition',
            addedMappings: {
              solution: {
                type: 'keyword'
              }
            }
          }],
          schemas: {
            create: _schemas.SpacesSavedObjectSchemas['8.8.0'].extends({
              solution: _configSchema.schema.maybe(_configSchema.schema.oneOf([_configSchema.schema.literal('security'), _configSchema.schema.literal('oblt'), _configSchema.schema.literal('es'), _configSchema.schema.literal('classic')]))
            })
          }
        },
        2: {
          changes: [{
            type: 'mappings_addition',
            addedMappings: {
              disabledFeatures: {
                type: 'keyword'
              }
            }
          }]
        }
      }
    });
    core.savedObjects.registerType({
      name: _usage_stats.SPACES_USAGE_STATS_TYPE,
      hidden: true,
      namespaceType: 'agnostic',
      mappings: _mappings.UsageStatsMappings,
      migrations: {
        '7.14.1': _migrations.usageStatsMigrations.migrateTo7141
      }
    });
    core.savedObjects.setSpacesExtension(({
      request
    }) => {
      const spacesService = getSpacesService();
      const spacesClient = spacesService.createSpacesClient(request);
      const activeSpaceId = spacesService.getSpaceId(request);
      return new _saved_objects_spaces_extension.SavedObjectsSpacesExtension({
        spacesClient,
        activeSpaceId
      });
    });
  }
}
exports.SpacesSavedObjectsService = SpacesSavedObjectsService;