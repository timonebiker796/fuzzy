"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FileContents = void 0;
var _react = _interopRequireWildcard(require("react"));
var _i18nReact = require("@kbn/i18n-react");
var _eui = require("@elastic/eui");
var _useMountedState = _interopRequireDefault(require("react-use/lib/useMountedState"));
var _i18n = require("@kbn/i18n");
var _json_editor = require("../json_editor");
var _use_text_parser = require("./use_text_parser");
var _grok_highlighter = require("./grok_highlighter");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function semiStructureTextDataGuard(semiStructureTextData) {
  return semiStructureTextData !== null && semiStructureTextData.grokPattern !== undefined && semiStructureTextData.multilineStartPattern !== undefined;
}
const FileContents = ({
  data,
  format,
  numberOfLines,
  semiStructureTextData
}) => {
  let mode = _json_editor.EDITOR_MODE.TEXT;
  if (format === _json_editor.EDITOR_MODE.JSON) {
    mode = _json_editor.EDITOR_MODE.JSON;
  }
  const isMounted = (0, _useMountedState.default)();
  const grokHighlighter = (0, _use_text_parser.useGrokHighlighter)();
  const [isSemiStructureTextData, setIsSemiStructureTextData] = (0, _react.useState)(semiStructureTextDataGuard(semiStructureTextData));
  const formattedData = (0, _react.useMemo)(() => limitByNumberOfLines(data, numberOfLines), [data, numberOfLines]);
  const [highlightedLines, setHighlightedLines] = (0, _react.useState)(null);
  const [showHighlights, setShowHighlights] = (0, _react.useState)(isSemiStructureTextData);
  (0, _react.useEffect)(() => {
    if (isSemiStructureTextData === false) {
      return;
    }
    const {
      grokPattern,
      multilineStartPattern,
      excludeLinesPattern,
      mappings,
      ecsCompatibility
    } = semiStructureTextData;
    grokHighlighter(data, grokPattern, mappings, ecsCompatibility, multilineStartPattern, excludeLinesPattern).then(docs => {
      if (isMounted()) {
        setHighlightedLines(docs);
      }
    }).catch(e => {
      if (isMounted()) {
        setHighlightedLines(null);
        setIsSemiStructureTextData(false);
      }
    });
  }, [data, semiStructureTextData, grokHighlighter, isSemiStructureTextData, isMounted]);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, null, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "s"
  }, /*#__PURE__*/_react.default.createElement("h2", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.dataVisualizer.file.fileContents.fileContentsTitle",
    defaultMessage: "File contents"
  })))), isSemiStructureTextData ? /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false,
    "data-test-subj": "dataVisualizerFileContentsHighlightingSwitch"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiSwitch, {
    label: _i18n.i18n.translate('xpack.dataVisualizer.file.fileContents.highlightSwitch', {
      defaultMessage: 'Grok pattern highlighting'
    }),
    compressed: true,
    checked: showHighlights,
    onChange: () => setShowHighlights(!showHighlights)
  })) : null), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.dataVisualizer.file.fileContents.firstLinesDescription",
    defaultMessage: "First {numberOfLines, plural, zero {# line} one {# line} other {# lines}}",
    values: {
      numberOfLines: showHighlights ? _grok_highlighter.LINE_LIMIT : numberOfLines
    }
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }), highlightedLines === null || showHighlights === false ? /*#__PURE__*/_react.default.createElement(_json_editor.JsonEditor, {
    mode: mode,
    readOnly: true,
    value: formattedData,
    height: "200px"
  }) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, highlightedLines.map((line, i) => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
    key: `line-${i}`
  }, line, i === highlightedLines.length - 1 ? null : /*#__PURE__*/_react.default.createElement(_eui.EuiHorizontalRule, {
    margin: "s"
  })))));
};
exports.FileContents = FileContents;
function limitByNumberOfLines(data, numberOfLines) {
  return data.split('\n').slice(0, numberOfLines).join('\n');
}