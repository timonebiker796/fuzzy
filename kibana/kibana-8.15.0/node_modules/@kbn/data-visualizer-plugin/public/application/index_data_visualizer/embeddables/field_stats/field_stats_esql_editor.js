"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldStatsESQLEditor = void 0;
var _react = _interopRequireWildcard(require("react"));
var _public = require("@kbn/text-based-languages/public");
var _eui = require("@elastic/eui");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const expandCodeEditor = status => {};
const FieldStatsESQLEditor = ({
  canEditTextBasedQuery = true,
  query,
  setQuery,
  onQuerySubmit
}) => {
  const prevQuery = (0, _react.useRef)(query);
  const [isVisualizationLoading, setIsVisualizationLoading] = (0, _react.useState)(false);
  const onTextLangQuerySubmit = (0, _react.useCallback)(async (q, abortController) => {
    if (q && onQuerySubmit) {
      setIsVisualizationLoading(true);
      await onQuerySubmit(q, abortController);
      setIsVisualizationLoading(false);
    }
  }, [onQuerySubmit]);
  if (!canEditTextBasedQuery) return null;
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false,
    "data-test-subj": "InlineEditingESQLEditor"
  }, /*#__PURE__*/_react.default.createElement(_public.TextBasedLangEditor, {
    query: query,
    onTextLangQueryChange: q => {
      setQuery(q);
      prevQuery.current = q;
    },
    expandCodeEditor: expandCodeEditor,
    isCodeEditorExpanded: true,
    hideMinimizeButton: true,
    editorIsInline: true,
    hideRunQueryText: true,
    onTextLangQuerySubmit: onTextLangQuerySubmit,
    isDisabled: false,
    allowQueryCancellation: true,
    isLoading: isVisualizationLoading
  }));
};
exports.FieldStatsESQLEditor = FieldStatsESQLEditor;