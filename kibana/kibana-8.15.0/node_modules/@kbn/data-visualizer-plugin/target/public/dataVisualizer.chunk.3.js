/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.dataVisualizer_bundle_jsonpfunction=window.dataVisualizer_bundle_jsonpfunction||[]).push([[3],{121:function(e,t,a){"use strict";a.d(t,"a",(function(){return o}));var s=a(10),i=a(0),l=a(25),r=a(1),n=a(77);const d=()=>Object(r.jsx)(s.EuiSelectableMessage,null,Object(r.jsx)(s.EuiIcon,{type:"minusInCircle"}),Object(r.jsx)(s.EuiSpacer,{size:"xs"}),Object(r.jsx)("p",null,Object(r.jsx)(l.FormattedMessage,{id:"xpack.dataVisualizer.multiSelectPicker.NoFiltersFoundMessage",defaultMessage:"No filters found"}))),o=({options:e,onChange:t,title:a,checkedOptions:l,dataTestSubj:o,postfix:u,cssStyles:c})=>{var f;const p=Object(n.a)(),[b,j]=Object(i.useState)(e),[g,m]=Object(i.useState)("");Object(i.useEffect)((()=>{if(""===g)j(e);else{const t=e.filter((e=>{var t;return null==e||null===(t=e.value)||void 0===t?void 0:t.includes(g)}));j(t)}}),[e,g]);const[x,F]=Object(i.useState)(!1),v=Object(r.jsx)(s.EuiFilterButton,{"data-test-subj":`${o}-button`,iconType:"arrowDown",onClick:()=>{F(!x)},isSelected:x,numFilters:b.length,hasActiveFilters:l&&l.length>0,numActiveFilters:l&&l.length},a);return Object(r.jsx)(s.EuiFilterGroup,{"data-test-subj":o,css:null==c?void 0:c.filterGroup},Object(r.jsx)(s.EuiPopover,{ownFocus:!0,"data-test-subj":`${o}-popover`,button:v,isOpen:x,closePopover:()=>{F(!1),m("")},panelPaddingSize:"none"},Object(r.jsx)(s.EuiPopoverTitle,{paddingSize:"s"},Object(r.jsx)(s.EuiFieldSearch,{compressed:!0,onChange:e=>m(e.target.value),"data-test-subj":`${o}-searchInput`})),Object(r.jsx)("div",{css:null!==(f=null==c?void 0:c.filterItemContainer)&&void 0!==f?f:Object(r.css)("max-height:","250px",";overflow:auto;","")},Array.isArray(b)&&b.length>0?b.map(((e,a)=>{var i;const n=l&&l.findIndex((t=>t===e.value))>-1;return Object(r.jsx)(s.EuiFilterSelectItem,{checked:n?"on":void 0,key:a,onClick:()=>(e=>{if(!b[e]||!Array.isArray(l)||void 0===t)return;const a=b[e],s=l.findIndex((e=>e===a.value));t(s>-1?l.filter(((e,t)=>t!==s)):[...l,a.value])})(a),style:{flexDirection:"row",color:!0===e.disabled?p.euiColorDisabledText:p.euiTextColor},"data-test-subj":`${o}-option-${e.value}${n?"-checked":""}`},null!==(i=e.name)&&void 0!==i?i:e.value)})):Object(r.jsx)(d,null))),u||null)}},185:function(e,t,a){"use strict";a.d(t,"b",(function(){return o})),a.d(t,"a",(function(){return u})),a.d(t,"c",(function(){return d}));var s=a(10),i=a(25),l=a(0),r=a.n(l),n=a(1);const d={name:"1rsg7lx",styles:"max-width:300px;min-width:200px"},o=({fieldsCountStats:e})=>e&&void 0!==e.visibleFieldsCount&&void 0!==e.totalFieldsCount?Object(n.jsx)(s.EuiFlexGroup,{alignItems:"center",css:d,"data-test-subj":"dataVisualizerFieldsSummary",gutterSize:"s",responsive:!1},Object(n.jsx)(s.EuiFlexItem,{grow:!1},Object(n.jsx)(s.EuiText,null,Object(n.jsx)("h5",null,Object(n.jsx)(i.FormattedMessage,{id:"xpack.dataVisualizer.searchPanel.allFieldsLabel",defaultMessage:"All fields"})))),Object(n.jsx)(s.EuiFlexItem,{grow:!1},Object(n.jsx)(s.EuiNotificationBadge,{color:"subdued",size:"m","data-test-subj":"dataVisualizerVisibleFieldsCount"},Object(n.jsx)("strong",null,e.visibleFieldsCount))),Object(n.jsx)(s.EuiFlexItem,{grow:!1},Object(n.jsx)(s.EuiText,{color:"subdued",size:"s","data-test-subj":"dataVisualizerTotalFieldsCount"},Object(n.jsx)(i.FormattedMessage,{id:"xpack.dataVisualizer.searchPanel.ofFieldsTotal",defaultMessage:"of {totalCount} total",values:{totalCount:e.totalFieldsCount}})))):null,u=({metricsStats:e})=>e&&void 0!==e.visibleMetricsCount&&void 0!==e.totalMetricFieldsCount?Object(n.jsx)(r.a.Fragment,null,e&&Object(n.jsx)(s.EuiFlexGroup,{alignItems:"center",css:d,"data-test-subj":"dataVisualizerMetricFieldsSummary",gutterSize:"s",responsive:!1},Object(n.jsx)(s.EuiFlexItem,{grow:!1},Object(n.jsx)(s.EuiText,null,Object(n.jsx)("h5",null,Object(n.jsx)(i.FormattedMessage,{id:"xpack.dataVisualizer.searchPanel.numberFieldsLabel",defaultMessage:"Number fields"})))),Object(n.jsx)(s.EuiFlexItem,{grow:!1},Object(n.jsx)(s.EuiNotificationBadge,{color:"subdued",size:"m","data-test-subj":"dataVisualizerVisibleMetricFieldsCount"},Object(n.jsx)("strong",null,e.visibleMetricsCount))),Object(n.jsx)(s.EuiFlexItem,{grow:!1},Object(n.jsx)(s.EuiText,{color:"subdued",size:"s","data-test-subj":"dataVisualizerMetricFieldsCount"},Object(n.jsx)(i.FormattedMessage,{id:"xpack.dataVisualizer.searchPanel.ofFieldsTotal",defaultMessage:"of {totalCount} total",values:{totalCount:e.totalMetricFieldsCount}}))))):null},190:function(e,t,a){"use strict";a.d(t,"a",(function(){return b}));var s=a(10),i=a(0),l=a(4),r=a(290),n=a(25),d=a(11),o=a(151);const u=l.i18n.translate("fieldUtils.fieldNameDescription.unknownField",{defaultMessage:"Unknown field"});function c(e){if(!e||e===d.b.UNKNOWN)return u;const t=e;switch(t){case o.a.DOCUMENT:return l.i18n.translate("fieldUtils.fieldNameDescription.recordField",{defaultMessage:"Count of records."});case o.a.BINARY:return l.i18n.translate("fieldUtils.fieldNameDescription.binaryField",{defaultMessage:"Binary value encoded as a Base64 string."});case o.a.BOOLEAN:return l.i18n.translate("fieldUtils.fieldNameDescription.booleanField",{defaultMessage:"True and false values."});case o.a.CONFLICT:return l.i18n.translate("fieldUtils.fieldNameDescription.conflictField",{defaultMessage:"Field has values of different types. Resolve in Management > Data Views."});case o.a.COUNTER:return l.i18n.translate("fieldUtils.fieldNameDescription.counterField",{defaultMessage:"A number that only increases or resets to 0 (zero). Available only for numeric and aggregate_metric_double fields."});case o.a.DATE:return l.i18n.translate("fieldUtils.fieldNameDescription.dateField",{defaultMessage:"A date string or the number of seconds or milliseconds since 1/1/1970."});case o.a.DATE_RANGE:return l.i18n.translate("fieldUtils.fieldNameDescription.dateRangeField",{defaultMessage:"Range of date values."});case o.a.DENSE_VECTOR:return l.i18n.translate("fieldUtils.fieldNameDescription.denseVectorField",{defaultMessage:"Records dense vectors of float values."});case o.a.GAUGE:return l.i18n.translate("fieldUtils.fieldNameDescription.gaugeField",{defaultMessage:"A number that can increase or decrease. Available only for numeric and aggregate_metric_double fields."});case o.a.GEO_POINT:return l.i18n.translate("fieldUtils.fieldNameDescription.geoPointField",{defaultMessage:"Latitude and longitude points."});case o.a.GEO_SHAPE:return l.i18n.translate("fieldUtils.fieldNameDescription.geoShapeField",{defaultMessage:"Complex shapes, such as polygons."});case o.a.HISTOGRAM:return l.i18n.translate("fieldUtils.fieldNameDescription.histogramField",{defaultMessage:"Pre-aggregated numerical values in the form of a histogram."});case o.a.IP:return l.i18n.translate("fieldUtils.fieldNameDescription.ipAddressField",{defaultMessage:"IPv4 and IPv6 addresses."});case o.a.IP_RANGE:return l.i18n.translate("fieldUtils.fieldNameDescription.ipAddressRangeField",{defaultMessage:"Range of ip values supporting either IPv4 or IPv6 (or mixed) addresses."});case o.a.FLATTENED:return l.i18n.translate("fieldUtils.fieldNameDescription.flattenedField",{defaultMessage:"An entire JSON object as a single field value."});case o.a.MURMUR3:return l.i18n.translate("fieldUtils.fieldNameDescription.murmur3Field",{defaultMessage:"Field that computes and stores hashes of values."});case o.a.NUMBER:return l.i18n.translate("fieldUtils.fieldNameDescription.numberField",{defaultMessage:"Long, integer, short, byte, double, and float values."});case o.a.RANK_FEATURE:return l.i18n.translate("fieldUtils.fieldNameDescription.rankFeatureField",{defaultMessage:"Records a numeric feature to boost hits at query time."});case o.a.RANK_FEATURES:return l.i18n.translate("fieldUtils.fieldNameDescription.rankFeaturesField",{defaultMessage:"Records numeric features to boost hits at query time."});case o.a.POINT:return l.i18n.translate("fieldUtils.fieldNameDescription.pointField",{defaultMessage:"Arbitrary cartesian points."});case o.a.SHAPE:return l.i18n.translate("fieldUtils.fieldNameDescription.shapeField",{defaultMessage:"Arbitrary cartesian geometries."});case o.a.SPARSE_VECTOR:return l.i18n.translate("fieldUtils.fieldNameDescription.sparseVectorField",{defaultMessage:"Records sparse vectors of float values."});case o.a.SEMANTIC_TEXT:return l.i18n.translate("fieldUtils.fieldNameDescription.semanticTextField",{defaultMessage:"References model id used for text embeddings."});case o.a.STRING:return l.i18n.translate("fieldUtils.fieldNameDescription.stringField",{defaultMessage:"Full text such as the body of an email or a product description."});case o.a.TEXT:return l.i18n.translate("fieldUtils.fieldNameDescription.textField",{defaultMessage:"Full text such as the body of an email or a product description."});case o.a.KEYWORD:return l.i18n.translate("fieldUtils.fieldNameDescription.keywordField",{defaultMessage:"Structured content such as an ID, email address, hostname, status code, or tag."});case o.a.NESTED:return l.i18n.translate("fieldUtils.fieldNameDescription.nestedField",{defaultMessage:"JSON object that preserves the relationship between its subfields."});case o.a.VERSION:return l.i18n.translate("fieldUtils.fieldNameDescription.versionField",{defaultMessage:'Software versions. Supports "Semantic Versioning" precedence rules.'});default:return t||t}}var f=a(65),p=a(1);const b=({fieldTypes:e})=>{{const{services:t}=Object(f.a)(),{docLinks:a}=t,{euiTheme:d}=Object(s.useEuiTheme)(),[o,u]=Object(i.useState)(!1),b=()=>u((e=>!e)),j=()=>u(!1),g=Object(i.useMemo)((()=>e.map(((e,t)=>({id:t,dataType:e,description:c(e)})))),[e]),m=[{field:"dataType",name:l.i18n.translate("xpack.dataVisualizer.fieldTypesPopover.dataTypeColumnTitle",{defaultMessage:"Data type"}),width:"110px",render:e=>Object(p.jsx)(s.EuiFlexGroup,{alignItems:"center",responsive:!1,gutterSize:"xs"},Object(p.jsx)(s.EuiFlexItem,{grow:!1},Object(p.jsx)(r.a,{type:e})),Object(p.jsx)(s.EuiFlexItem,null,e))},{field:"description",name:l.i18n.translate("xpack.dataVisualizer.fieldTypesPopover.descriptionColumnTitle",{defaultMessage:"Description"}),render:e=>Object(p.jsx)("div",{dangerouslySetInnerHTML:{__html:e}})}],x=Object(p.jsx)(s.EuiFilterButton,{grow:!1,onClick:b,"data-test-subj":"fieldTypesHelpButton",className:"dataVisualizerFieldTypesHelp__button","aria-label":l.i18n.translate("xpack.dataVisualizer.fieldTypesPopover.buttonAriaLabel",{defaultMessage:"Filter type help"})},Object(p.jsx)(s.EuiIcon,{type:"iInCircle",color:"primary",title:l.i18n.translate("xpack.dataVisualizer.fieldTypesPopover.iconTitle",{defaultMessage:"Filter type help"})}));return Object(p.jsx)(s.EuiPopover,{anchorPosition:"downLeft",display:"block",button:x,isOpen:o,panelPaddingSize:"none",closePopover:j,initialFocus:"dataVisualizerFieldTypesHelpBasicTableId"},Object(p.jsx)(s.EuiPopoverTitle,{paddingSize:"s"},l.i18n.translate("xpack.dataVisualizer.fieldChooser.popoverTitle",{defaultMessage:"Field types"})),Object(p.jsx)(s.EuiPanel,{className:"eui-yScroll",style:{maxHeight:"50vh",maxWidth:`calc(${d.size.base}*22)`},color:"transparent",paddingSize:"s"},Object(p.jsx)(s.EuiBasicTable,{id:"dataVisualizerFieldTypesHelpBasicTableId",tableCaption:l.i18n.translate("xpack.dataVisualizer.fieldTypesPopover.tableTitle",{defaultMessage:"Description of field types"}),items:g,compressed:!0,rowHeader:"firstName",columns:m,responsiveBreakpoint:!1})),Object(p.jsx)(s.EuiPanel,{color:"transparent",paddingSize:"s"},Object(p.jsx)(s.EuiText,{color:"subdued",size:"xs"},Object(p.jsx)("p",null,l.i18n.translate("xpack.dataVisualizer.fieldTypesPopover.learnMoreText",{defaultMessage:"Learn more about"})," ",Object(p.jsx)(s.EuiLink,{href:a.links.discover.fieldTypeHelp,target:"_blank",external:!0},Object(p.jsx)(n.FormattedMessage,{id:"xpack.dataVisualizer.fieldTypesPopover.fieldTypesDocLinkLabel",defaultMessage:"field types"}))))))}}}}]);