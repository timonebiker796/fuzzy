"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "ATTRIBUTE_SERVICE_KEY", {
  enumerable: true,
  get: function () {
    return _attribute_service.ATTRIBUTE_SERVICE_KEY;
  }
});
Object.defineProperty(exports, "AttributeService", {
  enumerable: true,
  get: function () {
    return _attribute_service.AttributeService;
  }
});
Object.defineProperty(exports, "CELL_VALUE_TRIGGER", {
  enumerable: true,
  get: function () {
    return _lib.CELL_VALUE_TRIGGER;
  }
});
Object.defineProperty(exports, "COMMON_EMBEDDABLE_GROUPING", {
  enumerable: true,
  get: function () {
    return _constants.COMMON_EMBEDDABLE_GROUPING;
  }
});
Object.defineProperty(exports, "CONTEXT_MENU_TRIGGER", {
  enumerable: true,
  get: function () {
    return _lib.CONTEXT_MENU_TRIGGER;
  }
});
Object.defineProperty(exports, "Container", {
  enumerable: true,
  get: function () {
    return _lib.Container;
  }
});
Object.defineProperty(exports, "Embeddable", {
  enumerable: true,
  get: function () {
    return _lib.Embeddable;
  }
});
Object.defineProperty(exports, "EmbeddableFactoryNotFoundError", {
  enumerable: true,
  get: function () {
    return _lib.EmbeddableFactoryNotFoundError;
  }
});
Object.defineProperty(exports, "EmbeddablePanel", {
  enumerable: true,
  get: function () {
    return _embeddable_panel.EmbeddablePanel;
  }
});
Object.defineProperty(exports, "EmbeddableRenderer", {
  enumerable: true,
  get: function () {
    return _lib.EmbeddableRenderer;
  }
});
Object.defineProperty(exports, "EmbeddableRoot", {
  enumerable: true,
  get: function () {
    return _lib.EmbeddableRoot;
  }
});
Object.defineProperty(exports, "EmbeddableStateTransfer", {
  enumerable: true,
  get: function () {
    return _lib.EmbeddableStateTransfer;
  }
});
Object.defineProperty(exports, "ErrorEmbeddable", {
  enumerable: true,
  get: function () {
    return _lib.ErrorEmbeddable;
  }
});
Object.defineProperty(exports, "MULTI_VALUE_CLICK_TRIGGER", {
  enumerable: true,
  get: function () {
    return _lib.MULTI_VALUE_CLICK_TRIGGER;
  }
});
Object.defineProperty(exports, "PANEL_BADGE_TRIGGER", {
  enumerable: true,
  get: function () {
    return _lib.PANEL_BADGE_TRIGGER;
  }
});
Object.defineProperty(exports, "PANEL_HOVER_TRIGGER", {
  enumerable: true,
  get: function () {
    return _lib.PANEL_HOVER_TRIGGER;
  }
});
Object.defineProperty(exports, "PANEL_NOTIFICATION_TRIGGER", {
  enumerable: true,
  get: function () {
    return _lib.PANEL_NOTIFICATION_TRIGGER;
  }
});
Object.defineProperty(exports, "PanelIncompatibleError", {
  enumerable: true,
  get: function () {
    return _lib.PanelIncompatibleError;
  }
});
Object.defineProperty(exports, "PanelNotFoundError", {
  enumerable: true,
  get: function () {
    return _lib.PanelNotFoundError;
  }
});
Object.defineProperty(exports, "ReactEmbeddableRenderer", {
  enumerable: true,
  get: function () {
    return _react_embeddable_system.ReactEmbeddableRenderer;
  }
});
Object.defineProperty(exports, "SELECT_RANGE_TRIGGER", {
  enumerable: true,
  get: function () {
    return _lib.SELECT_RANGE_TRIGGER;
  }
});
Object.defineProperty(exports, "VALUE_CLICK_TRIGGER", {
  enumerable: true,
  get: function () {
    return _lib.VALUE_CLICK_TRIGGER;
  }
});
Object.defineProperty(exports, "ViewMode", {
  enumerable: true,
  get: function () {
    return _lib.ViewMode;
  }
});
Object.defineProperty(exports, "cellValueTrigger", {
  enumerable: true,
  get: function () {
    return _lib.cellValueTrigger;
  }
});
Object.defineProperty(exports, "contextMenuTrigger", {
  enumerable: true,
  get: function () {
    return _lib.contextMenuTrigger;
  }
});
Object.defineProperty(exports, "defaultEmbeddableFactoryProvider", {
  enumerable: true,
  get: function () {
    return _lib.defaultEmbeddableFactoryProvider;
  }
});
Object.defineProperty(exports, "embeddableInputToSubject", {
  enumerable: true,
  get: function () {
    return _embeddable_compatibility_utils.embeddableInputToSubject;
  }
});
Object.defineProperty(exports, "embeddableOutputToSubject", {
  enumerable: true,
  get: function () {
    return _embeddable_compatibility_utils.embeddableOutputToSubject;
  }
});
Object.defineProperty(exports, "genericEmbeddableInputIsEqual", {
  enumerable: true,
  get: function () {
    return _lib.genericEmbeddableInputIsEqual;
  }
});
Object.defineProperty(exports, "isContextMenuTriggerContext", {
  enumerable: true,
  get: function () {
    return _lib.isContextMenuTriggerContext;
  }
});
Object.defineProperty(exports, "isEmbeddable", {
  enumerable: true,
  get: function () {
    return _lib.isEmbeddable;
  }
});
Object.defineProperty(exports, "isErrorEmbeddable", {
  enumerable: true,
  get: function () {
    return _lib.isErrorEmbeddable;
  }
});
Object.defineProperty(exports, "isExplicitInputWithAttributes", {
  enumerable: true,
  get: function () {
    return _lib.isExplicitInputWithAttributes;
  }
});
Object.defineProperty(exports, "isFilterableEmbeddable", {
  enumerable: true,
  get: function () {
    return _lib.isFilterableEmbeddable;
  }
});
Object.defineProperty(exports, "isMultiValueClickTriggerContext", {
  enumerable: true,
  get: function () {
    return _lib.isMultiValueClickTriggerContext;
  }
});
Object.defineProperty(exports, "isRangeSelectTriggerContext", {
  enumerable: true,
  get: function () {
    return _lib.isRangeSelectTriggerContext;
  }
});
Object.defineProperty(exports, "isReferenceOrValueEmbeddable", {
  enumerable: true,
  get: function () {
    return _lib.isReferenceOrValueEmbeddable;
  }
});
Object.defineProperty(exports, "isRowClickTriggerContext", {
  enumerable: true,
  get: function () {
    return _lib.isRowClickTriggerContext;
  }
});
Object.defineProperty(exports, "isSavedObjectEmbeddableInput", {
  enumerable: true,
  get: function () {
    return _lib.isSavedObjectEmbeddableInput;
  }
});
Object.defineProperty(exports, "isValueClickTriggerContext", {
  enumerable: true,
  get: function () {
    return _lib.isValueClickTriggerContext;
  }
});
Object.defineProperty(exports, "omitGenericEmbeddableInput", {
  enumerable: true,
  get: function () {
    return _lib.omitGenericEmbeddableInput;
  }
});
Object.defineProperty(exports, "openAddPanelFlyout", {
  enumerable: true,
  get: function () {
    return _open_add_panel_flyout.openAddPanelFlyout;
  }
});
Object.defineProperty(exports, "panelBadgeTrigger", {
  enumerable: true,
  get: function () {
    return _lib.panelBadgeTrigger;
  }
});
Object.defineProperty(exports, "panelHoverTrigger", {
  enumerable: true,
  get: function () {
    return _lib.panelHoverTrigger;
  }
});
Object.defineProperty(exports, "panelNotificationTrigger", {
  enumerable: true,
  get: function () {
    return _lib.panelNotificationTrigger;
  }
});
exports.plugin = plugin;
Object.defineProperty(exports, "runEmbeddableFactoryMigrations", {
  enumerable: true,
  get: function () {
    return _lib.runEmbeddableFactoryMigrations;
  }
});
Object.defineProperty(exports, "shouldFetch$", {
  enumerable: true,
  get: function () {
    return _lib.shouldFetch$;
  }
});
Object.defineProperty(exports, "shouldRefreshFilterCompareOptions", {
  enumerable: true,
  get: function () {
    return _lib.shouldRefreshFilterCompareOptions;
  }
});
Object.defineProperty(exports, "useEmbeddableFactory", {
  enumerable: true,
  get: function () {
    return _lib.useEmbeddableFactory;
  }
});
Object.defineProperty(exports, "withEmbeddableSubscription", {
  enumerable: true,
  get: function () {
    return _lib.withEmbeddableSubscription;
  }
});
var _plugin = require("./plugin");
var _open_add_panel_flyout = require("./add_panel_flyout/open_add_panel_flyout");
var _embeddable_panel = require("./embeddable_panel");
var _lib = require("./lib");
var _attribute_service = require("./lib/attribute_service");
var _react_embeddable_system = require("./react_embeddable_system");
var _embeddable_compatibility_utils = require("./lib/embeddables/compatibility/embeddable_compatibility_utils");
var _constants = require("./lib/embeddables/common/constants");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

function plugin(initializerContext) {
  return new _plugin.EmbeddablePublicPlugin(initializerContext);
}