"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Chat = void 0;
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@emotion/react");
var _i18n = require("@kbn/i18n");
var _uiTheme = require("@kbn/ui-theme");
var _eui = require("@elastic/eui");
var _use_chat_config = require("../chat/use_chat_config");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * This Chat widget implementation uses the default floating chat bubble in the bottom right corner of the screen.
 * It automatically appears if the playbook fires and isn't controlled from the outside
 */
const Chat = ({
  onHide = () => {},
  onReady,
  onResize,
  onPlaybookFired
}) => {
  const config = (0, _use_chat_config.useChatConfig)({
    onReady,
    onResize,
    onPlaybookFired,
    controlled: false /* makes this chat appear automatically */
  });
  const ref = (0, _react.useRef)(null);
  const [isClosed, setIsClosed] = (0, _react.useState)(false);
  if (!config.enabled || isClosed) {
    return null;
  }
  const {
    isReady,
    isResized,
    style
  } = config;
  const {
    right
  } = style;
  const buttonCSS = (0, _react2.css)`
    bottom: ${_uiTheme.euiThemeVars.euiSizeXS};
    position: fixed;
    right: calc(${right} + ${_uiTheme.euiThemeVars.euiSizeXS});
    visibility: ${isReady && isResized ? 'visible' : 'hidden'};
  `;
  const button = /*#__PURE__*/_react.default.createElement(_eui.EuiButtonEmpty, {
    css: buttonCSS,
    "data-test-subj": "cloud-chat-hide",
    name: "cloudChatHide",
    onClick: () => {
      onHide();
      setIsClosed(true);
    },
    size: "xs"
  }, _i18n.i18n.translate('xpack.cloudChat.hideChatButtonLabel', {
    defaultMessage: 'Hide chat'
  }));
  const containerCSS = (0, _react2.css)`
    bottom: ${_uiTheme.euiThemeVars.euiSizeXL};
    position: fixed;
    right: ${_uiTheme.euiThemeVars.euiSizeXL};
    z-index: ${_uiTheme.euiThemeVars.euiZMaskBelowHeader - 1};
    &:focus [name='cloudChatHide'],
    &:hover [name='cloudChatHide'] {
      visibility: visible;
    }
  `;
  return /*#__PURE__*/_react.default.createElement("div", {
    css: containerCSS,
    ref: ref,
    "data-test-subj": "cloud-chat"
  }, button, /*#__PURE__*/_react.default.createElement("iframe", {
    "data-test-subj": "cloud-chat-frame",
    title: _i18n.i18n.translate('xpack.cloudChat.chatFrameTitle', {
      defaultMessage: 'Chat'
    }),
    src: config.src,
    ref: config.ref,
    style: {
      ...config.style,
      // @ts-ignore - fixes white background on iframe in chrome/system dark mode
      colorScheme: 'light'
    }
  }));
};
exports.Chat = Chat;