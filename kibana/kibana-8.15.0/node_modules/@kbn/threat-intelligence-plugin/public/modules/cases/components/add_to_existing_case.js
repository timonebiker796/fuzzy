"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddToExistingCase = void 0;
var _react = _interopRequireDefault(require("react"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _use_case_permission = require("../hooks/use_case_permission");
var _attachments = require("../utils/attachments");
var _use_kibana = require("../../../hooks/use_kibana");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/**
 * Leverages the cases plugin api to display a modal listing all the existing cases.
 * Once a case is selected, an attachment is added to it and a confirmation snackbar
 * presents a link to view the case.
 *
 * This component renders an {@link EuiContextMenu}.
 *
 * @returns add to existing case for a context menu
 */
const AddToExistingCase = ({
  indicator,
  onClick,
  'data-test-subj': dataTestSubj
}) => {
  const {
    cases
  } = (0, _use_kibana.useKibana)().services;
  const selectCaseModal = cases.hooks.useCasesAddToExistingCaseModal();
  const id = indicator._id;
  const attachmentMetadata = (0, _attachments.generateAttachmentsMetadata)(indicator);
  const attachments = (0, _attachments.generateAttachmentsWithoutOwner)(id, attachmentMetadata);
  const menuItemClicked = () => {
    onClick();
    selectCaseModal.open({
      getAttachments: () => attachments
    });
  };
  const disabled = (0, _use_case_permission.useCaseDisabled)(attachmentMetadata.indicatorName);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiContextMenuItem, {
    key: "attachmentsExistingCase",
    onClick: () => menuItemClicked(),
    "data-test-subj": dataTestSubj,
    disabled: disabled
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    defaultMessage: "Add to existing case",
    id: "xpack.threatIntelligence.addToExistingCase"
  }));
};
exports.AddToExistingCase = AddToExistingCase;