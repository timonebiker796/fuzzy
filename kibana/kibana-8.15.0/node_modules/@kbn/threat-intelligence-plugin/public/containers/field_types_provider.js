"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FieldTypesProvider = exports.FieldTypesContext = void 0;
var _react = _interopRequireWildcard(require("react"));
var _use_sourcerer_data_view = require("../modules/indicators/hooks/use_sourcerer_data_view");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const FieldTypesContext = exports.FieldTypesContext = /*#__PURE__*/(0, _react.createContext)({});

/**
 * Exposes mapped field types for threat intel shared use
 */
const FieldTypesProvider = ({
  children
}) => {
  const {
    indexPattern
  } = (0, _use_sourcerer_data_view.useSourcererDataView)();

  // field name to field type map to allow the cell_renderer to format dates
  const fieldTypes = (0, _react.useMemo)(() => indexPattern.fields.reduce((acc, field) => {
    acc[field.name] = field.type;
    return acc;
  }, {}), [indexPattern.fields]);
  return /*#__PURE__*/_react.default.createElement(FieldTypesContext.Provider, {
    value: fieldTypes
  }, children);
};
exports.FieldTypesProvider = FieldTypesProvider;