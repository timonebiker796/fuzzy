"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InstallCloudFormationManagedAgentStep = void 0;
var _react = _interopRequireDefault(require("react"));
var _i18n = require("@kbn/i18n");
var _cloud_formation_instructions = require("./cloud_formation_instructions");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const InstallCloudFormationManagedAgentStep = ({
  selectedApiKeyId,
  apiKeyData,
  enrollToken,
  isComplete,
  cloudSecurityIntegration,
  fleetServerHost
}) => {
  const nonCompleteStatus = selectedApiKeyId ? undefined : 'disabled';
  const status = isComplete ? 'complete' : nonCompleteStatus;
  return {
    status,
    title: _i18n.i18n.translate('xpack.fleet.agentEnrollment.cloudFormation.stepEnrollAndRunAgentTitle', {
      defaultMessage: 'Install Elastic Agent on your cloud'
    }),
    children: selectedApiKeyId && apiKeyData && cloudSecurityIntegration ? /*#__PURE__*/_react.default.createElement(_cloud_formation_instructions.CloudFormationInstructions, {
      cloudSecurityIntegration: cloudSecurityIntegration,
      enrollmentAPIKey: enrollToken,
      fleetServerHost: fleetServerHost
    }) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null)
  };
};
exports.InstallCloudFormationManagedAgentStep = InstallCloudFormationManagedAgentStep;