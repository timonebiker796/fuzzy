"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFormattedChangelog = exports.formatChangelog = exports.filterYamlChangelog = void 0;
var _jsYaml = require("js-yaml");
var _gte = _interopRequireDefault(require("semver/functions/gte"));
var _lte = _interopRequireDefault(require("semver/functions/lte"));
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const formatChangelog = parsedChangelog => {
  if (!parsedChangelog) return '';
  return parsedChangelog.reduce((acc, val) => {
    acc += `Version: ${val.version}\nChanges:\n  Type: ${val.changes[0].type}\n  Description: ${val.changes[0].description}\n  Link: ${val.changes[0].link}\n\n`;
    return acc;
  }, '');
};

// Exported for testing
exports.formatChangelog = formatChangelog;
const filterYamlChangelog = (changelogText, latestVersion, currentVersion) => {
  const parsedChangelog = changelogText ? (0, _jsYaml.safeLoad)(changelogText) : [];
  if (!currentVersion) return parsedChangelog.filter(e => (0, _lte.default)(e.version, latestVersion));
  return parsedChangelog.filter(e => (0, _lte.default)(e.version, latestVersion) && (0, _gte.default)(e.version, currentVersion));
};
exports.filterYamlChangelog = filterYamlChangelog;
const getFormattedChangelog = (changelogText, latestVersion, currentVersion) => {
  const parsed = filterYamlChangelog(changelogText, latestVersion, currentVersion);
  return formatChangelog(parsed);
};
exports.getFormattedChangelog = getFormattedChangelog;