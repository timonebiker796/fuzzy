"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GenerateServiceTokenComponent = void 0;
var _react = _interopRequireDefault(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _i18nReact = require("@kbn/i18n-react");
var _hooks = require("../../../hooks");
var _hooks2 = require("../hooks");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const FlexItemWithMinWidth = (0, _styledComponents.default)(_eui.EuiFlexItem)`
  min-width: 0px;
  max-width: 100%;
`;

// Otherwise the copy button is over the text
const CommandCode = _styledComponents.default.div.attrs(() => {
  return {
    className: 'eui-textBreakAll'
  };
})`
  margin-right: ${props => props.theme.eui.euiSizeM};
`;
const GenerateServiceTokenComponent = ({
  serviceToken,
  generateServiceToken,
  isLoadingServiceToken,
  isRemote = false
}) => {
  const {
    docLinks
  } = (0, _hooks.useStartServices)();
  const {
    permissionsError,
    isPermissionsLoading
  } = (0, _hooks2.useCheckPermissions)();
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiText, null, isRemote ? /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.fleet.settings.remoteServiceToken.generateServiceTokenDescription",
    defaultMessage: "A service token grants Fleet Server permissions to write to Elasticsearch, and can be used to configure this Elasticsearch cluster for remote output. For more information, see the {fleetUserGuide}.",
    values: {
      fleetUserGuide: /*#__PURE__*/_react.default.createElement(_eui.EuiLink, {
        href: docLinks.links.fleet.guide,
        target: "_blank"
      }, _i18n.i18n.translate('xpack.fleet.settings.editOutputFlyout.fleetUserGuideLabel', {
        defaultMessage: 'Fleet User Guide'
      }))
    }
  }) : /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.fleet.fleetServerSetup.generateServiceTokenDescription",
    defaultMessage: "A service token grants Fleet Server permissions to write to Elasticsearch."
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), !serviceToken ? /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
    content: isRemote && !!permissionsError ? /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.fleet.settings.remoteServiceToken.noPermissionTooltip",
      defaultMessage: "To generate service token, you must have the minimum required privileges. Contact your administrator."
    }) : null
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
    fill: true,
    isLoading: isLoadingServiceToken,
    isDisabled: isLoadingServiceToken || isPermissionsLoading || !!permissionsError,
    onClick: () => {
      generateServiceToken(isRemote);
    },
    "data-test-subj": "fleetServerGenerateServiceTokenBtn"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.fleet.fleetServerSetup.generateServiceTokenButton",
    defaultMessage: "Generate service token"
  }))))) : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
    iconType: "check",
    size: "s",
    color: "success",
    title: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.fleet.fleetServerSetup.saveServiceTokenDescription",
      defaultMessage: "Save your service token information. This will be shown only once."
    })
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    direction: "column",
    gutterSize: "s"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement("strong", {
    "data-test-subject": "serviceTokenSaveReminderHeader"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.fleet.fleetServerSetup.serviceTokenLabel",
    defaultMessage: "Service token"
  }))), /*#__PURE__*/_react.default.createElement(FlexItemWithMinWidth, null, /*#__PURE__*/_react.default.createElement(_eui.EuiCodeBlock, {
    paddingSize: "m",
    isCopyable: true
  }, /*#__PURE__*/_react.default.createElement(CommandCode, null, serviceToken))))));
};
exports.GenerateServiceTokenComponent = GenerateServiceTokenComponent;