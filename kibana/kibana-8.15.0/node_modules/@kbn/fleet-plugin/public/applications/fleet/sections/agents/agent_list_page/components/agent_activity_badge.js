"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AgentActivityBadge = void 0;
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _react = _interopRequireDefault(require("react"));
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const AgentActivityBadge = ({
  recentErrors,
  onClick
}) => {
  if (recentErrors === 0) {
    return null;
  }
  return /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
    content: /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
      id: "xpack.fleet.agentList.agentActivityBadge.tooltip",
      defaultMessage: "{recentErrors, plural, one {There is # new agent activity error} other {There are # new agent activity errors}}. Click to view.",
      values: {
        recentErrors
      }
    })
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiBadge, {
    color: "warning",
    onClick: onClick,
    onClickAriaLabel: "Open the Agent activity flyout",
    iconType: "warning",
    iconOnClick: onClick,
    iconOnClickAriaLabel: "Open the Agent activity flyout",
    "data-test-subj": "agentActivityBadge"
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.fleet.agentList.agentActivityBadge.label",
    defaultMessage: "Review errors"
  })));
};
exports.AgentActivityBadge = AgentActivityBadge;