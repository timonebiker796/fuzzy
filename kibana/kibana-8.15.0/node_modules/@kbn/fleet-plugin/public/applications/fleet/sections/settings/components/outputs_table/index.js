"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OutputsTable = void 0;
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _hooks = require("../../../../hooks");
var _output_health = require("../edit_output_flyout/output_health");
var _badges = require("./badges");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const NameFlexItemWithMaxWidth = (0, _styledComponents.default)(_eui.EuiFlexItem)`
  max-width: 250px;
`;

// Allow child to be truncated
const FlexGroupWithMinWidth = (0, _styledComponents.default)(_eui.EuiFlexGroup)`
  min-width: 0px;
`;
function displayOutputType(type) {
  switch (type) {
    case 'elasticsearch':
      return _i18n.i18n.translate('xpack.fleet.settings.outputsTable.elasticsearchTypeLabel', {
        defaultMessage: 'Elasticsearch'
      });
    case 'remote_elasticsearch':
      return _i18n.i18n.translate('xpack.fleet.settings.outputsTable.remoteElasticsearchTypeLabel', {
        defaultMessage: 'Remote Elasticsearch'
      });
    default:
      return type;
  }
}
const OutputsTable = ({
  outputs,
  deleteOutput
}) => {
  const authz = (0, _hooks.useAuthz)();
  const {
    getHref
  } = (0, _hooks.useLink)();
  const columns = (0, _react.useMemo)(() => {
    return [{
      render: output => /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
        alignItems: "center",
        gutterSize: "xs"
      }, /*#__PURE__*/_react.default.createElement(NameFlexItemWithMaxWidth, {
        grow: false
      }, /*#__PURE__*/_react.default.createElement("p", {
        title: output.name,
        className: `eui-textTruncate`
      }, output.name)), output.is_preconfigured && /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
        grow: false
      }, /*#__PURE__*/_react.default.createElement(_eui.EuiIconTip, {
        content: _i18n.i18n.translate('xpack.fleet.settings.outputsTable.managedTooltip', {
          defaultMessage: 'This output is managed outside of Fleet.'
        }),
        type: "lock",
        size: "m",
        color: "subdued"
      }))),
      width: '288px',
      name: _i18n.i18n.translate('xpack.fleet.settings.outputsTable.nameColumnTitle', {
        defaultMessage: 'Name'
      })
    }, {
      width: '172px',
      render: output => displayOutputType(output.type),
      name: _i18n.i18n.translate('xpack.fleet.settings.outputsTable.typeColumnTitle', {
        defaultMessage: 'Type'
      })
    }, {
      truncateText: true,
      render: output => /*#__PURE__*/_react.default.createElement(FlexGroupWithMinWidth, {
        direction: "column",
        gutterSize: "xs"
      }, (output.hosts || []).map(host => /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
        key: host
      }, /*#__PURE__*/_react.default.createElement("p", {
        title: host,
        className: `eui-textTruncate`
      }, host)))),
      name: _i18n.i18n.translate('xpack.fleet.settings.outputsTable.hostColumnTitle', {
        defaultMessage: 'Hosts'
      })
    }, {
      render: output => {
        return output !== null && output !== void 0 && output.id && output.type === 'remote_elasticsearch' ? /*#__PURE__*/_react.default.createElement(_output_health.OutputHealth, {
          output: output,
          showBadge: true
        }) : null;
      },
      name: _i18n.i18n.translate('xpack.fleet.settings.outputsTable.statusColumnTitle', {
        defaultMessage: 'Status'
      })
    }, {
      render: output => /*#__PURE__*/_react.default.createElement(_badges.DefaultBadges, {
        output: output
      }),
      width: '200px',
      name: _i18n.i18n.translate('xpack.fleet.settings.outputSection.defaultColumnTitle', {
        defaultMessage: 'Default'
      })
    }, {
      width: '68px',
      render: output => {
        const isDeleteVisible = !output.is_default && !output.is_default_monitoring && !output.is_preconfigured && authz.fleet.allSettings;
        return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
          gutterSize: "s",
          justifyContent: "flexEnd"
        }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
          grow: false
        }, isDeleteVisible && /*#__PURE__*/_react.default.createElement(_eui.EuiButtonIcon, {
          color: "text",
          iconType: "trash",
          onClick: () => deleteOutput(output),
          title: _i18n.i18n.translate('xpack.fleet.settings.outputSection.deleteButtonTitle', {
            defaultMessage: 'Delete'
          })
        })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
          grow: false
        }, /*#__PURE__*/_react.default.createElement(_eui.EuiButtonIcon, {
          color: "text",
          iconType: "pencil",
          href: getHref('settings_edit_outputs', {
            outputId: output.id
          }),
          title: _i18n.i18n.translate('xpack.fleet.settings.outputSection.editButtonTitle', {
            defaultMessage: 'Edit'
          }),
          "data-test-subj": "editOutputBtn"
        })));
      },
      name: _i18n.i18n.translate('xpack.fleet.settings.outputSection.actionsColumnTitle', {
        defaultMessage: 'Actions'
      })
    }];
  }, [deleteOutput, getHref, authz.fleet.allSettings]);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiBasicTable, {
    columns: columns,
    items: outputs,
    "data-test-subj": "settingsOutputsTable"
  });
};
exports.OutputsTable = OutputsTable;