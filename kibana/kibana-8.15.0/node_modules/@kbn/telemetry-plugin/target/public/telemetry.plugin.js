!function(e){function t(t){for(var n,r,i=t[0],o=t[1],a=0,l=[];a<i.length;a++)r=i[a],Object.prototype.hasOwnProperty.call(s,r)&&s[r]&&l.push(s[r][0]),s[r]=0;for(n in o)Object.prototype.hasOwnProperty.call(o,n)&&(e[n]=o[n]);for(c&&c(t);l.length;)l.shift()()}var n={},s={0:0};function r(t){if(n[t])return n[t].exports;var s=n[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,r),s.l=!0,s.exports}r.e=function(e){var t=[],n=s[e];if(0!==n)if(n)t.push(n[2]);else{var i=new Promise((function(t,r){n=s[e]=[t,r]}));t.push(n[2]=i);var o,a=document.createElement("script");a.charset="utf-8",a.timeout=120,r.nc&&a.setAttribute("nonce",r.nc),a.src=function(e){return r.p+"telemetry.chunk."+e+".js"}(e);var c=new Error;o=function(t){a.onerror=a.onload=null,clearTimeout(l);var n=s[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),i=t&&t.target&&t.target.src;c.message="Loading chunk "+e+" failed.\n("+r+": "+i+")",c.name="ChunkLoadError",c.type=r,c.request=i,n[1](c)}s[e]=void 0}};var l=setTimeout((function(){o({type:"timeout",target:a})}),12e4);a.onerror=a.onload=o,document.head.appendChild(a)}return Promise.all(t)},r.m=e,r.c=n,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(n,s,function(t){return e[t]}.bind(null,s));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r.oe=function(e){throw console.error(e),e};var i=window.telemetry_bundle_jsonpfunction=window.telemetry_bundle_jsonpfunction||[],o=i.push.bind(i);i.push=t,i=i.slice();for(var a=0;a<i.length;a++)t(i[a]);var c=o;r(r.s=17)}([function(e,t,n){e.exports=n(11)(2)},function(e,t){e.exports=__kbnSharedDeps__.EmotionReact},function(e,t){e.exports=__kbnSharedDeps__.React},function(e,t){e.exports=__kbnSharedDeps__.Rxjs},function(e,t,n){"use strict";n.r(t),n.d(t,"REPORT_INTERVAL_MS",(function(){return s})),n.d(t,"REPORT_INTERVAL_BUFFER_MS",(function(){return r})),n.d(t,"OPT_IN_POLL_INTERVAL_MS",(function(){return i})),n.d(t,"LOCALSTORAGE_KEY",(function(){return o})),n.d(t,"PATH_TO_ADVANCED_SETTINGS",(function(){return a})),n.d(t,"PAYLOAD_CONTENT_ENCODING",(function(){return c})),n.d(t,"ENDPOINT_VERSION",(function(){return l})),n.d(t,"ENDPOINT_STAGING",(function(){return u})),n.d(t,"ENDPOINT_PROD",(function(){return h})),n.d(t,"TELEMETRY_CHANNELS",(function(){return d}));const s=864e5,r=12e4,i=1e4,o="telemetry.data",a="/app/management/kibana/settings",c="aes256gcm",l="v3",u="https://telemetry-staging.elastic.co/",h="https://telemetry.elastic.co/",d={SNAPSHOT_CHANNEL:"kibana-snapshot",OPT_IN_STATUS_CHANNEL:"kibana-opt-in-reports"}},function(e,t){e.exports=__kbnSharedDeps__.ElasticEui},function(e,t){e.exports=__kbnSharedDeps__.KbnI18n},function(e,t){e.exports=__kbnSharedDeps__.KbnSharedUxErrorBoundary},function(e,t){e.exports=__kbnSharedDeps__.ReactDom},function(e,t,n){e.exports=n(11)(4)},function(e,t){e.exports=__kbnSharedDeps__.EmotionCache},function(e,t){e.exports=__kbnSharedDeps_npm__},function(e,t,n){n.r(t);var s=__kbnBundles__.get("plugin/kibanaUtils/public");Object.defineProperties(t,Object.getOwnPropertyDescriptors(s))},function(e,t){e.exports=__kbnSharedDeps__.ElasticEuiLibComponentsUseIsNestedEuiProvider},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=n(19),r=n(2),i=s.__importDefault(n(20));t.default=function(e,t){var n=r.useState(t),s=n[0],o=n[1];return i.default((function(){var t=e.subscribe(o);return function(){return t.unsubscribe()}}),[e]),s}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.setEuiDevProviderWarning=t.getEuiDevProviderWarning=t.emitEuiProviderWarning=void 0;var s=void 0;t.setEuiDevProviderWarning=function(e){return s=e},t.getEuiDevProviderWarning=function(){return s},t.emitEuiProviderWarning=function(e){if("function"==typeof s)return s(e);switch(s){case"log":console.log(e);break;case"warn":console.warn(e);break;case"error":throw new Error(e)}}},,function(e,t,n){n(18),__kbnBundles__.define("plugin/telemetry/public",n,21),__kbnBundles__.define("plugin/telemetry/common/constants",n,4)},function(e,t,n){n.p=window.__kbnPublicPath__.telemetry},function(e,t){e.exports=__kbnSharedDeps__.TsLib},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var s=n(2),r="undefined"!=typeof window?s.useLayoutEffect:s.useEffect;t.default=r},function(e,t,n){"use strict";n.r(t),n.d(t,"plugin",(function(){return Q}));var s=n(0),r=n.n(s),i=n(3);class ErrorWithCode extends Error{constructor(e,t){super(e),this.code=t}}function o(e){return`${e.map((e=>JSON.stringify(e))).join("\n")}\n`}class browser_shipper_ElasticV3BrowserShipper{constructor(e,t){var n,s,o;r()(this,"telemetryCounter$",new i.Subject),r()(this,"reportTelemetryCounters",(s=this.telemetryCounter$,o=browser_shipper_ElasticV3BrowserShipper.shipperName,(e,{type:t,code:n,error:r}={})=>{const i=function(e){return e.reduce(((e,t)=>(e[t.event_type]?e[t.event_type]+=1:e[t.event_type]=1,e)),{})}(e);Object.entries(i).forEach((([e,i])=>{var a;s.next({source:o,type:null!=t?t:r?"failed":"succeeded",code:null!==(a=null!=n?n:null==r?void 0:r.message)&&void 0!==a?a:"OK",count:i,event_type:e})}))})),r()(this,"url",void 0),r()(this,"internalQueue$",new i.Subject),r()(this,"flush$",new i.Subject),r()(this,"queueFlushed$",new i.Subject),r()(this,"isOptedIn$",new i.BehaviorSubject(void 0)),r()(this,"clusterUuid","UNKNOWN"),r()(this,"licenseId",void 0),this.options=e,this.initContext=t,this.setUpInternalQueueSubscriber(),this.url=function(e){const{sendTo:t,channelName:n}=e;return`${"production"===t?"https://telemetry.elastic.co":"https://telemetry-staging.elastic.co"}/v3/send/${n}`}({sendTo:null!==(n=e.sendTo)&&void 0!==n?n:t.sendTo,channelName:e.channelName})}extendContext(e){e.cluster_uuid&&(this.clusterUuid=e.cluster_uuid),e.license_id&&(this.licenseId=e.license_id)}optIn(e){this.isOptedIn$.next(e)}reportEvents(e){e.forEach((e=>{this.internalQueue$.next(e)}))}async flush(){if(this.flush$.isStopped)return;const e=Object(i.firstValueFrom)(this.queueFlushed$);this.flush$.next(),await e}shutdown(){this.internalQueue$.complete(),this.flush$.complete()}setUpInternalQueueSubscriber(){this.internalQueue$.pipe(Object(i.bufferWhen)((()=>Object(i.merge)(this.flush$,Object(i.interval)(1e3).pipe(Object(i.skipWhile)((()=>void 0===this.isOptedIn$.value)))))),Object(i.concatMap)((async e=>{!0===this.isOptedIn$.value&&e.length>0&&await this.sendEvents(e)})),Object(i.map)((()=>this.queueFlushed$.next()))).subscribe()}async sendEvents(e){try{const t=await this.makeRequest(e);this.reportTelemetryCounters(e,{code:t})}catch(t){this.reportTelemetryCounters(e,{code:t.code,error:t})}}async makeRequest(e){const t=await fetch(this.url,{method:"POST",body:o(e),headers:(n=this.clusterUuid,s=this.options.version,r=this.licenseId,{"content-type":"application/x-ndjson","x-elastic-cluster-id":n,"x-elastic-stack-version":s,...r&&{"x-elastic-license-id":r}}),...this.options.debug&&{query:{debug:!0}},keepalive:!0});var n,s,r;if(this.options.debug&&this.initContext.logger.debug(`[${browser_shipper_ElasticV3BrowserShipper.shipperName}]: ${t.status} - ${await t.text()}`),!t.ok)throw new ErrorWithCode(`${t.status} - ${await t.text()}`,`${t.status}`);return`${t.status}`}}r()(browser_shipper_ElasticV3BrowserShipper,"shipperName","elastic_v3_browser");const a="/internal/telemetry",c={version:"2"},l=`${a}/config`,u=`${a}/last_reported`,h=`${a}/userHasSeenNotice`,d=`${a}/optIn`,p=`${a}/clusters/_stats`;var y=n(12),f=n(4);function m(e){return!e||isNaN(e)||Date.now()-e>f.REPORT_INTERVAL_MS-f.REPORT_INTERVAL_BUFFER_MS}class telemetry_sender_TelemetrySender{static getRetryDelay(e){return 1e3*Math.min(Math.pow(2,e),64)*60}constructor(e,t){r()(this,"lastReported",void 0),r()(this,"storage",void 0),r()(this,"sendIfDue$",void 0),r()(this,"retryCount",0),r()(this,"updateLastReported",(e=>{this.lastReported=e,this.storage.set(f.LOCALSTORAGE_KEY,{lastReport:`${this.lastReported}`})})),r()(this,"isReportDue",(async()=>{if(!m(this.lastReported))return!1;const e=await this.telemetryService.fetchLastReported();return e&&this.updateLastReported(e),m(e)})),r()(this,"isActiveWindow",(()=>document.hasFocus())),r()(this,"shouldSendReport",(async()=>!!(this.isActiveWindow()&&this.telemetryService.canSendTelemetry()&&await this.isReportDue())&&(await this.refreshConfig(),this.telemetryService.canSendTelemetry()))),r()(this,"sendIfDue",(async()=>{await this.shouldSendReport()&&(this.updateLastReported(Date.now()),this.retryCount=0,await this.sendUsageData())})),r()(this,"sendUsageData",(async()=>{try{const e=this.telemetryService.getTelemetryUrl(),t=await this.telemetryService.fetchTelemetry();await Promise.all(t.map((async({clusterUuid:t,stats:n})=>await fetch(e,{method:"POST",headers:{"Content-Type":"application/json","X-Elastic-Stack-Version":this.telemetryService.currentKibanaVersion,"X-Elastic-Cluster-ID":t,"X-Elastic-Content-Encoding":f.PAYLOAD_CONTENT_ENCODING},body:n})))),await this.telemetryService.updateLastReported().catch((()=>{}))}catch(e){this.retryCount=this.retryCount+1,this.retryCount<20?window.setTimeout(this.sendUsageData,telemetry_sender_TelemetrySender.getRetryDelay(this.retryCount)):console.warn(`TelemetrySender.sendUsageData exceeds number of retry attempts with ${e.message}`)}})),r()(this,"startChecking",(()=>{this.sendIfDue$||(this.sendIfDue$=Object(i.merge)(Object(i.interval)(6e4),Object(i.fromEvent)(window,"focus")).pipe(Object(i.exhaustMap)(this.sendIfDue)).subscribe())})),r()(this,"stop",(()=>{var e;null===(e=this.sendIfDue$)||void 0===e||e.unsubscribe()})),this.telemetryService=e,this.refreshConfig=t,this.storage=new y.Storage(window.localStorage);const n=this.storage.get(f.LOCALSTORAGE_KEY);n&&(this.lastReported=parseInt(n.lastReport,10))}}var S=n(6);function g({channelName:e,env:t,appendServerlessChannelsSuffix:n}){const s=function(e){switch(e){case"prod":return f.ENDPOINT_PROD;case"staging":return f.ENDPOINT_STAGING;default:throw new Error(`Unknown telemetry endpoint env ${e}.`)}}(t),r=function(e,t){let n;switch(e){case"snapshot":n=f.TELEMETRY_CHANNELS.SNAPSHOT_CHANNEL;break;case"optInStatus":n=f.TELEMETRY_CHANNELS.OPT_IN_STATUS_CHANNEL;break;default:throw new Error(`Unknown telemetry channel ${e}.`)}return t?`${n}-serverless`:n}(e,n);return`${s}${f.ENDPOINT_VERSION}/send/${r}`}class telemetry_service_TelemetryService{constructor({config:e,http:t,isScreenshotMode:n,notifications:s,currentKibanaVersion:i,reportOptInStatusChange:o=!0}){r()(this,"http",void 0),r()(this,"reportOptInStatusChange",void 0),r()(this,"notifications",void 0),r()(this,"defaultConfig",void 0),r()(this,"isScreenshotMode",void 0),r()(this,"updatedConfig",void 0),r()(this,"currentKibanaVersion",void 0),r()(this,"getCanChangeOptInStatus",(()=>this.config.allowChangingOptInStatus)),r()(this,"getOptInStatusUrl",(()=>{const{appendServerlessChannelsSuffix:e,sendUsageTo:t}=this.config;return g({channelName:"optInStatus",env:t,appendServerlessChannelsSuffix:e})})),r()(this,"getTelemetryUrl",(()=>{const{appendServerlessChannelsSuffix:e,sendUsageTo:t}=this.config;return g({channelName:"snapshot",env:t,appendServerlessChannelsSuffix:e})})),r()(this,"getIsOptedIn",(()=>this.isOptedIn)),r()(this,"canSendTelemetry",(()=>!this.isScreenshotMode&&this.getIsOptedIn())),r()(this,"fetchLastReported",(async()=>{const e=await this.http.get(u,c);return null==e?void 0:e.lastReported})),r()(this,"updateLastReported",(async()=>this.http.put(u,c))),r()(this,"fetchExample",(async()=>await this.fetchTelemetry({unencrypted:!0,refreshCache:!0}))),r()(this,"fetchTelemetry",(async({unencrypted:e=!1,refreshCache:t=!1}={})=>this.http.post(p,{...c,body:JSON.stringify({unencrypted:e,refreshCache:t})}))),r()(this,"setOptIn",(async e=>{if(!this.getCanChangeOptInStatus())return!1;try{const t=await this.http.post(d,{...c,body:JSON.stringify({enabled:e})});this.reportOptInStatusChange&&await this.reportOptInStatus(t),this.isOptedIn=e}catch(e){return this.notifications.toasts.addError(e,{title:S.i18n.translate("telemetry.optInErrorToastTitle",{defaultMessage:"Error"}),toastMessage:S.i18n.translate("telemetry.optInErrorToastText",{defaultMessage:"An error occurred while trying to set the usage statistics preference."})}),!1}return!0})),r()(this,"setUserHasSeenNotice",(async()=>{try{await this.http.put(h,c),this.userHasSeenOptedInNotice=!0}catch(e){this.notifications.toasts.addError(e,{title:S.i18n.translate("telemetry.optInNoticeSeenErrorTitle",{defaultMessage:"Error"}),toastMessage:S.i18n.translate("telemetry.optInNoticeSeenErrorToastText",{defaultMessage:"An error occurred dismissing the notice"})}),this.userHasSeenOptedInNotice=!1}})),r()(this,"reportOptInStatus",(async e=>{const t=this.getOptInStatusUrl();try{await Promise.all(e.map((async({clusterUuid:e,stats:n})=>await fetch(t,{method:"POST",headers:{"Content-Type":"application/json","X-Elastic-Stack-Version":this.currentKibanaVersion,"X-Elastic-Cluster-ID":e,"X-Elastic-Content-Encoding":f.PAYLOAD_CONTENT_ENCODING},body:n}))))}catch(e){}})),this.defaultConfig=e,this.isScreenshotMode=n,this.reportOptInStatusChange=o,this.notifications=s,this.currentKibanaVersion=i,this.http=t}set config(e){this.updatedConfig=e}get config(){return{...this.defaultConfig,...this.updatedConfig}}get isOptedIn(){return Boolean(this.config.optIn)}set isOptedIn(e){this.config={...this.config,optIn:e}}get userHasSeenOptedInNotice(){return this.config.telemetryNotifyUserAboutOptInDefault}set userHasSeenOptedInNotice(e){this.config={...this.config,telemetryNotifyUserAboutOptInDefault:e}}getUserShouldSeeOptInNotice(){var e;return null!==(e=!this.config.hidePrivacyStatement&&this.config.userCanChangeSettings&&(this.config.telemetryNotifyUserAboutOptInDefault||null===this.config.optIn))&&void 0!==e&&e}get userCanChangeSettings(){var e;return null!==(e=this.config.userCanChangeSettings)&&void 0!==e&&e}set userCanChangeSettings(e){this.config={...this.config,userCanChangeSettings:e}}}var v=n(2),b=n.n(v),_=n(8),O=n.n(_),C=n(9),I=n.n(C),N=n(13),E=n(15),w=n(14),T=n.n(w),j=n(10),x=n.n(j),P=n(5);const D="eui-global",R="eui-utilities",k={darkMode:!1};var A=n(1);const $=[P.euiStylisPrefixer],U=x()({key:"css",stylisPlugins:$,container:document.querySelector('meta[name="emotion"]')}),L=x()({key:D,stylisPlugins:$,container:document.querySelector(`meta[name="${D}"]`)}),M=x()({key:R,stylisPlugins:$,container:document.querySelector(`meta[name="${R}"]`)});U.compat=!0,L.compat=!0,M.compat=!0;const B={default:U,global:L,utility:M},V=({theme:{theme$:e},globalStyles:t,colorMode:n,modify:s,children:r})=>{const i=T()(e,k),o=Object(v.useMemo)((()=>(e=>e.darkMode?P.COLOR_MODES_STANDARD.dark:P.COLOR_MODES_STANDARD.light)(i)),[i]),a=n||o,c=!1!==t&&void 0;return Object(A.jsx)(P.EuiProvider,{cache:B,modify:s,colorMode:a,globalStyles:c,utilityClasses:c},r)},K=({children:e,i18n:t,...n})=>Object(N.useIsNestedEuiProvider)()?(Object(E.emitEuiProviderWarning)("KibanaRootContextProvider has likely been nested in this React tree, either by direct reference or by KibanaRenderContextProvider.  The result of this nesting is a nesting of EuiProvider, which has negative effects.  Check your React tree for nested Kibana context providers."),Object(A.jsx)(t.Context,null,e)):Object(A.jsx)(V,n,Object(A.jsx)(t.Context,null,e));var H=n(7);const W=({children:e,...t})=>Object(A.jsx)(K,I()({globalStyles:!1},t),Object(A.jsx)(H.KibanaErrorBoundaryProvider,{analytics:t.analytics},Object(A.jsx)(H.KibanaErrorBoundary,null,e)));v.Component;var F={name:"1azakc",styles:"text-align:center"};const G=()=>{const e=F;return Object(A.jsx)("div",{css:e},Object(A.jsx)(P.EuiLoadingSpinner,null))},q=(e,t=Object(A.jsx)(G,null))=>b.a.forwardRef(((n,s)=>Object(A.jsx)(H.KibanaErrorBoundaryProvider,{analytics:n.analytics},Object(A.jsx)(H.KibanaErrorBoundary,null,Object(A.jsx)(v.Suspense,{fallback:t},Object(A.jsx)(e,I()({},n,{ref:s})))))));class telemetry_notifications_TelemetryNotifications{constructor({http:e,overlays:t,telemetryService:s,telemetryConstants:i,...o}){r()(this,"http",void 0),r()(this,"overlays",void 0),r()(this,"startServices",void 0),r()(this,"telemetryConstants",void 0),r()(this,"telemetryService",void 0),r()(this,"optInStatusNoticeBannerId",void 0),r()(this,"shouldShowOptInStatusNoticeBanner",(()=>{const e=this.telemetryService.getUserShouldSeeOptInNotice();return!(void 0!==this.optInStatusNoticeBannerId)&&e})),r()(this,"renderOptInStatusNoticeBanner",(()=>{const e=function({onSeen:e,overlays:t,http:s,telemetryConstants:r,telemetryService:i,...o}){const a=q(b.a.lazy((()=>n.e(1).then(n.bind(null,25)).then((({OptInStatusNoticeBanner:e})=>({default:e})))))),c=(l=Object(A.jsx)(a,{onSeenBanner:e,http:s,telemetryConstants:r,telemetryService:i}),u=o,e=>(O.a.render(Object(A.jsx)(W,u,l),e),()=>O.a.unmountComponentAtNode(e)));var l,u;return t.banners.add(c,1e4)}({http:this.http,onSeen:this.setOptInStatusNoticeSeen,overlays:this.overlays,telemetryConstants:this.telemetryConstants,telemetryService:this.telemetryService,...this.startServices});this.optInStatusNoticeBannerId=e})),r()(this,"setOptInStatusNoticeSeen",(async()=>{this.optInStatusNoticeBannerId&&(this.overlays.banners.remove(this.optInStatusNoticeBannerId),this.optInStatusNoticeBannerId=void 0),await this.telemetryService.setUserHasSeenNotice()})),this.telemetryService=s,this.http=e,this.overlays=t,this.startServices=o,this.telemetryConstants=i}}function Y(e){return{getPrivacyStatementUrl:()=>e.links.legal.privacyStatement}}class plugin_TelemetryPlugin{constructor(e){r()(this,"currentKibanaVersion",void 0),r()(this,"config",void 0),r()(this,"telemetryLabels$",void 0),r()(this,"telemetrySender",void 0),r()(this,"telemetryNotifications",void 0),r()(this,"telemetryService",void 0),r()(this,"canUserChangeSettings",!0),this.currentKibanaVersion=e.env.packageInfo.version,this.config=e.config.get(),this.telemetryLabels$=new i.BehaviorSubject(this.config.labels)}setup({analytics:e,http:t,notifications:s,getStartServices:r},{screenshotMode:o,home:a}){const c=this.config,l=this.currentKibanaVersion;let u;return this.telemetryService=new telemetry_service_TelemetryService({config:c,isScreenshotMode:this.shouldSkipTelemetry(o),http:t,notifications:s,currentKibanaVersion:l}),r().then((([{docLinks:e}])=>{u=Y(e)})),e.registerContextProvider({name:"telemetry labels",context$:this.telemetryLabels$.pipe(Object(i.tap)((e=>{var t;null===(t=window.elasticApm)||void 0===t||t.addLabels(e)})),Object(i.map)((e=>({labels:e})))),schema:{labels:{type:"pass_through",_meta:{description:"Custom labels added to the telemetry.labels config in the kibana.yml"}}}}),e.registerShipper(browser_shipper_ElasticV3BrowserShipper,{channelName:"kibana-browser",version:l,sendTo:"prod"===c.sendUsageTo?"production":"staging"}),this.telemetrySender=new telemetry_sender_TelemetrySender(this.telemetryService,(async()=>{await this.refreshConfig(t),e.optIn({global:{enabled:this.telemetryService.isOptedIn&&!this.shouldSkipTelemetry(o)}})})),a&&!this.config.hidePrivacyStatement&&(a.welcomeScreen.registerOnRendered((()=>{var e,t;null!==(e=this.telemetryService)&&void 0!==e&&e.userCanChangeSettings&&(null===(t=this.telemetryNotifications)||void 0===t||t.setOptInStatusNoticeSeen())})),a.welcomeScreen.registerTelemetryNoticeRenderer((()=>function(e,t,s){const r=q(b.a.lazy((()=>n.e(2).then(n.bind(null,26)).then((({WelcomeTelemetryNotice:e})=>({default:e}))))));return Object(A.jsx)(r,{telemetryService:e,telemetryConstants:s,addBasePath:t})}(this.telemetryService,t.basePath.prepend,u)))),{telemetryService:this.getTelemetryServicePublicApis()}}start({analytics:e,http:t,overlays:n,application:s,docLinks:r,...o},{screenshotMode:a}){if(!this.telemetryService)throw Error("Telemetry plugin failed to initialize properly.");this.canUserChangeSettings=this.getCanUserChangeSettings(s),this.telemetryService.userCanChangeSettings=this.canUserChangeSettings;const c=Y(r),l=new telemetry_notifications_TelemetryNotifications({http:t,overlays:n,telemetryService:this.telemetryService,telemetryConstants:c,analytics:e,...o});return this.telemetryNotifications=l,s.currentAppId$.pipe(Object(i.switchMap)((async()=>{if(this.shouldSkipTelemetry(a))return void e.optIn({global:{enabled:!1}});const n=await this.refreshConfig(t);if(e.optIn({global:{enabled:this.telemetryService.isOptedIn}}),this.getIsUnauthenticated(t))return;const s=null==n?void 0:n.banner;this.maybeStartTelemetryPoller(),s&&this.maybeShowOptedInNotificationBanner()}))).subscribe(),{telemetryService:this.getTelemetryServicePublicApis(),telemetryNotifications:{setOptedInNoticeSeen:()=>l.setOptInStatusNoticeSeen()},telemetryConstants:c}}stop(){var e;null===(e=this.telemetrySender)||void 0===e||e.stop()}shouldSkipTelemetry(e){return e.isScreenshotMode()||window.navigator.userAgent.includes("Elastic/Synthetics")}getTelemetryServicePublicApis(){const e=this.telemetryService;return{getIsOptedIn:()=>e.getIsOptedIn(),setOptIn:t=>e.setOptIn(t),canSendTelemetry:()=>e.canSendTelemetry(),userCanChangeSettings:e.userCanChangeSettings,getCanChangeOptInStatus:()=>e.getCanChangeOptInStatus(),fetchExample:()=>e.fetchExample()}}async refreshConfig(e){const t=await this.fetchUpdatedConfig(e);return this.telemetryService&&(this.telemetryService.config=t),this.telemetryLabels$.next(t.labels),t}getCanUserChangeSettings(e){var t,n,s;return null===(t=null===(n=e.capabilities)||void 0===n||null===(s=n.savedObjectsManagement)||void 0===s?void 0:s.edit)||void 0===t||t}getIsUnauthenticated(e){const{anonymousPaths:t}=e;return t.isAnonymous(window.location.pathname)}maybeStartTelemetryPoller(){this.telemetrySender&&this.telemetrySender.startChecking()}maybeShowOptedInNotificationBanner(){this.telemetryNotifications&&this.telemetryNotifications.shouldShowOptInStatusNoticeBanner()&&this.telemetryNotifications.renderOptInStatusNoticeBanner()}async fetchUpdatedConfig(e){const{allowChangingOptInStatus:t,optIn:n,sendUsageFrom:s,telemetryNotifyUserAboutOptInDefault:r,labels:i}=await e.get(l,c);return{...this.config,allowChangingOptInStatus:t,optIn:n,sendUsageFrom:s,telemetryNotifyUserAboutOptInDefault:r,labels:i,userCanChangeSettings:this.canUserChangeSettings}}}function Q(e){return new plugin_TelemetryPlugin(e)}},function(e,t){e.exports=__kbnSharedDeps__.KbnI18nReact}]);