"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iconsSet = void 0;
var _i18n = require("@kbn/i18n");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const iconsSet = exports.iconsSet = [{
  value: 'empty',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.noIconLabel', {
    defaultMessage: 'None'
  })
}, {
  value: 'sortUp',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.sortUpLabel', {
    defaultMessage: 'Sort up'
  })
}, {
  value: 'sortDown',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.sortDownLabel', {
    defaultMessage: 'Sort down'
  })
}, {
  value: 'compute',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.computeLabel', {
    defaultMessage: 'Compute'
  })
}, {
  value: 'globe',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.globeLabel', {
    defaultMessage: 'Globe'
  })
}, {
  value: 'temperature',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.temperatureLabel', {
    defaultMessage: 'Temperature'
  })
}, {
  value: 'asterisk',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.asteriskIconLabel', {
    defaultMessage: 'Asterisk'
  })
}, {
  value: 'alert',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.alertIconLabel', {
    defaultMessage: 'Alert'
  })
}, {
  value: 'bell',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.bellIconLabel', {
    defaultMessage: 'Bell'
  })
}, {
  value: 'bolt',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.boltIconLabel', {
    defaultMessage: 'Bolt'
  })
}, {
  value: 'bug',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.bugIconLabel', {
    defaultMessage: 'Bug'
  })
}, {
  value: 'editorComment',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.commentIconLabel', {
    defaultMessage: 'Comment'
  })
}, {
  value: 'flag',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.flagIconLabel', {
    defaultMessage: 'Flag'
  })
}, {
  value: 'heart',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.heartLabel', {
    defaultMessage: 'Heart'
  })
}, {
  value: 'mapMarker',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.mapMarkerLabel', {
    defaultMessage: 'Map Marker'
  })
}, {
  value: 'pin',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.mapPinLabel', {
    defaultMessage: 'Map Pin'
  })
}, {
  value: 'starEmpty',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.starLabel', {
    defaultMessage: 'Star'
  })
}, {
  value: 'tag',
  label: _i18n.i18n.translate('xpack.lens.metric.iconSelect.tagIconLabel', {
    defaultMessage: 'Tag'
  })
}];