"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToolbarPopover = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
require("./toolbar_popover.scss");
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _sharedUxButtonToolbar = require("@kbn/shared-ux-button-toolbar");
var _chartIcons = require("@kbn/chart-icons");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const typeToIconMap = {
  legend: _chartIcons.EuiIconLegend,
  labels: 'visText',
  values: 'number',
  list: 'list',
  visualOptions: 'brush'
};
const ToolbarPopover = ({
  children,
  title,
  type,
  isDisabled = false,
  groupPosition,
  buttonDataTestSubj,
  handleClose,
  panelClassName = 'lnsVisToolbar__popover',
  ...euiPopoverProps
}) => {
  const [isOpen, setIsOpen] = (0, _react.useState)(false);
  const iconType = typeof type === 'string' ? typeToIconMap[type] : type;
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiPopover, (0, _extends2.default)({
    panelClassName: panelClassName,
    ownFocus: true,
    "aria-label": title,
    button: /*#__PURE__*/_react.default.createElement(_sharedUxButtonToolbar.ToolbarButton, {
      as: 'iconButton',
      iconType: iconType,
      onClick: () => {
        setIsOpen(!isOpen);
      },
      label: title,
      "aria-label": title,
      isDisabled: isDisabled,
      groupPosition: groupPosition,
      "data-test-subj": buttonDataTestSubj
    }),
    isOpen: isOpen,
    closePopover: () => {
      setIsOpen(false);
      handleClose === null || handleClose === void 0 ? void 0 : handleClose();
    },
    anchorPosition: "downRight"
  }, euiPopoverProps), /*#__PURE__*/_react.default.createElement(_eui.EuiPopoverTitle, null, title), children));
};
exports.ToolbarPopover = ToolbarPopover;