"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MessageList = void 0;
require("./workspace_panel_wrapper.scss");
require("./message_list.scss");
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _react2 = require("@emotion/react");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const MessageList = ({
  messages,
  customButtonStyles
}) => {
  const [isPopoverOpen, setIsPopoverOpen] = (0, _react.useState)(false);
  let warningCount = 0;
  let errorCount = 0;
  messages.forEach(({
    severity
  }) => {
    if (severity === 'warning') {
      warningCount++;
    } else {
      errorCount++;
    }
  });
  const buttonLabel = errorCount > 0 && warningCount > 0 ? _i18n.i18n.translate('xpack.lens.messagesButton.label.errorsAndWarnings', {
    defaultMessage: '{errorCount} {errorCount, plural, one {error} other {errors}}, {warningCount} {warningCount, plural, one {warning} other {warnings}}',
    values: {
      errorCount,
      warningCount
    }
  }) : errorCount > 0 ? _i18n.i18n.translate('xpack.lens.messagesButton.label.errors', {
    defaultMessage: '{errorCount} {errorCount, plural, one {error} other {errors}}',
    values: {
      errorCount
    }
  }) : _i18n.i18n.translate('xpack.lens.messagesButton.label.warnings', {
    defaultMessage: '{warningCount} {warningCount, plural, one {warning} other {warnings}}',
    values: {
      warningCount
    }
  });
  const onButtonClick = () => setIsPopoverOpen(isOpen => !isOpen);
  const closePopover = () => setIsPopoverOpen(false);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPopover, {
    panelPaddingSize: "none",
    button: /*#__PURE__*/_react.default.createElement(_eui.EuiToolTip, {
      content: buttonLabel
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
      minWidth: 0,
      color: errorCount ? 'danger' : 'warning',
      onClick: onButtonClick,
      className: "lnsWorkspaceWarning__button",
      "data-test-subj": "lens-message-list-trigger",
      title: buttonLabel,
      css: customButtonStyles
    }, errorCount > 0 && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
      type: "error"
    }), errorCount), warningCount > 0 && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
      type: "alert",
      css: (0, _react2.css)`
                    margin-left: 4px;
                  `
    }), warningCount))),
    isOpen: isPopoverOpen,
    closePopover: closePopover
  }, /*#__PURE__*/_react.default.createElement("ul", {
    className: "lnsWorkspaceWarningList"
  }, messages.map((message, index) => /*#__PURE__*/_react.default.createElement("li", {
    key: index,
    className: "lnsWorkspaceWarningList__item",
    "data-test-subj": `lens-message-list-${message.severity}`
  }, typeof message.longMessage === 'function' ? message.longMessage(closePopover) : /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    gutterSize: "s",
    responsive: false,
    className: "lnsWorkspaceWarningList__textItem"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, message.severity === 'error' ? /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
    type: "error",
    color: "danger"
  }) : /*#__PURE__*/_react.default.createElement(_eui.EuiIcon, {
    type: "alert",
    color: "warning"
  })), /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: 1,
    className: "lnsWorkspaceWarningList__description"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    size: "s"
  }, message.longMessage)))))));
};
exports.MessageList = MessageList;