"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.wmsLayerWizardConfig = void 0;
var _react = _interopRequireDefault(require("react"));
var _i18n = require("@kbn/i18n");
var _wms_create_source_editor = require("./wms_create_source_editor");
var _wms_source = require("./wms_source");
var _raster_tile_layer = require("../../layers/raster_tile_layer/raster_tile_layer");
var _constants = require("../../../../common/constants");
var _web_map_service_layer_icon = require("../../layers/wizards/icons/web_map_service_layer_icon");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

// @ts-ignore

const wmsLayerWizardConfig = exports.wmsLayerWizardConfig = {
  id: _constants.WIZARD_ID.WMS_LAYER,
  order: 10,
  categories: [_constants.LAYER_WIZARD_CATEGORY.REFERENCE],
  description: _i18n.i18n.translate('xpack.maps.source.wmsDescription', {
    defaultMessage: 'Maps from OGC Standard WMS'
  }),
  icon: _web_map_service_layer_icon.WebMapServiceLayerIcon,
  renderWizard: ({
    previewLayers
  }) => {
    const onSourceConfigChange = sourceConfig => {
      if (!sourceConfig) {
        previewLayers([]);
        return;
      }
      const layerDescriptor = _raster_tile_layer.RasterTileLayer.createDescriptor({
        sourceDescriptor: _wms_source.WMSSource.createDescriptor(sourceConfig)
      });
      previewLayers([layerDescriptor]);
    };
    return /*#__PURE__*/_react.default.createElement(_wms_create_source_editor.WMSCreateSourceEditor, {
      onSourceConfigChange: onSourceConfigChange
    });
  },
  title: _wms_source.sourceTitle
};