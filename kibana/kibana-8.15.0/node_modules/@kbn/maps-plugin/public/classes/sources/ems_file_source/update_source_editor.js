"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UpdateSourceEditor = UpdateSourceEditor;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _tooltip_selector = require("../../../components/tooltip_selector");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function UpdateSourceEditor(props) {
  const [isLoading, setIsLoading] = (0, _react.useState)(false);
  const [fields, setFields] = (0, _react.useState)([]);
  (0, _react.useEffect)(() => {
    let ignore = false;
    setIsLoading(true);
    props.source.getFields().then(nextFields => {
      if (!ignore) {
        setFields(nextFields);
        setIsLoading(false);
      }
    }).catch(err => {
      if (!ignore) {
        // When a matching EMS-config cannot be found, the source already will have thrown errors during the data request.
        // This will propagate to the vector-layer and be displayed in the UX
        setIsLoading(false);
      }
    });
    return () => {
      ignore = true;
    };
    // only run onMount
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiPanel, null, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h5", null, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.maps.emsSource.tooltipsTitle",
    defaultMessage: "Tooltip fields"
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "m"
  }), /*#__PURE__*/_react.default.createElement(_eui.EuiSkeletonText, {
    isLoading: isLoading
  }, /*#__PURE__*/_react.default.createElement(_tooltip_selector.TooltipSelector, {
    tooltipFields: props.tooltipFields,
    onChange: selectedFieldNames => {
      props.onChange({
        propName: 'tooltipProperties',
        value: selectedFieldNames
      });
    },
    fields: fields
  }))), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
    size: "s"
  }));
}