"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.kibanaBasemapLayerWizardConfig = void 0;
var _react = _interopRequireDefault(require("react"));
var _i18n = require("@kbn/i18n");
var _create_source_editor = require("./create_source_editor");
var _kibana_tilemap_source = require("./kibana_tilemap_source");
var _raster_tile_layer = require("../../layers/raster_tile_layer/raster_tile_layer");
var _util = require("../../../util");
var _constants = require("../../../../common/constants");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

// @ts-ignore

// @ts-ignore

const kibanaBasemapLayerWizardConfig = exports.kibanaBasemapLayerWizardConfig = {
  id: _constants.WIZARD_ID.KIBANA_BASEMAP,
  order: 10,
  categories: [_constants.LAYER_WIZARD_CATEGORY.REFERENCE],
  checkVisibility: async () => {
    const tilemap = (0, _util.getKibanaTileMap)();
    // @ts-ignore
    return !!tilemap.url;
  },
  description: _i18n.i18n.translate('xpack.maps.source.kbnTMSDescription', {
    defaultMessage: 'Tile map service configured in kibana.yml'
  }),
  icon: 'logoKibana',
  renderWizard: ({
    previewLayers
  }) => {
    const onSourceConfigChange = () => {
      const layerDescriptor = _raster_tile_layer.RasterTileLayer.createDescriptor({
        sourceDescriptor: _kibana_tilemap_source.KibanaTilemapSource.createDescriptor()
      });
      previewLayers([layerDescriptor]);
    };
    return /*#__PURE__*/_react.default.createElement(_create_source_editor.CreateSourceEditor, {
      onSourceConfigChange: onSourceConfigChange
    });
  },
  title: _kibana_tilemap_source.sourceTitle
};