"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.GeometryFilterForm = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _public = require("@kbn/unified-search-plugin/public");
var _i18n_getters = require("../../../../common/i18n_getters");
var _action_select = require("../../action_select");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const RELATION_OPTIONS = [{
  value: 'intersects',
  text: (0, _i18n_getters.getEsSpatialRelationLabel)('intersects')
}, {
  value: 'disjoint',
  text: (0, _i18n_getters.getEsSpatialRelationLabel)('disjoint')
}, {
  value: 'within',
  text: (0, _i18n_getters.getEsSpatialRelationLabel)('within')
}];
class GeometryFilterForm extends _react.Component {
  constructor(...args) {
    super(...args);
    (0, _defineProperty2.default)(this, "state", {
      actionId: _public.ACTION_GLOBAL_APPLY_FILTER,
      geometryLabel: this.props.intitialGeometryLabel,
      relation: 'intersects'
    });
    (0, _defineProperty2.default)(this, "_onGeometryLabelChange", e => {
      this.setState({
        geometryLabel: e.target.value
      });
    });
    (0, _defineProperty2.default)(this, "_onRelationChange", e => {
      this.setState({
        relation: e.target.value
      });
    });
    (0, _defineProperty2.default)(this, "_onActionIdChange", value => {
      this.setState({
        actionId: value
      });
    });
    (0, _defineProperty2.default)(this, "_onSubmit", () => {
      this.props.onSubmit({
        actionId: this.state.actionId,
        geometryLabel: this.state.geometryLabel,
        relation: this.state.relation
      });
    });
  }
  _renderRelationInput() {
    return /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
      label: _i18n.i18n.translate('xpack.maps.geometryFilterForm.relationLabel', {
        defaultMessage: 'Spatial relation'
      }),
      display: "rowCompressed"
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiSelect, {
      compressed: true,
      options: RELATION_OPTIONS,
      value: this.state.relation,
      onChange: this._onRelationChange
    }));
  }
  render() {
    let error;
    if (this.props.errorMsg) {
      error = /*#__PURE__*/_react.default.createElement(_eui.EuiFormErrorText, null, this.props.errorMsg);
    }
    return /*#__PURE__*/_react.default.createElement(_eui.EuiForm, {
      className: this.props.className
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, {
      label: _i18n.i18n.translate('xpack.maps.geometryFilterForm.geometryLabelLabel', {
        defaultMessage: 'Geometry label'
      }),
      display: "rowCompressed"
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiFieldText, {
      compressed: true,
      value: this.state.geometryLabel,
      onChange: this._onGeometryLabelChange
    })), this._renderRelationInput(), /*#__PURE__*/_react.default.createElement(_action_select.ActionSelect, {
      getFilterActions: this.props.getFilterActions,
      getActionContext: this.props.getActionContext,
      value: this.state.actionId,
      onChange: this._onActionIdChange
    }), /*#__PURE__*/_react.default.createElement(_eui.EuiSpacer, {
      size: "m"
    }), error, /*#__PURE__*/_react.default.createElement(_eui.EuiTextAlign, {
      textAlign: "right"
    }, /*#__PURE__*/_react.default.createElement(_eui.EuiButton, {
      size: "s",
      fill: true,
      onClick: this._onSubmit,
      isDisabled: !this.state.geometryLabel,
      isLoading: this.props.isLoading
    }, this.props.buttonLabel)));
  }
}
exports.GeometryFilterForm = GeometryFilterForm;