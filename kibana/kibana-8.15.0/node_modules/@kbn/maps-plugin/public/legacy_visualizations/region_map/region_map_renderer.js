"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.regionMapRenderer = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactDom = require("react-dom");
var _sharedUxUtility = require("@kbn/shared-ux-utility");
var _reactKibanaContextRender = require("@kbn/react-kibana-context-render");
var _types = require("./types");
var _kibana_services = require("../../kibana_services");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; } /*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */
const Component = (0, _sharedUxUtility.dynamic)(async () => {
  const {
    RegionMapVisualization
  } = await Promise.resolve().then(() => _interopRequireWildcard(require('./region_map_visualization')));
  return {
    default: RegionMapVisualization
  };
});
const regionMapRenderer = exports.regionMapRenderer = {
  name: _types.REGION_MAP_RENDER,
  reuseDomNode: true,
  render: async (domNode, {
    filters,
    query,
    timeRange,
    visConfig
  }, handlers) => {
    handlers.onDestroy(() => {
      (0, _reactDom.unmountComponentAtNode)(domNode);
    });
    const props = {
      onInitialRenderComplete: () => {
        handlers.done();
      },
      filters,
      query,
      timeRange,
      visConfig
    };
    (0, _reactDom.render)( /*#__PURE__*/_react.default.createElement(_reactKibanaContextRender.KibanaRenderContextProvider, {
      analytics: (0, _kibana_services.getAnalytics)(),
      i18n: (0, _kibana_services.getCoreI18n)(),
      theme: (0, _kibana_services.getTheme)()
    }, /*#__PURE__*/_react.default.createElement(Component, props)), domNode);
  }
};