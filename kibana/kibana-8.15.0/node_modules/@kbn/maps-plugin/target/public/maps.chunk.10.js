/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.maps_bundle_jsonpfunction=window.maps_bundle_jsonpfunction||[]).push([[10],{95:function(n,e,t){"use strict";t.r(e),t.d(e,"getKibanaTileMap",(function(){return a})),t.d(e,"getEmsFileLayers",(function(){return r})),t.d(e,"getEmsTmsServices",(function(){return u})),t.d(e,"isRetina",(function(){return d}));var i=t(5),c=t(24);function a(){const n=Object(i.B)();return n.config.tilemap?n.config.tilemap:{}}async function r(){return Object(i.m)().isEMSEnabled()?(await l()).getFileLayers():[]}async function u(){return Object(i.m)().isEMSEnabled()?(await l()).getTMSServices():[]}let s,o=null;async function l(){o||(o=new Promise((async(n,e)=>{try{n(await Object(i.B)().createEMSClient())}catch(n){e(n)}})));const n=await o,e=Object(c.c)();return s!==e&&(s=e,n.addQueryParams({license:e||""})),n}function d(){return 2===window.devicePixelRatio}}}]);