/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.maps_bundle_jsonpfunction=window.maps_bundle_jsonpfunction||[]).push([[23],{109:function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=r(2);t.default=function(){var e=n.useRef(!1),t=n.useCallback((function(){return e.current}),[]);return n.useEffect((function(){return e.current=!0,function(){e.current=!1}})),t}},338:function(e,t,r){"use strict";r.r(t),r.d(t,"PassiveMap",(function(){return d}));var n=r(2),i=r(109),a=r.n(i),s=r(25),u=r(47),c=r(157),o=r(4);function d(e){const t=a()(),r=Object(n.useRef)(void 0),i=Object(n.useRef)(void 0),d=Object(n.useRef)(void 0);return Object(n.useEffect)((()=>{r.current?r.current.updateLayerById(e.passiveLayer):i.current=e.passiveLayer}),[e.passiveLayer]),Object(n.useEffect)((()=>()=>{d.current&&d.current.unsubscribe()}),[]),Object(o.jsx)("div",{className:"mapEmbeddableContainer"},Object(o.jsx)(s.ReactEmbeddableRenderer,{type:u.MAP_SAVED_OBJECT_TYPE,getParentApi:()=>({getSerializedStateForChild:()=>{const t=Object(c.createBasemapLayerDescriptor)(),r=t?[t]:[];return{rawState:{attributes:{title:"",layerListJSON:JSON.stringify([...r,e.passiveLayer])},filters:[],hidePanelTitles:!0,viewMode:s.ViewMode.VIEW,isLayerTOCOpen:!1,hideFilterActions:!0,mapSettings:{disableInteractive:!1,hideToolbarOverlay:!1,hideLayerControl:!1,hideViewControl:!1,initialLocation:u.INITIAL_LOCATION.AUTO_FIT_TO_BOUNDS,autoFitToDataBounds:!0},isSharable:!1},references:[]}}}),onApiAvailable:n=>{r.current=n,i.current&&n.updateLayerById(i.current),e.onRenderComplete&&(d.current=n.onRenderComplete$.subscribe((()=>{t()&&e.onRenderComplete&&e.onRenderComplete()})))},hidePanelChrome:!0}))}}}]);