/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.maps_bundle_jsonpfunction=window.maps_bundle_jsonpfunction||[]).push([[16,10],{121:function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var a=n(3),i=n(5);function s(){const e=Object(i.m)();return e.isIncludeElasticMapsService()?e.isEMSUrlSet()?e.hasOnPremLicense()?a.i18n.translate("xpack.maps.source.ems.noOnPremConnectionDescription",{defaultMessage:"Cannot connect to {host}.",values:{host:e.getEMSRoot()}}):a.i18n.translate("xpack.maps.source.ems.noOnPremLicenseDescription",{defaultMessage:"An enterprise license is required to connect to local Elastic Maps Server installations."}):a.i18n.translate("xpack.maps.source.ems.noAccessDescription",{defaultMessage:"Kibana is unable to access Elastic Maps Service. Contact your system administrator."}):a.i18n.translate("xpack.maps.source.ems.disabledDescription",{defaultMessage:'Access to Elastic Maps Service has been disabled. Ask your system administrator to set "map.includeElasticMapsService" in kibana.yml.'})}},640:function(e,t,n){"use strict";n.r(t),n.d(t,"getLocation",(function(){return i}));var a=n(337);async function i(e,t){const{label:n,emsLayerId:i,leftFieldName:s,termsFieldName:c,termsSize:r,colorSchema:o,indexPatternId:l,metricAgg:u,metricFieldName:m,filters:d,query:f,timeRange:p,hash:b=!0}=e,g=[],y=Object(a.a)({label:n,emsLayerId:i,leftFieldName:s,termsFieldName:c,termsSize:r,colorSchema:o,indexPatternId:l,metricAgg:u,metricFieldName:m});return y&&g.push(y),await t.locator.getLocation({initialLayers:g,filters:d,query:f,timeRange:p,hash:b})}},95:function(e,t,n){"use strict";n.r(t),n.d(t,"getKibanaTileMap",(function(){return s})),n.d(t,"getEmsFileLayers",(function(){return c})),n.d(t,"getEmsTmsServices",(function(){return r})),n.d(t,"isRetina",(function(){return m}));var a=n(5),i=n(24);function s(){const e=Object(a.B)();return e.config.tilemap?e.config.tilemap:{}}async function c(){return Object(a.m)().isEMSEnabled()?(await u()).getFileLayers():[]}async function r(){return Object(a.m)().isEMSEnabled()?(await u()).getTMSServices():[]}let o,l=null;async function u(){l||(l=new Promise((async(e,t)=>{try{e(await Object(a.B)().createEMSClient())}catch(e){t(e)}})));const e=await l,t=Object(i.c)();return o!==t&&(o=t,e.addQueryParams({license:t||""})),e}function m(){return 2===window.devicePixelRatio}}}]);