/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.maps_bundle_jsonpfunction=window.maps_bundle_jsonpfunction||[]).push([[8],{155:function(e,t,s){"use strict";s.d(t,"a",(function(){return EMSFileSelect}));var i=s(6),o=s.n(i),r=s(2),a=s(14),l=s(3),n=s(95),c=s(121),p=s(4);class EMSFileSelect extends r.Component{constructor(...e){super(...e),o()(this,"_isMounted",!1),o()(this,"state",{hasLoadedOptions:!1,emsFileOptions:[]}),o()(this,"_loadFileOptions",(async()=>{let e=[];try{e=await Object(n.getEmsFileLayers)()}catch(e){this._isMounted&&this.setState({hasLoadedOptions:!0,emsFileOptions:[]})}const t=e.map((e=>({value:e.getId(),label:e.getDisplayName()})));this._isMounted&&this.setState({hasLoadedOptions:!0,emsFileOptions:t})})),o()(this,"_onChange",(e=>{0!==e.length&&this.props.onChange(e[0].value)}))}componentWillUnmount(){this._isMounted=!1}componentDidMount(){this._isMounted=!0,this._loadFileOptions()}_renderSelect(){if(!this.state.hasLoadedOptions)return Object(p.jsx)(a.EuiSelect,{isLoading:!0});const e=this.state.emsFileOptions.find((e=>e.value===this.props.value));return Object(p.jsx)(a.EuiComboBox,{placeholder:l.i18n.translate("xpack.maps.emsFileSelect.selectPlaceholder",{defaultMessage:"Select EMS boundaries"}),options:this.state.emsFileOptions,selectedOptions:e?[e]:[],onChange:this._onChange,isClearable:!1,singleSelection:!0,isDisabled:0===this.state.emsFileOptions.length,"data-test-subj":"emsFileSelect"})}render(){return Object(p.jsx)(a.EuiFormRow,{label:l.i18n.translate("xpack.maps.source.emsFileSelect.selectLabel",{defaultMessage:"EMS boundaries"}),helpText:0===this.state.emsFileOptions.length?Object(c.a)():null,display:this.props.isColumnCompressed?"columnCompressed":"row"},this._renderSelect())}}},159:function(e,t,s){"use strict";s.d(t,"b",(function(){return x})),s.d(t,"a",(function(){return ems_file_source_EMSFileSource}));var i=s(2),o=s.n(i),r=s(3),a=s(91),l=s(6),n=s.n(l),c=s(14),p=s(155),d=s(4);class create_source_editor_EMSFileCreateSourceEditor extends i.Component{constructor(...e){super(...e),n()(this,"state",{emsFileId:null}),n()(this,"_onChange",(e=>{this.setState({emsFileId:e}),this.props.onSourceConfigChange({id:e})}))}render(){return Object(d.jsx)(c.EuiPanel,null,Object(d.jsx)(p.a,{value:this.state.emsFileId,onChange:this._onChange}))}}var u=s(106),h=s(0),g=s(95),m=s(92),b=s(54),_=s(162);function F(e){const[t,s]=Object(i.useState)(!1),[r,a]=Object(i.useState)([]);return Object(i.useEffect)((()=>{let t=!1;return s(!0),e.source.getFields().then((e=>{t||(a(e),s(!1))})).catch((e=>{t||s(!1)})),()=>{t=!0}}),[]),Object(d.jsx)(o.a.Fragment,null,Object(d.jsx)(c.EuiPanel,null,Object(d.jsx)(c.EuiTitle,{size:"xs"},Object(d.jsx)("h5",null,Object(d.jsx)(b.FormattedMessage,{id:"xpack.maps.emsSource.tooltipsTitle",defaultMessage:"Tooltip fields"}))),Object(d.jsx)(c.EuiSpacer,{size:"m"}),Object(d.jsx)(c.EuiSkeletonText,{isLoading:t},Object(d.jsx)(_.a,{tooltipFields:e.tooltipFields,onChange:t=>{e.onChange({propName:"tooltipProperties",value:t})},fields:r}))),Object(d.jsx)(c.EuiSpacer,{size:"s"}))}var S=s(169);class ems_file_field_EMSFileField extends S.a{constructor({fieldName:e,source:t,origin:s}){super({fieldName:e,origin:s}),n()(this,"_source",void 0),this._source=t}supportsFieldMetaFromEs(){return!1}supportsFieldMetaFromLocalData(){return!0}getSource(){return this._source}async getLabel(){return this._source.getEmsFieldLabel(this.getName())}}var f=s(5),j=s(121),O=s(24);function E(e){return r.i18n.translate("xpack.maps.source.emsFile.unableToFindFileIdErrorMessage",{defaultMessage:"Unable to find EMS vector shapes for id: {id}. {info}",values:{id:e,info:Object(j.a)()}})}function y(){return Object(f.m)().isEMSUrlSet()?r.i18n.translate("xpack.maps.source.emsOnPremFileTitle",{defaultMessage:"Elastic Maps Server Boundaries"}):r.i18n.translate("xpack.maps.source.emsFileTitle",{defaultMessage:"EMS Boundaries"})}class ems_file_source_EMSFileSource extends u.a{static createDescriptor({id:e,tooltipProperties:t=[]}){return{type:h.Cb.EMS_FILE,id:e,tooltipProperties:t}}constructor(e){super(ems_file_source_EMSFileSource.createDescriptor(e)),n()(this,"_tooltipFields",void 0),n()(this,"_descriptor",void 0),n()(this,"getValueSuggestions",(async(e,t)=>{const s=await this._getFieldValues(e.getName());return t.length?s.filter((e=>e.toLowerCase().includes(t.toLowerCase()))):s})),this._descriptor=ems_file_source_EMSFileSource.createDescriptor(e),this._tooltipFields=this._descriptor.tooltipProperties.map((e=>this.getFieldByName(e)))}renderSourceSettingsEditor({onChange:e}){return Object(d.jsx)(F,{onChange:e,tooltipFields:this._tooltipFields,layerId:this._descriptor.id,source:this})}async getEMSFileLayer(){let e;try{e=await Object(g.getEmsFileLayers)()}catch(e){throw new Error(`${E(this._descriptor.id)} - ${e.message}`)}const t=e.find((e=>e.hasId(this._descriptor.id)));if(t)return t;throw new Error(E(this._descriptor.id))}async getEmsFieldLabel(e){const t=(await this.getEMSFileLayer()).getFieldsInLanguage().find((t=>t.name===e));return t?t.description:e}async getGeoJsonWithMeta(){try{const e=await this.getEMSFileLayer(),t=await e.getGeoJson();if(!t)throw new Error("No features found");const s=e.getFields().find((e=>"id"===e.type));return t.features.forEach(((e,t)=>{e.id=s?e.properties[s.id]:t})),{data:t,meta:{}}}catch(e){throw new Error(E(this._descriptor.id))}}async getImmutableProperties(){let e;try{e=(await this.getEMSFileLayer()).getEMSHotLink()}catch(e){}const t=[{label:Object(m.a)(),value:y()},{label:r.i18n.translate("xpack.maps.source.emsFile.layerLabel",{defaultMessage:"Layer"}),value:this._descriptor.id,link:e}],s=Object(f.m)();return s.isEMSUrlSet()&&t.push({label:r.i18n.translate("xpack.maps.source.emsFile.emsOnPremLabel",{defaultMessage:"Elastic Maps Server"}),value:s.getEMSRoot()}),t}async getDisplayName(){try{return(await this.getEMSFileLayer()).getDisplayName()}catch(e){return this._descriptor.id}}getAttributionProvider(){return async()=>(await this.getEMSFileLayer()).getAttributions()}async getFields(){return(await this.getEMSFileLayer()).getFieldsInLanguage().map((e=>this.getFieldByName(e.name)))}getFieldByName(e){return new ems_file_field_EMSFileField({fieldName:e,source:this,origin:h.D.SOURCE})}async getLeftJoinFields(){return this.getFields()}hasTooltipProperties(){return this._tooltipFields.length>0}async getTooltipProperties(e){const t=this._tooltipFields.map((t=>{const s=e[t.getName()];return t.createTooltipProperty(s)}));return Promise.all(t)}async getSupportedShapeTypes(){return[h.Hb.POLYGON]}async getLicensedFeatures(){return Object(f.m)().isEMSUrlSet()?[O.a.ON_PREM_EMS]:[]}async _getFieldValues(e){try{var t;const s=await this.getEMSFileLayer(),i=s.getFields().find((({id:t})=>t===e));if(null!=i&&null!==(t=i.values)&&void 0!==t&&t.length)return i.values;const o=new Set,r=await s.getGeoJson();return null==r||r.features.forEach((t=>{t.properties&&e in t.properties&&null!=t.properties[e]&&o.add(t.properties[e].toString())})),Array.from(o)}catch(e){return[]}}}const x={id:h.Jb.EMS_BOUNDARIES,order:10,categories:[h.ab.REFERENCE],checkVisibility:async()=>Object(f.m)().isIncludeElasticMapsService(),description:function(){const e=Object(f.m)();return r.i18n.translate("xpack.maps.source.emsFileSourceDescription",{defaultMessage:"Administrative boundaries from {host}",values:{host:e.isEMSUrlSet()?e.getEMSRoot():"Elastic Maps Service"}})}(),disabledReason:r.i18n.translate("xpack.maps.source.emsFileDisabledReason",{defaultMessage:"Elastic Maps Server requires an Enterprise license"}),getIsDisabled:()=>{const e=Object(f.m)();return e.isEMSUrlSet()&&!e.hasOnPremLicense()},icon:()=>Object(d.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",width:"49",height:"25",fill:"none",viewBox:"0 0 49 25",className:"mapLayersWizardIcon"},Object(d.jsx)("path",{className:"mapLayersWizardIcon__backgroundDarker",d:"M30.766 14.01l1.602-12.954-1.389.237c-.744.253-1.768.38-2.702.45a43.28 43.28 0 01-1.259.07l-.092.004c-.312.014-.57.026-.72.042a1.895 1.895 0 00-.558.168c-.156.07-.316.156-.47.238l-.057.03c-.356.191-.687.358-1.025.4l-1.308.339v5.863c0 .698.142 2.17 0 3.443l-.204 1.67h8.182zM20.871 2.748c-.656.039-1.247.282-2.06.4l-.702.102c-.583.086-1.16.172-1.693.238-.75.093-1.389.145-1.82.113-.592-.044-1.124.341-1.61.843-.453.467-.926 1.1-1.429 1.777l-.144.193c-1.132 1.517-2.452 3.218-4.22 4.101-.214.108-.346.313-.432.528-.087.22-.14.489-.172.78-.064.587-.047 1.325.007 2.083.071 1.01.211 2.102.32 2.956.054.42.1.783.128 1.05.08.78-.128 1.769-.37 2.653-.088.319-.178.616-.258.882-.03.1-.06.195-.086.285a9.67 9.67 0 00-.12.434 1.518 1.518 0 00-.054.334c0 .279.11.577.283.842.175.268.426.52.735.708l.067.04.079-.001c4.133-.068 10.22-.554 10.972-.638a.582.582 0 00.334-.17c.083-.08.157-.182.224-.293.134-.223.264-.524.388-.867.249-.69.495-1.6.72-2.52.162-.654.545-1.41.683-2.01l.784-2.796c.066-.379.198-1.13.272-1.705.146-1.148-.01-2.54.097-3.999.107-1.458.171-2.917.146-4.052a10.13 10.13 0 00-.112-1.438 2.469 2.469 0 00-.131-.495c-.053-.128-.276-.358-.276-.358h-.55zm10.931 12.621s-1.169-.652-1.548-.642c-.757.019-1.298-.026-2.352 0h-5.489l-2.863 8.915c.2.066 1.938.444 2.242.447.62.005 1.478-.08 2.393-.197.88-.113 1.824-.258 2.678-.389l.113-.017a49.753 49.753 0 012.166-.305c.347-.034.996-.024 1.858-.007l.127.003c.827.017 1.819.037 2.869.023 2.198-.029 4.694-.204 6.5-.887 1.42-.538 2.099-.87 2.513-1.34.414-.468.575-1.576.575-1.576s-2.907.868-4.807.784c-.927-.04-1.508.045-2.352-.34-1.429-.652-1.206-2.221-2.43-3.205-.77-.62-2.193-1.267-2.193-1.267z"}),Object(d.jsx)("path",{className:"mapLayersWizardIcon__backgroundDarker",d:"M33.322 1.125S31.277 14.3 31.72 14.522c.786.393 2.012.665 3.137 1.67 1.23 1.1 1.172 2.5 2.318 3.24.835.538 6.525-.704 6.525-.704l.228-7.956s-.174-4.5-.89-5.216c-.715-.716-2.488-1.125-3-2.08-1.115-2.08-3.068-2.351-3.068-2.351h-3.648z"})),renderWizard:({previewLayers:e,mapColors:t})=>Object(d.jsx)(create_source_editor_EMSFileCreateSourceEditor,{onSourceConfigChange:s=>{const i=ems_file_source_EMSFileSource.createDescriptor(s),o=a.b.createDescriptor({sourceDescriptor:i},t);e([o])}}),title:y()}},162:function(e,t,s){"use strict";s.d(t,"a",(function(){return tooltip_selector_TooltipSelector}));var i=s(18),o=s.n(i),r=s(6),a=s.n(r),l=s(2),n=s(57),c=s.n(n),p=s(14),d=s(54),u=s(3),h=s(633),g=s(634),m=s(4);function b(e,t){return e.label.localeCompare(t.label)}class add_tooltip_field_popover_AddTooltipFieldPopover extends l.Component{constructor(...e){super(...e),a()(this,"state",{isPopoverOpen:!1,checkedFields:[]}),a()(this,"_togglePopover",(()=>{this.setState((e=>({isPopoverOpen:!e.isPopoverOpen})))})),a()(this,"_closePopover",(()=>{this.setState({isPopoverOpen:!1})})),a()(this,"_onSelect",(e=>{const t=e.filter((e=>"on"===e.checked)).map((e=>e.value));this.setState({checkedFields:t,options:e})})),a()(this,"_onAdd",(()=>{this.props.onAdd(this.state.checkedFields),this.setState({checkedFields:[]}),this._closePopover()}))}static getDerivedStateFromProps(e,t){return e.fields!==t.prevFields||e.selectedFields!==t.prevSelectedFields?{options:(s=e.fields,i=e.selectedFields,s?s.filter((e=>!i.find((t=>e.name===t.name)))).map((e=>({value:e.name,name:e.name,prepend:"type"in e?Object(m.jsx)(h.a,{className:"eui-alignMiddle",type:e.type,fill:"none"}):null,label:e.label}))).sort(b):[]),checkedFields:[],prevFields:e.fields,prevSelectedFields:e.selectedFields}:null;var s,i}_renderAddButton(){return Object(m.jsx)(p.EuiButtonEmpty,{onClick:this._togglePopover,size:"xs",iconType:"plusInCircleFilled",isDisabled:!this.props.fields},Object(m.jsx)(d.FormattedMessage,{id:"xpack.maps.tooltipSelector.togglePopoverLabel",defaultMessage:"Add"}))}_renderContent(){const e=0===this.state.checkedFields.length?u.i18n.translate("xpack.maps.tooltipSelector.addLabelWithoutCount",{defaultMessage:"Add"}):u.i18n.translate("xpack.maps.tooltipSelector.addLabelWithCount",{defaultMessage:"Add {count}",values:{count:this.state.checkedFields.length}});return Object(m.jsx)(l.Fragment,null,Object(m.jsx)(p.EuiSelectable,{searchable:!0,searchProps:{compressed:!0},options:this.state.options,onChange:this._onSelect,optionMatcher:g.a},((e,t)=>Object(m.jsx)("div",{style:{width:"300px"}},Object(m.jsx)(p.EuiPopoverTitle,{paddingSize:"s"},t),e))),Object(m.jsx)(p.EuiSpacer,{size:"xs"}),Object(m.jsx)(p.EuiPopoverFooter,{paddingSize:"s"},Object(m.jsx)(p.EuiTextAlign,{textAlign:"right"},Object(m.jsx)(p.EuiButton,{fill:!0,isDisabled:0===this.state.checkedFields.length,onClick:this._onAdd,size:"s"},e))))}render(){return Object(m.jsx)(p.EuiPopover,{id:"addTooltipFieldPopover",anchorPosition:"leftCenter",button:this._renderAddButton(),isOpen:this.state.isPopoverOpen,closePopover:this._closePopover,panelPaddingSize:"none",ownFocus:!0},this._renderContent())}}async function _(e){return{label:await e.getLabel(),type:await e.getDataType(),name:e.getName()}}class tooltip_selector_TooltipSelector extends l.Component{constructor(e){super(e),a()(this,"_isMounted",void 0),a()(this,"_previousFields",void 0),a()(this,"_previousSelectedTooltips",void 0),a()(this,"state",{fieldProps:[],selectedFieldProps:[]}),a()(this,"_getPropertyLabel",(e=>{if(!this.state.fieldProps.length)return e;const t=this.state.fieldProps.find((t=>t.name===e));return t?t.label:e})),a()(this,"_onAdd",(e=>{if(this.props.tooltipFields){const t=this._getTooltipFieldNames();this.props.onChange([...t,...e])}else this.props.onChange([...e])})),a()(this,"_removeProperty",(e=>{if(this.props.tooltipFields){const t=this._getTooltipFieldNames();t.splice(e,1),this.props.onChange(t)}else this.props.onChange([])})),a()(this,"_onDragEnd",(({source:e,destination:t})=>{t&&this.props.onChange(((e,t,s)=>{const i=Array.from(e),[o]=i.splice(t,1);return i.splice(s,0,o),i})(this._getTooltipFieldNames(),e.index,t.index))})),this._isMounted=!1,this._previousFields=null,this._previousSelectedTooltips=null}componentDidMount(){this._isMounted=!0,this._loadFieldProps(),this._loadTooltipFieldProps()}componentWillUnmount(){this._isMounted=!1}componentDidUpdate(){this._loadTooltipFieldProps(),this._loadFieldProps()}async _loadTooltipFieldProps(){if(!this.props.tooltipFields||this.props.tooltipFields===this._previousSelectedTooltips)return;this._previousSelectedTooltips=this.props.tooltipFields;const e=this.props.tooltipFields.map(_),t=await Promise.all(e);this._isMounted&&this.setState({selectedFieldProps:t})}async _loadFieldProps(){if(!this.props.fields||this.props.fields===this._previousFields)return;this._previousFields=this.props.fields;const e=this.props.fields.map(_),t=await Promise.all(e);this._isMounted&&this.setState({fieldProps:t})}_getTooltipFieldNames(){return this.props.tooltipFields?this.props.tooltipFields.map((e=>e.getName())):[]}_renderProperties(){return this.state.selectedFieldProps.length?Object(m.jsx)(p.EuiDragDropContext,{onDragEnd:this._onDragEnd},Object(m.jsx)(p.EuiDroppable,{droppableId:"mapLayerTOC",spacing:"none"},((e,t)=>Object(m.jsx)(l.Fragment,null,this.state.selectedFieldProps.map(((e,s)=>Object(m.jsx)(p.EuiDraggable,{spacing:"none",key:e.name,index:s,draggableId:e.name,customDragHandle:!0,disableInteractiveElementBlocking:!0},((i,r)=>Object(m.jsx)("div",{className:c()("mapTooltipSelector__propertyRow",{"mapTooltipSelector__propertyRow-isDragging":r.isDragging,"mapTooltipSelector__propertyRow-isDraggingOver":t.isDraggingOver})},Object(m.jsx)(p.EuiText,{className:"mapTooltipSelector__propertyContent",size:"s"},this._getPropertyLabel(e.name)),Object(m.jsx)("div",{className:"mapTooltipSelector__propertyIcons"},Object(m.jsx)(p.EuiButtonIcon,{iconType:"trash",color:"danger",onClick:this._removeProperty.bind(null,s),title:u.i18n.translate("xpack.maps.tooltipSelector.trashButtonTitle",{defaultMessage:"Remove property"}),"aria-label":u.i18n.translate("xpack.maps.tooltipSelector.trashButtonAriaLabel",{defaultMessage:"Remove property"})}),Object(m.jsx)(p.EuiButtonIcon,o()({className:"mapTooltipSelector__grab",iconType:"grab",color:"text",title:u.i18n.translate("xpack.maps.tooltipSelector.grabButtonTitle",{defaultMessage:"Reorder property"}),"aria-label":u.i18n.translate("xpack.maps.tooltipSelector.grabButtonAriaLabel",{defaultMessage:"Reorder property"})},i.dragHandleProps)))))))))))):Object(m.jsx)(p.EuiText,{size:"s",textAlign:"center"},Object(m.jsx)("p",null,Object(m.jsx)(p.EuiTextColor,{color:"subdued"},Object(m.jsx)(d.FormattedMessage,{id:"xpack.maps.tooltipSelector.emptyState.description",defaultMessage:"Add a tooltip field to create filters from field values."}))))}render(){return Object(m.jsx)("div",null,this._renderProperties(),Object(m.jsx)(p.EuiSpacer,{size:"s"}),Object(m.jsx)(p.EuiTextAlign,{textAlign:"center"},Object(m.jsx)(add_tooltip_field_popover_AddTooltipFieldPopover,{onAdd:this._onAdd,fields:this.state.fieldProps,selectedFields:this.state.selectedFieldProps})))}}},337:function(e,t,s){"use strict";s.d(t,"a",(function(){return u}));var i=s(56),o=s(0),r=s(100),a=s(159),l=s(91),n=s(98),c=s(99),p=s(120);const d=Object(n.i)();function u({label:e,emsLayerId:t,leftFieldName:s,termsFieldName:n,termsSize:u,colorSchema:h,indexPatternId:g,metricAgg:m,metricFieldName:b}){if(!(g&&t&&s&&n))return null;const _=function(e,t){const s=Object.keys(o.b).find((t=>o.b[t]===e)),i=s?o.b[s]:void 0;return i&&i!==o.b.COUNT&&t?i===o.b.PERCENTILE?{type:i,field:t,percentile:50}:{type:i,field:t}:{type:o.b.COUNT}}(m,b),F=Object(i.v4)(),S=Object(p.a)({aggType:_.type,aggFieldName:"field"in _?_.field:"",rightSourceId:F}),f=c.e.find((e=>e.value.toLowerCase()===h.toLowerCase())),j={type:o.Cb.ES_TERM_SOURCE,id:F,indexPatternId:g,term:n,metrics:[_],applyGlobalQuery:!0,applyGlobalTime:!0,applyForceRefresh:!0};return void 0!==u&&(j.size=u),l.b.createDescriptor({label:e,joins:[{leftField:s,right:j}],sourceDescriptor:a.a.createDescriptor({id:t,tooltipProperties:["name",s]}),style:r.a.createDescriptor({[o.Ib.FILL_COLOR]:{type:o.Eb.DYNAMIC,options:{...d[o.Ib.FILL_COLOR].options,field:{name:S,origin:o.D.JOIN},color:f?f.value:"Yellow to Red",type:o.j.ORDINAL,fieldMetaOptions:{...d[o.Ib.FILL_COLOR].options.fieldMetaOptions,isEnabled:!1}}}})})}}}]);