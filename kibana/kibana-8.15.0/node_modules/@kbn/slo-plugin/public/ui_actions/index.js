"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.registerSloUiActions = registerSloUiActions;
var _public = require("@kbn/ui-actions-plugin/public");
var _create_overview_panel_action = require("./create_overview_panel_action");
var _create_error_budget_action = require("./create_error_budget_action");
var _create_alerts_panel_action = require("./create_alerts_panel_action");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function registerSloUiActions(core, pluginsSetup, pluginsStart) {
  const {
    uiActions
  } = pluginsSetup;
  const {
    serverless,
    cloud
  } = pluginsStart;

  // Initialize actions
  const addOverviewPanelAction = (0, _create_overview_panel_action.createOverviewPanelAction)(core.getStartServices);
  const addErrorBudgetPanelAction = (0, _create_error_budget_action.createAddErrorBudgetPanelAction)(core.getStartServices);
  const addAlertsPanelAction = (0, _create_alerts_panel_action.createAddAlertsPanelAction)(core.getStartServices);

  // Assign triggers
  // Only register these actions in stateful kibana, and the serverless observability project
  if (Boolean(serverless && (cloud === null || cloud === void 0 ? void 0 : cloud.serverless.projectType) === 'observability' || !serverless)) {
    uiActions.addTriggerAction(_public.ADD_PANEL_TRIGGER, addOverviewPanelAction);
    uiActions.addTriggerAction(_public.ADD_PANEL_TRIGGER, addErrorBudgetPanelAction);
    uiActions.addTriggerAction(_public.ADD_PANEL_TRIGGER, addAlertsPanelAction);
  }
}