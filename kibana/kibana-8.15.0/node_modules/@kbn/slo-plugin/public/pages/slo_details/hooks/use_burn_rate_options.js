"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useBurnRateOptions = exports.DEFAULT_BURN_RATE_OPTIONS = void 0;
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _use_fetch_rules_for_slo = require("../../../hooks/use_fetch_rules_for_slo");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const DEFAULT_BURN_RATE_OPTIONS = exports.DEFAULT_BURN_RATE_OPTIONS = [{
  id: (0, _eui.htmlIdGenerator)()(),
  label: _i18n.i18n.translate('xpack.slo.burnRates.fromRange.label', {
    defaultMessage: '{duration}h',
    values: {
      duration: 1
    }
  }),
  windowName: 'CRITICAL',
  threshold: 14.4,
  duration: 1
}, {
  id: (0, _eui.htmlIdGenerator)()(),
  label: _i18n.i18n.translate('xpack.slo.burnRates.fromRange.label', {
    defaultMessage: '{duration}h',
    values: {
      duration: 6
    }
  }),
  windowName: 'HIGH',
  threshold: 6,
  duration: 6
}, {
  id: (0, _eui.htmlIdGenerator)()(),
  label: _i18n.i18n.translate('xpack.slo.burnRates.fromRange.label', {
    defaultMessage: '{duration}h',
    values: {
      duration: 24
    }
  }),
  windowName: 'MEDIUM',
  threshold: 3,
  duration: 24
}, {
  id: (0, _eui.htmlIdGenerator)()(),
  label: _i18n.i18n.translate('xpack.slo.burnRates.fromRange.label', {
    defaultMessage: '{duration}h',
    values: {
      duration: 72
    }
  }),
  windowName: 'LOW',
  threshold: 1,
  duration: 72
}];
const useBurnRateOptions = slo => {
  var _rules$slo$id$0$param, _rules$slo$id, _rules$slo$id$, _rules$slo$id$$params, _rules$slo$id$$params2;
  const {
    data: rules
  } = (0, _use_fetch_rules_for_slo.useFetchRulesForSlo)({
    sloIds: [slo.id]
  });
  const burnRateOptions = (_rules$slo$id$0$param = rules === null || rules === void 0 ? void 0 : (_rules$slo$id = rules[slo.id]) === null || _rules$slo$id === void 0 ? void 0 : (_rules$slo$id$ = _rules$slo$id[0]) === null || _rules$slo$id$ === void 0 ? void 0 : (_rules$slo$id$$params = _rules$slo$id$.params) === null || _rules$slo$id$$params === void 0 ? void 0 : (_rules$slo$id$$params2 = _rules$slo$id$$params.windows) === null || _rules$slo$id$$params2 === void 0 ? void 0 : _rules$slo$id$$params2.map(window => ({
    id: (0, _eui.htmlIdGenerator)()(),
    label: _i18n.i18n.translate('xpack.slo.burnRates.fromRange.label', {
      defaultMessage: '{duration}h',
      values: {
        duration: window.longWindow.value
      }
    }),
    windowName: window.actionGroup,
    threshold: window.burnRateThreshold,
    duration: window.longWindow.value
  }))) !== null && _rules$slo$id$0$param !== void 0 ? _rules$slo$id$0$param : DEFAULT_BURN_RATE_OPTIONS;
  return {
    burnRateOptions
  };
};
exports.useBurnRateOptions = useBurnRateOptions;