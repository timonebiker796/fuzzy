"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BurnRateHeader = BurnRateHeader;
var _eui = require("@elastic/eui");
var _i18n = require("@kbn/i18n");
var _react = _interopRequireDefault(require("react"));
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

function BurnRateHeader({
  burnRateOption,
  burnRateOptions,
  setBurnRateOption,
  selectedTabId
}) {
  const onBurnRateOptionChange = optionId => {
    var _burnRateOptions$find;
    const selected = (_burnRateOptions$find = burnRateOptions.find(opt => opt.id === optionId)) !== null && _burnRateOptions$find !== void 0 ? _burnRateOptions$find : burnRateOptions[0];
    setBurnRateOption(selected);
  };
  return /*#__PURE__*/_react.default.createElement(_eui.EuiFlexGroup, {
    justifyContent: "spaceBetween"
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiTitle, {
    size: "xs"
  }, /*#__PURE__*/_react.default.createElement("h2", null, _i18n.i18n.translate('xpack.slo.burnRate.title', {
    defaultMessage: 'Burn rate'
  })))), selectedTabId !== 'history' && /*#__PURE__*/_react.default.createElement(_eui.EuiFlexItem, {
    grow: false
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiButtonGroup, {
    legend: _i18n.i18n.translate('xpack.slo.burnRate.timeRangeBtnLegend', {
      defaultMessage: 'Select the time range'
    }),
    options: burnRateOptions.map(opt => ({
      id: opt.id,
      label: opt.label
    })),
    idSelected: burnRateOption.id,
    onChange: onBurnRateOptionChange,
    buttonSize: "compressed"
  })));
}