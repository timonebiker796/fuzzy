"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SloEmbeddableContext = SloEmbeddableContext;
var _react = _interopRequireDefault(require("react"));
var _sharedUxRouter = require("@kbn/shared-ux-router");
var _history = require("history");
var _common = require("@kbn/kibana-react-plugin/common");
var _public = require("@kbn/kibana-react-plugin/public");
var _reactQuery = require("@tanstack/react-query");
var _plugin_context = require("../../../context/plugin_context");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const queryClient = new _reactQuery.QueryClient();
function SloEmbeddableContext({
  deps,
  children
}) {
  const {
    observabilityRuleTypeRegistry
  } = deps.observability;
  const {
    navigation
  } = deps.observabilityShared;
  return /*#__PURE__*/_react.default.createElement(_sharedUxRouter.Router, {
    history: (0, _history.createBrowserHistory)()
  }, /*#__PURE__*/_react.default.createElement(_common.EuiThemeProvider, {
    darkMode: true
  }, /*#__PURE__*/_react.default.createElement(_public.KibanaContextProvider, {
    services: deps
  }, /*#__PURE__*/_react.default.createElement(_plugin_context.PluginContext.Provider, {
    value: {
      observabilityRuleTypeRegistry,
      ObservabilityPageTemplate: navigation.PageTemplate
    }
  }, /*#__PURE__*/_react.default.createElement(_reactQuery.QueryClientProvider, {
    client: queryClient
  }, children)))));
}