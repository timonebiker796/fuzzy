"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FIELD_FORMAT_IDS = void 0;
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */
/** @public **/
/**
 * Html converter options
 */
/**
 * To html converter function
 * @public
 */
/**
 * Plain text converter options
 * @remark
 */
/**
 * To plain text converter function
 * @public
 */
/**
 * Converter function
 * @public
 */
/** @public **/
/** @public **/
let FIELD_FORMAT_IDS = exports.FIELD_FORMAT_IDS = /*#__PURE__*/function (FIELD_FORMAT_IDS) {
  FIELD_FORMAT_IDS["_SOURCE"] = "_source";
  FIELD_FORMAT_IDS["BOOLEAN"] = "boolean";
  FIELD_FORMAT_IDS["BYTES"] = "bytes";
  FIELD_FORMAT_IDS["COLOR"] = "color";
  FIELD_FORMAT_IDS["CURRENCY"] = "currency";
  FIELD_FORMAT_IDS["CUSTOM"] = "custom";
  FIELD_FORMAT_IDS["DATE"] = "date";
  FIELD_FORMAT_IDS["DATE_NANOS"] = "date_nanos";
  FIELD_FORMAT_IDS["DURATION"] = "duration";
  FIELD_FORMAT_IDS["GEO_POINT"] = "geo_point";
  FIELD_FORMAT_IDS["IP"] = "ip";
  FIELD_FORMAT_IDS["NUMBER"] = "number";
  FIELD_FORMAT_IDS["PERCENT"] = "percent";
  FIELD_FORMAT_IDS["RELATIVE_DATE"] = "relative_date";
  FIELD_FORMAT_IDS["STATIC_LOOKUP"] = "static_lookup";
  FIELD_FORMAT_IDS["STRING"] = "string";
  FIELD_FORMAT_IDS["TRUNCATE"] = "truncate";
  FIELD_FORMAT_IDS["URL"] = "url";
  FIELD_FORMAT_IDS["HISTOGRAM"] = "histogram";
  return FIELD_FORMAT_IDS;
}({});
/** @public */
// eslint-disable-next-line @typescript-eslint/consistent-type-definitions
/**
 * If a service is being shared on both the client and the server, and
 * the client code requires synchronous access to uiSettings, both client
 * and server should wrap the core uiSettings services in a function
 * matching this signature.
 *
 * This matches the signature of the public `core.uiSettings.get`, and
 * should only be used in scenarios where async access to uiSettings is
 * not possible.
 *
 @public
 */
/**
 * @string id type is needed for creating custom converters.
 */
/**
 * Alternative to typeof {@link FieldFormat} but with specified ids
 * @public
 */
/**
 * Params provided when creating a formatter.
 * Params are vary per formatter
 *
 * TODO: support strict typing for params depending on format type
 * https://github.com/elastic/kibana/issues/108158
 */
/**
 * Params provided by the registry to every field formatter
 *
 * @public
 */
/**
 * JSON representation of a field formatter configuration.
 * Is used to carry information about how to format data in
 * a data table as part of the column definition.
 *
 * @public
 */
// eslint-disable-next-line @typescript-eslint/consistent-type-definitions