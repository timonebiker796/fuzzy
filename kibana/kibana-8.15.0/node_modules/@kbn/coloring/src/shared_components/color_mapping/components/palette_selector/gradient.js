"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Gradient = Gradient;
var _react = _interopRequireDefault(require("react"));
var _uiTheme = require("@kbn/ui-theme");
var _react2 = require("@emotion/react");
var _reactRedux = require("react-redux");
var _color_math = require("../../color/color_math");
var _color_handling = require("../../color/color_handling");
var _gradient_add_stop = require("./gradient_add_stop");
var _color_swatch = require("../color_picker/color_swatch");
var _color_mapping = require("../../state/color_mapping");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

function Gradient({
  paletteId,
  colorMode,
  getPaletteFn,
  isDarkMode
}) {
  const dispatch = (0, _reactRedux.useDispatch)();
  if (colorMode.type === 'categorical') {
    return null;
  }
  const currentPalette = getPaletteFn(paletteId);
  const gradientColorScale = (0, _color_handling.getGradientColorScale)(colorMode, getPaletteFn, isDarkMode);
  const startStepColor = colorMode.sort === 'asc' ? colorMode.steps.length === 1 ? undefined : colorMode.steps.at(-1) : colorMode.steps.at(0);
  const startStepIndex = colorMode.sort === 'asc' ? colorMode.steps.length === 1 ? NaN : colorMode.steps.length - 1 : 0;
  const endStepColor = colorMode.sort === 'asc' ? colorMode.steps.at(0) : colorMode.steps.length === 1 ? undefined : colorMode.steps.at(-1);
  const endStepIndex = colorMode.sort === 'asc' ? 0 : colorMode.steps.length === 1 ? NaN : colorMode.steps.length - 1;
  const middleStepColor = colorMode.steps.length === 3 ? colorMode.steps[1] : undefined;
  const middleStepIndex = colorMode.steps.length === 3 ? 1 : NaN;
  return /*#__PURE__*/_react.default.createElement("div", {
    css: (0, _react2.css)`
        position: relative;
        height: 24px;
        &:hover {
          button {
            opacity: 1;
          }
        }
      `
  }, /*#__PURE__*/_react.default.createElement("div", {
    css: (0, _react2.css)`
          position: absolute;
          left: 6px;
          right: 6px;
          height: 8px;
          top: 12px;
          border-radius: 6px;
          background-origin: border-box;
          background-image: linear-gradient(
            to right,
            ${[gradientColorScale(0), gradientColorScale(0.5), gradientColorScale(1)].join(',')}
          );
          border: 1px solid ${(0, _color_math.changeAlpha)(_uiTheme.euiThemeVars.euiColorDarkestShade, 0.2)};
        `
  }), /*#__PURE__*/_react.default.createElement("div", {
    css: (0, _react2.css)`
          position: absolute;
          left: 0;
          top: 6px;
        `
  }, startStepColor ? /*#__PURE__*/_react.default.createElement(_color_swatch.ColorSwatch, {
    forType: "gradient",
    colorMode: colorMode,
    assignmentColor: startStepColor,
    getPaletteFn: getPaletteFn,
    index: startStepIndex,
    palette: currentPalette,
    total: colorMode.steps.length,
    swatchShape: "round",
    isDarkMode: isDarkMode,
    onColorChange: color => {
      dispatch((0, _color_mapping.updateGradientColorStep)({
        index: startStepIndex,
        color
      }));
    }
  }) : /*#__PURE__*/_react.default.createElement(_gradient_add_stop.AddStop, {
    colorMode: colorMode,
    currentPalette: currentPalette,
    at: 1
  })), /*#__PURE__*/_react.default.createElement("div", {
    css: (0, _react2.css)`
          position: absolute;
          width: 16px;
          height: 16px;
          left: 50%;
          top: 8px;
        `
  }, middleStepColor ? /*#__PURE__*/_react.default.createElement(_color_swatch.ColorSwatch, {
    forType: "gradient",
    colorMode: colorMode,
    assignmentColor: middleStepColor,
    getPaletteFn: getPaletteFn,
    index: middleStepIndex,
    palette: currentPalette,
    total: colorMode.steps.length,
    swatchShape: "round",
    isDarkMode: isDarkMode,
    onColorChange: color => {
      dispatch((0, _color_mapping.updateGradientColorStep)({
        index: middleStepIndex,
        color
      }));
    }
  }) : colorMode.steps.length === 2 ? /*#__PURE__*/_react.default.createElement(_gradient_add_stop.AddStop, {
    colorMode: colorMode,
    currentPalette: currentPalette,
    at: 1
  }) : undefined), /*#__PURE__*/_react.default.createElement("div", {
    css: (0, _react2.css)`
          position: absolute;
          width: 16px;
          height: 16px;
          top: 8px;
          right: 0;
        `
  }, endStepColor ? /*#__PURE__*/_react.default.createElement(_color_swatch.ColorSwatch, {
    forType: "gradient",
    colorMode: colorMode,
    assignmentColor: endStepColor,
    getPaletteFn: getPaletteFn,
    index: endStepIndex,
    palette: currentPalette,
    total: colorMode.steps.length,
    swatchShape: "round",
    isDarkMode: isDarkMode,
    onColorChange: color => {
      dispatch((0, _color_mapping.updateGradientColorStep)({
        index: endStepIndex,
        color
      }));
    }
  }) : /*#__PURE__*/_react.default.createElement(_gradient_add_stop.AddStop, {
    colorMode: colorMode,
    currentPalette: currentPalette,
    at: 1
  })));
}