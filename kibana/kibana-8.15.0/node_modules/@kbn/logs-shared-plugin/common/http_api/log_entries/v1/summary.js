"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.logEntriesSummaryResponseRT = exports.logEntriesSummaryRequestRT = exports.logEntriesSummaryBucketRT = exports.LOG_ENTRIES_SUMMARY_PATH = void 0;
var rt = _interopRequireWildcard(require("io-ts"));
var _log_views = require("../../../log_views");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const LOG_ENTRIES_SUMMARY_PATH = exports.LOG_ENTRIES_SUMMARY_PATH = '/api/log_entries/summary';
const logEntriesSummaryRequestRT = exports.logEntriesSummaryRequestRT = rt.type({
  logView: _log_views.logViewReferenceRT,
  startTimestamp: rt.number,
  endTimestamp: rt.number,
  bucketSize: rt.number,
  query: rt.union([rt.string, rt.undefined, rt.null])
});
const logEntriesSummaryBucketRT = exports.logEntriesSummaryBucketRT = rt.type({
  start: rt.number,
  end: rt.number,
  entriesCount: rt.number
});
const logEntriesSummaryResponseRT = exports.logEntriesSummaryResponseRT = rt.type({
  data: rt.type({
    start: rt.number,
    end: rt.number,
    buckets: rt.array(logEntriesSummaryBucketRT)
  })
});