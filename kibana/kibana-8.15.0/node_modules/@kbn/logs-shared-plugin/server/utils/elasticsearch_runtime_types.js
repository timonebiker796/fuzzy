"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shardFailureRT = exports.commonSearchSuccessResponseFieldsRT = exports.commonHitFieldsRT = void 0;
var rt = _interopRequireWildcard(require("io-ts"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const shardFailureRT = exports.shardFailureRT = rt.partial({
  index: rt.union([rt.string, rt.null]),
  node: rt.union([rt.string, rt.null]),
  reason: rt.partial({
    reason: rt.union([rt.string, rt.null]),
    type: rt.union([rt.string, rt.null])
  }),
  shard: rt.number
});
const commonSearchSuccessResponseFieldsRT = exports.commonSearchSuccessResponseFieldsRT = rt.type({
  _shards: rt.intersection([rt.type({
    total: rt.number,
    successful: rt.number,
    skipped: rt.number,
    failed: rt.number
  }), rt.partial({
    failures: rt.array(shardFailureRT)
  })]),
  timed_out: rt.boolean,
  took: rt.number
});
const commonHitFieldsRT = exports.commonHitFieldsRT = rt.type({
  _index: rt.string,
  _id: rt.string
});