"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefineAlertConnectors = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
var _react_router_helpers = require("../../../common/react_router_helpers");
var _constants = require("../../../../../../common/constants");
var _translations = require("./translations");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const DefineAlertConnectors = () => {
  const [isPopoverOpen, setIsPopoverOpen] = (0, _react.useState)(false);
  const onButtonClick = () => setIsPopoverOpen(val => !val);
  const closePopover = () => setIsPopoverOpen(false);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPopover, {
    button: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_eui.EuiFormRow, null, /*#__PURE__*/_react.default.createElement(_eui.EuiSwitch, {
      id: 'defineAlertSettingsSwitch',
      label: _translations.ENABLE_STATUS_ALERT,
      showLabel: false,
      "aria-label": _translations.ENABLE_STATUS_ALERT
      // this switch is read only, no onChange applied
      ,
      onChange: onButtonClick,
      checked: false,
      compressed: true,
      "data-test-subj": 'uptimeDisplayDefineConnector'
    }))),
    isOpen: isPopoverOpen,
    closePopover: closePopover
  }, /*#__PURE__*/_react.default.createElement(_eui.EuiText, {
    style: {
      width: '350px'
    },
    "data-test-subj": 'uptimeSettingsDefineConnector'
  }, /*#__PURE__*/_react.default.createElement(_react_router_helpers.ReactRouterEuiLink, {
    to: _constants.SETTINGS_ROUTE + '?focusConnectorField=true',
    "data-test-subj": 'uptimeSettingsLink'
  }, /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.uptime.page_header.defineConnector.popover.defaultLink",
    defaultMessage: "Define a default connector"
  })), ' ', /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "xpack.uptime.monitorList.defineConnector.popover.description",
    defaultMessage: "to receive status alerts."
  })));
};
exports.DefineAlertConnectors = DefineAlertConnectors;