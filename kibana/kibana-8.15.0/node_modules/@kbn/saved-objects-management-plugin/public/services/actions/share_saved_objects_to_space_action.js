"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ShareToSpaceSavedObjectsManagementAction = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _react = _interopRequireWildcard(require("react"));
var _i18n = require("@kbn/i18n");
var _types = require("../types");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const Wrapper = ({
  spacesApiUi,
  props
}) => {
  const LazyComponent = (0, _react.useMemo)(() => spacesApiUi.components.getShareToSpaceFlyout, [spacesApiUi]);
  return /*#__PURE__*/_react.default.createElement(LazyComponent, props);
};
class ShareToSpaceSavedObjectsManagementAction extends _types.SavedObjectsManagementAction {
  constructor(spacesApiUi) {
    super();
    (0, _defineProperty2.default)(this, "id", 'share_saved_objects_to_space');
    (0, _defineProperty2.default)(this, "euiAction", {
      name: _i18n.i18n.translate('savedObjectsManagement.shareToSpace.actionTitle', {
        defaultMessage: 'Share to spaces'
      }),
      description: _i18n.i18n.translate('savedObjectsManagement.shareToSpace.actionDescription', {
        defaultMessage: 'Share this object to one or more spaces'
      }),
      icon: 'share',
      type: 'icon',
      available: object => {
        const hasCapability = !this.actionContext || !!this.actionContext.capabilities.savedObjectsManagement.shareIntoSpace;
        const {
          namespaceType,
          hiddenType
        } = object.meta;
        return namespaceType === 'multiple' && !hiddenType && hasCapability;
      },
      onClick: object => {
        this.objectsToRefresh = [];
        this.start(object);
      }
    });
    (0, _defineProperty2.default)(this, "refreshOnFinish", () => this.objectsToRefresh);
    (0, _defineProperty2.default)(this, "objectsToRefresh", []);
    (0, _defineProperty2.default)(this, "render", () => {
      var _this$record$namespac;
      if (!this.record) {
        throw new Error('No record available! `render()` was likely called before `start()`.');
      }
      const props = {
        savedObjectTarget: {
          type: this.record.type,
          id: this.record.id,
          namespaces: (_this$record$namespac = this.record.namespaces) !== null && _this$record$namespac !== void 0 ? _this$record$namespac : [],
          title: this.record.meta.title,
          icon: this.record.meta.icon
        },
        flyoutIcon: 'share',
        onUpdate: updatedObjects => this.objectsToRefresh = [...updatedObjects],
        onClose: this.onClose,
        enableCreateCopyCallout: true,
        enableCreateNewSpaceLink: true
      };
      return /*#__PURE__*/_react.default.createElement(Wrapper, {
        spacesApiUi: this.spacesApiUi,
        props: props
      });
    });
    (0, _defineProperty2.default)(this, "onClose", () => {
      this.finish();
    });
    this.spacesApiUi = spacesApiUi;
  }
}
exports.ShareToSpaceSavedObjectsManagementAction = ShareToSpaceSavedObjectsManagementAction;