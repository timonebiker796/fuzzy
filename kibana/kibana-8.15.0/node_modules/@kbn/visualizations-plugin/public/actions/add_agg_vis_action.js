"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AddAggVisualizationPanelAction = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _i18n = require("@kbn/i18n");
var _presentationPublishing = require("@kbn/presentation-publishing");
var _public = require("@kbn/embeddable-plugin/public");
var _public2 = require("@kbn/ui-actions-plugin/public");
var _presentationContainers = require("@kbn/presentation-containers");
var _show_new_vis = require("../wizard/show_new_vis");
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const ADD_AGG_VIS_ACTION_ID = 'ADD_AGG_VIS';
const isApiCompatible = api => {
  return (0, _presentationPublishing.apiHasType)(api) && (0, _presentationContainers.apiCanAddNewPanel)(api) && (0, _presentationPublishing.apiHasAppContext)(api);
};
class AddAggVisualizationPanelAction {
  constructor() {
    (0, _defineProperty2.default)(this, "type", ADD_AGG_VIS_ACTION_ID);
    (0, _defineProperty2.default)(this, "id", ADD_AGG_VIS_ACTION_ID);
    (0, _defineProperty2.default)(this, "grouping", [_public.COMMON_EMBEDDABLE_GROUPING.legacy]);
    (0, _defineProperty2.default)(this, "order", 20);
  }
  getIconType() {
    return 'visualizeApp';
  }
  getDisplayName() {
    return _i18n.i18n.translate('visualizations.uiAction.addAggVis.displayName', {
      defaultMessage: 'Aggregation based'
    });
  }
  async isCompatible({
    embeddable
  }) {
    return isApiCompatible(embeddable);
  }
  async execute({
    embeddable
  }) {
    if (!isApiCompatible(embeddable)) {
      throw new _public2.IncompatibleActionError();
    }
    (0, _show_new_vis.showNewVisModal)({
      originatingApp: embeddable.getAppContext().currentAppId,
      outsideVisualizeApp: true,
      showAggsSelection: true
    });
  }
}
exports.AddAggVisualizationPanelAction = AddAggVisualizationPanelAction;