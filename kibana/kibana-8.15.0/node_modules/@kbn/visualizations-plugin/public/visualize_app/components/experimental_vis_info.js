"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InfoComponent = exports.ExperimentalVisInfo = void 0;
var _react = _interopRequireWildcard(require("react"));
var _eui = require("@elastic/eui");
var _i18nReact = require("@kbn/i18n-react");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const InfoComponent = () => {
  const title = /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "visualizations.experimentalVisInfoTitle",
    defaultMessage: "This functionality is in technical preview."
  });
  const text = /*#__PURE__*/_react.default.createElement(_i18nReact.FormattedMessage, {
    id: "visualizations.experimentalVisInfoText",
    defaultMessage: "It may be changed or removed completely in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features. For feedback, please create an issue in {githubLink}.",
    values: {
      githubLink: /*#__PURE__*/_react.default.createElement(_eui.EuiLink, {
        external: true,
        href: "https://github.com/elastic/kibana/issues/new/choose",
        target: "_blank"
      }, "GitHub")
    }
  });
  return /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
    className: "hide-for-sharing",
    "data-test-subj": "experimentalVisInfo",
    size: "s",
    title: title,
    iconType: "beaker"
  }, text);
};
exports.InfoComponent = InfoComponent;
const ExperimentalVisInfo = exports.ExperimentalVisInfo = /*#__PURE__*/(0, _react.memo)(InfoComponent);