"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RequestContextProvider = RequestContextProvider;
exports.useRequestReadContext = exports.useRequestActionContext = void 0;
var _react = _interopRequireWildcard(require("react"));
var _create_use_context = require("./create_use_context");
var store = _interopRequireWildcard(require("../stores/request"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

const RequestReadContext = /*#__PURE__*/(0, _react.createContext)(store.initialValue);
const RequestActionContext = /*#__PURE__*/(0, _react.createContext)(() => {});
function RequestContextProvider({
  children
}) {
  const [state, dispatch] = (0, _react.useReducer)(store.reducer, store.initialValue);
  return /*#__PURE__*/_react.default.createElement(RequestReadContext.Provider, {
    value: state
  }, /*#__PURE__*/_react.default.createElement(RequestActionContext.Provider, {
    value: dispatch
  }, children));
}
const useRequestReadContext = exports.useRequestReadContext = (0, _create_use_context.createUseContext)(RequestReadContext, 'RequestReadContext');
const useRequestActionContext = exports.useRequestActionContext = (0, _create_use_context.createUseContext)(RequestActionContext, 'RequestActionContext');