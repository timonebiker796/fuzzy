"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AuthorizationWrapper = void 0;
var _eui = require("@elastic/eui");
var _react = _interopRequireWildcard(require("react"));
var _use_authorization = require("../../hooks/use_authorization");
var _missing_privileges_description = require("./missing_privileges_description");
var i18n = _interopRequireWildcard(require("./translations"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

const AuthorizationWrapper = exports.AuthorizationWrapper = /*#__PURE__*/_react.default.memo(({
  children,
  ...authRequired
}) => {
  const authorization = (0, _use_authorization.useAuthorization)();
  const isAuthorized = (0, _react.useMemo)(() => Object.entries(authRequired).every(([key, enabled]) => !enabled || authorization[key]), [authorization, authRequired]);
  if (!isAuthorized) {
    return /*#__PURE__*/_react.default.createElement(_eui.EuiCallOut, {
      title: i18n.PRIVILEGES_MISSING_TITLE,
      iconType: "iInCircle",
      "data-test-subj": "missingPrivilegesCallOut"
    }, /*#__PURE__*/_react.default.createElement(_missing_privileges_description.MissingPrivilegesDescription, authRequired));
  }
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, children);
});
AuthorizationWrapper.displayName = 'AuthorizationWrapper';