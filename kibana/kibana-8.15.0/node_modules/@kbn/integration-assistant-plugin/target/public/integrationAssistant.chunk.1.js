/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements.
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */
(window.integrationAssistant_bundle_jsonpfunction=window.integrationAssistant_bundle_jsonpfunction||[]).push([[1],Array(26).concat([function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.isDeepEqual=t.off=t.on=t.isClient=void 0;var n=a(10).__importDefault(a(88));t.isClient="object"==typeof window,t.on=function(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];return e.addEventListener.apply(e,t)},t.off=function(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];return e.removeEventListener.apply(e,t)},t.isDeepEqual=n.default},function(e,t,a){"use strict";a.d(t,"a",(function(){return i}));var n=a(12);const i=()=>Object(n.useKibana)()},function(e,t,a){e.exports=a(6)(4)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i="undefined"!=typeof window?n.useLayoutEffect:n.useEffect;t.default=i},function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){void 0===n&&(n=a),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,n){void 0===n&&(n=a),e[n]=t[a]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var a in e)"default"!==a&&Object.prototype.hasOwnProperty.call(e,a)&&n(t,e,a);return i(t,e),t},o=this&&this.__exportStar||function(e,t){for(var a in e)"default"===a||Object.prototype.hasOwnProperty.call(t,a)||n(t,e,a)};Object.defineProperty(t,"__esModule",{value:!0}),t.z=void 0;const s=r(a(73));t.z=s,o(a(73),t),t.default=s},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(){var e=n.useRef(!1),t=n.useCallback((function(){return e.current}),[]);return n.useEffect((function(){return e.current=!0,function(){e.current=!1}})),t}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=function(e){return(e+1)%1e6};t.default=function(){return n.useReducer(i,0)[1]}},function(e,t,a){"use strict";var n,i=function(){var e={};return function(t){if(void 0===e[t]){var a=document.querySelector(t);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(e){a=null}e[t]=a}return e[t]}}(),r=[];function o(e){for(var t=-1,a=0;a<r.length;a++)if(r[a].identifier===e){t=a;break}return t}function s(e,t){for(var a={},n=[],i=0;i<e.length;i++){var s=e[i],l=t.base?s[0]+t.base:s[0],d=a[l]||0,c="".concat(l," ").concat(d);a[l]=d+1;var m=o(c),h={css:s[1],media:s[2],sourceMap:s[3]};-1!==m?(r[m].references++,r[m].updater(h)):r.push({identifier:c,updater:f(h,t),references:1}),n.push(c)}return n}function l(e){var t=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var r=a.nc;r&&(n.nonce=r)}if(Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(t);else{var o=i(e.insert||"head");if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}return t}var d,c=(d=[],function(e,t){return d[e]=t,d.filter(Boolean).join("\n")});function m(e,t,a,n){var i=a?"":n.media?"@media ".concat(n.media," {").concat(n.css,"}"):n.css;if(e.styleSheet)e.styleSheet.cssText=c(t,i);else{var r=document.createTextNode(i),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(r,o[t]):e.appendChild(r)}}function h(e,t,a){var n=a.css,i=a.media,r=a.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),r&&"undefined"!=typeof btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var p=null,u=0;function f(e,t){var a,n,i;if(t.singleton){var r=u++;a=p||(p=l(t)),n=m.bind(null,a,r,!1),i=m.bind(null,a,r,!0)}else a=l(t),n=h.bind(null,a,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(a)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n));var a=s(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var n=0;n<a.length;n++){var i=o(a[n]);r[i].references--}for(var l=s(e,t),d=0;d<a.length;d++){var c=o(a[d]);0===r[c].references&&(r[c].updater(),r.splice(c,1))}a=l}}}},function(e,t,a){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var a=function(e,t){var a,n,i,r=e[1]||"",o=e[3];if(!o)return r;if(t&&"function"==typeof btoa){var s=(a=o,n=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),i="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(n),"/*# ".concat(i," */")),l=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[r].concat(l).concat([s]).join("\n")}return[r].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(a,"}"):a})).join("")},t.i=function(e,a,n){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(n)for(var r=0;r<this.length;r++){var o=this[r][0];null!=o&&(i[o]=!0)}for(var s=0;s<e.length;s++){var l=[].concat(e[s]);n&&i[l[0]]||(a&&(l[2]?l[2]="".concat(a," and ").concat(l[2]):l[2]=a),t.push(l))}},t}},,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(40);t.default=function(e,t){var a=i.useFirstMountState();n.useEffect((function(){if(!a)return e()}),t)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e){void 0===e&&(e={});var t=n.useState(e),a=t[0],i=t[1];return[a,n.useCallback((function(e){i((function(t){return Object.assign({},t,e instanceof Function?e(t):e)}))}),[i])]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e){n.useEffect(e,[])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(42));t.default=function(e){var t=i.useRef(0),a=i.useState(e),n=a[0],o=a[1],s=i.useCallback((function(e){cancelAnimationFrame(t.current),t.current=requestAnimationFrame((function(){o(e)}))}),[]);return r.default((function(){cancelAnimationFrame(t.current)})),[n,s]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useFirstMountState=void 0;var n=a(0);t.useFirstMountState=function(){var e=n.useRef(!0);return e.current?(e.current=!1,!0):e.current}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.resolveHookState=void 0,t.resolveHookState=function(e,t){return"function"==typeof e?e(t):e}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(38));t.default=function(e){var t=i.useRef(e);t.current=e,r.default((function(){return function(){return t.current()}}))}},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.getParsedType=t.ZodParsedType=t.objectUtil=t.util=void 0,function(e){e.assertEqual=e=>e,e.assertIs=function(e){},e.assertNever=function(e){throw new Error},e.arrayToEnum=e=>{const t={};for(const a of e)t[a]=a;return t},e.getValidEnumValues=t=>{const a=e.objectKeys(t).filter((e=>"number"!=typeof t[t[e]])),n={};for(const e of a)n[e]=t[e];return e.objectValues(n)},e.objectValues=t=>e.objectKeys(t).map((function(e){return t[e]})),e.objectKeys="function"==typeof Object.keys?e=>Object.keys(e):e=>{const t=[];for(const a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.push(a);return t},e.find=(e,t)=>{for(const a of e)if(t(a))return a},e.isInteger="function"==typeof Number.isInteger?e=>Number.isInteger(e):e=>"number"==typeof e&&isFinite(e)&&Math.floor(e)===e,e.joinValues=function(e,t=" | "){return e.map((e=>"string"==typeof e?`'${e}'`:e)).join(t)},e.jsonStringifyReplacer=(e,t)=>"bigint"==typeof t?t.toString():t}(n=t.util||(t.util={})),(t.objectUtil||(t.objectUtil={})).mergeShapes=(e,t)=>({...e,...t}),t.ZodParsedType=n.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),t.getParsedType=e=>{switch(typeof e){case"undefined":return t.ZodParsedType.undefined;case"string":return t.ZodParsedType.string;case"number":return isNaN(e)?t.ZodParsedType.nan:t.ZodParsedType.number;case"boolean":return t.ZodParsedType.boolean;case"function":return t.ZodParsedType.function;case"bigint":return t.ZodParsedType.bigint;case"symbol":return t.ZodParsedType.symbol;case"object":return Array.isArray(e)?t.ZodParsedType.array:null===e?t.ZodParsedType.null:e.then&&"function"==typeof e.then&&e.catch&&"function"==typeof e.catch?t.ZodParsedType.promise:"undefined"!=typeof Map&&e instanceof Map?t.ZodParsedType.map:"undefined"!=typeof Set&&e instanceof Set?t.ZodParsedType.set:"undefined"!=typeof Date&&e instanceof Date?t.ZodParsedType.date:t.ZodParsedType.object;default:return t.ZodParsedType.unknown}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t,a){var i=n.useRef(void 0);i.current&&a(t,i.current)||(i.current=t),n.useEffect(e,i.current)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){void 0===t&&(t=0);var a=n.useRef(!1),i=n.useRef(),r=n.useRef(e),o=n.useCallback((function(){return a.current}),[]),s=n.useCallback((function(){a.current=!1,i.current&&clearTimeout(i.current),i.current=setTimeout((function(){a.current=!0,r.current()}),t)}),[t]),l=n.useCallback((function(){a.current=null,i.current&&clearTimeout(i.current)}),[]);return n.useEffect((function(){r.current=e}),[e]),n.useEffect((function(){return s(),l}),[t]),[o,l,s]}},function(e,t,a){e.exports=a.p+"08153df199173c3869bc5930d76c1e36.svg"},function(e,t,a){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getErrorMap=t.setErrorMap=t.defaultErrorMap=void 0;const i=n(a(74));t.defaultErrorMap=i.default;let r=i.default;t.setErrorMap=function(e){r=e},t.getErrorMap=function(){return r}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ZodError=t.quotelessJson=t.ZodIssueCode=void 0;const n=a(43);t.ZodIssueCode=n.util.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),t.quotelessJson=e=>JSON.stringify(e,null,2).replace(/"([^"]+)":/g,"$1:");class ZodError extends Error{constructor(e){super(),this.issues=[],this.addIssue=e=>{this.issues=[...this.issues,e]},this.addIssues=(e=[])=>{this.issues=[...this.issues,...e]};const t=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,t):this.__proto__=t,this.name="ZodError",this.issues=e}get errors(){return this.issues}format(e){const t=e||function(e){return e.message},a={_errors:[]},n=e=>{for(const i of e.issues)if("invalid_union"===i.code)i.unionErrors.map(n);else if("invalid_return_type"===i.code)n(i.returnTypeError);else if("invalid_arguments"===i.code)n(i.argumentsError);else if(0===i.path.length)a._errors.push(t(i));else{let e=a,n=0;for(;n<i.path.length;){const a=i.path[n];n===i.path.length-1?(e[a]=e[a]||{_errors:[]},e[a]._errors.push(t(i))):e[a]=e[a]||{_errors:[]},e=e[a],n++}}};return n(this),a}static assert(e){if(!(e instanceof ZodError))throw new Error(`Not a ZodError: ${e}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,n.util.jsonStringifyReplacer,2)}get isEmpty(){return 0===this.issues.length}flatten(e=(e=>e.message)){const t={},a=[];for(const n of this.issues)n.path.length>0?(t[n.path[0]]=t[n.path[0]]||[],t[n.path[0]].push(e(n))):a.push(e(n));return{formErrors:a,fieldErrors:t}}get formErrors(){return this.flatten()}}t.ZodError=ZodError,ZodError.create=e=>new ZodError(e)},,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(51));t.default=function(e,t){void 0===t&&(t=[]);var a=r.default(e,t,{loading:!0}),n=a[0],o=a[1];return i.useEffect((function(){o()}),[o]),n}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(31));t.default=function(e,t,a){void 0===t&&(t=[]),void 0===a&&(a={loading:!1});var o=i.useRef(0),s=r.default(),l=i.useState(a),d=l[0],c=l[1],m=i.useCallback((function(){for(var t=[],a=0;a<arguments.length;a++)t[a]=arguments[a];var i=++o.current;return c((function(e){return n.__assign(n.__assign({},e),{loading:!0})})),e.apply(void 0,t).then((function(e){return s()&&i===o.current&&c({value:e,loading:!1}),e}),(function(e){return s()&&i===o.current&&c({error:e,loading:!1}),e}))}),t);return[d,m]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=n.__importStar(a(0)),r=a(0),o=n.__importDefault(a(37)),s=n.__importDefault(a(86));t.default=function(e){return function(t){var a,l;l=i.isValidElement(t)?(a=t).props:t;var d=o.default({buffered:[],time:0,duration:0,paused:!0,muted:!1,volume:1}),c=d[0],m=d[1],h=r.useRef(null),p=function(e,t){return function(a){try{t&&t(a)}finally{e&&e(a)}}},u=function(){return m({paused:!1})},f=function(){return m({paused:!0})},g=function(){var e=h.current;e&&m({muted:e.muted,volume:e.volume})},_=function(){var e=h.current;if(e){var t=e.duration,a=e.buffered;m({duration:t,buffered:s.default(a)})}},y=function(){var e=h.current;e&&m({time:e.currentTime})},v=function(){var e=h.current;e&&m({buffered:s.default(e.buffered)})};a=a?i.cloneElement(a,n.__assign(n.__assign({controls:!1},l),{ref:h,onPlay:p(l.onPlay,u),onPause:p(l.onPause,f),onVolumeChange:p(l.onVolumeChange,g),onDurationChange:p(l.onDurationChange,_),onTimeUpdate:p(l.onTimeUpdate,y),onProgress:p(l.onProgress,v)})):i.createElement(e,n.__assign(n.__assign({controls:!1},l),{ref:h,onPlay:p(l.onPlay,u),onPause:p(l.onPause,f),onVolumeChange:p(l.onVolumeChange,g),onDurationChange:p(l.onDurationChange,_),onTimeUpdate:p(l.onTimeUpdate,y),onProgress:p(l.onProgress,v)}));var b=!1,x={play:function(){var e=h.current;if(e&&!b){var t=e.play();if("object"==typeof t){b=!0;var a=function(){b=!1};t.then(a,a)}return t}},pause:function(){var e=h.current;if(e&&!b)return e.pause()},seek:function(e){var t=h.current;t&&void 0!==c.duration&&(e=Math.min(c.duration,Math.max(0,e)),t.currentTime=e)},volume:function(e){var t=h.current;t&&(e=Math.min(1,Math.max(0,e)),t.volume=e,m({volume:e}))},mute:function(){var e=h.current;e&&(e.muted=!0)},unmute:function(){var e=h.current;e&&(e.muted=!1)}};return r.useEffect((function(){var e=h.current;e&&(m({volume:e.volume,muted:e.muted,paused:e.paused}),l.autoPlay&&e.paused&&x.play())}),[l.src]),[a,c,x,h]}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=function(e,t){return"boolean"==typeof t?t:!e};t.default=function(e){return n.useReducer(i,e)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(55)),o=a(41);t.default=function(e,t,a){void 0===e&&(e=0),void 0===t&&(t=null),void 0===a&&(a=null);var n=o.resolveHookState(e);"number"!=typeof n&&console.error("initialValue has to be a number, got "+typeof e),"number"==typeof a?n=Math.max(n,a):null!==a&&console.error("min has to be a number, got "+typeof a),"number"==typeof t?n=Math.min(n,t):null!==t&&console.error("max has to be a number, got "+typeof t);var s=r.default(n),l=s[0],d=s[1];return[l(),i.useMemo((function(){var e=function(e){var n=l(),i=o.resolveHookState(e,n);n!==i&&("number"==typeof a&&(i=Math.max(i,a)),"number"==typeof t&&(i=Math.min(i,t)),n!==i&&d(i))};return{get:l,set:e,inc:function(t){void 0===t&&(t=1);var a=o.resolveHookState(t,l());"number"!=typeof a&&console.error("delta has to be a number or function returning a number, got "+typeof a),e((function(e){return e+a}))},dec:function(t){void 0===t&&(t=1);var a=o.resolveHookState(t,l());"number"!=typeof a&&console.error("delta has to be a number or function returning a number, got "+typeof a),e((function(e){return e-a}))},reset:function(t){void 0===t&&(t=n);var a=o.resolveHookState(t,l());"number"!=typeof a&&console.error("value has to be a number or function returning a number, got "+typeof a),n=a,e(a)}}}),[n,a,t])]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(32)),o=a(41);t.default=function(e){var t=i.useRef(o.resolveHookState(e)),a=r.default();return i.useMemo((function(){return[function(){return t.current},function(e){t.current=o.resolveHookState(e,t.current),a()}]}),[])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(26),r=n.__importDefault(a(44));t.default=function(e,t){r.default(e,t,i.isDeepEqual)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26).isClient?window:null,r=function(e){return!!e.addEventListener},o=function(e){return!!e.on};t.default=function(e,t,a,s){void 0===a&&(a=i),n.useEffect((function(){if(t&&a)return r(a)?a.addEventListener(e,t,s):o(a)&&a.on(e,t,s),function(){r(a)?a.removeEventListener(e,t,s):o(a)&&a.off(e,t,s)}}),[e,t,a,JSON.stringify(s)])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){void 0===t&&(t=!0);var a=n.useState(!1),i=a[0],r=a[1];return n.useEffect((function(){var a=function(){return r(!0)},n=function(){return r(!1)};t&&e&&e.current&&(e.current.addEventListener("mouseover",a),e.current.addEventListener("mouseout",n));var i=e.current;return function(){t&&i&&(i.removeEventListener("mouseover",a),i.removeEventListener("mouseout",n))}}),[t,e]),i}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(57)),o=function(){};t.default=function(e,t,a,n){void 0===t&&(t=o),void 0===a&&(a={}),void 0===n&&(n=[e]);var s=a.event,l=void 0===s?"keydown":s,d=a.target,c=a.options,m=i.useMemo((function(){var a,n="function"==typeof(a=e)?a:"string"==typeof a?function(e){return e.key===a}:a?function(){return!0}:function(){return!1};return function(e){if(n(e))return t(e)}}),n);r.default(l,m,d,c)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(59));t.default=function(e){var t=i.useState([!1,null]),a=t[0],n=t[1];return r.default(e,(function(e){return n([!0,e])}),{event:"keydown"},[a]),r.default(e,(function(e){return n([!1,e])}),{event:"keyup"},[a]),a}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e){var t=n.useRef(e);return t.current=e,t}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){n.useEffect((function(){return e&&e(),function(){t&&t()}}),[])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(32)),o=a(41);t.default=function(e){void 0===e&&(e=[]);var t=i.useRef(o.resolveHookState(e)),a=r.default(),n=i.useMemo((function(){var i={set:function(e){t.current=o.resolveHookState(e,t.current),a()},push:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];e.length&&n.set((function(t){return t.concat(e)}))},updateAt:function(e,t){n.set((function(a){var n=a.slice();return n[e]=t,n}))},insertAt:function(e,t){n.set((function(a){var n=a.slice();return e>n.length?n[e]=t:n.splice(e,0,t),n}))},update:function(e,t){n.set((function(a){return a.map((function(a){return e(a,t)?t:a}))}))},updateFirst:function(e,a){var i=t.current.findIndex((function(t){return e(t,a)}));i>=0&&n.updateAt(i,a)},upsert:function(e,a){var i=t.current.findIndex((function(t){return e(t,a)}));i>=0?n.updateAt(i,a):n.push(a)},sort:function(e){n.set((function(t){return t.slice().sort(e)}))},filter:function(e,t){n.set((function(a){return a.slice().filter(e,t)}))},removeAt:function(e){n.set((function(t){var a=t.slice();return a.splice(e,1),a}))},clear:function(){n.set([])},reset:function(){n.set(o.resolveHookState(e).slice())}};return i.remove=i.removeAt,i}),[]);return[t.current,n]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10).__importDefault(a(38));t.default=function(e){n.default((function(){e()}))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(39));t.default=function(e){var t=r.default({docX:0,docY:0,posX:0,posY:0,elX:0,elY:0,elH:0,elW:0}),a=t[0],n=t[1];return i.useEffect((function(){var t=function(t){if(e&&e.current){var a=e.current.getBoundingClientRect(),i=a.left,r=a.top,o=a.width,s=a.height,l=i+window.pageXOffset,d=r+window.pageYOffset,c=t.pageX-l,m=t.pageY-d;n({docX:t.pageX,docY:t.pageY,posX:l,posY:d,elX:c,elY:m,elH:s,elW:o})}};return document.addEventListener("mousemove",t),function(){document.removeEventListener("mousemove",t)}}),[e]),a}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(29));t.default=function(e,t){var a=i.useState(t),n=a[0],o=a[1];return r.default((function(){var t=e.subscribe(o);return function(){return t.unsubscribe()}}),[e]),n}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(29));t.default=function(e,t){void 0===e&&(e=1e12),void 0===t&&(t=0);var a=i.useState(0),n=a[0],o=a[1];return r.default((function(){var a,n,i,r=function(){var t=Math.min(1,(Date.now()-i)/e);o(t),s()},s=function(){a=requestAnimationFrame(r)},l=setTimeout((function(){n=setTimeout((function(){cancelAnimationFrame(a),o(1)}),e),i=Date.now(),s()}),t);return function(){clearTimeout(n),clearTimeout(l),cancelAnimationFrame(a)}}),[e,t]),n}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=parseInt(i.version.substr(0,i.version.indexOf(".")))>15;t.default=function(e,t){for(var a=[],o=2;o<arguments.length;o++)a[o-2]=arguments[o];var s=e.render,l=e.children,d=void 0===l?s:l,c=e.component,m=e.comp,h=void 0===m?c:m;return"function"==typeof d?d.apply(void 0,n.__spreadArrays([t],a)):h?i.createElement(h,t):d instanceof Array?r?d:i.createElement.apply(void 0,n.__spreadArrays(["div",null],d)):d&&d instanceof Object?"string"==typeof d.type?d:i.cloneElement(d,Object.assign({},d.props,t)):d||null}},function(e,t,a){"use strict";e.exports=function(e,t){return t||(t={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},function(e,t,a){e.exports=a.p+"1cbd62546f764080f7071e03889e9de3.svg"},function(e,t,a){"use strict";e.exports=a(194)},function(e,t,a){"use strict";e.exports=a(201)},function(e,t,a){"use strict";var n=this&&this.__createBinding||(Object.create?function(e,t,a,n){void 0===n&&(n=a),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[a]}})}:function(e,t,a,n){void 0===n&&(n=a),e[n]=t[a]}),i=this&&this.__exportStar||function(e,t){for(var a in e)"default"===a||Object.prototype.hasOwnProperty.call(t,a)||n(t,e,a)};Object.defineProperty(t,"__esModule",{value:!0}),i(a(47),t),i(a(75),t),i(a(212),t),i(a(43),t),i(a(213),t),i(a(48),t)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const n=a(43),i=a(48);t.default=(e,t)=>{let a;switch(e.code){case i.ZodIssueCode.invalid_type:a=e.received===n.ZodParsedType.undefined?"Required":`Expected ${e.expected}, received ${e.received}`;break;case i.ZodIssueCode.invalid_literal:a=`Invalid literal value, expected ${JSON.stringify(e.expected,n.util.jsonStringifyReplacer)}`;break;case i.ZodIssueCode.unrecognized_keys:a=`Unrecognized key(s) in object: ${n.util.joinValues(e.keys,", ")}`;break;case i.ZodIssueCode.invalid_union:a="Invalid input";break;case i.ZodIssueCode.invalid_union_discriminator:a=`Invalid discriminator value. Expected ${n.util.joinValues(e.options)}`;break;case i.ZodIssueCode.invalid_enum_value:a=`Invalid enum value. Expected ${n.util.joinValues(e.options)}, received '${e.received}'`;break;case i.ZodIssueCode.invalid_arguments:a="Invalid function arguments";break;case i.ZodIssueCode.invalid_return_type:a="Invalid function return type";break;case i.ZodIssueCode.invalid_date:a="Invalid date";break;case i.ZodIssueCode.invalid_string:"object"==typeof e.validation?"includes"in e.validation?(a=`Invalid input: must include "${e.validation.includes}"`,"number"==typeof e.validation.position&&(a=`${a} at one or more positions greater than or equal to ${e.validation.position}`)):"startsWith"in e.validation?a=`Invalid input: must start with "${e.validation.startsWith}"`:"endsWith"in e.validation?a=`Invalid input: must end with "${e.validation.endsWith}"`:n.util.assertNever(e.validation):a="regex"!==e.validation?`Invalid ${e.validation}`:"Invalid";break;case i.ZodIssueCode.too_small:a="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}`:"date"===e.type?`Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}`:"Invalid input";break;case i.ZodIssueCode.too_big:a="array"===e.type?`Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)`:"string"===e.type?`String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)`:"number"===e.type?`Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"bigint"===e.type?`BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:"date"===e.type?`Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}`:"Invalid input";break;case i.ZodIssueCode.custom:a="Invalid input";break;case i.ZodIssueCode.invalid_intersection_types:a="Intersection results could not be merged";break;case i.ZodIssueCode.not_multiple_of:a=`Number must be a multiple of ${e.multipleOf}`;break;case i.ZodIssueCode.not_finite:a="Number must be finite";break;default:a=t.defaultError,n.util.assertNever(e)}return{message:a}}},function(e,t,a){"use strict";var n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.isAsync=t.isValid=t.isDirty=t.isAborted=t.OK=t.DIRTY=t.INVALID=t.ParseStatus=t.addIssueToContext=t.EMPTY_PATH=t.makeIssue=void 0;const i=a(47),r=n(a(74));t.makeIssue=e=>{const{data:t,path:a,errorMaps:n,issueData:i}=e,r=[...a,...i.path||[]],o={...i,path:r};if(void 0!==i.message)return{...i,path:r,message:i.message};let s="";const l=n.filter((e=>!!e)).slice().reverse();for(const e of l)s=e(o,{data:t,defaultError:s}).message;return{...i,path:r,message:s}},t.EMPTY_PATH=[],t.addIssueToContext=function(e,a){const n=(0,i.getErrorMap)(),o=(0,t.makeIssue)({issueData:a,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,n,n===r.default?void 0:r.default].filter((e=>!!e))});e.common.issues.push(o)};class ParseStatus{constructor(){this.value="valid"}dirty(){"valid"===this.value&&(this.value="dirty")}abort(){"aborted"!==this.value&&(this.value="aborted")}static mergeArray(e,a){const n=[];for(const i of a){if("aborted"===i.status)return t.INVALID;"dirty"===i.status&&e.dirty(),n.push(i.value)}return{status:e.value,value:n}}static async mergeObjectAsync(e,t){const a=[];for(const e of t){const t=await e.key,n=await e.value;a.push({key:t,value:n})}return ParseStatus.mergeObjectSync(e,a)}static mergeObjectSync(e,a){const n={};for(const i of a){const{key:a,value:r}=i;if("aborted"===a.status)return t.INVALID;if("aborted"===r.status)return t.INVALID;"dirty"===a.status&&e.dirty(),"dirty"===r.status&&e.dirty(),"__proto__"===a.value||void 0===r.value&&!i.alwaysSet||(n[a.value]=r.value)}return{status:e.value,value:n}}}t.ParseStatus=ParseStatus,t.INVALID=Object.freeze({status:"aborted"}),t.DIRTY=e=>({status:"dirty",value:e}),t.OK=e=>({status:"valid",value:e}),t.isAborted=e=>"aborted"===e.status,t.isDirty=e=>"dirty"===e.status,t.isValid=e=>"valid"===e.status,t.isAsync=e=>"undefined"!=typeof Promise&&e instanceof Promise},,,,function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(80);Object.defineProperty(t,"createMemo",{enumerable:!0,get:function(){return n.default}});var i=a(81);Object.defineProperty(t,"createReducerContext",{enumerable:!0,get:function(){return i.default}});var r=a(82);Object.defineProperty(t,"createReducer",{enumerable:!0,get:function(){return r.default}});var o=a(83);Object.defineProperty(t,"createStateContext",{enumerable:!0,get:function(){return o.default}});var s=a(50);Object.defineProperty(t,"useAsync",{enumerable:!0,get:function(){return s.default}});var l=a(51);Object.defineProperty(t,"useAsyncFn",{enumerable:!0,get:function(){return l.default}});var d=a(84);Object.defineProperty(t,"useAsyncRetry",{enumerable:!0,get:function(){return d.default}});var c=a(85);Object.defineProperty(t,"useAudio",{enumerable:!0,get:function(){return c.default}});var m=a(87);Object.defineProperty(t,"useBattery",{enumerable:!0,get:function(){return m.default}});var h=a(89);Object.defineProperty(t,"useBeforeUnload",{enumerable:!0,get:function(){return h.default}});var p=a(90);Object.defineProperty(t,"useBoolean",{enumerable:!0,get:function(){return p.default}});var u=a(91);Object.defineProperty(t,"useClickAway",{enumerable:!0,get:function(){return u.default}});var f=a(92);Object.defineProperty(t,"useCookie",{enumerable:!0,get:function(){return f.default}});var g=a(94);Object.defineProperty(t,"useCopyToClipboard",{enumerable:!0,get:function(){return g.default}});var _=a(54);Object.defineProperty(t,"useCounter",{enumerable:!0,get:function(){return _.default}});var y=a(97);Object.defineProperty(t,"useCss",{enumerable:!0,get:function(){return y.default}});var v=a(44);Object.defineProperty(t,"useCustomCompareEffect",{enumerable:!0,get:function(){return v.default}});var b=a(103);Object.defineProperty(t,"useDebounce",{enumerable:!0,get:function(){return b.default}});var x=a(56);Object.defineProperty(t,"useDeepCompareEffect",{enumerable:!0,get:function(){return x.default}});var w=a(104);Object.defineProperty(t,"useDefault",{enumerable:!0,get:function(){return w.default}});var k=a(105);Object.defineProperty(t,"useDrop",{enumerable:!0,get:function(){return k.default}});var z=a(106);Object.defineProperty(t,"useDropArea",{enumerable:!0,get:function(){return z.default}});var T=a(38);Object.defineProperty(t,"useEffectOnce",{enumerable:!0,get:function(){return T.default}});var j=a(107);Object.defineProperty(t,"useEnsuredForwardedRef",{enumerable:!0,get:function(){return j.default}}),Object.defineProperty(t,"ensuredForwardRef",{enumerable:!0,get:function(){return j.ensuredForwardRef}});var S=a(57);Object.defineProperty(t,"useEvent",{enumerable:!0,get:function(){return S.default}});var E=a(108);Object.defineProperty(t,"useError",{enumerable:!0,get:function(){return E.default}});var A=a(109);Object.defineProperty(t,"useFavicon",{enumerable:!0,get:function(){return A.default}});var O=a(110);Object.defineProperty(t,"useFullscreen",{enumerable:!0,get:function(){return O.default}});var I=a(112);Object.defineProperty(t,"useGeolocation",{enumerable:!0,get:function(){return I.default}});var C=a(55);Object.defineProperty(t,"useGetSet",{enumerable:!0,get:function(){return C.default}});var L=a(113);Object.defineProperty(t,"useGetSetState",{enumerable:!0,get:function(){return L.default}});var P=a(114);Object.defineProperty(t,"useHarmonicIntervalFn",{enumerable:!0,get:function(){return P.default}});var N=a(116);Object.defineProperty(t,"useHover",{enumerable:!0,get:function(){return N.default}});var D=a(58);Object.defineProperty(t,"useHoverDirty",{enumerable:!0,get:function(){return D.default}});var F=a(117);Object.defineProperty(t,"useIdle",{enumerable:!0,get:function(){return F.default}});var M=a(119);Object.defineProperty(t,"useIntersection",{enumerable:!0,get:function(){return M.default}});var Z=a(120);Object.defineProperty(t,"useInterval",{enumerable:!0,get:function(){return Z.default}});var U=a(29);Object.defineProperty(t,"useIsomorphicLayoutEffect",{enumerable:!0,get:function(){return U.default}});var q=a(59);Object.defineProperty(t,"useKey",{enumerable:!0,get:function(){return q.default}});var R=a(121);Object.defineProperty(t,"createBreakpoint",{enumerable:!0,get:function(){return R.default}});var B=a(60);Object.defineProperty(t,"useKeyPress",{enumerable:!0,get:function(){return B.default}});var G=a(122);Object.defineProperty(t,"useKeyPressEvent",{enumerable:!0,get:function(){return G.default}});var V=a(61);Object.defineProperty(t,"useLatest",{enumerable:!0,get:function(){return V.default}});var H=a(62);Object.defineProperty(t,"useLifecycles",{enumerable:!0,get:function(){return H.default}});var W=a(63);Object.defineProperty(t,"useList",{enumerable:!0,get:function(){return W.default}});var $=a(123);Object.defineProperty(t,"useLocalStorage",{enumerable:!0,get:function(){return $.default}});var K=a(124);Object.defineProperty(t,"useLocation",{enumerable:!0,get:function(){return K.default}});var Y=a(125);Object.defineProperty(t,"useLockBodyScroll",{enumerable:!0,get:function(){return Y.default}});var Q=a(126);Object.defineProperty(t,"useLogger",{enumerable:!0,get:function(){return Q.default}});var X=a(127);Object.defineProperty(t,"useLongPress",{enumerable:!0,get:function(){return X.default}});var J=a(128);Object.defineProperty(t,"useMap",{enumerable:!0,get:function(){return J.default}});var ee=a(129);Object.defineProperty(t,"useMedia",{enumerable:!0,get:function(){return ee.default}});var te=a(130);Object.defineProperty(t,"useMediaDevices",{enumerable:!0,get:function(){return te.default}});var ae=a(131);Object.defineProperty(t,"useMediatedState",{enumerable:!0,get:function(){return ae.useMediatedState}});var ne=a(132);Object.defineProperty(t,"useMethods",{enumerable:!0,get:function(){return ne.default}});var ie=a(133);Object.defineProperty(t,"useMotion",{enumerable:!0,get:function(){return ie.default}});var re=a(64);Object.defineProperty(t,"useMount",{enumerable:!0,get:function(){return re.default}});var oe=a(31);Object.defineProperty(t,"useMountedState",{enumerable:!0,get:function(){return oe.default}});var se=a(65);Object.defineProperty(t,"useMouse",{enumerable:!0,get:function(){return se.default}});var le=a(134);Object.defineProperty(t,"useMouseHovered",{enumerable:!0,get:function(){return le.default}});var de=a(135);Object.defineProperty(t,"useMouseWheel",{enumerable:!0,get:function(){return de.default}});var ce=a(136);Object.defineProperty(t,"useNetwork",{enumerable:!0,get:function(){return ce.default}});var me=a(137);Object.defineProperty(t,"useNumber",{enumerable:!0,get:function(){return me.default}});var he=a(66);Object.defineProperty(t,"useObservable",{enumerable:!0,get:function(){return he.default}});var pe=a(138);Object.defineProperty(t,"useOrientation",{enumerable:!0,get:function(){return pe.default}});var ue=a(139);Object.defineProperty(t,"usePageLeave",{enumerable:!0,get:function(){return ue.default}});var fe=a(140);Object.defineProperty(t,"usePermission",{enumerable:!0,get:function(){return fe.default}});var ge=a(141);Object.defineProperty(t,"usePrevious",{enumerable:!0,get:function(){return ge.default}});var _e=a(142);Object.defineProperty(t,"usePreviousDistinct",{enumerable:!0,get:function(){return _e.default}});var ye=a(143);Object.defineProperty(t,"usePromise",{enumerable:!0,get:function(){return ye.default}});var ve=a(144);Object.defineProperty(t,"useQueue",{enumerable:!0,get:function(){return ve.default}});var be=a(67);Object.defineProperty(t,"useRaf",{enumerable:!0,get:function(){return be.default}});var xe=a(145);Object.defineProperty(t,"useRafLoop",{enumerable:!0,get:function(){return xe.default}});var we=a(39);Object.defineProperty(t,"useRafState",{enumerable:!0,get:function(){return we.default}});var ke=a(146);Object.defineProperty(t,"useSearchParam",{enumerable:!0,get:function(){return ke.default}});var ze=a(147);Object.defineProperty(t,"useScratch",{enumerable:!0,get:function(){return ze.default}});var Te=a(153);Object.defineProperty(t,"useScroll",{enumerable:!0,get:function(){return Te.default}});var je=a(154);Object.defineProperty(t,"useScrolling",{enumerable:!0,get:function(){return je.default}});var Se=a(155);Object.defineProperty(t,"useSessionStorage",{enumerable:!0,get:function(){return Se.default}});var Ee=a(37);Object.defineProperty(t,"useSetState",{enumerable:!0,get:function(){return Ee.default}});var Ae=a(156);Object.defineProperty(t,"useShallowCompareEffect",{enumerable:!0,get:function(){return Ae.default}});var Oe=a(158);Object.defineProperty(t,"useSize",{enumerable:!0,get:function(){return Oe.default}});var Ie=a(159);Object.defineProperty(t,"useSlider",{enumerable:!0,get:function(){return Ie.default}});var Ce=a(160);Object.defineProperty(t,"useSpeech",{enumerable:!0,get:function(){return Ce.default}});var Le=a(161);Object.defineProperty(t,"useStartTyping",{enumerable:!0,get:function(){return Le.default}});var Pe=a(162);Object.defineProperty(t,"useStateWithHistory",{enumerable:!0,get:function(){return Pe.useStateWithHistory}});var Ne=a(163);Object.defineProperty(t,"useStateList",{enumerable:!0,get:function(){return Ne.default}});var De=a(164);Object.defineProperty(t,"useThrottle",{enumerable:!0,get:function(){return De.default}});var Fe=a(165);Object.defineProperty(t,"useThrottleFn",{enumerable:!0,get:function(){return Fe.default}});var Me=a(166);Object.defineProperty(t,"useTimeout",{enumerable:!0,get:function(){return Me.default}});var Ze=a(45);Object.defineProperty(t,"useTimeoutFn",{enumerable:!0,get:function(){return Ze.default}});var Ue=a(167);Object.defineProperty(t,"useTitle",{enumerable:!0,get:function(){return Ue.default}});var qe=a(53);Object.defineProperty(t,"useToggle",{enumerable:!0,get:function(){return qe.default}});var Re=a(168);Object.defineProperty(t,"useTween",{enumerable:!0,get:function(){return Re.default}});var Be=a(42);Object.defineProperty(t,"useUnmount",{enumerable:!0,get:function(){return Be.default}});var Ge=a(170);Object.defineProperty(t,"useUnmountPromise",{enumerable:!0,get:function(){return Ge.default}});var Ve=a(32);Object.defineProperty(t,"useUpdate",{enumerable:!0,get:function(){return Ve.default}});var He=a(36);Object.defineProperty(t,"useUpdateEffect",{enumerable:!0,get:function(){return He.default}});var We=a(171);Object.defineProperty(t,"useUpsert",{enumerable:!0,get:function(){return We.default}});var $e=a(172);Object.defineProperty(t,"useVibrate",{enumerable:!0,get:function(){return $e.default}});var Ke=a(173);Object.defineProperty(t,"useVideo",{enumerable:!0,get:function(){return Ke.default}});var Ye=a(174);Object.defineProperty(t,"useStateValidator",{enumerable:!0,get:function(){return Ye.default}});var Qe=a(175);Object.defineProperty(t,"useScrollbarWidth",{enumerable:!0,get:function(){return Qe.useScrollbarWidth}});var Xe=a(177);Object.defineProperty(t,"useMultiStateValidator",{enumerable:!0,get:function(){return Xe.useMultiStateValidator}});var Je=a(178);Object.defineProperty(t,"useWindowScroll",{enumerable:!0,get:function(){return Je.default}});var et=a(179);Object.defineProperty(t,"useWindowSize",{enumerable:!0,get:function(){return et.default}});var tt=a(180);Object.defineProperty(t,"useMeasure",{enumerable:!0,get:function(){return tt.default}});var at=a(181);Object.defineProperty(t,"useRendersCount",{enumerable:!0,get:function(){return at.useRendersCount}});var nt=a(40);Object.defineProperty(t,"useFirstMountState",{enumerable:!0,get:function(){return nt.useFirstMountState}});var it=a(182);Object.defineProperty(t,"useSet",{enumerable:!0,get:function(){return it.default}});var rt=a(183);Object.defineProperty(t,"createGlobalState",{enumerable:!0,get:function(){return rt.createGlobalState}});var ot=a(184);Object.defineProperty(t,"useHash",{enumerable:!0,get:function(){return ot.useHash}})},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e){return function(){for(var t=[],a=0;a<arguments.length;a++)t[a]=arguments[a];return n.useMemo((function(){return e.apply(void 0,t)}),t)}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){var a=n.createContext(void 0);return[function(){var e=n.useContext(a);if(null==e)throw new Error("useReducerContext must be used inside a ReducerProvider.");return e},function(i){var r=i.children,o=i.initialState;return function(e,t){return n.createElement(a.Provider,e,t)}({value:n.useReducer(e,void 0!==o?o:t)},r)},a]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(36));t.default=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var a,n=(a=e,function(e,t){return a.reduceRight((function(t,a){return a(e)(t)}),t)});return function(e,t,a){void 0===a&&(a=function(e){return e});var o=i.useRef(a(t)),s=i.useState(o.current)[1],l=i.useCallback((function(t){return o.current=e(o.current,t),s(o.current),t}),[e]),d=i.useRef(n({getState:function(){return o.current},dispatch:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return d.current.apply(d,e)}},l));return r.default((function(){d.current=n({getState:function(){return o.current},dispatch:function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return d.current.apply(d,e)}},l)}),[l]),[o.current,d.current]}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e){var t=n.createContext(void 0);return[function(){var e=n.useContext(t);if(null==e)throw new Error("useStateContext must be used inside a StateProvider.");return e},function(a){var i=a.children,r=a.initialValue;return function(e,a){return n.createElement(t.Provider,e,a)}({value:n.useState(void 0!==r?r:e)},i)},t]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(50));t.default=function(e,t){void 0===t&&(t=[]);var a=i.useState(0),o=a[0],s=a[1],l=r.default(e,n.__spreadArrays(t,[o])),d=l.loading,c=i.useCallback((function(){d||s((function(e){return e+1}))}),n.__spreadArrays(t,[d]));return n.__assign(n.__assign({},l),{retry:c})}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10).__importDefault(a(52)).default("audio");t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){for(var t=[],a=0;a<e.length;a++)t.push({start:e.start(a),end:e.end(a)});return t}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26),r="object"==typeof navigator?navigator:void 0,o=r&&"function"==typeof r.getBattery;t.default=o?function(){var e=n.useState({isSupported:!0,fetched:!1}),t=e[0],a=e[1];return n.useEffect((function(){var e=!0,n=null,o=function(){if(e&&n){var r={isSupported:!0,fetched:!0,level:n.level,charging:n.charging,dischargingTime:n.dischargingTime,chargingTime:n.chargingTime};!i.isDeepEqual(t,r)&&a(r)}};return r.getBattery().then((function(t){e&&(n=t,i.on(n,"chargingchange",o),i.on(n,"chargingtimechange",o),i.on(n,"dischargingtimechange",o),i.on(n,"levelchange",o),o())})),function(){e=!1,n&&(i.off(n,"chargingchange",o),i.off(n,"chargingtimechange",o),i.off(n,"dischargingtimechange",o),i.off(n,"levelchange",o))}}),[]),t}:function(){return{isSupported:!1}}},function(e,t,a){"use strict";e.exports=function e(t,a){if(t===a)return!0;if(t&&a&&"object"==typeof t&&"object"==typeof a){if(t.constructor!==a.constructor)return!1;var n,i,r;if(Array.isArray(t)){if((n=t.length)!=a.length)return!1;for(i=n;0!=i--;)if(!e(t[i],a[i]))return!1;return!0}if(t.constructor===RegExp)return t.source===a.source&&t.flags===a.flags;if(t.valueOf!==Object.prototype.valueOf)return t.valueOf()===a.valueOf();if(t.toString!==Object.prototype.toString)return t.toString()===a.toString();if((n=(r=Object.keys(t)).length)!==Object.keys(a).length)return!1;for(i=n;0!=i--;)if(!Object.prototype.hasOwnProperty.call(a,r[i]))return!1;for(i=n;0!=i--;){var o=r[i];if(!("_owner"===o&&t.$$typeof||e(t[o],a[o])))return!1}return!0}return t!=t&&a!=a}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){void 0===e&&(e=!0);var a=n.useCallback((function(a){if("function"!=typeof e||e())return a.preventDefault(),t&&(a.returnValue=t),t}),[e,t]);n.useEffect((function(){if(e)return window.addEventListener("beforeunload",a),function(){return window.removeEventListener("beforeunload",a)}}),[e,a])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10).__importDefault(a(53));t.default=n.default},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26),r=["mousedown","touchstart"];t.default=function(e,t,a){void 0===a&&(a=r);var o=n.useRef(t);n.useEffect((function(){o.current=t}),[t]),n.useEffect((function(){for(var t=function(t){var a=e.current;a&&!a.contains(t.target)&&o.current(t)},n=0,r=a;n<r.length;n++){var s=r[n];i.on(document,s,t)}return function(){for(var e=0,n=a;e<n.length;e++){var r=n[e];i.off(document,r,t)}}}),[a,e])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(93));t.default=function(e){var t=i.useState((function(){return r.default.get(e)||null})),a=t[0],n=t[1];return[a,i.useCallback((function(t,a){r.default.set(e,t,a),n(t)}),[e]),i.useCallback((function(){r.default.remove(e),n(null)}),[e])]}},function(e,t,a){var n,i,r;
/*!
 * JavaScript Cookie v2.2.1
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */r=function(){function e(){for(var e=0,t={};e<arguments.length;e++){var a=arguments[e];for(var n in a)t[n]=a[n]}return t}function t(e){return e.replace(/(%[0-9A-Z]{2})+/g,decodeURIComponent)}return function a(n){function i(){}function r(t,a,r){if("undefined"!=typeof document){"number"==typeof(r=e({path:"/"},i.defaults,r)).expires&&(r.expires=new Date(1*new Date+864e5*r.expires)),r.expires=r.expires?r.expires.toUTCString():"";try{var o=JSON.stringify(a);/^[\{\[]/.test(o)&&(a=o)}catch(e){}a=n.write?n.write(a,t):encodeURIComponent(String(a)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),t=encodeURIComponent(String(t)).replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent).replace(/[\(\)]/g,escape);var s="";for(var l in r)r[l]&&(s+="; "+l,!0!==r[l]&&(s+="="+r[l].split(";")[0]));return document.cookie=t+"="+a+s}}function o(e,a){if("undefined"!=typeof document){for(var i={},r=document.cookie?document.cookie.split("; "):[],o=0;o<r.length;o++){var s=r[o].split("="),l=s.slice(1).join("=");a||'"'!==l.charAt(0)||(l=l.slice(1,-1));try{var d=t(s[0]);if(l=(n.read||n)(l,d)||t(l),a)try{l=JSON.parse(l)}catch(e){}if(i[d]=l,e===d)break}catch(e){}}return e?i[e]:i}}return i.set=r,i.get=function(e){return o(e,!1)},i.getJSON=function(e){return o(e,!0)},i.remove=function(t,a){r(t,"",e(a,{expires:-1}))},i.defaults={},i.withConverter=a,i}((function(){}))},void 0===(i="function"==typeof(n=r)?n.call(t,a,t,e):n)||(e.exports=i),e.exports=r()},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=n.__importDefault(a(95)),r=a(0),o=n.__importDefault(a(31)),s=n.__importDefault(a(37));t.default=function(){var e=o.default(),t=s.default({value:void 0,error:void 0,noUserInteraction:!0}),a=t[0],n=t[1];return[a,r.useCallback((function(t){var a,r;if(e())try{if("string"!=typeof t&&"number"!=typeof t){var o=new Error("Cannot copy typeof "+typeof t+" to clipboard, must be a string");return void n({value:t,error:o,noUserInteraction:!0})}if(""===t)return o=new Error("Cannot copy empty string to clipboard."),void n({value:t,error:o,noUserInteraction:!0});r=t.toString(),a=i.default(r),n({value:r,error:void 0,noUserInteraction:a})}catch(o){n({value:r,error:o,noUserInteraction:a})}}),[])]}},function(e,t,a){"use strict";var n=a(96),i={"text/plain":"Text","text/html":"Url",default:"Text"};e.exports=function(e,t){var a,r,o,s,l,d,c=!1;t||(t={}),a=t.debug||!1;try{if(o=n(),s=document.createRange(),l=document.getSelection(),(d=document.createElement("span")).textContent=e,d.style.all="unset",d.style.position="fixed",d.style.top=0,d.style.clip="rect(0, 0, 0, 0)",d.style.whiteSpace="pre",d.style.webkitUserSelect="text",d.style.MozUserSelect="text",d.style.msUserSelect="text",d.style.userSelect="text",d.addEventListener("copy",(function(n){if(n.stopPropagation(),t.format)if(n.preventDefault(),void 0===n.clipboardData){a&&console.warn("unable to use e.clipboardData"),a&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var r=i[t.format]||i.default;window.clipboardData.setData(r,e)}else n.clipboardData.clearData(),n.clipboardData.setData(t.format,e);t.onCopy&&(n.preventDefault(),t.onCopy(n.clipboardData))})),document.body.appendChild(d),s.selectNodeContents(d),l.addRange(s),!document.execCommand("copy"))throw new Error("copy command was unsuccessful");c=!0}catch(n){a&&console.error("unable to copy using execCommand: ",n),a&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(t.format||"text",e),t.onCopy&&t.onCopy(window.clipboardData),c=!0}catch(n){a&&console.error("unable to copy using clipboardData: ",n),a&&console.error("falling back to prompt"),r=function(e){var t=(/mac os x/i.test(navigator.userAgent)?"⌘":"Ctrl")+"+C";return e.replace(/#{\s*key\s*}/g,t)}("message"in t?t.message:"Copy to clipboard: #{key}, Enter"),window.prompt(r,e)}}finally{l&&("function"==typeof l.removeRange?l.removeRange(s):l.removeAllRanges()),d&&document.body.removeChild(d),o()}return c}},function(e,t){e.exports=function(){var e=document.getSelection();if(!e.rangeCount)return function(){};for(var t=document.activeElement,a=[],n=0;n<e.rangeCount;n++)a.push(e.getRangeAt(n));switch(t.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":t.blur();break;default:t=null}return e.removeAllRanges(),function(){"Caret"===e.type&&e.removeAllRanges(),e.rangeCount||a.forEach((function(t){e.addRange(t)})),t&&t.focus()}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(98),r=a(99),o=a(100),s=a(102),l=a(0),d=n.__importDefault(a(29)),c=i.create();r.addon(c),o.addon(c);var m=0;t.default=function(e){var t=l.useMemo((function(){return"react-use-css-"+(m++).toString(36)}),[]),a=l.useMemo((function(){return new c.VSheet}),[]);return d.default((function(){var n={};return s.cssToTree(n,e,"."+t,""),a.diff(n),function(){a.diff({})}})),t}},function(e,t,a){"use strict";var n=/[A-Z]/g;t.create=function(e){var t=(e=e||{}).assign||Object.assign,a=t({raw:"",pfx:"_",client:"object"==typeof window,assign:t,stringify:JSON.stringify,kebab:function(e){return e.replace(n,"-$&").toLowerCase()},decl:function(e,t){return(e=a.kebab(e))+":"+t+";"},hash:function(e){return function(e){for(var t=5381,a=e.length;a;)t=33*t^e.charCodeAt(--a);return"_"+(t>>>0).toString(36)}(a.stringify(e))},selector:function(e,t){return e+(":"===t[0]?"":" ")+t},putRaw:function(e){a.raw+=e}},e);return a.client&&(a.sh||document.head.appendChild(a.sh=document.createElement("style")),a.putRaw=function(e){var t=a.sh.sheet;try{t.insertRule(e,t.cssRules.length)}catch(e){}}),a.put=function(e,t,n){var i,r,o="",s=[];for(i in t)(r=t[i])instanceof Object&&!(r instanceof Array)?s.push(i):o+=a.decl(i,r,e,n);o&&(o=e+"{"+o+"}",a.putRaw(n?n+"{"+o+"}":o));for(var l=0;l<s.length;l++)"@"===(i=s[l])[0]&&"@font-face"!==i?a.putAt(e,t[i],i):a.put(a.selector(e,i),t[i],n)},a.putAt=a.put,a}},function(e,t,a){"use strict";t.addon=function(e){e.client&&(document.head.appendChild(e.msh=document.createElement("style")),e.createRule=function(t,a){var n=t+"{}";a&&(n=a+"{"+n+"}");var i=a?e.msh.sheet:e.sh.sheet,r=i.insertRule(n,i.cssRules.length),o=(i.cssRules||i.rules)[r];if(o.index=r,a){var s=(o.cssRules||o.rules)[0];o.style=s.style,o.styleMap=s.styleMap}return o})}},function(e,t,a){"use strict";var n=a(101).removeRule;t.addon=function(e){if(e.client){var t=e.kebab;a.prototype.diff=function(e){var a,n=this.decl,i=this.rule.style;for(a in n)void 0===e[a]&&i.removeProperty(a);for(a in e)e[a]!==n[a]&&i.setProperty(t(a),e[a]);this.decl=e},a.prototype.del=function(){n(this.rule)},i.prototype.diff=function(e){var t=this.tree;for(var n in t)if(void 0===e[n]){var i=t[n];for(var r in i)i[r].del()}for(var n in e)if(void 0===t[n])for(var r in e[n])(l=new a(r,n)).diff(e[n][r]),e[n][r]=l;else{var o=t[n],s=e[n];for(var r in o)s[r]||o[r].del();for(var r in s){var l;(l=o[r])?(l.diff(s[r]),s[r]=l):((l=new a(r,n)).diff(s[r]),s[r]=l)}}this.tree=e},e.VRule=a,e.VSheet=i}function a(t,a){this.rule=e.createRule(t,a),this.decl={}}function i(){this.tree={}}}},function(e,t){t.removeRule=function(e){var t=e.index,a=e.parentStyleSheet,n=a.cssRules||a.rules;for(t=Math.max(t,n.length-1);t>=0;){if(n[t]===e){a.deleteRule(t);break}t--}}},function(e,t){t.cssToTree=function e(t,a,n,i){var r,o,s={},l=!1;for(r in a)"object"!=typeof(o=a[r])&&(l=!0,s[r]=o);for(r in l&&(t[i]||(t[i]={}),t[i][n]=s),a)if("object"==typeof(o=a[r]))if("@"===r[0])e(t,o,n,r);else{var d=r.indexOf("&")>-1,c=n.split(",");if(d)for(var m=0;m<c.length;m++)c[m]=r.replace(/&/g,c[m]);else for(m=0;m<c.length;m++)c[m]=c[m]+" "+r;e(t,o,c.join(","),i)}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(45));t.default=function(e,t,a){void 0===t&&(t=0),void 0===a&&(a=[]);var n=r.default(e,t),o=n[0],s=n[1],l=n[2];return i.useEffect(l,a),[o,s]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){var a=n.useState(t),i=a[0],r=a[1];return null==i?[e,r]:[i,r]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=function(){};t.default=function(e,t){void 0===e&&(e={}),void 0===t&&(t=[]);var a=e.onFiles,o=e.onText,s=e.onUri,l=i.useState(!1),d=l[0],c=l[1],m=i.useCallback(c,[]),h=i.useMemo((function(){return function(e){return function(t,a){var n=t.getData("text/uri-list");if(n)(e.onUri||r)(n,a);else if(t.files&&t.files.length)(e.onFiles||r)(Array.from(t.files),a);else if(a.clipboardData){var i=a.clipboardData.getData("text");(e.onText||r)(i,a)}}}(e)}),[a,o,s]);return i.useEffect((function(){var e=function(e){e.preventDefault(),m(!0)},t=function(e){e.preventDefault(),m(!0)},a=function(){m(!1)},n=function(){m(!1)},i=function(e){e.preventDefault(),m(!1),h(e.dataTransfer,e)},r=function(e){h(e.clipboardData,e)};return document.addEventListener("dragover",e),document.addEventListener("dragenter",t),document.addEventListener("dragleave",a),document.addEventListener("dragexit",n),document.addEventListener("drop",i),o&&document.addEventListener("paste",r),function(){document.removeEventListener("dragover",e),document.removeEventListener("dragenter",t),document.removeEventListener("dragleave",a),document.removeEventListener("dragexit",n),document.removeEventListener("drop",i),document.removeEventListener("paste",r)}}),n.__spreadArrays([h],t)),{over:d}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(31)),o=function(){};t.default=function(e){void 0===e&&(e={});var t=e.onFiles,a=e.onText,n=e.onUri,s=r.default(),l=i.useState(!1),d=l[0],c=l[1],m=i.useMemo((function(){return function(e,t){return function(a,n){var i=a.getData("text/uri-list");i?(e.onUri||o)(i,n):a.files&&a.files.length?(e.onFiles||o)(Array.from(a.files),n):a.items&&a.items.length&&a.items[0].getAsString((function(a){t&&(e.onText||o)(a,n)}))}}(e,s())}),[t,a,n]),h=i.useMemo((function(){return function(e,t){return{onDragOver:function(e){e.preventDefault()},onDragEnter:function(e){e.preventDefault(),t(!0)},onDragLeave:function(){t(!1)},onDrop:function(a){a.preventDefault(),a.persist(),t(!1),e(a.dataTransfer,a)},onPaste:function(t){t.persist(),e(t.clipboardData,t)}}}(m,c)}),[m,c]);return[h,{over:d}]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ensuredForwardRef=void 0;var n=a(0);function i(e){var t=n.useRef(e&&e.current);return n.useEffect((function(){e&&(e.current=t.current)}),[e]),t}t.default=i,t.ensuredForwardRef=function(e){return n.forwardRef((function(t,a){var n=i(a);return e(t,n)}))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(){var e=n.useState(null),t=e[0],a=e[1];return n.useEffect((function(){if(t)throw t}),[t]),n.useCallback((function(e){a(e)}),[])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e){n.useEffect((function(){var t=document.querySelector("link[rel*='icon']")||document.createElement("link");t.type="image/x-icon",t.rel="shortcut icon",t.href=e,document.getElementsByTagName("head")[0].appendChild(t)}),[e])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(111)),o=n.__importDefault(a(29)),s=function(){};t.default=function(e,t,a){void 0===a&&(a={});var n=a.video,l=a.onClose,d=void 0===l?s:l,c=i.useState(t),m=c[0],h=c[1];return o.default((function(){if(t&&e.current){var a=function(){n.current.removeEventListener("webkitendfullscreen",a),d()},i=function(){if(r.default.isEnabled){var e=r.default.isFullscreen;h(e),e||d()}};if(r.default.isEnabled){try{r.default.request(e.current),h(!0)}catch(e){d(e),h(!1)}r.default.on("change",i)}else n&&n.current&&n.current.webkitEnterFullscreen?(n.current.webkitEnterFullscreen(),n.current.addEventListener("webkitendfullscreen",a),h(!0)):(d(),h(!1));return function(){if(h(!1),r.default.isEnabled)try{r.default.off("change",i),r.default.exit()}catch(e){}else n&&n.current&&n.current.webkitExitFullscreen&&(n.current.removeEventListener("webkitendfullscreen",a),n.current.webkitExitFullscreen())}}}),[t,n,e]),m}},function(e,t,a){
/*!
* screenfull
* v5.0.0 - 2019-09-09
* (c) Sindre Sorhus; MIT License
*/
!function(){"use strict";var t="undefined"!=typeof window&&void 0!==window.document?window.document:{},a=e.exports,n=function(){for(var e,a=[["requestFullscreen","exitFullscreen","fullscreenElement","fullscreenEnabled","fullscreenchange","fullscreenerror"],["webkitRequestFullscreen","webkitExitFullscreen","webkitFullscreenElement","webkitFullscreenEnabled","webkitfullscreenchange","webkitfullscreenerror"],["webkitRequestFullScreen","webkitCancelFullScreen","webkitCurrentFullScreenElement","webkitCancelFullScreen","webkitfullscreenchange","webkitfullscreenerror"],["mozRequestFullScreen","mozCancelFullScreen","mozFullScreenElement","mozFullScreenEnabled","mozfullscreenchange","mozfullscreenerror"],["msRequestFullscreen","msExitFullscreen","msFullscreenElement","msFullscreenEnabled","MSFullscreenChange","MSFullscreenError"]],n=0,i=a.length,r={};n<i;n++)if((e=a[n])&&e[1]in t){for(n=0;n<e.length;n++)r[a[0][n]]=e[n];return r}return!1}(),i={change:n.fullscreenchange,error:n.fullscreenerror},r={request:function(e){return new Promise(function(a,i){var r=function(){this.off("change",r),a()}.bind(this);this.on("change",r),e=e||t.documentElement,Promise.resolve(e[n.requestFullscreen]()).catch(i)}.bind(this))},exit:function(){return new Promise(function(e,a){if(this.isFullscreen){var i=function(){this.off("change",i),e()}.bind(this);this.on("change",i),Promise.resolve(t[n.exitFullscreen]()).catch(a)}else e()}.bind(this))},toggle:function(e){return this.isFullscreen?this.exit():this.request(e)},onchange:function(e){this.on("change",e)},onerror:function(e){this.on("error",e)},on:function(e,a){var n=i[e];n&&t.addEventListener(n,a,!1)},off:function(e,a){var n=i[e];n&&t.removeEventListener(n,a,!1)},raw:n};n?(Object.defineProperties(r,{isFullscreen:{get:function(){return Boolean(t[n.fullscreenElement])}},element:{enumerable:!0,get:function(){return t[n.fullscreenElement]}},isEnabled:{enumerable:!0,get:function(){return Boolean(t[n.fullscreenEnabled])}}}),a?e.exports=r:window.screenfull=r):a?e.exports={isEnabled:!1}:window.screenfull={isEnabled:!1}}()},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0);t.default=function(e){var t,a=i.useState({loading:!0,accuracy:null,altitude:null,altitudeAccuracy:null,heading:null,latitude:null,longitude:null,speed:null,timestamp:Date.now()}),r=a[0],o=a[1],s=!0,l=function(e){s&&o({loading:!1,accuracy:e.coords.accuracy,altitude:e.coords.altitude,altitudeAccuracy:e.coords.altitudeAccuracy,heading:e.coords.heading,latitude:e.coords.latitude,longitude:e.coords.longitude,speed:e.coords.speed,timestamp:e.timestamp})},d=function(e){return s&&o((function(t){return n.__assign(n.__assign({},t),{loading:!1,error:e})}))};return i.useEffect((function(){return navigator.geolocation.getCurrentPosition(l,d,e),t=navigator.geolocation.watchPosition(l,d,e),function(){s=!1,navigator.geolocation.clearWatch(t)}}),[]),r}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(32));t.default=function(e){void 0===e&&(e={});var t=r.default(),a=i.useRef(n.__assign({},e));return[i.useCallback((function(){return a.current}),[]),i.useCallback((function(e){e&&(Object.assign(a.current,e),t())}),[])]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(115);t.default=function(e,t){void 0===t&&(t=0);var a=n.useRef((function(){}));n.useEffect((function(){a.current=e})),n.useEffect((function(){if(null!==t){var e=i.setHarmonicInterval((function(){return a.current()}),t);return function(){return i.clearHarmonicInterval(e)}}}),[t])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=0,i={};t.clearHarmonicInterval=function(e){var t=e.bucket,a=e.id;delete t.listeners[a];var n=!1;for(var r in t.listeners){n=!0;break}n||(clearInterval(t.timer),delete i[t.ms])},t.setHarmonicInterval=function(e,t){var a,r=n++;if(i[t])i[t].listeners[r]=e;else{var o=setInterval((function(){for(var e,a=i[t].listeners,n=!1,r=0,o=Object.values(a);r<o.length;r++){var s=o[r];try{s()}catch(t){n=!0,e=t}}if(n)throw e}),t);i[t]={ms:t,timer:o,listeners:(a={},a[r]=e,a)}}return{bucket:i[t],id:r}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10).__importStar(a(0)),i=n.useState,r=function(){};t.default=function(e){var t,a,o=i(!1),s=o[0],l=o[1];return"function"==typeof e&&(e=e(s)),[n.cloneElement(e,{onMouseEnter:(a=e.props.onMouseEnter,function(e){(a||r)(e),l(!0)}),onMouseLeave:(t=e.props.onMouseLeave,function(e){(t||r)(e),l(!1)})}),s]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(118),r=a(26),o=["mousemove","mousedown","resize","keydown","touchstart","wheel"];t.default=function(e,t,a){void 0===e&&(e=6e4),void 0===t&&(t=!1),void 0===a&&(a=o);var s=n.useState(t),l=s[0],d=s[1];return n.useEffect((function(){for(var t,n=!0,o=l,s=function(e){n&&(o=e,d(e))},c=i.throttle(50,(function(){o&&s(!1),clearTimeout(t),t=setTimeout((function(){return s(!0)}),e)})),m=function(){document.hidden||c()},h=0;h<a.length;h++)r.on(window,a[h],c);return r.on(document,"visibilitychange",m),t=setTimeout((function(){return s(!0)}),e),function(){n=!1;for(var e=0;e<a.length;e++)r.off(window,a[e],c);r.off(document,"visibilitychange",m)}}),[e,a]),l}},function(e,t,a){"use strict";function n(e,t,a,n){var i,r=!1,o=0;function s(){i&&clearTimeout(i)}function l(){var l=this,d=Date.now()-o,c=arguments;function m(){o=Date.now(),a.apply(l,c)}r||(n&&!i&&m(),s(),void 0===n&&d>e?m():!0!==t&&(i=setTimeout(n?function(){i=void 0}:m,void 0===n?e-d:e)))}return"boolean"!=typeof t&&(n=a,a=t,t=void 0),l.cancel=function(){s(),r=!0},l}Object.defineProperty(t,"__esModule",{value:!0}),t.throttle=n,t.debounce=function(e,t,a){return void 0===a?n(e,t,!1):n(e,a,!1!==t)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){var a=n.useState(null),i=a[0],r=a[1];return n.useEffect((function(){if(e.current&&"function"==typeof IntersectionObserver){var a=new IntersectionObserver((function(e){r(e[0])}),t);return a.observe(e.current),function(){r(null),a.disconnect()}}return function(){}}),[e.current,t.threshold,t.root,t.rootMargin]),i}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){var a=n.useRef((function(){}));n.useEffect((function(){a.current=e})),n.useEffect((function(){if(null!==t){var e=setInterval((function(){return a.current()}),t||0);return function(){return clearInterval(e)}}}),[t])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e){return void 0===e&&(e={laptopL:1440,laptop:1024,tablet:768}),function(){var t=n.useState(0),a=t[0],i=t[1];n.useEffect((function(){var e=function(){i(window.innerWidth)};return e(),window.addEventListener("resize",e),function(){window.removeEventListener("resize",e)}}));var r=n.useMemo((function(){return Object.entries(e).sort((function(e,t){return e[1]>=t[1]?1:-1}))}),[e]),o=r.reduce((function(e,t){var n=t[0],i=t[1];return a>=i?n:e}),r[0][0]);return o}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=n.__importDefault(a(60)),r=n.__importDefault(a(36));t.default=function(e,t,a,n){void 0===n&&(n=i.default);var o=n(e),s=o[0],l=o[1];r.default((function(){!s&&a?a(l):s&&t&&t(l)}),[s])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26),r=function(){};t.default=function(e,t,a){if(!i.isClient)return[t,r,r];if(!e)throw new Error("useLocalStorage key may not be falsy");var o=a?a.raw?function(e){return e}:a.deserializer:JSON.parse,s=n.useState((function(){try{var n=a?a.raw?String:a.serializer:JSON.stringify,i=localStorage.getItem(e);return null!==i?o(i):(t&&localStorage.setItem(e,n(t)),t)}catch(e){return t}})),l=s[0],d=s[1],c=n.useCallback((function(t){try{var n="function"==typeof t?t(l):t;if(void 0===n)return;var i;i=a?a.raw?"string"==typeof n?n:JSON.stringify(n):a.serializer?a.serializer(n):JSON.stringify(n):JSON.stringify(n),localStorage.setItem(e,i),d(o(i))}catch(e){}}),[e,d]),m=n.useCallback((function(){try{localStorage.removeItem(e),d(void 0)}catch(e){}}),[e,d]);return[l,c,m]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26),r=function(e){var t=window.history,a=t[e];t[e]=function(t){var n=a.apply(this,arguments),i=new Event(e.toLowerCase());return i.state=t,window.dispatchEvent(i),n}};i.isClient&&(r("pushState"),r("replaceState"));var o=function(e){var t=window.history,a=t.state,n=t.length,i=window.location;return{trigger:e,state:a,length:n,hash:i.hash,host:i.host,hostname:i.hostname,href:i.href,origin:i.origin,pathname:i.pathname,port:i.port,protocol:i.protocol,search:i.search}},s="function"==typeof Event;t.default=i.isClient&&s?function(){var e=n.useState(o("load")),t=e[0],a=e[1];return n.useEffect((function(){var e=function(){return a(o("popstate"))},t=function(){return a(o("pushstate"))},n=function(){return a(o("replacestate"))};return i.on(window,"popstate",e),i.on(window,"pushstate",t),i.on(window,"replacestate",n),function(){i.off(window,"popstate",e),i.off(window,"pushstate",t),i.off(window,"replacestate",n)}}),[]),t}:function(){return{trigger:"load",length:1}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getClosestBody=void 0;var n=a(0);function i(e){if(!e)return null;if("BODY"===e.tagName)return e;if("IFRAME"===e.tagName){var t=e.contentDocument;return t?t.body:null}return e.offsetParent?i(e.offsetParent):null}function r(e){var t=e||window.event;return t.touches.length>1||(t.preventDefault&&t.preventDefault(),!1)}t.getClosestBody=i;var o="undefined"!=typeof window&&window.navigator&&window.navigator.platform&&/iP(ad|hone|od)/.test(window.navigator.platform),s=new Map,l="object"==typeof document?document:void 0,d=!1;t.default=l?function(e,t){void 0===e&&(e=!0);var a=n.useRef(l.body);t=t||a;var c=function(e){var t=s.get(e);t&&(1===t.counter?(s.delete(e),o?(e.ontouchmove=null,d&&(document.removeEventListener("touchmove",r),d=!1)):e.style.overflow=t.initialOverflow):s.set(e,{counter:t.counter-1,initialOverflow:t.initialOverflow}))};n.useEffect((function(){var a=i(t.current);a&&(e?function(e){var t=s.get(e);t?s.set(e,{counter:t.counter+1,initialOverflow:t.initialOverflow}):(s.set(e,{counter:1,initialOverflow:e.style.overflow}),o?d||(document.addEventListener("touchmove",r,{passive:!1}),d=!0):e.style.overflow="hidden")}(a):c(a))}),[e,t.current]),n.useEffect((function(){var e=i(t.current);if(e)return function(){c(e)}}),[])}:function(e,t){void 0===e&&(e=!0)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=n.__importDefault(a(38)),r=n.__importDefault(a(36));t.default=function(e){for(var t=[],a=1;a<arguments.length;a++)t[a-1]=arguments[a];i.default((function(){return console.log.apply(console,n.__spreadArrays([e+" mounted"],t)),function(){return console.log(e+" unmounted")}})),r.default((function(){console.log.apply(console,n.__spreadArrays([e+" updated"],t))}))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=function(e){(function(e){return"touches"in e})(e)&&e.touches.length<2&&e.preventDefault&&e.preventDefault()};t.default=function(e,t){var a=void 0===t?{}:t,r=a.isPreventDefault,o=void 0===r||r,s=a.delay,l=void 0===s?300:s,d=n.useRef(),c=n.useRef(),m=n.useCallback((function(t){o&&t.target&&(t.target.addEventListener("touchend",i,{passive:!1}),c.current=t.target),d.current=setTimeout((function(){return e(t)}),l)}),[e,l,o]),h=n.useCallback((function(){d.current&&clearTimeout(d.current),o&&c.current&&c.current.removeEventListener("touchend",i)}),[o]);return{onMouseDown:function(e){return m(e)},onTouchStart:function(e){return m(e)},onMouseUp:h,onMouseLeave:h,onTouchEnd:h}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0);t.default=function(e){void 0===e&&(e={});var t=i.useState(e),a=t[0],r=t[1],o=i.useMemo((function(){return{set:function(e,t){r((function(a){var i;return n.__assign(n.__assign({},a),((i={})[e]=t,i))}))},setAll:function(e){r(e)},remove:function(e){r((function(t){var a=t,i=e;return a[i],n.__rest(a,["symbol"==typeof i?i:i+""])}))},reset:function(){return r(e)}}}),[r]),s=n.__assign({get:i.useCallback((function(e){return a[e]}),[a])},o);return[a,s]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26);t.default=function(e,t){void 0===t&&(t=!1);var a=n.useState(i.isClient?function(){return window.matchMedia(e).matches}:t),r=a[0],o=a[1];return n.useEffect((function(){var t=!0,a=window.matchMedia(e),n=function(){t&&o(!!a.matches)};return a.addListener(n),o(a.matches),function(){t=!1,a.removeListener(n)}}),[e]),r}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26),r=function(){};t.default="object"==typeof navigator&&navigator.mediaDevices?function(){var e=n.useState({}),t=e[0],a=e[1];return n.useEffect((function(){var e=!0,t=function(){navigator.mediaDevices.enumerateDevices().then((function(t){e&&a({devices:t.map((function(e){return{deviceId:e.deviceId,groupId:e.groupId,kind:e.kind,label:e.label}}))})})).catch(r)};return i.on(navigator.mediaDevices,"devicechange",t),t(),function(){e=!1,i.off(navigator.mediaDevices,"devicechange",t)}}),[]),t}:function(){return{}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useMediatedState=void 0;var n=a(0);t.useMediatedState=function(e,t){var a=n.useRef(e),i=n.useState(t),r=i[0],o=i[1];return[r,n.useCallback((function(e){2===a.current.length?a.current(e,o):o(a.current(e))}),[r])]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){var a=n.useMemo((function(){return function(t,a){var n;return(n=e(t))[a.type].apply(n,a.payload)}}),[e]),i=n.useReducer(a,t),r=i[0],o=i[1],s=n.useMemo((function(){return Object.keys(e(t)).reduce((function(e,t){return e[t]=function(){for(var e=[],a=0;a<arguments.length;a++)e[a]=arguments[a];return o({type:t,payload:e})},e}),{})}),[e,t]);return[r,s]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26),r={acceleration:{x:null,y:null,z:null},accelerationIncludingGravity:{x:null,y:null,z:null},rotationRate:{alpha:null,beta:null,gamma:null},interval:16};t.default=function(e){void 0===e&&(e=r);var t=n.useState(e),a=t[0],o=t[1];return n.useEffect((function(){var e=function(e){var t=e.acceleration,a=e.accelerationIncludingGravity,n=e.rotationRate,i=e.interval;o({acceleration:{x:t.x,y:t.y,z:t.z},accelerationIncludingGravity:{x:a.x,y:a.y,z:a.z},rotationRate:{alpha:n.alpha,beta:n.beta,gamma:n.gamma},interval:i})};return i.on(window,"devicemotion",e),function(){i.off(window,"devicemotion",e)}}),[]),a}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=n.__importDefault(a(58)),r=n.__importDefault(a(65)),o={current:null};t.default=function(e,t){void 0===t&&(t={});var a=!!t.whenHovered,n=!!t.bound,s=i.default(e,a),l=r.default(a&&!s?o:e);return n&&(l.elX=Math.max(0,Math.min(l.elX,l.elW)),l.elY=Math.max(0,Math.min(l.elY,l.elH))),l}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(){var e=n.useState(0),t=e[0],a=e[1];return n.useEffect((function(){var e=function(e){a(e.deltaY+t)};return window.addEventListener("wheel",e,!1),function(){return window.removeEventListener("wheel",e)}})),t}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=a(26),o=function(){if("object"!=typeof navigator)return null;var e=navigator;return e.connection||e.mozConnection||e.webkitConnection},s=function(){var e=o();return e?{downlink:e.downlink,downlinkMax:e.downlinkMax,effectiveType:e.effectiveType,type:e.type,rtt:e.rtt}:{}};t.default=function(e){void 0===e&&(e={});var t=i.useState(e),a=t[0],l=t[1];return i.useEffect((function(){var e=a,t=function(t){e=n.__assign(n.__assign({},e),t),l(e)},i=o(),d=function(){t({online:!0,since:new Date})},c=function(){t({online:!1,since:new Date})},m=function(){t(s())};return r.on(window,"online",d),r.on(window,"offline",c),i&&(r.on(i,"change",m),t(n.__assign(n.__assign(n.__assign({},a),{online:navigator.onLine,since:void 0}),s()))),function(){r.off(window,"online",d),r.off(window,"offline",c),i&&r.off(i,"change",m)}}),[]),a}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10).__importDefault(a(54));t.default=n.default},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26),r={angle:0,type:"landscape-primary"};t.default=function(e){void 0===e&&(e=r);var t=window.screen,a=n.useState(e),o=a[0],s=a[1];return n.useEffect((function(){var a=!0,n=function(){if(a){var n=t.orientation;if(n){var i=n.angle,r=n.type;s({angle:i,type:r})}else window.orientation?s({angle:"number"==typeof window.orientation?window.orientation:0,type:""}):s(e)}};return i.on(window,"orientationchange",n),n(),function(){a=!1,i.off(window,"orientationchange",n)}}),[]),o}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){void 0===t&&(t=[]),n.useEffect((function(){if(e){var t=function(t){var a=(t=t||window.event).relatedTarget||t.toElement;a&&"HTML"!==a.nodeName||e()};return document.addEventListener("mouseout",t),function(){document.removeEventListener("mouseout",t)}}}),t)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26),r=function(){};t.default=function(e){var t=!0,a=null,o=n.useState(""),s=o[0],l=o[1],d=function(){t&&a&&l(a.state)};return n.useEffect((function(){return navigator.permissions.query(e).then((function(e){a=e,d(),i.on(a,"change",d)})).catch(r),function(){t=!1,a&&i.off(a,"change",d)}}),[]),s}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e){var t=n.useRef();return n.useEffect((function(){t.current=e})),t.current}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(40),r=function(e,t){return e===t};t.default=function(e,t){void 0===t&&(t=r);var a=n.useRef(),o=n.useRef(e);return i.useFirstMountState()||t(o.current,e)||(a.current=o.current,o.current=e),a.current}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(31));t.default=function(){var e=r.default();return i.useCallback((function(t){return new Promise((function(a,n){t.then((function(t){e()&&a(t)}),(function(t){e()&&n(t)}))}))}),[])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0);t.default=function(e){void 0===e&&(e=[]);var t=i.useState(e),a=t[0],r=t[1];return{add:function(e){r((function(t){return n.__spreadArrays(t,[e])}))},remove:function(){var e;return r((function(t){var a=t[0],n=t.slice(1);return e=a,n})),e},get first(){return a[0]},get last(){return a[a.length-1]},get size(){return a.length}}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t){void 0===t&&(t=!0);var a=n.useRef(null),i=n.useRef(!1),r=n.useRef(e);r.current=e;var o=n.useCallback((function(e){i.current&&(r.current(e),a.current=requestAnimationFrame(o))}),[]),s=n.useMemo((function(){return[function(){i.current&&(i.current=!1,a.current&&cancelAnimationFrame(a.current))},function(){i.current||(i.current=!0,a.current=requestAnimationFrame(o))},function(){return i.current}]}),[]);return n.useEffect((function(){return t&&s[1](),s[0]}),[]),s}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=function(e,t){return new URLSearchParams(e).get(t)};t.default="object"==typeof window?function(e){var t=window.location,a=n.useState((function(){return i(t.search,e)})),r=a[0],o=a[1];return n.useEffect((function(){var a=function(){o(i(t.search,e))};return window.addEventListener("popstate",a),window.addEventListener("pushstate",a),window.addEventListener("replacestate",a),function(){window.removeEventListener("popstate",a),window.removeEventListener("pushstate",a),window.removeEventListener("replacestate",a)}}),[]),r}:function(){return null}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ScratchSensor=void 0;var n=a(10),i=a(0),r=a(148),o=n.__importDefault(a(61)),s=function(){},l=function(e){void 0===e&&(e={});var t=e.disabled,a=o.default(e),r=i.useState({isScratching:!1}),l=r[0],d=r[1],c=i.useRef(l),m=i.useRef(!1),h=i.useRef(null),p=i.useState(null),u=p[0],f=p[1];return i.useEffect((function(){if(!t&&u){var e,i,r=function(e,t){cancelAnimationFrame(h.current),h.current=requestAnimationFrame((function(){var i=u.getBoundingClientRect(),r=i.left,o=i.top,l=r+window.scrollX,m=o+window.scrollY,h=e-l,p=t-m;d((function(e){var t=n.__assign(n.__assign({},e),{dx:h-(e.x||0),dy:p-(e.y||0),end:Date.now(),isScratching:!0});return c.current=t,(a.current.onScratch||s)(t),t}))}))},o=function(e){r(e.pageX,e.pageY)},l=function(e){r(e.changedTouches[0].pageX,e.changedTouches[0].pageY)},p=function(){m.current&&(m.current=!1,c.current=n.__assign(n.__assign({},c.current),{isScratching:!1}),(a.current.onScratchEnd||s)(c.current),d({isScratching:!1}),window.removeEventListener("mousemove",o),window.removeEventListener("touchmove",l),window.removeEventListener("mouseup",e),window.removeEventListener("touchend",i))};e=p,i=p;var f=function(t,n){if(m.current){var r=u.getBoundingClientRect(),h=r.left,p=r.top,f=h+window.scrollX,g=p+window.scrollY,_=t-f,y=n-g,v=Date.now(),b={isScratching:!0,start:v,end:v,docX:t,docY:n,x:_,y:y,dx:0,dy:0,elH:u.offsetHeight,elW:u.offsetWidth,elX:f,elY:g};c.current=b,(a.current.onScratchStart||s)(b),d(b),window.addEventListener("mousemove",o),window.addEventListener("touchmove",l),window.addEventListener("mouseup",e),window.addEventListener("touchend",i)}},g=function(e){m.current=!0,f(e.pageX,e.pageY)},_=function(e){m.current=!0,f(e.changedTouches[0].pageX,e.changedTouches[0].pageY)};return u.addEventListener("mousedown",g),u.addEventListener("touchstart",_),function(){u.removeEventListener("mousedown",g),u.removeEventListener("touchstart",_),window.removeEventListener("mousemove",o),window.removeEventListener("touchmove",l),window.removeEventListener("mouseup",e),window.removeEventListener("touchend",i),h.current&&cancelAnimationFrame(h.current),h.current=null,m.current=!1,c.current={isScratching:!1},d(c.current)}}}),[u,t,a]),[f,l]};t.ScratchSensor=function(e){e.children;var t=n.__rest(e,["children"]),a=l(t),o=a[0],s=a[1],d=r.render(e,s);return i.cloneElement(d,n.__assign(n.__assign({},d.props),{ref:function(e){d.props.ref&&("object"==typeof d.props.ref&&(d.props.ref.current=e),"function"==typeof d.props.ref&&d.props.ref(e)),o(e)}}))},t.default=l},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.hookToRenderProp=t.createEnhancer=t.render=void 0;var n=a(10),i=n.__importDefault(a(68));t.render=i.default;var r=n.__importDefault(a(149));t.createEnhancer=r.default;var o=n.__importDefault(a(152));t.hookToRenderProp=o.default},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.divWrapper=void 0;var n=a(10),i=n.__importStar(a(0)),r=n.__importDefault(a(150)),o=i.createElement,s=function(e,t,a,i){var r;return o(e,t?n.__assign(((r={})[t]=i,r),a):n.__assign(n.__assign({},i),a))};t.divWrapper=function(e,t,a,n){return o("div",null,s(e,t,a,n))},t.default=function(e,t,a){void 0===a&&(a=s);var n=function(i,s,l){void 0===s&&(s=t),void 0===l&&(l=null);var d="string"==typeof i;if(d)return function(e){return n(e,i||t,s)};var c=function(t){return o(e,l,(function(e){return a(i,s,t,e)}))};return d?r.default(c):c};return n}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10).__importDefault(a(151));t.default=function(e){return e.prototype?e:n.default(e)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=n.__importStar(a(0));t.default=function(e){var t=function(t){function a(){return null!==t&&t.apply(this,arguments)||this}return n.__extends(a,t),a.prototype.render=function(){return e(this.props,this.context)},a}(i.Component);return t}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10).__importDefault(a(68)),i=function(e){return[e]};t.default=function(e,t){return void 0===t&&(t=i),function(a){return n.default(a,e.apply(void 0,t(a)))}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(39));t.default=function(e){var t=r.default({x:0,y:0}),a=t[0],n=t[1];return i.useEffect((function(){var t=function(){e.current&&n({x:e.current.scrollLeft,y:e.current.scrollTop})};return e.current&&e.current.addEventListener("scroll",t,{capture:!1,passive:!0}),function(){e.current&&e.current.removeEventListener("scroll",t)}}),[e]),a}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e){var t=n.useState(!1),a=t[0],i=t[1];return n.useEffect((function(){if(e.current){var t,a=function(){i(!0),clearTimeout(t),t=setTimeout((function(){i(!1)}),150)};return e.current.addEventListener("scroll",a,!1),function(){e.current&&e.current.removeEventListener("scroll",a,!1)}}return function(){}}),[e]),a}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i=a(26);t.default=function(e,t,a){if(!i.isClient)return[t,function(){}];var r=n.useState((function(){try{var n=sessionStorage.getItem(e);return"string"!=typeof n?(sessionStorage.setItem(e,a?String(t):JSON.stringify(t)),t):a?n:JSON.parse(n||"null")}catch(e){return t}})),o=r[0],s=r[1];return n.useEffect((function(){try{var t=a?String(o):JSON.stringify(o);sessionStorage.setItem(e,t)}catch(e){}})),[o,s]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(157),r=n.__importDefault(a(44)),o=function(e,t){return e.every((function(e,a){return i.equal(e,t[a])}))};t.default=function(e,t){r.default(e,t,o)}},function(e,t){var a=Object.keys;t.equal=function(e,t){if(e===t)return!0;if(!(e instanceof Object&&t instanceof Object))return!1;for(var n=a(e),i=n.length,r=0;r<i;r++)if(!(n[r]in t))return!1;for(r=0;r<i;r++)if(e[n[r]]!==t[n[r]])return!1;return i===a(t).length}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=n.__importStar(a(0)),r=a(26),o=i.useState,s=i.useEffect,l=i.useRef;t.default=function(e,t){var a=void 0===t?{}:t,d=a.width,c=void 0===d?1/0:d,m=a.height,h=void 0===m?1/0:m;if(!r.isClient)return["function"==typeof e?e({width:c,height:h}):e,{width:c,height:h}];var p=o({width:c,height:h}),u=p[0],f=p[1];"function"==typeof e&&(e=e(u));var g=e.props.style||{},_=l(null),y=null,v=function(){var e=_.current,t=e?{width:e.offsetWidth,height:e.offsetHeight}:{width:c,height:h};f(t)},b=function(e){e.addEventListener("resize",v),setTimeout(v,35)};return s((function(){var e=_.current;if(e){if(e.contentWindow)y=e.contentWindow,b(y);else{var t=function(){e.removeEventListener("load",t),y=e.contentWindow,b(y)};e.addEventListener("load",t)}return function(){y&&y.removeEventListener&&y.removeEventListener("resize",v)}}}),[]),g.position="relative",[i.cloneElement.apply(i,n.__spreadArrays([e,{style:g}],n.__spreadArrays([i.createElement("iframe",{ref:_,style:{background:"transparent",border:"none",height:"100%",left:0,position:"absolute",top:0,width:"100%",zIndex:-1}})],i.Children.toArray(e.props.children)))),u]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=a(26),o=n.__importDefault(a(31)),s=n.__importDefault(a(37)),l=function(){};t.default=function(e,t){void 0===t&&(t={});var a=o.default(),n=i.useRef(!1),d=i.useRef(0),c=i.useRef(0),m=s.default({isSliding:!1,value:0}),h=m[0],p=m[1];return d.current=h.value,i.useEffect((function(){if(r.isClient){var i=void 0===t.styles||t.styles,o=void 0!==t.reverse&&t.reverse;e.current&&i&&(e.current.style.userSelect="none");var s=function(){!n.current&&a()&&((t.onScrubStart||l)(),n.current=!0,p({isSliding:!0}),_())},m=function(){n.current&&a()&&((t.onScrubStop||l)(d.current),n.current=!1,p({isSliding:!1}),y())},h=function(e){s(),u(e)},u=t.vertical?function(e){return v(e.clientY)}:function(e){return v(e.clientX)},f=function(e){s(),g(e)},g=t.vertical?function(e){return v(e.changedTouches[0].clientY)}:function(e){return v(e.changedTouches[0].clientX)},_=function(){r.on(document,"mousemove",u),r.on(document,"mouseup",m),r.on(document,"touchmove",g),r.on(document,"touchend",m)},y=function(){r.off(document,"mousemove",u),r.off(document,"mouseup",m),r.off(document,"touchmove",g),r.off(document,"touchend",m)},v=function(n){cancelAnimationFrame(c.current),c.current=requestAnimationFrame((function(){if(a()&&e.current){var i=e.current.getBoundingClientRect(),r=t.vertical?i.top:i.left,s=t.vertical?i.height:i.width;if(!s)return;var d=(n-r)/s;d>1?d=1:d<0&&(d=0),o&&(d=1-d),p({value:d}),(t.onScrub||l)(d)}}))};return r.on(e.current,"mousedown",h),r.on(e.current,"touchstart",f),function(){r.off(e.current,"mousedown",h),r.off(e.current,"touchstart",f)}}}),[e,t.vertical]),h}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(64)),o=n.__importDefault(a(37)),s="object"==typeof window&&"object"==typeof window.speechSynthesis?window.speechSynthesis.getVoices():[];t.default=function(e,t){void 0===t&&(t={});var a=o.default({isPlaying:!1,lang:t.lang||"default",voice:t.voice||s[0],rate:t.rate||1,pitch:t.pitch||1,volume:t.volume||1}),n=a[0],l=a[1],d=i.useRef(null);return r.default((function(){var a=new SpeechSynthesisUtterance(e);t.lang&&(a.lang=t.lang),t.voice&&(a.voice=t.voice),a.rate=t.rate||1,a.pitch=t.pitch||1,a.volume=t.volume||1,a.onstart=function(){return l({isPlaying:!0})},a.onresume=function(){return l({isPlaying:!0})},a.onend=function(){return l({isPlaying:!1})},a.onpause=function(){return l({isPlaying:!1})},d.current=a,window.speechSynthesis.speak(d.current)})),n}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10).__importDefault(a(29));t.default=function(e){n.default((function(){var t=function(t){var a,n,i,r,o;!function(){var e=document.activeElement,t=document.body;if(!e)return!1;if(e===t)return!1;switch(e.tagName){case"INPUT":case"TEXTAREA":return!0}return e.hasAttribute("contenteditable")}()&&(n=(a=t).keyCode,i=a.metaKey,r=a.ctrlKey,o=a.altKey,!(i||r||o)&&(n>=48&&n<=57||n>=65&&n<=90))&&e(t)};return document.addEventListener("keydown",t),function(){document.removeEventListener("keydown",t)}}),[])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useStateWithHistory=void 0;var n=a(0),i=a(40),r=a(41);t.useStateWithHistory=function(e,t,a){if(void 0===t&&(t=10),t<1)throw new Error("Capacity has to be greater than 1, got '"+t+"'");var o=i.useFirstMountState(),s=n.useState(e),l=s[0],d=s[1],c=n.useRef(null!=a?a:[]),m=n.useRef(0);return o&&(c.current.length?(c.current[c.current.length-1]!==e&&c.current.push(e),c.current.length>t&&(c.current=c.current.slice(c.current.length-t))):c.current.push(e),m.current=c.current.length&&c.current.length-1),[l,n.useCallback((function(e){d((function(a){return(e=r.resolveHookState(e))!==a&&(m.current<c.current.length-1&&(c.current=c.current.slice(0,m.current+1)),m.current=c.current.push(e)-1,c.current.length>t&&(c.current=c.current.slice(c.current.length-t))),e}))}),[l,t]),n.useMemo((function(){return{history:c.current,position:m.current,capacity:t,back:function(e){void 0===e&&(e=1),m.current&&d((function(){return m.current-=Math.min(e,m.current),c.current[m.current]}))},forward:function(e){void 0===e&&(e=1),m.current!==c.current.length-1&&d((function(){return m.current=Math.min(m.current+e,c.current.length-1),c.current[m.current]}))},go:function(e){e!==m.current&&d((function(){return m.current=e<0?Math.max(c.current.length+e,0):Math.min(c.current.length-1,e),c.current[m.current]}))}}}),[l])]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(31)),o=n.__importDefault(a(32)),s=n.__importDefault(a(36));t.default=function(e){void 0===e&&(e=[]);var t=r.default(),a=o.default(),l=i.useRef(0);s.default((function(){e.length<=l.current&&(l.current=e.length-1,a())}),[e.length]);var d=i.useMemo((function(){return{next:function(){return d.setStateAt(l.current+1)},prev:function(){return d.setStateAt(l.current-1)},setStateAt:function(n){t()&&e.length&&n!==l.current&&(l.current=n>=0?n%e.length:e.length+n%e.length,a())},setState:function(n){if(t()){var i=e.length?e.indexOf(n):-1;if(-1===i)throw new Error("State '"+n+"' is not a valid state (does not exist in state list)");l.current=i,a()}}}}),[e]);return n.__assign({state:e[l.current],currentIndex:l.current},d)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(42));t.default=function(e,t){void 0===t&&(t=200);var a=i.useState(e),n=a[0],o=a[1],s=i.useRef(),l=i.useRef(null),d=i.useRef(0);return i.useEffect((function(){if(s.current)l.current=e,d.current=!0;else{o(e);var a=function(){d.current?(d.current=!1,o(l.current),s.current=setTimeout(a,t)):s.current=void 0};s.current=setTimeout(a,t)}}),[e]),r.default((function(){s.current&&clearTimeout(s.current)})),n}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(42));t.default=function(e,t,a){void 0===t&&(t=200);var n=i.useState(null),o=n[0],s=n[1],l=i.useRef(),d=i.useRef();return i.useEffect((function(){if(l.current)d.current=a;else{s(e.apply(void 0,a));var n=function(){d.current?(s(e.apply(void 0,d.current)),d.current=void 0,l.current=setTimeout(n,t)):l.current=void 0};l.current=setTimeout(n,t)}}),a),r.default((function(){l.current&&clearTimeout(l.current)})),o}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=n.__importDefault(a(45)),r=n.__importDefault(a(32));t.default=function(e){void 0===e&&(e=0);var t=r.default();return i.default(t,e)}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i={restoreOnUnmount:!1};t.default="undefined"!=typeof document?function(e,t){void 0===t&&(t=i);var a=n.useRef(document.title);document.title=e,n.useEffect((function(){return t&&t.restoreOnUnmount?function(){document.title=a.current}:void 0}),[])}:function(e){}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(169),r=n.__importDefault(a(67));t.default=function(e,t,a){return void 0===e&&(e="inCirc"),void 0===t&&(t=200),void 0===a&&(a=0),(0,i.easing[e])(r.default(t,a))}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.easing={linear:function(e){return e},quadratic:function(e){return e*(-e*e*e+4*e*e-6*e+4)},cubic:function(e){return e*(4*e*e-9*e+6)},elastic:function(e){return e*(33*e*e*e*e-106*e*e*e+126*e*e-67*e+15)},inQuad:function(e){return e*e},outQuad:function(e){return e*(2-e)},inOutQuad:function(e){return e<.5?2*e*e:(4-2*e)*e-1},inCubic:function(e){return e*e*e},outCubic:function(e){return--e*e*e+1},inOutCubic:function(e){return e<.5?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1},inQuart:function(e){return e*e*e*e},outQuart:function(e){return 1- --e*e*e*e},inOutQuart:function(e){return e<.5?8*e*e*e*e:1-8*--e*e*e*e},inQuint:function(e){return e*e*e*e*e},outQuint:function(e){return 1+--e*e*e*e*e},inOutQuint:function(e){return e<.5?16*e*e*e*e*e:1+16*--e*e*e*e*e},inSine:function(e){return 1-Math.cos(e*(Math.PI/2))},outSine:function(e){return Math.sin(e*(Math.PI/2))},inOutSine:function(e){return-(Math.cos(Math.PI*e)-1)/2},inExpo:function(e){return Math.pow(2,10*(e-1))},outExpo:function(e){return 1-Math.pow(2,-10*e)},inOutExpo:function(e){return(e/=.5)<1?Math.pow(2,10*(e-1))/2:(e--,(2-Math.pow(2,-10*e))/2)},inCirc:function(e){return 1-Math.sqrt(1-e*e)},outCirc:function(e){return Math.sqrt(1-(e-=1)*e)},inOutCirc:function(e){return(e/=.5)<1?-(Math.sqrt(1-e*e)-1)/2:(e-=2,(Math.sqrt(1-e*e)+1)/2)}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(){var e=n.useRef(!1);return n.useEffect((function(){return function(){e.current=!0}})),n.useMemo((function(){return function(t,a){return new Promise((function(n,i){t.then((function(t){e.current||n(t)}),(function(t){e.current?a?a(t):console.error("useUnmountPromise",t):i(t)}))}))}}),[])}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=n.__importDefault(a(63));t.default=function(e,t){void 0===t&&(t=[]);var a=i.default(t),r=a[0],o=a[1];return[r,n.__assign(n.__assign({},o),{upsert:function(t){o.upsert(e,t)}})]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0),i="object"==typeof navigator&&"vibrate"in navigator;t.default=i?function(e,t,a){void 0===e&&(e=!0),void 0===t&&(t=[1e3,1e3]),void 0===a&&(a=!0),n.useEffect((function(){var n;if(e&&(navigator.vibrate(t),a)){var i=t instanceof Array?t.reduce((function(e,t){return e+t})):t;n=setInterval((function(){navigator.vibrate(t)}),i)}return function(){e&&(navigator.vibrate(0),a&&clearInterval(n))}}),[e])}:function(){}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10).__importDefault(a(52)).default("video");t.default=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(0);t.default=function(e,t,a){void 0===a&&(a=[void 0]);var i=n.useRef(t),r=n.useRef(e);i.current=t,r.current=e;var o=n.useState(a),s=o[0],l=o[1],d=n.useCallback((function(){i.current.length>=2?i.current(r.current,l):l(i.current(r.current))}),[l]);return n.useEffect((function(){d()}),[e]),[s,d]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useScrollbarWidth=void 0;var n=a(176),i=a(0);t.useScrollbarWidth=function(){var e=i.useState(n.scrollbarWidth()),t=e[0],a=e[1];return i.useEffect((function(){if(void 0===t){var e=requestAnimationFrame((function(){a(n.scrollbarWidth())}));return function(){return cancelAnimationFrame(e)}}}),[]),t}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=function(e){if("undefined"==typeof document)return 0;if(document.body&&(!document.readyState||"loading"!==document.readyState)){if(!0!==e&&"number"==typeof n.__cache)return n.__cache;var t=document.createElement("div"),a=t.style;a.display="block",a.position="absolute",a.width="100px",a.height="100px",a.left="-999px",a.top="-999px",a.overflow="scroll",document.body.insertBefore(t,null);var i=t.clientWidth;if(0!==i)return n.__cache=100-i,document.body.removeChild(t),n.__cache;document.body.removeChild(t)}};t.scrollbarWidth=n},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useMultiStateValidator=void 0;var n=a(0);t.useMultiStateValidator=function(e,t,a){if(void 0===a&&(a=[void 0]),"object"!=typeof e)throw new Error("states expected to be an object or array, got "+typeof e);var i=n.useRef(t),r=n.useRef(e);i.current=t,r.current=e;var o=n.useState(a),s=o[0],l=o[1],d=n.useCallback((function(){i.current.length>=2?i.current(r.current,l):l(i.current(r.current))}),[l]);return n.useEffect((function(){d()}),Object.values(e)),[s,d]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=a(26),o=n.__importDefault(a(39));t.default=function(){var e=o.default({x:r.isClient?window.pageXOffset:0,y:r.isClient?window.pageYOffset:0}),t=e[0],a=e[1];return i.useEffect((function(){var e=function(){a({x:window.pageXOffset,y:window.pageYOffset})};return window.addEventListener("scroll",e,{capture:!1,passive:!0}),function(){window.removeEventListener("scroll",e)}}),[]),t}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(39)),o=a(26);t.default=function(e,t){void 0===e&&(e=1/0),void 0===t&&(t=1/0);var a=r.default({width:o.isClient?window.innerWidth:e,height:o.isClient?window.innerHeight:t}),n=a[0],s=a[1];return i.useEffect((function(){if(o.isClient){var e=function(){s({width:window.innerWidth,height:window.innerHeight})};return window.addEventListener("resize",e),function(){window.removeEventListener("resize",e)}}}),[]),n}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0),r=n.__importDefault(a(29)),o=a(26),s={x:0,y:0,width:0,height:0,top:0,left:0,bottom:0,right:0};t.default=o.isClient&&window.ResizeObserver?function(){var e=i.useState(null),t=e[0],a=e[1],n=i.useState(s),o=n[0],l=n[1],d=i.useMemo((function(){return new window.ResizeObserver((function(e){if(e[0]){var t=e[0].contentRect,a=t.x,n=t.y,i=t.width,r=t.height,o=t.top,s=t.left,d=t.bottom,c=t.right;l({x:a,y:n,width:i,height:r,top:o,left:s,bottom:d,right:c})}}))}),[]);return r.default((function(){if(t)return d.observe(t),function(){d.disconnect()}}),[t]),[a,o]}:function(){return[function(){},s]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useRendersCount=void 0;var n=a(0);t.useRendersCount=function(){return++n.useRef(0).current}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(10),i=a(0);t.default=function(e){void 0===e&&(e=new Set);var t=i.useState(e),a=t[0],r=t[1],o=i.useMemo((function(){return{add:function(e){return r((function(t){return new Set(n.__spreadArrays(Array.from(t),[e]))}))},remove:function(e){return r((function(t){return new Set(Array.from(t).filter((function(t){return t!==e})))}))},toggle:function(e){return r((function(t){return t.has(e)?new Set(Array.from(t).filter((function(t){return t!==e}))):new Set(n.__spreadArrays(Array.from(t),[e]))}))},reset:function(){return r(e)}}}),[r]),s=n.__assign({has:i.useCallback((function(e){return a.has(e)}),[a])},o);return[a,s]}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createGlobalState=void 0;var n=a(10),i=a(0),r=n.__importDefault(a(38)),o=n.__importDefault(a(29));function s(e){var t={state:e,setState:function(e){t.state=e,t.setters.forEach((function(e){return e(t.state)}))},setters:[]};return function(){var e=i.useState(t.state),a=e[0],n=e[1];return r.default((function(){return function(){t.setters=t.setters.filter((function(e){return e!==n}))}})),o.default((function(){t.setters.includes(n)||t.setters.push(n)})),[a,t.setState]}}t.createGlobalState=s,t.default=s},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.useHash=void 0;var n=a(10),i=a(0),r=n.__importDefault(a(62));t.useHash=function(){var e=i.useState((function(){return window.location.hash})),t=e[0],a=e[1],n=i.useCallback((function(){a(window.location.hash)}),[]);r.default((function(){window.addEventListener("hashchange",n)}),(function(){window.removeEventListener("hashchange",n)}));var o=i.useCallback((function(e){e!==t&&(window.location.hash=e)}),[t]);return[t,o]}},function(e,t,a){switch(window.__kbnThemeTag__){case"v8dark":return a(186);case"v8light":return a(188)}},function(e,t,a){var n=a(33),i=a(187);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);n(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},function(e,t,a){var n=a(34),i=a(69),r=a(70);t=n(!1);var o=i(r);t.push([e.i,".kbnSolutionAvatar{box-shadow:0 .7px 1.4px rgba(0,0,0,.175),0 1.9px 4px rgba(0,0,0,.125),0 4.5px 10px rgba(0,0,0,.125)}.kbnSolutionAvatar--xxl{background:#1d1e24 url("+o+") no-repeat;background-size:cover,125%;border-radius:100px;box-shadow:0 .9px 4px -1px #0003,0 2.6px 8px -1px #00000026,0 5.7px 12px -1px rgba(0,0,0,.125),0 15px 15px -1px #0000001a;display:inline-block;height:100px;line-height:100px;text-align:center;width:100px}",""]),e.exports=t},function(e,t,a){var n=a(33),i=a(189);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);n(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},function(e,t,a){var n=a(34),i=a(69),r=a(70);t=n(!1);var o=i(r);t.push([e.i,".kbnSolutionAvatar{box-shadow:0 .7px 1.4px #00000012,0 1.9px 4px #0000000d,0 4.5px 10px #0000000d}.kbnSolutionAvatar--xxl{background:#fff url("+o+") no-repeat;background-size:cover,125%;border-radius:100px;box-shadow:0 .9px 4px -1px #00000014,0 2.6px 8px -1px #0000000f,0 5.7px 12px -1px #0000000d,0 15px 15px -1px #0000000a;display:inline-block;height:100px;line-height:100px;text-align:center;width:100px}",""]),e.exports=t},function(e,t,a){e.exports=a.p+"baad30acfe492601d08a0e839c9bb3f5.svg"},function(e,t,a){"use strict";e.exports=a(192)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(193);a(18),a(71),a(72);var i=n.default({key:"css"}),r=i.flush,o=i.hydrate,s=i.cx,l=i.merge,d=i.getRegisteredStyles,c=i.injectGlobal,m=i.keyframes,h=i.css,p=i.sheet,u=i.cache;t.cache=u,t.css=h,t.cx=s,t.flush=r,t.getRegisteredStyles=d,t.hydrate=o,t.injectGlobal=c,t.keyframes=m,t.merge=l,t.sheet=p},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(18),i=a(71),r=a(72);function o(e){return e&&e.__esModule?e:{default:e}}var s=o(n);function l(e,t){if(void 0===e.inserted[t.name])return e.insert("",t,e.sheet,!0)}function d(e,t,a){var n=[],i=r.getRegisteredStyles(e,n,a);return n.length<2?a:i+t(n)}var c=function e(t){for(var a="",n=0;n<t.length;n++){var i=t[n];if(null!=i){var r=void 0;switch(typeof i){case"boolean":break;case"object":if(Array.isArray(i))r=e(i);else for(var o in r="",i)i[o]&&o&&(r&&(r+=" "),r+=o);break;default:r=i}r&&(a&&(a+=" "),a+=r)}}return a};t.default=function(e){var t=s.default(e);t.sheet.speedy=function(e){this.isSpeedy=e},t.compat=!0;var a=function(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n];var o=i.serializeStyles(a,t.registered,void 0);return r.insertStyles(t,o,!1),t.key+"-"+o.name};return{css:a,cx:function(){for(var e=arguments.length,n=new Array(e),i=0;i<e;i++)n[i]=arguments[i];return d(t.registered,a,c(n))},injectGlobal:function(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n];var r=i.serializeStyles(a,t.registered);l(t,r)},keyframes:function(){for(var e=arguments.length,a=new Array(e),n=0;n<e;n++)a[n]=arguments[n];var r=i.serializeStyles(a,t.registered),o="animation-"+r.name;return l(t,{name:r.name,styles:"@keyframes "+o+"{"+r.styles+"}"}),o},hydrate:function(e){e.forEach((function(e){t.inserted[e]=!0}))},flush:function(){t.registered={},t.inserted={},t.sheet.flush()},sheet:t.sheet,cache:t,getRegisteredStyles:r.getRegisteredStyles.bind(null,t.registered),merge:d.bind(null,t.registered,a)}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=a(195),i=a(197),r=a(199);function o(e){return e&&e.__esModule?e:{default:e}}var s=o(n),l=o(i),d=/[A-Z]|^ms/g,c=/_EMO_([^_]+?)_([^]*?)_EMO_/g,m=function(e){return 45===e.charCodeAt(1)},h=function(e){return null!=e&&"boolean"!=typeof e},p=o(r).default((function(e){return m(e)?e:e.replace(d,"-$&").toLowerCase()})),u=function(e,t){switch(e){case"animation":case"animationName":if("string"==typeof t)return t.replace(c,(function(e,t,a){return g={name:t,styles:a,next:g},t}))}return 1===l.default[e]||m(e)||"number"!=typeof t||0===t?t:t+"px"};function f(e,t,a){if(null==a)return"";if(void 0!==a.__emotion_styles)return a;switch(typeof a){case"boolean":return"";case"object":if(1===a.anim)return g={name:a.name,styles:a.styles,next:g},a.name;if(void 0!==a.styles){var n=a.next;if(void 0!==n)for(;void 0!==n;)g={name:n.name,styles:n.styles,next:g},n=n.next;return a.styles+";"}return function(e,t,a){var n="";if(Array.isArray(a))for(var i=0;i<a.length;i++)n+=f(e,t,a[i])+";";else for(var r in a){var o=a[r];if("object"!=typeof o)null!=t&&void 0!==t[o]?n+=r+"{"+t[o]+"}":h(o)&&(n+=p(r)+":"+u(r,o)+";");else if(!Array.isArray(o)||"string"!=typeof o[0]||null!=t&&void 0!==t[o[0]]){var s=f(e,t,o);switch(r){case"animation":case"animationName":n+=p(r)+":"+s+";";break;default:n+=r+"{"+s+"}"}}else for(var l=0;l<o.length;l++)h(o[l])&&(n+=p(r)+":"+u(r,o[l])+";")}return n}(e,t,a);case"function":if(void 0!==e){var i=g,r=a(e);return g=i,f(e,t,r)}}if(null==t)return a;var o=t[a];return void 0!==o?o:a}var g,_=/label:\s*([^\s;\n{]+)\s*(;|$)/g;t.serializeStyles=function(e,t,a){if(1===e.length&&"object"==typeof e[0]&&null!==e[0]&&void 0!==e[0].styles)return e[0];var n=!0,i="";g=void 0;var r=e[0];null==r||void 0===r.raw?(n=!1,i+=f(a,t,r)):i+=r[0];for(var o=1;o<e.length;o++)i+=f(a,t,e[o]),n&&(i+=r[o]);_.lastIndex=0;for(var l,d="";null!==(l=_.exec(i));)d+="-"+l[1];return{name:s.default(i)+d,styles:i,next:g}}},function(e,t,a){"use strict";e.exports=a(196)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){for(var t,a=0,n=0,i=e.length;i>=4;++n,i-=4)t=1540483477*(65535&(t=255&e.charCodeAt(n)|(255&e.charCodeAt(++n))<<8|(255&e.charCodeAt(++n))<<16|(255&e.charCodeAt(++n))<<24))+(59797*(t>>>16)<<16),a=1540483477*(65535&(t^=t>>>24))+(59797*(t>>>16)<<16)^1540483477*(65535&a)+(59797*(a>>>16)<<16);switch(i){case 3:a^=(255&e.charCodeAt(n+2))<<16;case 2:a^=(255&e.charCodeAt(n+1))<<8;case 1:a=1540483477*(65535&(a^=255&e.charCodeAt(n)))+(59797*(a>>>16)<<16)}return(((a=1540483477*(65535&(a^=a>>>13))+(59797*(a>>>16)<<16))^a>>>15)>>>0).toString(36)}},function(e,t,a){"use strict";e.exports=a(198)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1}},function(e,t,a){"use strict";e.exports=a(200)},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=Object.create(null);return function(a){return void 0===t[a]&&(t[a]=e(a)),t[a]}}},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n="undefined"!=typeof document,i=function(e,t,a){var i=e.key+"-"+t.name;(!1===a||!1===n&&void 0!==e.compat)&&void 0===e.registered[i]&&(e.registered[i]=t.styles)};t.getRegisteredStyles=function(e,t,a){var n="";return a.split(" ").forEach((function(a){void 0!==e[a]?t.push(e[a]+";"):n+=a+" "})),n},t.insertStyles=function(e,t,a){i(e,t,a);var r=e.key+"-"+t.name;if(void 0===e.inserted[t.name]){var o="",s=t;do{var l=e.insert(t===s?"."+r:"",s,e.sheet,!0);n||void 0===l||(o+=l),s=s.next}while(void 0!==s);if(!n&&0!==o.length)return o}},t.registerStyles=i},function(e,t,a){switch(window.__kbnThemeTag__){case"v8dark":return a(203);case"v8light":return a(205)}},function(e,t,a){var n=a(33),i=a(204);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);n(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},function(e,t,a){(t=a(34)(!1)).push([e.i,'.kbnSolutionNav__flyout{background-color:#141519}.kbnSolutionNav__flyout .kbnSolutionNav{flex:auto}.kbnSolutionNav{display:flex;flex-direction:column;height:100%;overflow-x:hidden;overflow-y:auto;scrollbar-color:#98a2b380 #0000;scrollbar-width:thin}.kbnSolutionNav::-webkit-scrollbar{height:16px;width:16px}.kbnSolutionNav::-webkit-scrollbar-thumb{background-clip:content-box;background-color:#98a2b380;border:6px solid #0000;border-radius:16px}.kbnSolutionNav::-webkit-scrollbar-corner,.kbnSolutionNav::-webkit-scrollbar-track{background-color:#0000}.kbnSolutionNav:focus{outline:none}.kbnSolutionNav[tabindex="0"]:focus:focus-visible{outline-style:auto}@media only screen and (min-width:768px)and (max-width:991px){.kbnSolutionNav{padding:24px;width:248px}}@media only screen and (min-width:992px)and (max-width:1199px){.kbnSolutionNav{padding:24px;width:248px}}@media only screen and (min-width:1200px){.kbnSolutionNav{padding:24px;width:248px}}.kbnSolutionNav__title{align-items:center;display:inline-flex}.kbnSolutionNav__titleAvatar{align-self:flex-start;margin-right:12px}.kbnSolutionNav--hidden{opacity:0;pointer-events:none}@media screen and (prefers-reduced-motion:no-preference){.kbnSolutionNav--hidden{transition:opacity .15s cubic-bezier(.694,.0482,.335,1)}}',""]),e.exports=t},function(e,t,a){var n=a(33),i=a(206);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);n(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},function(e,t,a){(t=a(34)(!1)).push([e.i,'.kbnSolutionNav__flyout{background-color:#fafbfd}.kbnSolutionNav__flyout .kbnSolutionNav{flex:auto}.kbnSolutionNav{display:flex;flex-direction:column;height:100%;overflow-x:hidden;overflow-y:auto;scrollbar-color:#69707d80 #0000;scrollbar-width:thin}.kbnSolutionNav::-webkit-scrollbar{height:16px;width:16px}.kbnSolutionNav::-webkit-scrollbar-thumb{background-clip:content-box;background-color:#69707d80;border:6px solid #0000;border-radius:16px}.kbnSolutionNav::-webkit-scrollbar-corner,.kbnSolutionNav::-webkit-scrollbar-track{background-color:#0000}.kbnSolutionNav:focus{outline:none}.kbnSolutionNav[tabindex="0"]:focus:focus-visible{outline-style:auto}@media only screen and (min-width:768px)and (max-width:991px){.kbnSolutionNav{padding:24px;width:248px}}@media only screen and (min-width:992px)and (max-width:1199px){.kbnSolutionNav{padding:24px;width:248px}}@media only screen and (min-width:1200px){.kbnSolutionNav{padding:24px;width:248px}}.kbnSolutionNav__title{align-items:center;display:inline-flex}.kbnSolutionNav__titleAvatar{align-self:flex-start;margin-right:12px}.kbnSolutionNav--hidden{opacity:0;pointer-events:none}@media screen and (prefers-reduced-motion:no-preference){.kbnSolutionNav--hidden{transition:opacity .15s cubic-bezier(.694,.0482,.335,1)}}',""]),e.exports=t},function(e,t,a){switch(window.__kbnThemeTag__){case"v8dark":return a(208);case"v8light":return a(210)}},function(e,t,a){var n=a(33),i=a(209);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);n(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},function(e,t,a){(t=a(34)(!1)).push([e.i,".kbnSolutionNavCollapseButton{left:232px;opacity:0;position:absolute;top:24px;z-index:2}@media screen and (prefers-reduced-motion:no-preference){.kbnSolutionNavCollapseButton{transition:opacity .15s,left .15s,background .15s}}.kbnSolutionNavCollapseButton:focus,.kbnSolutionNavCollapseButton:hover{transition-delay:0s!important}.kbnSolutionNavCollapseButton:focus,.kbnSolutionNavCollapseButton:hover,.kbnSolutionNav__sidebar:hover .kbnSolutionNavCollapseButton{left:224px;opacity:1}.kbnSolutionNav__sidebar:hover .kbnSolutionNavCollapseButton{transition-delay:.7s}.kbnSolutionNavCollapseButton:not(.kbnSolutionNavCollapseButton-isCollapsed){background-color:#1d1e24!important}.kbnSolutionNavCollapseButton-isCollapsed{align-items:flex-start;border-radius:0;bottom:0;height:100%;left:0!important;opacity:1!important;padding-top:32px;right:auto;top:0;transition-delay:0s!important;width:40px}",""]),e.exports=t},function(e,t,a){var n=a(33),i=a(211);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);n(i,{insert:"head",singleton:!1}),e.exports=i.locals||{}},function(e,t,a){(t=a(34)(!1)).push([e.i,".kbnSolutionNavCollapseButton{left:232px;opacity:0;position:absolute;top:24px;z-index:2}@media screen and (prefers-reduced-motion:no-preference){.kbnSolutionNavCollapseButton{transition:opacity .15s,left .15s,background .15s}}.kbnSolutionNavCollapseButton:focus,.kbnSolutionNavCollapseButton:hover{transition-delay:0s!important}.kbnSolutionNavCollapseButton:focus,.kbnSolutionNavCollapseButton:hover,.kbnSolutionNav__sidebar:hover .kbnSolutionNavCollapseButton{left:224px;opacity:1}.kbnSolutionNav__sidebar:hover .kbnSolutionNavCollapseButton{transition-delay:.7s}.kbnSolutionNavCollapseButton:not(.kbnSolutionNavCollapseButton-isCollapsed){background-color:#fff!important}.kbnSolutionNavCollapseButton-isCollapsed{align-items:flex-start;border-radius:0;bottom:0;height:100%;left:0!important;opacity:1!important;padding-top:32px;right:auto;top:0;transition-delay:0s!important;width:40px}",""]),e.exports=t},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},function(e,t,a){"use strict";var n,i,r=this&&this.__classPrivateFieldGet||function(e,t,a,n){if("a"===a&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===a?n:"a"===a?n.call(e):n?n.value:t.get(e)},o=this&&this.__classPrivateFieldSet||function(e,t,a,n,i){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!i)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===n?i.call(e,a):i?i.value=a:t.set(e,a),a};Object.defineProperty(t,"__esModule",{value:!0}),t.boolean=t.bigint=t.array=t.any=t.coerce=t.ZodFirstPartyTypeKind=t.late=t.ZodSchema=t.Schema=t.custom=t.ZodReadonly=t.ZodPipeline=t.ZodBranded=t.BRAND=t.ZodNaN=t.ZodCatch=t.ZodDefault=t.ZodNullable=t.ZodOptional=t.ZodTransformer=t.ZodEffects=t.ZodPromise=t.ZodNativeEnum=t.ZodEnum=t.ZodLiteral=t.ZodLazy=t.ZodFunction=t.ZodSet=t.ZodMap=t.ZodRecord=t.ZodTuple=t.ZodIntersection=t.ZodDiscriminatedUnion=t.ZodUnion=t.ZodObject=t.ZodArray=t.ZodVoid=t.ZodNever=t.ZodUnknown=t.ZodAny=t.ZodNull=t.ZodUndefined=t.ZodSymbol=t.ZodDate=t.ZodBoolean=t.ZodBigInt=t.ZodNumber=t.ZodString=t.datetimeRegex=t.ZodType=void 0,t.NEVER=t.void=t.unknown=t.union=t.undefined=t.tuple=t.transformer=t.symbol=t.string=t.strictObject=t.set=t.record=t.promise=t.preprocess=t.pipeline=t.ostring=t.optional=t.onumber=t.oboolean=t.object=t.number=t.nullable=t.null=t.never=t.nativeEnum=t.nan=t.map=t.literal=t.lazy=t.intersection=t.instanceof=t.function=t.enum=t.effect=t.discriminatedUnion=t.date=void 0;const s=a(47),l=a(214),d=a(75),c=a(43),m=a(48);class ParseInputLazyPath{constructor(e,t,a,n){this._cachedPath=[],this.parent=e,this.data=t,this._path=a,this._key=n}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}}const h=(e,t)=>{if((0,d.isValid)(t))return{success:!0,data:t.value};if(!e.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const t=new m.ZodError(e.common.issues);return this._error=t,this._error}}};function p(e){if(!e)return{};const{errorMap:t,invalid_type_error:a,required_error:n,description:i}=e;if(t&&(a||n))throw new Error('Can\'t use "invalid_type_error" or "required_error" in conjunction with custom error map.');return t?{errorMap:t,description:i}:{errorMap:(t,i)=>{var r,o;const{message:s}=e;return"invalid_enum_value"===t.code?{message:null!=s?s:i.defaultError}:void 0===i.data?{message:null!==(r=null!=s?s:n)&&void 0!==r?r:i.defaultError}:"invalid_type"!==t.code?{message:i.defaultError}:{message:null!==(o=null!=s?s:a)&&void 0!==o?o:i.defaultError}},description:i}}class ZodType{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return(0,c.getParsedType)(e.data)}_getOrReturnCtx(e,t){return t||{common:e.parent.common,data:e.data,parsedType:(0,c.getParsedType)(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new d.ParseStatus,ctx:{common:e.parent.common,data:e.data,parsedType:(0,c.getParsedType)(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const t=this._parse(e);if((0,d.isAsync)(t))throw new Error("Synchronous parse encountered promise.");return t}_parseAsync(e){const t=this._parse(e);return Promise.resolve(t)}parse(e,t){const a=this.safeParse(e,t);if(a.success)return a.data;throw a.error}safeParse(e,t){var a;const n={common:{issues:[],async:null!==(a=null==t?void 0:t.async)&&void 0!==a&&a,contextualErrorMap:null==t?void 0:t.errorMap},path:(null==t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:(0,c.getParsedType)(e)},i=this._parseSync({data:e,path:n.path,parent:n});return h(n,i)}async parseAsync(e,t){const a=await this.safeParseAsync(e,t);if(a.success)return a.data;throw a.error}async safeParseAsync(e,t){const a={common:{issues:[],contextualErrorMap:null==t?void 0:t.errorMap,async:!0},path:(null==t?void 0:t.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:(0,c.getParsedType)(e)},n=this._parse({data:e,path:a.path,parent:a}),i=await((0,d.isAsync)(n)?n:Promise.resolve(n));return h(a,i)}refine(e,t){const a=e=>"string"==typeof t||void 0===t?{message:t}:"function"==typeof t?t(e):t;return this._refinement(((t,n)=>{const i=e(t),r=()=>n.addIssue({code:m.ZodIssueCode.custom,...a(t)});return"undefined"!=typeof Promise&&i instanceof Promise?i.then((e=>!!e||(r(),!1))):!!i||(r(),!1)}))}refinement(e,t){return this._refinement(((a,n)=>!!e(a)||(n.addIssue("function"==typeof t?t(a,n):t),!1)))}_refinement(e){return new ZodEffects({schema:this,typeName:N.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return ZodOptional.create(this,this._def)}nullable(){return ZodNullable.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return ZodArray.create(this,this._def)}promise(){return ZodPromise.create(this,this._def)}or(e){return ZodUnion.create([this,e],this._def)}and(e){return ZodIntersection.create(this,e,this._def)}transform(e){return new ZodEffects({...p(this._def),schema:this,typeName:N.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const t="function"==typeof e?e:()=>e;return new ZodDefault({...p(this._def),innerType:this,defaultValue:t,typeName:N.ZodDefault})}brand(){return new ZodBranded({typeName:N.ZodBranded,type:this,...p(this._def)})}catch(e){const t="function"==typeof e?e:()=>e;return new ZodCatch({...p(this._def),innerType:this,catchValue:t,typeName:N.ZodCatch})}describe(e){return new(0,this.constructor)({...this._def,description:e})}pipe(e){return ZodPipeline.create(this,e)}readonly(){return ZodReadonly.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}t.ZodType=ZodType,t.Schema=ZodType,t.ZodSchema=ZodType;const u=/^c[^\s-]{8,}$/i,f=/^[0-9a-z]+$/,g=/^[0-9A-HJKMNP-TV-Z]{26}$/,_=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,y=/^[a-z0-9_-]{21}$/i,v=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,b=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i;let x;const w=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,k=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,z=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,T="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",j=new RegExp(`^${T}$`);function S(e){let t="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";return e.precision?t=`${t}\\.\\d{${e.precision}}`:null==e.precision&&(t=`${t}(\\.\\d+)?`),t}function E(e){let t=`${T}T${S(e)}`;const a=[];return a.push(e.local?"Z?":"Z"),e.offset&&a.push("([+-]\\d{2}:?\\d{2})"),t=`${t}(${a.join("|")})`,new RegExp(`^${t}$`)}t.datetimeRegex=E;class ZodString extends ZodType{_parse(e){if(this._def.coerce&&(e.data=String(e.data)),this._getType(e)!==c.ZodParsedType.string){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.string,received:t.parsedType}),d.INVALID}const t=new d.ParseStatus;let a;for(const r of this._def.checks)if("min"===r.kind)e.data.length<r.value&&(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_small,minimum:r.value,type:"string",inclusive:!0,exact:!1,message:r.message}),t.dirty());else if("max"===r.kind)e.data.length>r.value&&(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_big,maximum:r.value,type:"string",inclusive:!0,exact:!1,message:r.message}),t.dirty());else if("length"===r.kind){const n=e.data.length>r.value,i=e.data.length<r.value;(n||i)&&(a=this._getOrReturnCtx(e,a),n?(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_big,maximum:r.value,type:"string",inclusive:!0,exact:!0,message:r.message}):i&&(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_small,minimum:r.value,type:"string",inclusive:!0,exact:!0,message:r.message}),t.dirty())}else if("email"===r.kind)b.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"email",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty());else if("emoji"===r.kind)x||(x=new RegExp("^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$","u")),x.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"emoji",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty());else if("uuid"===r.kind)_.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"uuid",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty());else if("nanoid"===r.kind)y.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"nanoid",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty());else if("cuid"===r.kind)u.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"cuid",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty());else if("cuid2"===r.kind)f.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"cuid2",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty());else if("ulid"===r.kind)g.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"ulid",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty());else if("url"===r.kind)try{new URL(e.data)}catch(n){a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"url",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty()}else"regex"===r.kind?(r.regex.lastIndex=0,r.regex.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"regex",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty())):"trim"===r.kind?e.data=e.data.trim():"includes"===r.kind?e.data.includes(r.value,r.position)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_string,validation:{includes:r.value,position:r.position},message:r.message}),t.dirty()):"toLowerCase"===r.kind?e.data=e.data.toLowerCase():"toUpperCase"===r.kind?e.data=e.data.toUpperCase():"startsWith"===r.kind?e.data.startsWith(r.value)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_string,validation:{startsWith:r.value},message:r.message}),t.dirty()):"endsWith"===r.kind?e.data.endsWith(r.value)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_string,validation:{endsWith:r.value},message:r.message}),t.dirty()):"datetime"===r.kind?E(r).test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_string,validation:"datetime",message:r.message}),t.dirty()):"date"===r.kind?j.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_string,validation:"date",message:r.message}),t.dirty()):"time"===r.kind?new RegExp(`^${S(r)}$`).test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_string,validation:"time",message:r.message}),t.dirty()):"duration"===r.kind?v.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"duration",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty()):"ip"===r.kind?(n=e.data,("v4"!==(i=r.version)&&i||!w.test(n))&&("v6"!==i&&i||!k.test(n))&&(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"ip",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty())):"base64"===r.kind?z.test(e.data)||(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{validation:"base64",code:m.ZodIssueCode.invalid_string,message:r.message}),t.dirty()):c.util.assertNever(r);var n,i;return{status:t.value,value:e.data}}_regex(e,t,a){return this.refinement((t=>e.test(t)),{validation:t,code:m.ZodIssueCode.invalid_string,...l.errorUtil.errToObj(a)})}_addCheck(e){return new ZodString({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...l.errorUtil.errToObj(e)})}url(e){return this._addCheck({kind:"url",...l.errorUtil.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...l.errorUtil.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...l.errorUtil.errToObj(e)})}nanoid(e){return this._addCheck({kind:"nanoid",...l.errorUtil.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...l.errorUtil.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...l.errorUtil.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...l.errorUtil.errToObj(e)})}base64(e){return this._addCheck({kind:"base64",...l.errorUtil.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...l.errorUtil.errToObj(e)})}datetime(e){var t,a;return"string"==typeof e?this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:e}):this._addCheck({kind:"datetime",precision:void 0===(null==e?void 0:e.precision)?null:null==e?void 0:e.precision,offset:null!==(t=null==e?void 0:e.offset)&&void 0!==t&&t,local:null!==(a=null==e?void 0:e.local)&&void 0!==a&&a,...l.errorUtil.errToObj(null==e?void 0:e.message)})}date(e){return this._addCheck({kind:"date",message:e})}time(e){return"string"==typeof e?this._addCheck({kind:"time",precision:null,message:e}):this._addCheck({kind:"time",precision:void 0===(null==e?void 0:e.precision)?null:null==e?void 0:e.precision,...l.errorUtil.errToObj(null==e?void 0:e.message)})}duration(e){return this._addCheck({kind:"duration",...l.errorUtil.errToObj(e)})}regex(e,t){return this._addCheck({kind:"regex",regex:e,...l.errorUtil.errToObj(t)})}includes(e,t){return this._addCheck({kind:"includes",value:e,position:null==t?void 0:t.position,...l.errorUtil.errToObj(null==t?void 0:t.message)})}startsWith(e,t){return this._addCheck({kind:"startsWith",value:e,...l.errorUtil.errToObj(t)})}endsWith(e,t){return this._addCheck({kind:"endsWith",value:e,...l.errorUtil.errToObj(t)})}min(e,t){return this._addCheck({kind:"min",value:e,...l.errorUtil.errToObj(t)})}max(e,t){return this._addCheck({kind:"max",value:e,...l.errorUtil.errToObj(t)})}length(e,t){return this._addCheck({kind:"length",value:e,...l.errorUtil.errToObj(t)})}nonempty(e){return this.min(1,l.errorUtil.errToObj(e))}trim(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new ZodString({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find((e=>"datetime"===e.kind))}get isDate(){return!!this._def.checks.find((e=>"date"===e.kind))}get isTime(){return!!this._def.checks.find((e=>"time"===e.kind))}get isDuration(){return!!this._def.checks.find((e=>"duration"===e.kind))}get isEmail(){return!!this._def.checks.find((e=>"email"===e.kind))}get isURL(){return!!this._def.checks.find((e=>"url"===e.kind))}get isEmoji(){return!!this._def.checks.find((e=>"emoji"===e.kind))}get isUUID(){return!!this._def.checks.find((e=>"uuid"===e.kind))}get isNANOID(){return!!this._def.checks.find((e=>"nanoid"===e.kind))}get isCUID(){return!!this._def.checks.find((e=>"cuid"===e.kind))}get isCUID2(){return!!this._def.checks.find((e=>"cuid2"===e.kind))}get isULID(){return!!this._def.checks.find((e=>"ulid"===e.kind))}get isIP(){return!!this._def.checks.find((e=>"ip"===e.kind))}get isBase64(){return!!this._def.checks.find((e=>"base64"===e.kind))}get minLength(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxLength(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}function A(e,t){const a=(e.toString().split(".")[1]||"").length,n=(t.toString().split(".")[1]||"").length,i=a>n?a:n;return parseInt(e.toFixed(i).replace(".",""))%parseInt(t.toFixed(i).replace(".",""))/Math.pow(10,i)}t.ZodString=ZodString,ZodString.create=e=>{var t;return new ZodString({checks:[],typeName:N.ZodString,coerce:null!==(t=null==e?void 0:e.coerce)&&void 0!==t&&t,...p(e)})};class ZodNumber extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){if(this._def.coerce&&(e.data=Number(e.data)),this._getType(e)!==c.ZodParsedType.number){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.number,received:t.parsedType}),d.INVALID}let t;const a=new d.ParseStatus;for(const n of this._def.checks)"int"===n.kind?c.util.isInteger(e.data)||(t=this._getOrReturnCtx(e,t),(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:"integer",received:"float",message:n.message}),a.dirty()):"min"===n.kind?(n.inclusive?e.data<n.value:e.data<=n.value)&&(t=this._getOrReturnCtx(e,t),(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.too_small,minimum:n.value,type:"number",inclusive:n.inclusive,exact:!1,message:n.message}),a.dirty()):"max"===n.kind?(n.inclusive?e.data>n.value:e.data>=n.value)&&(t=this._getOrReturnCtx(e,t),(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.too_big,maximum:n.value,type:"number",inclusive:n.inclusive,exact:!1,message:n.message}),a.dirty()):"multipleOf"===n.kind?0!==A(e.data,n.value)&&(t=this._getOrReturnCtx(e,t),(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.not_multiple_of,multipleOf:n.value,message:n.message}),a.dirty()):"finite"===n.kind?Number.isFinite(e.data)||(t=this._getOrReturnCtx(e,t),(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.not_finite,message:n.message}),a.dirty()):c.util.assertNever(n);return{status:a.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,l.errorUtil.toString(t))}gt(e,t){return this.setLimit("min",e,!1,l.errorUtil.toString(t))}lte(e,t){return this.setLimit("max",e,!0,l.errorUtil.toString(t))}lt(e,t){return this.setLimit("max",e,!1,l.errorUtil.toString(t))}setLimit(e,t,a,n){return new ZodNumber({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:a,message:l.errorUtil.toString(n)}]})}_addCheck(e){return new ZodNumber({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:l.errorUtil.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:!1,message:l.errorUtil.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:!1,message:l.errorUtil.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:!0,message:l.errorUtil.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:!0,message:l.errorUtil.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:l.errorUtil.toString(t)})}finite(e){return this._addCheck({kind:"finite",message:l.errorUtil.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:l.errorUtil.toString(e)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:l.errorUtil.toString(e)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}get isInt(){return!!this._def.checks.find((e=>"int"===e.kind||"multipleOf"===e.kind&&c.util.isInteger(e.value)))}get isFinite(){let e=null,t=null;for(const a of this._def.checks){if("finite"===a.kind||"int"===a.kind||"multipleOf"===a.kind)return!0;"min"===a.kind?(null===t||a.value>t)&&(t=a.value):"max"===a.kind&&(null===e||a.value<e)&&(e=a.value)}return Number.isFinite(t)&&Number.isFinite(e)}}t.ZodNumber=ZodNumber,ZodNumber.create=e=>new ZodNumber({checks:[],typeName:N.ZodNumber,coerce:(null==e?void 0:e.coerce)||!1,...p(e)});class ZodBigInt extends ZodType{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){if(this._def.coerce&&(e.data=BigInt(e.data)),this._getType(e)!==c.ZodParsedType.bigint){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.bigint,received:t.parsedType}),d.INVALID}let t;const a=new d.ParseStatus;for(const n of this._def.checks)"min"===n.kind?(n.inclusive?e.data<n.value:e.data<=n.value)&&(t=this._getOrReturnCtx(e,t),(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.too_small,type:"bigint",minimum:n.value,inclusive:n.inclusive,message:n.message}),a.dirty()):"max"===n.kind?(n.inclusive?e.data>n.value:e.data>=n.value)&&(t=this._getOrReturnCtx(e,t),(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.too_big,type:"bigint",maximum:n.value,inclusive:n.inclusive,message:n.message}),a.dirty()):"multipleOf"===n.kind?e.data%n.value!==BigInt(0)&&(t=this._getOrReturnCtx(e,t),(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.not_multiple_of,multipleOf:n.value,message:n.message}),a.dirty()):c.util.assertNever(n);return{status:a.value,value:e.data}}gte(e,t){return this.setLimit("min",e,!0,l.errorUtil.toString(t))}gt(e,t){return this.setLimit("min",e,!1,l.errorUtil.toString(t))}lte(e,t){return this.setLimit("max",e,!0,l.errorUtil.toString(t))}lt(e,t){return this.setLimit("max",e,!1,l.errorUtil.toString(t))}setLimit(e,t,a,n){return new ZodBigInt({...this._def,checks:[...this._def.checks,{kind:e,value:t,inclusive:a,message:l.errorUtil.toString(n)}]})}_addCheck(e){return new ZodBigInt({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:l.errorUtil.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:l.errorUtil.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:l.errorUtil.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:l.errorUtil.toString(e)})}multipleOf(e,t){return this._addCheck({kind:"multipleOf",value:e,message:l.errorUtil.toString(t)})}get minValue(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return e}get maxValue(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return e}}t.ZodBigInt=ZodBigInt,ZodBigInt.create=e=>{var t;return new ZodBigInt({checks:[],typeName:N.ZodBigInt,coerce:null!==(t=null==e?void 0:e.coerce)&&void 0!==t&&t,...p(e)})};class ZodBoolean extends ZodType{_parse(e){if(this._def.coerce&&(e.data=Boolean(e.data)),this._getType(e)!==c.ZodParsedType.boolean){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.boolean,received:t.parsedType}),d.INVALID}return(0,d.OK)(e.data)}}t.ZodBoolean=ZodBoolean,ZodBoolean.create=e=>new ZodBoolean({typeName:N.ZodBoolean,coerce:(null==e?void 0:e.coerce)||!1,...p(e)});class ZodDate extends ZodType{_parse(e){if(this._def.coerce&&(e.data=new Date(e.data)),this._getType(e)!==c.ZodParsedType.date){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.date,received:t.parsedType}),d.INVALID}if(isNaN(e.data.getTime())){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_date}),d.INVALID}const t=new d.ParseStatus;let a;for(const n of this._def.checks)"min"===n.kind?e.data.getTime()<n.value&&(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_small,message:n.message,inclusive:!0,exact:!1,minimum:n.value,type:"date"}),t.dirty()):"max"===n.kind?e.data.getTime()>n.value&&(a=this._getOrReturnCtx(e,a),(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_big,message:n.message,inclusive:!0,exact:!1,maximum:n.value,type:"date"}),t.dirty()):c.util.assertNever(n);return{status:t.value,value:new Date(e.data.getTime())}}_addCheck(e){return new ZodDate({...this._def,checks:[...this._def.checks,e]})}min(e,t){return this._addCheck({kind:"min",value:e.getTime(),message:l.errorUtil.toString(t)})}max(e,t){return this._addCheck({kind:"max",value:e.getTime(),message:l.errorUtil.toString(t)})}get minDate(){let e=null;for(const t of this._def.checks)"min"===t.kind&&(null===e||t.value>e)&&(e=t.value);return null!=e?new Date(e):null}get maxDate(){let e=null;for(const t of this._def.checks)"max"===t.kind&&(null===e||t.value<e)&&(e=t.value);return null!=e?new Date(e):null}}t.ZodDate=ZodDate,ZodDate.create=e=>new ZodDate({checks:[],coerce:(null==e?void 0:e.coerce)||!1,typeName:N.ZodDate,...p(e)});class ZodSymbol extends ZodType{_parse(e){if(this._getType(e)!==c.ZodParsedType.symbol){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.symbol,received:t.parsedType}),d.INVALID}return(0,d.OK)(e.data)}}t.ZodSymbol=ZodSymbol,ZodSymbol.create=e=>new ZodSymbol({typeName:N.ZodSymbol,...p(e)});class ZodUndefined extends ZodType{_parse(e){if(this._getType(e)!==c.ZodParsedType.undefined){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.undefined,received:t.parsedType}),d.INVALID}return(0,d.OK)(e.data)}}t.ZodUndefined=ZodUndefined,ZodUndefined.create=e=>new ZodUndefined({typeName:N.ZodUndefined,...p(e)});class ZodNull extends ZodType{_parse(e){if(this._getType(e)!==c.ZodParsedType.null){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.null,received:t.parsedType}),d.INVALID}return(0,d.OK)(e.data)}}t.ZodNull=ZodNull,ZodNull.create=e=>new ZodNull({typeName:N.ZodNull,...p(e)});class ZodAny extends ZodType{constructor(){super(...arguments),this._any=!0}_parse(e){return(0,d.OK)(e.data)}}t.ZodAny=ZodAny,ZodAny.create=e=>new ZodAny({typeName:N.ZodAny,...p(e)});class ZodUnknown extends ZodType{constructor(){super(...arguments),this._unknown=!0}_parse(e){return(0,d.OK)(e.data)}}t.ZodUnknown=ZodUnknown,ZodUnknown.create=e=>new ZodUnknown({typeName:N.ZodUnknown,...p(e)});class ZodNever extends ZodType{_parse(e){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.never,received:t.parsedType}),d.INVALID}}t.ZodNever=ZodNever,ZodNever.create=e=>new ZodNever({typeName:N.ZodNever,...p(e)});class ZodVoid extends ZodType{_parse(e){if(this._getType(e)!==c.ZodParsedType.undefined){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.void,received:t.parsedType}),d.INVALID}return(0,d.OK)(e.data)}}t.ZodVoid=ZodVoid,ZodVoid.create=e=>new ZodVoid({typeName:N.ZodVoid,...p(e)});class ZodArray extends ZodType{_parse(e){const{ctx:t,status:a}=this._processInputParams(e),n=this._def;if(t.parsedType!==c.ZodParsedType.array)return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.array,received:t.parsedType}),d.INVALID;if(null!==n.exactLength){const e=t.data.length>n.exactLength.value,i=t.data.length<n.exactLength.value;(e||i)&&((0,d.addIssueToContext)(t,{code:e?m.ZodIssueCode.too_big:m.ZodIssueCode.too_small,minimum:i?n.exactLength.value:void 0,maximum:e?n.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:n.exactLength.message}),a.dirty())}if(null!==n.minLength&&t.data.length<n.minLength.value&&((0,d.addIssueToContext)(t,{code:m.ZodIssueCode.too_small,minimum:n.minLength.value,type:"array",inclusive:!0,exact:!1,message:n.minLength.message}),a.dirty()),null!==n.maxLength&&t.data.length>n.maxLength.value&&((0,d.addIssueToContext)(t,{code:m.ZodIssueCode.too_big,maximum:n.maxLength.value,type:"array",inclusive:!0,exact:!1,message:n.maxLength.message}),a.dirty()),t.common.async)return Promise.all([...t.data].map(((e,a)=>n.type._parseAsync(new ParseInputLazyPath(t,e,t.path,a))))).then((e=>d.ParseStatus.mergeArray(a,e)));const i=[...t.data].map(((e,a)=>n.type._parseSync(new ParseInputLazyPath(t,e,t.path,a))));return d.ParseStatus.mergeArray(a,i)}get element(){return this._def.type}min(e,t){return new ZodArray({...this._def,minLength:{value:e,message:l.errorUtil.toString(t)}})}max(e,t){return new ZodArray({...this._def,maxLength:{value:e,message:l.errorUtil.toString(t)}})}length(e,t){return new ZodArray({...this._def,exactLength:{value:e,message:l.errorUtil.toString(t)}})}nonempty(e){return this.min(1,e)}}function O(e){if(e instanceof ZodObject){const t={};for(const a in e.shape){const n=e.shape[a];t[a]=ZodOptional.create(O(n))}return new ZodObject({...e._def,shape:()=>t})}return e instanceof ZodArray?new ZodArray({...e._def,type:O(e.element)}):e instanceof ZodOptional?ZodOptional.create(O(e.unwrap())):e instanceof ZodNullable?ZodNullable.create(O(e.unwrap())):e instanceof ZodTuple?ZodTuple.create(e.items.map((e=>O(e)))):e}t.ZodArray=ZodArray,ZodArray.create=(e,t)=>new ZodArray({type:e,minLength:null,maxLength:null,exactLength:null,typeName:N.ZodArray,...p(t)});class ZodObject extends ZodType{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(null!==this._cached)return this._cached;const e=this._def.shape(),t=c.util.objectKeys(e);return this._cached={shape:e,keys:t}}_parse(e){if(this._getType(e)!==c.ZodParsedType.object){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.object,received:t.parsedType}),d.INVALID}const{status:t,ctx:a}=this._processInputParams(e),{shape:n,keys:i}=this._getCached(),r=[];if(!(this._def.catchall instanceof ZodNever&&"strip"===this._def.unknownKeys))for(const e in a.data)i.includes(e)||r.push(e);const o=[];for(const e of i){const t=n[e],i=a.data[e];o.push({key:{status:"valid",value:e},value:t._parse(new ParseInputLazyPath(a,i,a.path,e)),alwaysSet:e in a.data})}if(this._def.catchall instanceof ZodNever){const e=this._def.unknownKeys;if("passthrough"===e)for(const e of r)o.push({key:{status:"valid",value:e},value:{status:"valid",value:a.data[e]}});else if("strict"===e)r.length>0&&((0,d.addIssueToContext)(a,{code:m.ZodIssueCode.unrecognized_keys,keys:r}),t.dirty());else if("strip"!==e)throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const e=this._def.catchall;for(const t of r){const n=a.data[t];o.push({key:{status:"valid",value:t},value:e._parse(new ParseInputLazyPath(a,n,a.path,t)),alwaysSet:t in a.data})}}return a.common.async?Promise.resolve().then((async()=>{const e=[];for(const t of o){const a=await t.key,n=await t.value;e.push({key:a,value:n,alwaysSet:t.alwaysSet})}return e})).then((e=>d.ParseStatus.mergeObjectSync(t,e))):d.ParseStatus.mergeObjectSync(t,o)}get shape(){return this._def.shape()}strict(e){return l.errorUtil.errToObj,new ZodObject({...this._def,unknownKeys:"strict",...void 0!==e?{errorMap:(t,a)=>{var n,i,r,o;const s=null!==(r=null===(i=(n=this._def).errorMap)||void 0===i?void 0:i.call(n,t,a).message)&&void 0!==r?r:a.defaultError;return"unrecognized_keys"===t.code?{message:null!==(o=l.errorUtil.errToObj(e).message)&&void 0!==o?o:s}:{message:s}}}:{}})}strip(){return new ZodObject({...this._def,unknownKeys:"strip"})}passthrough(){return new ZodObject({...this._def,unknownKeys:"passthrough"})}extend(e){return new ZodObject({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new ZodObject({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:N.ZodObject})}setKey(e,t){return this.augment({[e]:t})}catchall(e){return new ZodObject({...this._def,catchall:e})}pick(e){const t={};return c.util.objectKeys(e).forEach((a=>{e[a]&&this.shape[a]&&(t[a]=this.shape[a])})),new ZodObject({...this._def,shape:()=>t})}omit(e){const t={};return c.util.objectKeys(this.shape).forEach((a=>{e[a]||(t[a]=this.shape[a])})),new ZodObject({...this._def,shape:()=>t})}deepPartial(){return O(this)}partial(e){const t={};return c.util.objectKeys(this.shape).forEach((a=>{const n=this.shape[a];e&&!e[a]?t[a]=n:t[a]=n.optional()})),new ZodObject({...this._def,shape:()=>t})}required(e){const t={};return c.util.objectKeys(this.shape).forEach((a=>{if(e&&!e[a])t[a]=this.shape[a];else{let e=this.shape[a];for(;e instanceof ZodOptional;)e=e._def.innerType;t[a]=e}})),new ZodObject({...this._def,shape:()=>t})}keyof(){return L(c.util.objectKeys(this.shape))}}t.ZodObject=ZodObject,ZodObject.create=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:N.ZodObject,...p(t)}),ZodObject.strictCreate=(e,t)=>new ZodObject({shape:()=>e,unknownKeys:"strict",catchall:ZodNever.create(),typeName:N.ZodObject,...p(t)}),ZodObject.lazycreate=(e,t)=>new ZodObject({shape:e,unknownKeys:"strip",catchall:ZodNever.create(),typeName:N.ZodObject,...p(t)});class ZodUnion extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e),a=this._def.options;if(t.common.async)return Promise.all(a.map((async e=>{const a={...t,common:{...t.common,issues:[]},parent:null};return{result:await e._parseAsync({data:t.data,path:t.path,parent:a}),ctx:a}}))).then((function(e){for(const t of e)if("valid"===t.result.status)return t.result;for(const a of e)if("dirty"===a.result.status)return t.common.issues.push(...a.ctx.common.issues),a.result;const a=e.map((e=>new m.ZodError(e.ctx.common.issues)));return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_union,unionErrors:a}),d.INVALID}));{let e;const n=[];for(const i of a){const a={...t,common:{...t.common,issues:[]},parent:null},r=i._parseSync({data:t.data,path:t.path,parent:a});if("valid"===r.status)return r;"dirty"!==r.status||e||(e={result:r,ctx:a}),a.common.issues.length&&n.push(a.common.issues)}if(e)return t.common.issues.push(...e.ctx.common.issues),e.result;const i=n.map((e=>new m.ZodError(e)));return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_union,unionErrors:i}),d.INVALID}}get options(){return this._def.options}}t.ZodUnion=ZodUnion,ZodUnion.create=(e,t)=>new ZodUnion({options:e,typeName:N.ZodUnion,...p(t)});const I=e=>e instanceof ZodLazy?I(e.schema):e instanceof ZodEffects?I(e.innerType()):e instanceof ZodLiteral?[e.value]:e instanceof ZodEnum?e.options:e instanceof ZodNativeEnum?c.util.objectValues(e.enum):e instanceof ZodDefault?I(e._def.innerType):e instanceof ZodUndefined?[void 0]:e instanceof ZodNull?[null]:e instanceof ZodOptional?[void 0,...I(e.unwrap())]:e instanceof ZodNullable?[null,...I(e.unwrap())]:e instanceof ZodBranded||e instanceof ZodReadonly?I(e.unwrap()):e instanceof ZodCatch?I(e._def.innerType):[];class ZodDiscriminatedUnion extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==c.ZodParsedType.object)return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.object,received:t.parsedType}),d.INVALID;const a=this.discriminator,n=t.data[a],i=this.optionsMap.get(n);return i?t.common.async?i._parseAsync({data:t.data,path:t.path,parent:t}):i._parseSync({data:t.data,path:t.path,parent:t}):((0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[a]}),d.INVALID)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,t,a){const n=new Map;for(const a of t){const t=I(a.shape[e]);if(!t.length)throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);for(const i of t){if(n.has(i))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(i)}`);n.set(i,a)}}return new ZodDiscriminatedUnion({typeName:N.ZodDiscriminatedUnion,discriminator:e,options:t,optionsMap:n,...p(a)})}}function C(e,t){const a=(0,c.getParsedType)(e),n=(0,c.getParsedType)(t);if(e===t)return{valid:!0,data:e};if(a===c.ZodParsedType.object&&n===c.ZodParsedType.object){const a=c.util.objectKeys(t),n=c.util.objectKeys(e).filter((e=>-1!==a.indexOf(e))),i={...e,...t};for(const a of n){const n=C(e[a],t[a]);if(!n.valid)return{valid:!1};i[a]=n.data}return{valid:!0,data:i}}if(a===c.ZodParsedType.array&&n===c.ZodParsedType.array){if(e.length!==t.length)return{valid:!1};const a=[];for(let n=0;n<e.length;n++){const i=C(e[n],t[n]);if(!i.valid)return{valid:!1};a.push(i.data)}return{valid:!0,data:a}}return a===c.ZodParsedType.date&&n===c.ZodParsedType.date&&+e==+t?{valid:!0,data:e}:{valid:!1}}t.ZodDiscriminatedUnion=ZodDiscriminatedUnion;class ZodIntersection extends ZodType{_parse(e){const{status:t,ctx:a}=this._processInputParams(e),n=(e,n)=>{if((0,d.isAborted)(e)||(0,d.isAborted)(n))return d.INVALID;const i=C(e.value,n.value);return i.valid?(((0,d.isDirty)(e)||(0,d.isDirty)(n))&&t.dirty(),{status:t.value,value:i.data}):((0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_intersection_types}),d.INVALID)};return a.common.async?Promise.all([this._def.left._parseAsync({data:a.data,path:a.path,parent:a}),this._def.right._parseAsync({data:a.data,path:a.path,parent:a})]).then((([e,t])=>n(e,t))):n(this._def.left._parseSync({data:a.data,path:a.path,parent:a}),this._def.right._parseSync({data:a.data,path:a.path,parent:a}))}}t.ZodIntersection=ZodIntersection,ZodIntersection.create=(e,t,a)=>new ZodIntersection({left:e,right:t,typeName:N.ZodIntersection,...p(a)});class ZodTuple extends ZodType{_parse(e){const{status:t,ctx:a}=this._processInputParams(e);if(a.parsedType!==c.ZodParsedType.array)return(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.array,received:a.parsedType}),d.INVALID;if(a.data.length<this._def.items.length)return(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),d.INVALID;!this._def.rest&&a.data.length>this._def.items.length&&((0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),t.dirty());const n=[...a.data].map(((e,t)=>{const n=this._def.items[t]||this._def.rest;return n?n._parse(new ParseInputLazyPath(a,e,a.path,t)):null})).filter((e=>!!e));return a.common.async?Promise.all(n).then((e=>d.ParseStatus.mergeArray(t,e))):d.ParseStatus.mergeArray(t,n)}get items(){return this._def.items}rest(e){return new ZodTuple({...this._def,rest:e})}}t.ZodTuple=ZodTuple,ZodTuple.create=(e,t)=>{if(!Array.isArray(e))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new ZodTuple({items:e,typeName:N.ZodTuple,rest:null,...p(t)})};class ZodRecord extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:a}=this._processInputParams(e);if(a.parsedType!==c.ZodParsedType.object)return(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.object,received:a.parsedType}),d.INVALID;const n=[],i=this._def.keyType,r=this._def.valueType;for(const e in a.data)n.push({key:i._parse(new ParseInputLazyPath(a,e,a.path,e)),value:r._parse(new ParseInputLazyPath(a,a.data[e],a.path,e)),alwaysSet:e in a.data});return a.common.async?d.ParseStatus.mergeObjectAsync(t,n):d.ParseStatus.mergeObjectSync(t,n)}get element(){return this._def.valueType}static create(e,t,a){return new ZodRecord(t instanceof ZodType?{keyType:e,valueType:t,typeName:N.ZodRecord,...p(a)}:{keyType:ZodString.create(),valueType:e,typeName:N.ZodRecord,...p(t)})}}t.ZodRecord=ZodRecord;class ZodMap extends ZodType{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:t,ctx:a}=this._processInputParams(e);if(a.parsedType!==c.ZodParsedType.map)return(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.map,received:a.parsedType}),d.INVALID;const n=this._def.keyType,i=this._def.valueType,r=[...a.data.entries()].map((([e,t],r)=>({key:n._parse(new ParseInputLazyPath(a,e,a.path,[r,"key"])),value:i._parse(new ParseInputLazyPath(a,t,a.path,[r,"value"]))})));if(a.common.async){const e=new Map;return Promise.resolve().then((async()=>{for(const a of r){const n=await a.key,i=await a.value;if("aborted"===n.status||"aborted"===i.status)return d.INVALID;"dirty"!==n.status&&"dirty"!==i.status||t.dirty(),e.set(n.value,i.value)}return{status:t.value,value:e}}))}{const e=new Map;for(const a of r){const n=a.key,i=a.value;if("aborted"===n.status||"aborted"===i.status)return d.INVALID;"dirty"!==n.status&&"dirty"!==i.status||t.dirty(),e.set(n.value,i.value)}return{status:t.value,value:e}}}}t.ZodMap=ZodMap,ZodMap.create=(e,t,a)=>new ZodMap({valueType:t,keyType:e,typeName:N.ZodMap,...p(a)});class ZodSet extends ZodType{_parse(e){const{status:t,ctx:a}=this._processInputParams(e);if(a.parsedType!==c.ZodParsedType.set)return(0,d.addIssueToContext)(a,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.set,received:a.parsedType}),d.INVALID;const n=this._def;null!==n.minSize&&a.data.size<n.minSize.value&&((0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_small,minimum:n.minSize.value,type:"set",inclusive:!0,exact:!1,message:n.minSize.message}),t.dirty()),null!==n.maxSize&&a.data.size>n.maxSize.value&&((0,d.addIssueToContext)(a,{code:m.ZodIssueCode.too_big,maximum:n.maxSize.value,type:"set",inclusive:!0,exact:!1,message:n.maxSize.message}),t.dirty());const i=this._def.valueType;function r(e){const a=new Set;for(const n of e){if("aborted"===n.status)return d.INVALID;"dirty"===n.status&&t.dirty(),a.add(n.value)}return{status:t.value,value:a}}const o=[...a.data.values()].map(((e,t)=>i._parse(new ParseInputLazyPath(a,e,a.path,t))));return a.common.async?Promise.all(o).then((e=>r(e))):r(o)}min(e,t){return new ZodSet({...this._def,minSize:{value:e,message:l.errorUtil.toString(t)}})}max(e,t){return new ZodSet({...this._def,maxSize:{value:e,message:l.errorUtil.toString(t)}})}size(e,t){return this.min(e,t).max(e,t)}nonempty(e){return this.min(1,e)}}t.ZodSet=ZodSet,ZodSet.create=(e,t)=>new ZodSet({valueType:e,minSize:null,maxSize:null,typeName:N.ZodSet,...p(t)});class ZodFunction extends ZodType{constructor(){super(...arguments),this.validate=this.implement}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==c.ZodParsedType.function)return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.function,received:t.parsedType}),d.INVALID;function a(e,a){return(0,d.makeIssue)({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,(0,s.getErrorMap)(),s.defaultErrorMap].filter((e=>!!e)),issueData:{code:m.ZodIssueCode.invalid_arguments,argumentsError:a}})}function n(e,a){return(0,d.makeIssue)({data:e,path:t.path,errorMaps:[t.common.contextualErrorMap,t.schemaErrorMap,(0,s.getErrorMap)(),s.defaultErrorMap].filter((e=>!!e)),issueData:{code:m.ZodIssueCode.invalid_return_type,returnTypeError:a}})}const i={errorMap:t.common.contextualErrorMap},r=t.data;if(this._def.returns instanceof ZodPromise){const e=this;return(0,d.OK)((async function(...t){const o=new m.ZodError([]),s=await e._def.args.parseAsync(t,i).catch((e=>{throw o.addIssue(a(t,e)),o})),l=await Reflect.apply(r,this,s);return await e._def.returns._def.type.parseAsync(l,i).catch((e=>{throw o.addIssue(n(l,e)),o}))}))}{const e=this;return(0,d.OK)((function(...t){const o=e._def.args.safeParse(t,i);if(!o.success)throw new m.ZodError([a(t,o.error)]);const s=Reflect.apply(r,this,o.data),l=e._def.returns.safeParse(s,i);if(!l.success)throw new m.ZodError([n(s,l.error)]);return l.data}))}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new ZodFunction({...this._def,args:ZodTuple.create(e).rest(ZodUnknown.create())})}returns(e){return new ZodFunction({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,t,a){return new ZodFunction({args:e||ZodTuple.create([]).rest(ZodUnknown.create()),returns:t||ZodUnknown.create(),typeName:N.ZodFunction,...p(a)})}}t.ZodFunction=ZodFunction;class ZodLazy extends ZodType{get schema(){return this._def.getter()}_parse(e){const{ctx:t}=this._processInputParams(e);return this._def.getter()._parse({data:t.data,path:t.path,parent:t})}}t.ZodLazy=ZodLazy,ZodLazy.create=(e,t)=>new ZodLazy({getter:e,typeName:N.ZodLazy,...p(t)});class ZodLiteral extends ZodType{_parse(e){if(e.data!==this._def.value){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{received:t.data,code:m.ZodIssueCode.invalid_literal,expected:this._def.value}),d.INVALID}return{status:"valid",value:e.data}}get value(){return this._def.value}}function L(e,t){return new ZodEnum({values:e,typeName:N.ZodEnum,...p(t)})}t.ZodLiteral=ZodLiteral,ZodLiteral.create=(e,t)=>new ZodLiteral({value:e,typeName:N.ZodLiteral,...p(t)});class ZodEnum extends ZodType{constructor(){super(...arguments),n.set(this,void 0)}_parse(e){if("string"!=typeof e.data){const t=this._getOrReturnCtx(e),a=this._def.values;return(0,d.addIssueToContext)(t,{expected:c.util.joinValues(a),received:t.parsedType,code:m.ZodIssueCode.invalid_type}),d.INVALID}if(r(this,n,"f")||o(this,n,new Set(this._def.values),"f"),!r(this,n,"f").has(e.data)){const t=this._getOrReturnCtx(e),a=this._def.values;return(0,d.addIssueToContext)(t,{received:t.data,code:m.ZodIssueCode.invalid_enum_value,options:a}),d.INVALID}return(0,d.OK)(e.data)}get options(){return this._def.values}get enum(){const e={};for(const t of this._def.values)e[t]=t;return e}get Values(){const e={};for(const t of this._def.values)e[t]=t;return e}get Enum(){const e={};for(const t of this._def.values)e[t]=t;return e}extract(e,t=this._def){return ZodEnum.create(e,{...this._def,...t})}exclude(e,t=this._def){return ZodEnum.create(this.options.filter((t=>!e.includes(t))),{...this._def,...t})}}t.ZodEnum=ZodEnum,n=new WeakMap,ZodEnum.create=L;class ZodNativeEnum extends ZodType{constructor(){super(...arguments),i.set(this,void 0)}_parse(e){const t=c.util.getValidEnumValues(this._def.values),a=this._getOrReturnCtx(e);if(a.parsedType!==c.ZodParsedType.string&&a.parsedType!==c.ZodParsedType.number){const e=c.util.objectValues(t);return(0,d.addIssueToContext)(a,{expected:c.util.joinValues(e),received:a.parsedType,code:m.ZodIssueCode.invalid_type}),d.INVALID}if(r(this,i,"f")||o(this,i,new Set(c.util.getValidEnumValues(this._def.values)),"f"),!r(this,i,"f").has(e.data)){const e=c.util.objectValues(t);return(0,d.addIssueToContext)(a,{received:a.data,code:m.ZodIssueCode.invalid_enum_value,options:e}),d.INVALID}return(0,d.OK)(e.data)}get enum(){return this._def.values}}t.ZodNativeEnum=ZodNativeEnum,i=new WeakMap,ZodNativeEnum.create=(e,t)=>new ZodNativeEnum({values:e,typeName:N.ZodNativeEnum,...p(t)});class ZodPromise extends ZodType{unwrap(){return this._def.type}_parse(e){const{ctx:t}=this._processInputParams(e);if(t.parsedType!==c.ZodParsedType.promise&&!1===t.common.async)return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.promise,received:t.parsedType}),d.INVALID;const a=t.parsedType===c.ZodParsedType.promise?t.data:Promise.resolve(t.data);return(0,d.OK)(a.then((e=>this._def.type.parseAsync(e,{path:t.path,errorMap:t.common.contextualErrorMap}))))}}t.ZodPromise=ZodPromise,ZodPromise.create=(e,t)=>new ZodPromise({type:e,typeName:N.ZodPromise,...p(t)});class ZodEffects extends ZodType{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===N.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:t,ctx:a}=this._processInputParams(e),n=this._def.effect||null,i={addIssue:e=>{(0,d.addIssueToContext)(a,e),e.fatal?t.abort():t.dirty()},get path(){return a.path}};if(i.addIssue=i.addIssue.bind(i),"preprocess"===n.type){const e=n.transform(a.data,i);if(a.common.async)return Promise.resolve(e).then((async e=>{if("aborted"===t.value)return d.INVALID;const n=await this._def.schema._parseAsync({data:e,path:a.path,parent:a});return"aborted"===n.status?d.INVALID:"dirty"===n.status||"dirty"===t.value?(0,d.DIRTY)(n.value):n}));{if("aborted"===t.value)return d.INVALID;const n=this._def.schema._parseSync({data:e,path:a.path,parent:a});return"aborted"===n.status?d.INVALID:"dirty"===n.status||"dirty"===t.value?(0,d.DIRTY)(n.value):n}}if("refinement"===n.type){const e=e=>{const t=n.refinement(e,i);if(a.common.async)return Promise.resolve(t);if(t instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return e};if(!1===a.common.async){const n=this._def.schema._parseSync({data:a.data,path:a.path,parent:a});return"aborted"===n.status?d.INVALID:("dirty"===n.status&&t.dirty(),e(n.value),{status:t.value,value:n.value})}return this._def.schema._parseAsync({data:a.data,path:a.path,parent:a}).then((a=>"aborted"===a.status?d.INVALID:("dirty"===a.status&&t.dirty(),e(a.value).then((()=>({status:t.value,value:a.value}))))))}if("transform"===n.type){if(!1===a.common.async){const e=this._def.schema._parseSync({data:a.data,path:a.path,parent:a});if(!(0,d.isValid)(e))return e;const r=n.transform(e.value,i);if(r instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:t.value,value:r}}return this._def.schema._parseAsync({data:a.data,path:a.path,parent:a}).then((e=>(0,d.isValid)(e)?Promise.resolve(n.transform(e.value,i)).then((e=>({status:t.value,value:e}))):e))}c.util.assertNever(n)}}t.ZodEffects=ZodEffects,t.ZodTransformer=ZodEffects,ZodEffects.create=(e,t,a)=>new ZodEffects({schema:e,typeName:N.ZodEffects,effect:t,...p(a)}),ZodEffects.createWithPreprocess=(e,t,a)=>new ZodEffects({schema:t,effect:{type:"preprocess",transform:e},typeName:N.ZodEffects,...p(a)});class ZodOptional extends ZodType{_parse(e){return this._getType(e)===c.ZodParsedType.undefined?(0,d.OK)(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}t.ZodOptional=ZodOptional,ZodOptional.create=(e,t)=>new ZodOptional({innerType:e,typeName:N.ZodOptional,...p(t)});class ZodNullable extends ZodType{_parse(e){return this._getType(e)===c.ZodParsedType.null?(0,d.OK)(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}}t.ZodNullable=ZodNullable,ZodNullable.create=(e,t)=>new ZodNullable({innerType:e,typeName:N.ZodNullable,...p(t)});class ZodDefault extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e);let a=t.data;return t.parsedType===c.ZodParsedType.undefined&&(a=this._def.defaultValue()),this._def.innerType._parse({data:a,path:t.path,parent:t})}removeDefault(){return this._def.innerType}}t.ZodDefault=ZodDefault,ZodDefault.create=(e,t)=>new ZodDefault({innerType:e,typeName:N.ZodDefault,defaultValue:"function"==typeof t.default?t.default:()=>t.default,...p(t)});class ZodCatch extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e),a={...t,common:{...t.common,issues:[]}},n=this._def.innerType._parse({data:a.data,path:a.path,parent:{...a}});return(0,d.isAsync)(n)?n.then((e=>({status:"valid",value:"valid"===e.status?e.value:this._def.catchValue({get error(){return new m.ZodError(a.common.issues)},input:a.data})}))):{status:"valid",value:"valid"===n.status?n.value:this._def.catchValue({get error(){return new m.ZodError(a.common.issues)},input:a.data})}}removeCatch(){return this._def.innerType}}t.ZodCatch=ZodCatch,ZodCatch.create=(e,t)=>new ZodCatch({innerType:e,typeName:N.ZodCatch,catchValue:"function"==typeof t.catch?t.catch:()=>t.catch,...p(t)});class ZodNaN extends ZodType{_parse(e){if(this._getType(e)!==c.ZodParsedType.nan){const t=this._getOrReturnCtx(e);return(0,d.addIssueToContext)(t,{code:m.ZodIssueCode.invalid_type,expected:c.ZodParsedType.nan,received:t.parsedType}),d.INVALID}return{status:"valid",value:e.data}}}t.ZodNaN=ZodNaN,ZodNaN.create=e=>new ZodNaN({typeName:N.ZodNaN,...p(e)}),t.BRAND=Symbol("zod_brand");class ZodBranded extends ZodType{_parse(e){const{ctx:t}=this._processInputParams(e),a=t.data;return this._def.type._parse({data:a,path:t.path,parent:t})}unwrap(){return this._def.type}}t.ZodBranded=ZodBranded;class ZodPipeline extends ZodType{_parse(e){const{status:t,ctx:a}=this._processInputParams(e);if(a.common.async)return(async()=>{const e=await this._def.in._parseAsync({data:a.data,path:a.path,parent:a});return"aborted"===e.status?d.INVALID:"dirty"===e.status?(t.dirty(),(0,d.DIRTY)(e.value)):this._def.out._parseAsync({data:e.value,path:a.path,parent:a})})();{const e=this._def.in._parseSync({data:a.data,path:a.path,parent:a});return"aborted"===e.status?d.INVALID:"dirty"===e.status?(t.dirty(),{status:"dirty",value:e.value}):this._def.out._parseSync({data:e.value,path:a.path,parent:a})}}static create(e,t){return new ZodPipeline({in:e,out:t,typeName:N.ZodPipeline})}}t.ZodPipeline=ZodPipeline;class ZodReadonly extends ZodType{_parse(e){const t=this._def.innerType._parse(e),a=e=>((0,d.isValid)(e)&&(e.value=Object.freeze(e.value)),e);return(0,d.isAsync)(t)?t.then((e=>a(e))):a(t)}unwrap(){return this._def.innerType}}function P(e,t={},a){return e?ZodAny.create().superRefine(((n,i)=>{var r,o;if(!e(n)){const e="function"==typeof t?t(n):"string"==typeof t?{message:t}:t,s=null===(o=null!==(r=e.fatal)&&void 0!==r?r:a)||void 0===o||o,l="string"==typeof e?{message:e}:e;i.addIssue({code:"custom",...l,fatal:s})}})):ZodAny.create()}var N;t.ZodReadonly=ZodReadonly,ZodReadonly.create=(e,t)=>new ZodReadonly({innerType:e,typeName:N.ZodReadonly,...p(t)}),t.custom=P,t.late={object:ZodObject.lazycreate},function(e){e.ZodString="ZodString",e.ZodNumber="ZodNumber",e.ZodNaN="ZodNaN",e.ZodBigInt="ZodBigInt",e.ZodBoolean="ZodBoolean",e.ZodDate="ZodDate",e.ZodSymbol="ZodSymbol",e.ZodUndefined="ZodUndefined",e.ZodNull="ZodNull",e.ZodAny="ZodAny",e.ZodUnknown="ZodUnknown",e.ZodNever="ZodNever",e.ZodVoid="ZodVoid",e.ZodArray="ZodArray",e.ZodObject="ZodObject",e.ZodUnion="ZodUnion",e.ZodDiscriminatedUnion="ZodDiscriminatedUnion",e.ZodIntersection="ZodIntersection",e.ZodTuple="ZodTuple",e.ZodRecord="ZodRecord",e.ZodMap="ZodMap",e.ZodSet="ZodSet",e.ZodFunction="ZodFunction",e.ZodLazy="ZodLazy",e.ZodLiteral="ZodLiteral",e.ZodEnum="ZodEnum",e.ZodEffects="ZodEffects",e.ZodNativeEnum="ZodNativeEnum",e.ZodOptional="ZodOptional",e.ZodNullable="ZodNullable",e.ZodDefault="ZodDefault",e.ZodCatch="ZodCatch",e.ZodPromise="ZodPromise",e.ZodBranded="ZodBranded",e.ZodPipeline="ZodPipeline",e.ZodReadonly="ZodReadonly"}(N=t.ZodFirstPartyTypeKind||(t.ZodFirstPartyTypeKind={})),t.instanceof=(e,t={message:`Input not instance of ${e.name}`})=>P((t=>t instanceof e),t);const D=ZodString.create;t.string=D;const F=ZodNumber.create;t.number=F;const M=ZodNaN.create;t.nan=M;const Z=ZodBigInt.create;t.bigint=Z;const U=ZodBoolean.create;t.boolean=U;const q=ZodDate.create;t.date=q;const R=ZodSymbol.create;t.symbol=R;const B=ZodUndefined.create;t.undefined=B;const G=ZodNull.create;t.null=G;const V=ZodAny.create;t.any=V;const H=ZodUnknown.create;t.unknown=H;const W=ZodNever.create;t.never=W;const $=ZodVoid.create;t.void=$;const K=ZodArray.create;t.array=K;const Y=ZodObject.create;t.object=Y;const Q=ZodObject.strictCreate;t.strictObject=Q;const X=ZodUnion.create;t.union=X;const J=ZodDiscriminatedUnion.create;t.discriminatedUnion=J;const ee=ZodIntersection.create;t.intersection=ee;const te=ZodTuple.create;t.tuple=te;const ae=ZodRecord.create;t.record=ae;const ne=ZodMap.create;t.map=ne;const ie=ZodSet.create;t.set=ie;const re=ZodFunction.create;t.function=re;const oe=ZodLazy.create;t.lazy=oe;const se=ZodLiteral.create;t.literal=se;const le=ZodEnum.create;t.enum=le;const de=ZodNativeEnum.create;t.nativeEnum=de;const ce=ZodPromise.create;t.promise=ce;const me=ZodEffects.create;t.effect=me,t.transformer=me;const he=ZodOptional.create;t.optional=he;const pe=ZodNullable.create;t.nullable=pe;const ue=ZodEffects.createWithPreprocess;t.preprocess=ue;const fe=ZodPipeline.create;t.pipeline=fe,t.ostring=()=>D().optional(),t.onumber=()=>F().optional(),t.oboolean=()=>U().optional(),t.coerce={string:e=>ZodString.create({...e,coerce:!0}),number:e=>ZodNumber.create({...e,coerce:!0}),boolean:e=>ZodBoolean.create({...e,coerce:!0}),bigint:e=>ZodBigInt.create({...e,coerce:!0}),date:e=>ZodDate.create({...e,coerce:!0})},t.NEVER=d.INVALID},function(e,t,a){"use strict";var n;Object.defineProperty(t,"__esModule",{value:!0}),t.errorUtil=void 0,(n=t.errorUtil||(t.errorUtil={})).errToObj=e=>"string"==typeof e?{message:e}:e||{},n.toString=e=>"string"==typeof e?e:null==e?void 0:e.message},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EcsFlat=t.EcsVersion=void 0,t.EcsVersion="8.11.0";var n=a(216);Object.defineProperty(t,"EcsFlat",{enumerable:!0,get:function(){return n.EcsFlat}})},function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EcsFlat=void 0,t.EcsFlat={"@timestamp":{dashed_name:"timestamp",description:"Date/time when the event originated.\nThis is the date/time extracted from the event, typically representing when the event was generated by the source.\nIf the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.\nRequired field for all events.",example:"2016-05-23T08:05:34.853Z",flat_name:"@timestamp",level:"core",name:"@timestamp",normalize:[],required:!0,short:"Date/time when the event originated.",type:"date"},"agent.build.original":{dashed_name:"agent-build-original",description:"Extended build information for the agent.\nThis field is intended to contain any build information that a data source may provide, no specific formatting is required.",example:"metricbeat version 7.6.0 (amd64), libbeat 7.6.0 [6a23e8f8f30f5001ba344e4e54d8d9cb82cb107c built 2020-02-05 23:10:10 +0000 UTC]",flat_name:"agent.build.original",ignore_above:1024,level:"core",name:"build.original",normalize:[],short:"Extended build information for the agent.",type:"keyword"},"agent.ephemeral_id":{dashed_name:"agent-ephemeral-id",description:"Ephemeral identifier of this agent (if one exists).\nThis id normally changes across restarts, but `agent.id` does not.",example:"8a4f500f",flat_name:"agent.ephemeral_id",ignore_above:1024,level:"extended",name:"ephemeral_id",normalize:[],short:"Ephemeral identifier of this agent.",type:"keyword"},"agent.id":{dashed_name:"agent-id",description:"Unique identifier of this agent (if one exists).\nExample: For Beats this would be beat.id.",example:"8a4f500d",flat_name:"agent.id",ignore_above:1024,level:"core",name:"id",normalize:[],short:"Unique identifier of this agent.",type:"keyword"},"agent.name":{dashed_name:"agent-name",description:"Custom name of the agent.\nThis is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.",example:"foo",flat_name:"agent.name",ignore_above:1024,level:"core",name:"name",normalize:[],short:"Custom name of the agent.",type:"keyword"},"agent.type":{dashed_name:"agent-type",description:"Type of the agent.\nThe agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.",example:"filebeat",flat_name:"agent.type",ignore_above:1024,level:"core",name:"type",normalize:[],short:"Type of the agent.",type:"keyword"},"agent.version":{dashed_name:"agent-version",description:"Version of the agent.",example:"6.0.0-rc2",flat_name:"agent.version",ignore_above:1024,level:"core",name:"version",normalize:[],short:"Version of the agent.",type:"keyword"},"client.address":{dashed_name:"client-address",description:"Some event client addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.",flat_name:"client.address",ignore_above:1024,level:"extended",name:"address",normalize:[],short:"Client network address.",type:"keyword"},"client.as.number":{dashed_name:"client-as-number",description:"Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",example:15169,flat_name:"client.as.number",level:"extended",name:"number",normalize:[],original_fieldset:"as",short:"Unique number allocated to the autonomous system.",type:"long"},"client.as.organization.name":{dashed_name:"client-as-organization-name",description:"Organization name.",example:"Google LLC",flat_name:"client.as.organization.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"client.as.organization.name.text",name:"text",type:"match_only_text"}],name:"organization.name",normalize:[],original_fieldset:"as",short:"Organization name.",type:"keyword"},"client.bytes":{dashed_name:"client-bytes",description:"Bytes sent from the client to the server.",example:184,flat_name:"client.bytes",format:"bytes",level:"core",name:"bytes",normalize:[],short:"Bytes sent from the client to the server.",type:"long"},"client.domain":{dashed_name:"client-domain",description:"The domain name of the client system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.",example:"foo.example.com",flat_name:"client.domain",ignore_above:1024,level:"core",name:"domain",normalize:[],short:"The domain name of the client.",type:"keyword"},"client.geo.city_name":{dashed_name:"client-geo-city-name",description:"City name.",example:"Montreal",flat_name:"client.geo.city_name",ignore_above:1024,level:"core",name:"city_name",normalize:[],original_fieldset:"geo",short:"City name.",type:"keyword"},"client.geo.continent_code":{dashed_name:"client-geo-continent-code",description:"Two-letter code representing continent's name.",example:"NA",flat_name:"client.geo.continent_code",ignore_above:1024,level:"core",name:"continent_code",normalize:[],original_fieldset:"geo",short:"Continent code.",type:"keyword"},"client.geo.continent_name":{dashed_name:"client-geo-continent-name",description:"Name of the continent.",example:"North America",flat_name:"client.geo.continent_name",ignore_above:1024,level:"core",name:"continent_name",normalize:[],original_fieldset:"geo",short:"Name of the continent.",type:"keyword"},"client.geo.country_iso_code":{dashed_name:"client-geo-country-iso-code",description:"Country ISO code.",example:"CA",flat_name:"client.geo.country_iso_code",ignore_above:1024,level:"core",name:"country_iso_code",normalize:[],original_fieldset:"geo",short:"Country ISO code.",type:"keyword"},"client.geo.country_name":{dashed_name:"client-geo-country-name",description:"Country name.",example:"Canada",flat_name:"client.geo.country_name",ignore_above:1024,level:"core",name:"country_name",normalize:[],original_fieldset:"geo",short:"Country name.",type:"keyword"},"client.geo.location":{dashed_name:"client-geo-location",description:"Longitude and latitude.",example:'{ "lon": -73.614830, "lat": 45.505918 }',flat_name:"client.geo.location",level:"core",name:"location",normalize:[],original_fieldset:"geo",short:"Longitude and latitude.",type:"geo_point"},"client.geo.name":{dashed_name:"client-geo-name",description:"User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",example:"boston-dc",flat_name:"client.geo.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"geo",short:"User-defined description of a location.",type:"keyword"},"client.geo.postal_code":{dashed_name:"client-geo-postal-code",description:"Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",example:94040,flat_name:"client.geo.postal_code",ignore_above:1024,level:"core",name:"postal_code",normalize:[],original_fieldset:"geo",short:"Postal code.",type:"keyword"},"client.geo.region_iso_code":{dashed_name:"client-geo-region-iso-code",description:"Region ISO code.",example:"CA-QC",flat_name:"client.geo.region_iso_code",ignore_above:1024,level:"core",name:"region_iso_code",normalize:[],original_fieldset:"geo",short:"Region ISO code.",type:"keyword"},"client.geo.region_name":{dashed_name:"client-geo-region-name",description:"Region name.",example:"Quebec",flat_name:"client.geo.region_name",ignore_above:1024,level:"core",name:"region_name",normalize:[],original_fieldset:"geo",short:"Region name.",type:"keyword"},"client.geo.timezone":{dashed_name:"client-geo-timezone",description:"The time zone of the location, such as IANA time zone name.",example:"America/Argentina/Buenos_Aires",flat_name:"client.geo.timezone",ignore_above:1024,level:"core",name:"timezone",normalize:[],original_fieldset:"geo",short:"Time zone.",type:"keyword"},"client.ip":{dashed_name:"client-ip",description:"IP address of the client (IPv4 or IPv6).",flat_name:"client.ip",level:"core",name:"ip",normalize:[],short:"IP address of the client.",type:"ip"},"client.mac":{dashed_name:"client-mac",description:"MAC address of the client.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",example:"00-00-5E-00-53-23",flat_name:"client.mac",ignore_above:1024,level:"core",name:"mac",normalize:[],pattern:"^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$",short:"MAC address of the client.",type:"keyword"},"client.nat.ip":{dashed_name:"client-nat-ip",description:"Translated IP of source based NAT sessions (e.g. internal client to internet).\nTypically connections traversing load balancers, firewalls, or routers.",flat_name:"client.nat.ip",level:"extended",name:"nat.ip",normalize:[],short:"Client NAT ip address",type:"ip"},"client.nat.port":{dashed_name:"client-nat-port",description:"Translated port of source based NAT sessions (e.g. internal client to internet).\nTypically connections traversing load balancers, firewalls, or routers.",flat_name:"client.nat.port",format:"string",level:"extended",name:"nat.port",normalize:[],short:"Client NAT port",type:"long"},"client.packets":{dashed_name:"client-packets",description:"Packets sent from the client to the server.",example:12,flat_name:"client.packets",level:"core",name:"packets",normalize:[],short:"Packets sent from the client to the server.",type:"long"},"client.port":{dashed_name:"client-port",description:"Port of the client.",flat_name:"client.port",format:"string",level:"core",name:"port",normalize:[],short:"Port of the client.",type:"long"},"client.registered_domain":{dashed_name:"client-registered-domain",description:'The highest registered client domain, stripped of the subdomain.\nFor example, the registered domain for "foo.example.com" is "example.com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".',example:"example.com",flat_name:"client.registered_domain",ignore_above:1024,level:"extended",name:"registered_domain",normalize:[],short:"The highest registered client domain, stripped of the subdomain.",type:"keyword"},"client.subdomain":{dashed_name:"client-subdomain",description:'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.',example:"east",flat_name:"client.subdomain",ignore_above:1024,level:"extended",name:"subdomain",normalize:[],short:"The subdomain of the domain.",type:"keyword"},"client.top_level_domain":{dashed_name:"client-top-level-domain",description:'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".',example:"co.uk",flat_name:"client.top_level_domain",ignore_above:1024,level:"extended",name:"top_level_domain",normalize:[],short:"The effective top level domain (com, org, net, co.uk).",type:"keyword"},"client.user.domain":{dashed_name:"client-user-domain",description:"Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"client.user.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"user",short:"Name of the directory the user is a member of.",type:"keyword"},"client.user.email":{dashed_name:"client-user-email",description:"User email address.",flat_name:"client.user.email",ignore_above:1024,level:"extended",name:"email",normalize:[],original_fieldset:"user",short:"User email address.",type:"keyword"},"client.user.full_name":{dashed_name:"client-user-full-name",description:"User's full name, if available.",example:"Albert Einstein",flat_name:"client.user.full_name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"client.user.full_name.text",name:"text",type:"match_only_text"}],name:"full_name",normalize:[],original_fieldset:"user",short:"User's full name, if available.",type:"keyword"},"client.user.group.domain":{dashed_name:"client-user-group-domain",description:"Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"client.user.group.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"group",short:"Name of the directory the group is a member of.",type:"keyword"},"client.user.group.id":{dashed_name:"client-user-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"client.user.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"client.user.group.name":{dashed_name:"client-user-group-name",description:"Name of the group.",flat_name:"client.user.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"client.user.hash":{dashed_name:"client-user-hash",description:"Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",flat_name:"client.user.hash",ignore_above:1024,level:"extended",name:"hash",normalize:[],original_fieldset:"user",short:"Unique user hash to correlate information for a user in anonymized form.",type:"keyword"},"client.user.id":{dashed_name:"client-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"client.user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"client.user.name":{dashed_name:"client-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"client.user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"client.user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"client.user.roles":{dashed_name:"client-user-roles",description:"Array of user roles at the time of the event.",example:'["kibana_admin", "reporting_user"]',flat_name:"client.user.roles",ignore_above:1024,level:"extended",name:"roles",normalize:["array"],original_fieldset:"user",short:"Array of user roles at the time of the event.",type:"keyword"},"cloud.account.id":{dashed_name:"cloud-account-id",description:"The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier.",example:666777888999,flat_name:"cloud.account.id",ignore_above:1024,level:"extended",name:"account.id",normalize:[],short:"The cloud account or organization id.",type:"keyword"},"cloud.account.name":{dashed_name:"cloud-account-name",description:"The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name.",example:"elastic-dev",flat_name:"cloud.account.name",ignore_above:1024,level:"extended",name:"account.name",normalize:[],short:"The cloud account name.",type:"keyword"},"cloud.availability_zone":{dashed_name:"cloud-availability-zone",description:"Availability zone in which this host, resource, or service is located.",example:"us-east-1c",flat_name:"cloud.availability_zone",ignore_above:1024,level:"extended",name:"availability_zone",normalize:[],short:"Availability zone in which this host, resource, or service is located.",type:"keyword"},"cloud.instance.id":{dashed_name:"cloud-instance-id",description:"Instance ID of the host machine.",example:"i-1234567890abcdef0",flat_name:"cloud.instance.id",ignore_above:1024,level:"extended",name:"instance.id",normalize:[],short:"Instance ID of the host machine.",type:"keyword"},"cloud.instance.name":{dashed_name:"cloud-instance-name",description:"Instance name of the host machine.",flat_name:"cloud.instance.name",ignore_above:1024,level:"extended",name:"instance.name",normalize:[],short:"Instance name of the host machine.",type:"keyword"},"cloud.machine.type":{dashed_name:"cloud-machine-type",description:"Machine type of the host machine.",example:"t2.medium",flat_name:"cloud.machine.type",ignore_above:1024,level:"extended",name:"machine.type",normalize:[],short:"Machine type of the host machine.",type:"keyword"},"cloud.origin.account.id":{dashed_name:"cloud-origin-account-id",description:"The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier.",example:666777888999,flat_name:"cloud.origin.account.id",ignore_above:1024,level:"extended",name:"account.id",normalize:[],original_fieldset:"cloud",short:"The cloud account or organization id.",type:"keyword"},"cloud.origin.account.name":{dashed_name:"cloud-origin-account-name",description:"The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name.",example:"elastic-dev",flat_name:"cloud.origin.account.name",ignore_above:1024,level:"extended",name:"account.name",normalize:[],original_fieldset:"cloud",short:"The cloud account name.",type:"keyword"},"cloud.origin.availability_zone":{dashed_name:"cloud-origin-availability-zone",description:"Availability zone in which this host, resource, or service is located.",example:"us-east-1c",flat_name:"cloud.origin.availability_zone",ignore_above:1024,level:"extended",name:"availability_zone",normalize:[],original_fieldset:"cloud",short:"Availability zone in which this host, resource, or service is located.",type:"keyword"},"cloud.origin.instance.id":{dashed_name:"cloud-origin-instance-id",description:"Instance ID of the host machine.",example:"i-1234567890abcdef0",flat_name:"cloud.origin.instance.id",ignore_above:1024,level:"extended",name:"instance.id",normalize:[],original_fieldset:"cloud",short:"Instance ID of the host machine.",type:"keyword"},"cloud.origin.instance.name":{dashed_name:"cloud-origin-instance-name",description:"Instance name of the host machine.",flat_name:"cloud.origin.instance.name",ignore_above:1024,level:"extended",name:"instance.name",normalize:[],original_fieldset:"cloud",short:"Instance name of the host machine.",type:"keyword"},"cloud.origin.machine.type":{dashed_name:"cloud-origin-machine-type",description:"Machine type of the host machine.",example:"t2.medium",flat_name:"cloud.origin.machine.type",ignore_above:1024,level:"extended",name:"machine.type",normalize:[],original_fieldset:"cloud",short:"Machine type of the host machine.",type:"keyword"},"cloud.origin.project.id":{dashed_name:"cloud-origin-project-id",description:"The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id.",example:"my-project",flat_name:"cloud.origin.project.id",ignore_above:1024,level:"extended",name:"project.id",normalize:[],original_fieldset:"cloud",short:"The cloud project id.",type:"keyword"},"cloud.origin.project.name":{dashed_name:"cloud-origin-project-name",description:"The cloud project name.\nExamples: Google Cloud Project name, Azure Project name.",example:"my project",flat_name:"cloud.origin.project.name",ignore_above:1024,level:"extended",name:"project.name",normalize:[],original_fieldset:"cloud",short:"The cloud project name.",type:"keyword"},"cloud.origin.provider":{dashed_name:"cloud-origin-provider",description:"Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.",example:"aws",flat_name:"cloud.origin.provider",ignore_above:1024,level:"extended",name:"provider",normalize:[],original_fieldset:"cloud",short:"Name of the cloud provider.",type:"keyword"},"cloud.origin.region":{dashed_name:"cloud-origin-region",description:"Region in which this host, resource, or service is located.",example:"us-east-1",flat_name:"cloud.origin.region",ignore_above:1024,level:"extended",name:"region",normalize:[],original_fieldset:"cloud",short:"Region in which this host, resource, or service is located.",type:"keyword"},"cloud.origin.service.name":{dashed_name:"cloud-origin-service-name",description:"The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda.",example:"lambda",flat_name:"cloud.origin.service.name",ignore_above:1024,level:"extended",name:"service.name",normalize:[],original_fieldset:"cloud",short:"The cloud service name.",type:"keyword"},"cloud.project.id":{dashed_name:"cloud-project-id",description:"The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id.",example:"my-project",flat_name:"cloud.project.id",ignore_above:1024,level:"extended",name:"project.id",normalize:[],short:"The cloud project id.",type:"keyword"},"cloud.project.name":{dashed_name:"cloud-project-name",description:"The cloud project name.\nExamples: Google Cloud Project name, Azure Project name.",example:"my project",flat_name:"cloud.project.name",ignore_above:1024,level:"extended",name:"project.name",normalize:[],short:"The cloud project name.",type:"keyword"},"cloud.provider":{dashed_name:"cloud-provider",description:"Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.",example:"aws",flat_name:"cloud.provider",ignore_above:1024,level:"extended",name:"provider",normalize:[],short:"Name of the cloud provider.",type:"keyword"},"cloud.region":{dashed_name:"cloud-region",description:"Region in which this host, resource, or service is located.",example:"us-east-1",flat_name:"cloud.region",ignore_above:1024,level:"extended",name:"region",normalize:[],short:"Region in which this host, resource, or service is located.",type:"keyword"},"cloud.service.name":{dashed_name:"cloud-service-name",description:"The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda.",example:"lambda",flat_name:"cloud.service.name",ignore_above:1024,level:"extended",name:"service.name",normalize:[],short:"The cloud service name.",type:"keyword"},"cloud.target.account.id":{dashed_name:"cloud-target-account-id",description:"The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier.",example:666777888999,flat_name:"cloud.target.account.id",ignore_above:1024,level:"extended",name:"account.id",normalize:[],original_fieldset:"cloud",short:"The cloud account or organization id.",type:"keyword"},"cloud.target.account.name":{dashed_name:"cloud-target-account-name",description:"The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name.",example:"elastic-dev",flat_name:"cloud.target.account.name",ignore_above:1024,level:"extended",name:"account.name",normalize:[],original_fieldset:"cloud",short:"The cloud account name.",type:"keyword"},"cloud.target.availability_zone":{dashed_name:"cloud-target-availability-zone",description:"Availability zone in which this host, resource, or service is located.",example:"us-east-1c",flat_name:"cloud.target.availability_zone",ignore_above:1024,level:"extended",name:"availability_zone",normalize:[],original_fieldset:"cloud",short:"Availability zone in which this host, resource, or service is located.",type:"keyword"},"cloud.target.instance.id":{dashed_name:"cloud-target-instance-id",description:"Instance ID of the host machine.",example:"i-1234567890abcdef0",flat_name:"cloud.target.instance.id",ignore_above:1024,level:"extended",name:"instance.id",normalize:[],original_fieldset:"cloud",short:"Instance ID of the host machine.",type:"keyword"},"cloud.target.instance.name":{dashed_name:"cloud-target-instance-name",description:"Instance name of the host machine.",flat_name:"cloud.target.instance.name",ignore_above:1024,level:"extended",name:"instance.name",normalize:[],original_fieldset:"cloud",short:"Instance name of the host machine.",type:"keyword"},"cloud.target.machine.type":{dashed_name:"cloud-target-machine-type",description:"Machine type of the host machine.",example:"t2.medium",flat_name:"cloud.target.machine.type",ignore_above:1024,level:"extended",name:"machine.type",normalize:[],original_fieldset:"cloud",short:"Machine type of the host machine.",type:"keyword"},"cloud.target.project.id":{dashed_name:"cloud-target-project-id",description:"The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id.",example:"my-project",flat_name:"cloud.target.project.id",ignore_above:1024,level:"extended",name:"project.id",normalize:[],original_fieldset:"cloud",short:"The cloud project id.",type:"keyword"},"cloud.target.project.name":{dashed_name:"cloud-target-project-name",description:"The cloud project name.\nExamples: Google Cloud Project name, Azure Project name.",example:"my project",flat_name:"cloud.target.project.name",ignore_above:1024,level:"extended",name:"project.name",normalize:[],original_fieldset:"cloud",short:"The cloud project name.",type:"keyword"},"cloud.target.provider":{dashed_name:"cloud-target-provider",description:"Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.",example:"aws",flat_name:"cloud.target.provider",ignore_above:1024,level:"extended",name:"provider",normalize:[],original_fieldset:"cloud",short:"Name of the cloud provider.",type:"keyword"},"cloud.target.region":{dashed_name:"cloud-target-region",description:"Region in which this host, resource, or service is located.",example:"us-east-1",flat_name:"cloud.target.region",ignore_above:1024,level:"extended",name:"region",normalize:[],original_fieldset:"cloud",short:"Region in which this host, resource, or service is located.",type:"keyword"},"cloud.target.service.name":{dashed_name:"cloud-target-service-name",description:"The cloud service name is intended to distinguish services running on different platforms within a provider, eg AWS EC2 vs Lambda, GCP GCE vs App Engine, Azure VM vs App Server.\nExamples: app engine, app service, cloud run, fargate, lambda.",example:"lambda",flat_name:"cloud.target.service.name",ignore_above:1024,level:"extended",name:"service.name",normalize:[],original_fieldset:"cloud",short:"The cloud service name.",type:"keyword"},"container.cpu.usage":{dashed_name:"container-cpu-usage",description:"Percent CPU used which is normalized by the number of CPU cores and it ranges from 0 to 1. Scaling factor: 1000.",flat_name:"container.cpu.usage",level:"extended",name:"cpu.usage",normalize:[],scaling_factor:1e3,short:"Percent CPU used, between 0 and 1.",type:"scaled_float"},"container.disk.read.bytes":{dashed_name:"container-disk-read-bytes",description:"The total number of bytes (gauge) read successfully (aggregated from all disks) since the last metric collection.",flat_name:"container.disk.read.bytes",level:"extended",name:"disk.read.bytes",normalize:[],short:"The number of bytes read by all disks.",type:"long"},"container.disk.write.bytes":{dashed_name:"container-disk-write-bytes",description:"The total number of bytes (gauge) written successfully (aggregated from all disks) since the last metric collection.",flat_name:"container.disk.write.bytes",level:"extended",name:"disk.write.bytes",normalize:[],short:"The number of bytes written on all disks.",type:"long"},"container.id":{dashed_name:"container-id",description:"Unique container id.",flat_name:"container.id",ignore_above:1024,level:"core",name:"id",normalize:[],short:"Unique container id.",type:"keyword"},"container.image.hash.all":{dashed_name:"container-image-hash-all",description:"An array of digests of the image the container was built on. Each digest consists of the hash algorithm and value in this format: `algorithm:value`. Algorithm names should align with the field names in the ECS hash field set.",example:"[sha256:f8fefc80e3273dc756f288a63945820d6476ad64883892c771b5e2ece6bf1b26]",flat_name:"container.image.hash.all",ignore_above:1024,level:"extended",name:"image.hash.all",normalize:["array"],short:"An array of digests of the image the container was built on.",type:"keyword"},"container.image.name":{dashed_name:"container-image-name",description:"Name of the image the container was built on.",flat_name:"container.image.name",ignore_above:1024,level:"extended",name:"image.name",normalize:[],short:"Name of the image the container was built on.",type:"keyword"},"container.image.tag":{dashed_name:"container-image-tag",description:"Container image tags.",flat_name:"container.image.tag",ignore_above:1024,level:"extended",name:"image.tag",normalize:["array"],short:"Container image tags.",type:"keyword"},"container.labels":{dashed_name:"container-labels",description:"Image labels.",flat_name:"container.labels",level:"extended",name:"labels",normalize:[],object_type:"keyword",short:"Image labels.",type:"object"},"container.memory.usage":{dashed_name:"container-memory-usage",description:"Memory usage percentage and it ranges from 0 to 1. Scaling factor: 1000.",flat_name:"container.memory.usage",level:"extended",name:"memory.usage",normalize:[],scaling_factor:1e3,short:"Percent memory used, between 0 and 1.",type:"scaled_float"},"container.name":{dashed_name:"container-name",description:"Container name.",flat_name:"container.name",ignore_above:1024,level:"extended",name:"name",normalize:[],short:"Container name.",type:"keyword"},"container.network.egress.bytes":{dashed_name:"container-network-egress-bytes",description:"The number of bytes (gauge) sent out on all network interfaces by the container since the last metric collection.",flat_name:"container.network.egress.bytes",level:"extended",name:"network.egress.bytes",normalize:[],short:"The number of bytes sent on all network interfaces.",type:"long"},"container.network.ingress.bytes":{dashed_name:"container-network-ingress-bytes",description:"The number of bytes received (gauge) on all network interfaces by the container since the last metric collection.",flat_name:"container.network.ingress.bytes",level:"extended",name:"network.ingress.bytes",normalize:[],short:"The number of bytes received on all network interfaces.",type:"long"},"container.runtime":{dashed_name:"container-runtime",description:"Runtime managing this container.",example:"docker",flat_name:"container.runtime",ignore_above:1024,level:"extended",name:"runtime",normalize:[],short:"Runtime managing this container.",type:"keyword"},"container.security_context.privileged":{dashed_name:"container-security-context-privileged",description:"Indicates whether the container is running in privileged mode.",flat_name:"container.security_context.privileged",level:"extended",name:"security_context.privileged",normalize:[],short:"Indicates whether the container is running in privileged mode.",type:"boolean"},"data_stream.dataset":{dashed_name:"data-stream-dataset",description:'The field can contain anything that makes sense to signify the source of the data.\nExamples include `nginx.access`, `prometheus`, `endpoint` etc. For data streams that otherwise fit, but that do not have dataset set we use the value "generic" for the dataset value. `event.dataset` should have the same value as `data_stream.dataset`.\nBeyond the Elasticsearch data stream naming criteria noted above, the `dataset` value has additional restrictions:\n  * Must not contain `-`\n  * No longer than 100 characters',example:"nginx.access",flat_name:"data_stream.dataset",level:"extended",name:"dataset",normalize:[],short:"The field can contain anything that makes sense to signify the source of the data.",type:"constant_keyword"},"data_stream.namespace":{dashed_name:"data-stream-namespace",description:"A user defined namespace. Namespaces are useful to allow grouping of data.\nMany users already organize their indices this way, and the data stream naming scheme now provides this best practice as a default. Many users will populate this field with `default`. If no value is used, it falls back to `default`.\nBeyond the Elasticsearch index naming criteria noted above, `namespace` value has the additional restrictions:\n  * Must not contain `-`\n  * No longer than 100 characters",example:"production",flat_name:"data_stream.namespace",level:"extended",name:"namespace",normalize:[],short:"A user defined namespace. Namespaces are useful to allow grouping of data.",type:"constant_keyword"},"data_stream.type":{dashed_name:"data-stream-type",description:'An overarching type for the data stream.\nCurrently allowed values are "logs" and "metrics". We expect to also add "traces" and "synthetics" in the near future.',example:"logs",flat_name:"data_stream.type",level:"extended",name:"type",normalize:[],short:"An overarching type for the data stream.",type:"constant_keyword"},"destination.address":{dashed_name:"destination-address",description:"Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.",flat_name:"destination.address",ignore_above:1024,level:"extended",name:"address",normalize:[],short:"Destination network address.",type:"keyword"},"destination.as.number":{dashed_name:"destination-as-number",description:"Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",example:15169,flat_name:"destination.as.number",level:"extended",name:"number",normalize:[],original_fieldset:"as",short:"Unique number allocated to the autonomous system.",type:"long"},"destination.as.organization.name":{dashed_name:"destination-as-organization-name",description:"Organization name.",example:"Google LLC",flat_name:"destination.as.organization.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"destination.as.organization.name.text",name:"text",type:"match_only_text"}],name:"organization.name",normalize:[],original_fieldset:"as",short:"Organization name.",type:"keyword"},"destination.bytes":{dashed_name:"destination-bytes",description:"Bytes sent from the destination to the source.",example:184,flat_name:"destination.bytes",format:"bytes",level:"core",name:"bytes",normalize:[],short:"Bytes sent from the destination to the source.",type:"long"},"destination.domain":{dashed_name:"destination-domain",description:"The domain name of the destination system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.",example:"foo.example.com",flat_name:"destination.domain",ignore_above:1024,level:"core",name:"domain",normalize:[],short:"The domain name of the destination.",type:"keyword"},"destination.geo.city_name":{dashed_name:"destination-geo-city-name",description:"City name.",example:"Montreal",flat_name:"destination.geo.city_name",ignore_above:1024,level:"core",name:"city_name",normalize:[],original_fieldset:"geo",short:"City name.",type:"keyword"},"destination.geo.continent_code":{dashed_name:"destination-geo-continent-code",description:"Two-letter code representing continent's name.",example:"NA",flat_name:"destination.geo.continent_code",ignore_above:1024,level:"core",name:"continent_code",normalize:[],original_fieldset:"geo",short:"Continent code.",type:"keyword"},"destination.geo.continent_name":{dashed_name:"destination-geo-continent-name",description:"Name of the continent.",example:"North America",flat_name:"destination.geo.continent_name",ignore_above:1024,level:"core",name:"continent_name",normalize:[],original_fieldset:"geo",short:"Name of the continent.",type:"keyword"},"destination.geo.country_iso_code":{dashed_name:"destination-geo-country-iso-code",description:"Country ISO code.",example:"CA",flat_name:"destination.geo.country_iso_code",ignore_above:1024,level:"core",name:"country_iso_code",normalize:[],original_fieldset:"geo",short:"Country ISO code.",type:"keyword"},"destination.geo.country_name":{dashed_name:"destination-geo-country-name",description:"Country name.",example:"Canada",flat_name:"destination.geo.country_name",ignore_above:1024,level:"core",name:"country_name",normalize:[],original_fieldset:"geo",short:"Country name.",type:"keyword"},"destination.geo.location":{dashed_name:"destination-geo-location",description:"Longitude and latitude.",example:'{ "lon": -73.614830, "lat": 45.505918 }',flat_name:"destination.geo.location",level:"core",name:"location",normalize:[],original_fieldset:"geo",short:"Longitude and latitude.",type:"geo_point"},"destination.geo.name":{dashed_name:"destination-geo-name",description:"User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",example:"boston-dc",flat_name:"destination.geo.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"geo",short:"User-defined description of a location.",type:"keyword"},"destination.geo.postal_code":{dashed_name:"destination-geo-postal-code",description:"Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",example:94040,flat_name:"destination.geo.postal_code",ignore_above:1024,level:"core",name:"postal_code",normalize:[],original_fieldset:"geo",short:"Postal code.",type:"keyword"},"destination.geo.region_iso_code":{dashed_name:"destination-geo-region-iso-code",description:"Region ISO code.",example:"CA-QC",flat_name:"destination.geo.region_iso_code",ignore_above:1024,level:"core",name:"region_iso_code",normalize:[],original_fieldset:"geo",short:"Region ISO code.",type:"keyword"},"destination.geo.region_name":{dashed_name:"destination-geo-region-name",description:"Region name.",example:"Quebec",flat_name:"destination.geo.region_name",ignore_above:1024,level:"core",name:"region_name",normalize:[],original_fieldset:"geo",short:"Region name.",type:"keyword"},"destination.geo.timezone":{dashed_name:"destination-geo-timezone",description:"The time zone of the location, such as IANA time zone name.",example:"America/Argentina/Buenos_Aires",flat_name:"destination.geo.timezone",ignore_above:1024,level:"core",name:"timezone",normalize:[],original_fieldset:"geo",short:"Time zone.",type:"keyword"},"destination.ip":{dashed_name:"destination-ip",description:"IP address of the destination (IPv4 or IPv6).",flat_name:"destination.ip",level:"core",name:"ip",normalize:[],short:"IP address of the destination.",type:"ip"},"destination.mac":{dashed_name:"destination-mac",description:"MAC address of the destination.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",example:"00-00-5E-00-53-23",flat_name:"destination.mac",ignore_above:1024,level:"core",name:"mac",normalize:[],pattern:"^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$",short:"MAC address of the destination.",type:"keyword"},"destination.nat.ip":{dashed_name:"destination-nat-ip",description:"Translated ip of destination based NAT sessions (e.g. internet to private DMZ)\nTypically used with load balancers, firewalls, or routers.",flat_name:"destination.nat.ip",level:"extended",name:"nat.ip",normalize:[],short:"Destination NAT ip",type:"ip"},"destination.nat.port":{dashed_name:"destination-nat-port",description:"Port the source session is translated to by NAT Device.\nTypically used with load balancers, firewalls, or routers.",flat_name:"destination.nat.port",format:"string",level:"extended",name:"nat.port",normalize:[],short:"Destination NAT Port",type:"long"},"destination.packets":{dashed_name:"destination-packets",description:"Packets sent from the destination to the source.",example:12,flat_name:"destination.packets",level:"core",name:"packets",normalize:[],short:"Packets sent from the destination to the source.",type:"long"},"destination.port":{dashed_name:"destination-port",description:"Port of the destination.",flat_name:"destination.port",format:"string",level:"core",name:"port",normalize:[],short:"Port of the destination.",type:"long"},"destination.registered_domain":{dashed_name:"destination-registered-domain",description:'The highest registered destination domain, stripped of the subdomain.\nFor example, the registered domain for "foo.example.com" is "example.com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".',example:"example.com",flat_name:"destination.registered_domain",ignore_above:1024,level:"extended",name:"registered_domain",normalize:[],short:"The highest registered destination domain, stripped of the subdomain.",type:"keyword"},"destination.subdomain":{dashed_name:"destination-subdomain",description:'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.',example:"east",flat_name:"destination.subdomain",ignore_above:1024,level:"extended",name:"subdomain",normalize:[],short:"The subdomain of the domain.",type:"keyword"},"destination.top_level_domain":{dashed_name:"destination-top-level-domain",description:'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".',example:"co.uk",flat_name:"destination.top_level_domain",ignore_above:1024,level:"extended",name:"top_level_domain",normalize:[],short:"The effective top level domain (com, org, net, co.uk).",type:"keyword"},"destination.user.domain":{dashed_name:"destination-user-domain",description:"Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"destination.user.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"user",short:"Name of the directory the user is a member of.",type:"keyword"},"destination.user.email":{dashed_name:"destination-user-email",description:"User email address.",flat_name:"destination.user.email",ignore_above:1024,level:"extended",name:"email",normalize:[],original_fieldset:"user",short:"User email address.",type:"keyword"},"destination.user.full_name":{dashed_name:"destination-user-full-name",description:"User's full name, if available.",example:"Albert Einstein",flat_name:"destination.user.full_name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"destination.user.full_name.text",name:"text",type:"match_only_text"}],name:"full_name",normalize:[],original_fieldset:"user",short:"User's full name, if available.",type:"keyword"},"destination.user.group.domain":{dashed_name:"destination-user-group-domain",description:"Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"destination.user.group.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"group",short:"Name of the directory the group is a member of.",type:"keyword"},"destination.user.group.id":{dashed_name:"destination-user-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"destination.user.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"destination.user.group.name":{dashed_name:"destination-user-group-name",description:"Name of the group.",flat_name:"destination.user.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"destination.user.hash":{dashed_name:"destination-user-hash",description:"Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",flat_name:"destination.user.hash",ignore_above:1024,level:"extended",name:"hash",normalize:[],original_fieldset:"user",short:"Unique user hash to correlate information for a user in anonymized form.",type:"keyword"},"destination.user.id":{dashed_name:"destination-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"destination.user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"destination.user.name":{dashed_name:"destination-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"destination.user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"destination.user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"destination.user.roles":{dashed_name:"destination-user-roles",description:"Array of user roles at the time of the event.",example:'["kibana_admin", "reporting_user"]',flat_name:"destination.user.roles",ignore_above:1024,level:"extended",name:"roles",normalize:["array"],original_fieldset:"user",short:"Array of user roles at the time of the event.",type:"keyword"},"device.id":{dashed_name:"device-id",description:"The unique identifier of a device. The identifier must not change across application sessions but stay fixed for an instance of a (mobile) device. \nOn iOS, this value must be equal to the vendor identifier (https://developer.apple.com/documentation/uikit/uidevice/1620059-identifierforvendor). On Android, this value must be equal to the Firebase Installation ID or a globally unique UUID which is persisted across sessions in your application.\nFor GDPR and data protection law reasons this identifier should not carry information that would allow to identify a user.",example:"00000000-54b3-e7c7-0000-000046bffd97",flat_name:"device.id",ignore_above:1024,level:"extended",name:"id",normalize:[],short:"The unique identifier of a device.",type:"keyword"},"device.manufacturer":{dashed_name:"device-manufacturer",description:"The vendor name of the device manufacturer.",example:"Samsung",flat_name:"device.manufacturer",ignore_above:1024,level:"extended",name:"manufacturer",normalize:[],short:"The vendor name of the device manufacturer.",type:"keyword"},"device.model.identifier":{dashed_name:"device-model-identifier",description:"The machine readable identifier of the device model.",example:"SM-G920F",flat_name:"device.model.identifier",ignore_above:1024,level:"extended",name:"model.identifier",normalize:[],short:"The machine readable identifier of the device model.",type:"keyword"},"device.model.name":{dashed_name:"device-model-name",description:"The human readable marketing name of the device model.",example:"Samsung Galaxy S6",flat_name:"device.model.name",ignore_above:1024,level:"extended",name:"model.name",normalize:[],short:"The human readable marketing name of the device model.",type:"keyword"},"dll.code_signature.digest_algorithm":{dashed_name:"dll-code-signature-digest-algorithm",description:"The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",example:"sha256",flat_name:"dll.code_signature.digest_algorithm",ignore_above:1024,level:"extended",name:"digest_algorithm",normalize:[],original_fieldset:"code_signature",short:"Hashing algorithm used to sign the process.",type:"keyword"},"dll.code_signature.exists":{dashed_name:"dll-code-signature-exists",description:"Boolean to capture if a signature is present.",example:"true",flat_name:"dll.code_signature.exists",level:"core",name:"exists",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if a signature is present.",type:"boolean"},"dll.code_signature.signing_id":{dashed_name:"dll-code-signature-signing-id",description:"The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",example:"com.apple.xpc.proxy",flat_name:"dll.code_signature.signing_id",ignore_above:1024,level:"extended",name:"signing_id",normalize:[],original_fieldset:"code_signature",short:"The identifier used to sign the process.",type:"keyword"},"dll.code_signature.status":{dashed_name:"dll-code-signature-status",description:"Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",example:"ERROR_UNTRUSTED_ROOT",flat_name:"dll.code_signature.status",ignore_above:1024,level:"extended",name:"status",normalize:[],original_fieldset:"code_signature",short:"Additional information about the certificate status.",type:"keyword"},"dll.code_signature.subject_name":{dashed_name:"dll-code-signature-subject-name",description:"Subject name of the code signer",example:"Microsoft Corporation",flat_name:"dll.code_signature.subject_name",ignore_above:1024,level:"core",name:"subject_name",normalize:[],original_fieldset:"code_signature",short:"Subject name of the code signer",type:"keyword"},"dll.code_signature.team_id":{dashed_name:"dll-code-signature-team-id",description:"The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",example:"EQHXZ8M8AV",flat_name:"dll.code_signature.team_id",ignore_above:1024,level:"extended",name:"team_id",normalize:[],original_fieldset:"code_signature",short:"The team identifier used to sign the process.",type:"keyword"},"dll.code_signature.timestamp":{dashed_name:"dll-code-signature-timestamp",description:"Date and time when the code signature was generated and signed.",example:"2021-01-01T12:10:30Z",flat_name:"dll.code_signature.timestamp",level:"extended",name:"timestamp",normalize:[],original_fieldset:"code_signature",short:"When the signature was generated and signed.",type:"date"},"dll.code_signature.trusted":{dashed_name:"dll-code-signature-trusted",description:"Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",example:"true",flat_name:"dll.code_signature.trusted",level:"extended",name:"trusted",normalize:[],original_fieldset:"code_signature",short:"Stores the trust status of the certificate chain.",type:"boolean"},"dll.code_signature.valid":{dashed_name:"dll-code-signature-valid",description:"Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",example:"true",flat_name:"dll.code_signature.valid",level:"extended",name:"valid",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if the digital signature is verified against the binary content.",type:"boolean"},"dll.hash.md5":{dashed_name:"dll-hash-md5",description:"MD5 hash.",flat_name:"dll.hash.md5",ignore_above:1024,level:"extended",name:"md5",normalize:[],original_fieldset:"hash",short:"MD5 hash.",type:"keyword"},"dll.hash.sha1":{dashed_name:"dll-hash-sha1",description:"SHA1 hash.",flat_name:"dll.hash.sha1",ignore_above:1024,level:"extended",name:"sha1",normalize:[],original_fieldset:"hash",short:"SHA1 hash.",type:"keyword"},"dll.hash.sha256":{dashed_name:"dll-hash-sha256",description:"SHA256 hash.",flat_name:"dll.hash.sha256",ignore_above:1024,level:"extended",name:"sha256",normalize:[],original_fieldset:"hash",short:"SHA256 hash.",type:"keyword"},"dll.hash.sha384":{dashed_name:"dll-hash-sha384",description:"SHA384 hash.",flat_name:"dll.hash.sha384",ignore_above:1024,level:"extended",name:"sha384",normalize:[],original_fieldset:"hash",short:"SHA384 hash.",type:"keyword"},"dll.hash.sha512":{dashed_name:"dll-hash-sha512",description:"SHA512 hash.",flat_name:"dll.hash.sha512",ignore_above:1024,level:"extended",name:"sha512",normalize:[],original_fieldset:"hash",short:"SHA512 hash.",type:"keyword"},"dll.hash.ssdeep":{dashed_name:"dll-hash-ssdeep",description:"SSDEEP hash.",flat_name:"dll.hash.ssdeep",ignore_above:1024,level:"extended",name:"ssdeep",normalize:[],original_fieldset:"hash",short:"SSDEEP hash.",type:"keyword"},"dll.hash.tlsh":{dashed_name:"dll-hash-tlsh",description:"TLSH hash.",flat_name:"dll.hash.tlsh",ignore_above:1024,level:"extended",name:"tlsh",normalize:[],original_fieldset:"hash",short:"TLSH hash.",type:"keyword"},"dll.name":{dashed_name:"dll-name",description:"Name of the library.\nThis generally maps to the name of the file on disk.",example:"kernel32.dll",flat_name:"dll.name",ignore_above:1024,level:"core",name:"name",normalize:[],short:"Name of the library.",type:"keyword"},"dll.path":{dashed_name:"dll-path",description:"Full file path of the library.",example:"C:\\Windows\\System32\\kernel32.dll",flat_name:"dll.path",ignore_above:1024,level:"extended",name:"path",normalize:[],short:"Full file path of the library.",type:"keyword"},"dll.pe.architecture":{dashed_name:"dll-pe-architecture",description:"CPU architecture target for the file.",example:"x64",flat_name:"dll.pe.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"pe",short:"CPU architecture target for the file.",type:"keyword"},"dll.pe.company":{dashed_name:"dll-pe-company",description:"Internal company name of the file, provided at compile-time.",example:"Microsoft Corporation",flat_name:"dll.pe.company",ignore_above:1024,level:"extended",name:"company",normalize:[],original_fieldset:"pe",short:"Internal company name of the file, provided at compile-time.",type:"keyword"},"dll.pe.description":{dashed_name:"dll-pe-description",description:"Internal description of the file, provided at compile-time.",example:"Paint",flat_name:"dll.pe.description",ignore_above:1024,level:"extended",name:"description",normalize:[],original_fieldset:"pe",short:"Internal description of the file, provided at compile-time.",type:"keyword"},"dll.pe.file_version":{dashed_name:"dll-pe-file-version",description:"Internal version of the file, provided at compile-time.",example:"6.3.9600.17415",flat_name:"dll.pe.file_version",ignore_above:1024,level:"extended",name:"file_version",normalize:[],original_fieldset:"pe",short:"Process name.",type:"keyword"},"dll.pe.go_import_hash":{dashed_name:"dll-pe-go-import-hash",description:"A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"dll.pe.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the Go language imports in a PE file.",type:"keyword"},"dll.pe.go_imports":{dashed_name:"dll-pe-go-imports",description:"List of imported Go language element names and types.",flat_name:"dll.pe.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"pe",short:"List of imported Go language element names and types.",type:"flattened"},"dll.pe.go_imports_names_entropy":{dashed_name:"dll-pe-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"dll.pe.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"dll.pe.go_imports_names_var_entropy":{dashed_name:"dll-pe-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"dll.pe.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"dll.pe.go_stripped":{dashed_name:"dll-pe-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"dll.pe.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"pe",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"dll.pe.imphash":{dashed_name:"dll-pe-imphash",description:"A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",example:"0c6803c4e922103c4dca5963aad36ddf",flat_name:"dll.pe.imphash",ignore_above:1024,level:"extended",name:"imphash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"dll.pe.import_hash":{dashed_name:"dll-pe-import-hash",description:"A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"dll.pe.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"dll.pe.imports":{dashed_name:"dll-pe-imports",description:"List of imported element names and types.",flat_name:"dll.pe.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"pe",short:"List of imported element names and types.",type:"flattened"},"dll.pe.imports_names_entropy":{dashed_name:"dll-pe-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"dll.pe.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"dll.pe.imports_names_var_entropy":{dashed_name:"dll-pe-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"dll.pe.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"dll.pe.original_file_name":{dashed_name:"dll-pe-original-file-name",description:"Internal name of the file, provided at compile-time.",example:"MSPAINT.EXE",flat_name:"dll.pe.original_file_name",ignore_above:1024,level:"extended",name:"original_file_name",normalize:[],original_fieldset:"pe",short:"Internal name of the file, provided at compile-time.",type:"keyword"},"dll.pe.pehash":{dashed_name:"dll-pe-pehash",description:"A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.",example:"73ff189b63cd6be375a7ff25179a38d347651975",flat_name:"dll.pe.pehash",ignore_above:1024,level:"extended",name:"pehash",normalize:[],original_fieldset:"pe",short:"A hash of the PE header and data from one or more PE sections.",type:"keyword"},"dll.pe.product":{dashed_name:"dll-pe-product",description:"Internal product name of the file, provided at compile-time.",example:"Microsoft® Windows® Operating System",flat_name:"dll.pe.product",ignore_above:1024,level:"extended",name:"product",normalize:[],original_fieldset:"pe",short:"Internal product name of the file, provided at compile-time.",type:"keyword"},"dll.pe.sections":{dashed_name:"dll-pe-sections",description:"An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.",flat_name:"dll.pe.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"pe",short:"Section information of the PE file.",type:"nested"},"dll.pe.sections.entropy":{dashed_name:"dll-pe-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"dll.pe.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the section.",type:"long"},"dll.pe.sections.name":{dashed_name:"dll-pe-sections-name",description:"PE Section List name.",flat_name:"dll.pe.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"pe",short:"PE Section List name.",type:"keyword"},"dll.pe.sections.physical_size":{dashed_name:"dll-pe-sections-physical-size",description:"PE Section List physical size.",flat_name:"dll.pe.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"pe",short:"PE Section List physical size.",type:"long"},"dll.pe.sections.var_entropy":{dashed_name:"dll-pe-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"dll.pe.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"dll.pe.sections.virtual_size":{dashed_name:"dll-pe-sections-virtual-size",description:"PE Section List virtual size. This is always the same as `physical_size`.",flat_name:"dll.pe.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"pe",short:"PE Section List virtual size. This is always the same as `physical_size`.",type:"long"},"dns.answers":{dashed_name:"dns-answers",description:"An array containing an object for each answer section returned by the server.\nThe main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.\nNot all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields.",flat_name:"dns.answers",level:"extended",name:"answers",normalize:["array"],short:"Array of DNS answers.",type:"object"},"dns.answers.class":{dashed_name:"dns-answers-class",description:"The class of DNS data contained in this resource record.",example:"IN",flat_name:"dns.answers.class",ignore_above:1024,level:"extended",name:"answers.class",normalize:[],short:"The class of DNS data contained in this resource record.",type:"keyword"},"dns.answers.data":{dashed_name:"dns-answers-data",description:"The data describing the resource.\nThe meaning of this data depends on the type and class of the resource record.",example:"10.10.10.10",flat_name:"dns.answers.data",ignore_above:1024,level:"extended",name:"answers.data",normalize:[],short:"The data describing the resource.",type:"keyword"},"dns.answers.name":{dashed_name:"dns-answers-name",description:"The domain name to which this resource record pertains.\nIf a chain of CNAME is being resolved, each answer's `name` should be the one that corresponds with the answer's `data`. It should not simply be the original `question.name` repeated.",example:"www.example.com",flat_name:"dns.answers.name",ignore_above:1024,level:"extended",name:"answers.name",normalize:[],short:"The domain name to which this resource record pertains.",type:"keyword"},"dns.answers.ttl":{dashed_name:"dns-answers-ttl",description:"The time interval in seconds that this resource record may be cached before it should be discarded. Zero values mean that the data should not be cached.",example:180,flat_name:"dns.answers.ttl",level:"extended",name:"answers.ttl",normalize:[],short:"The time interval in seconds that this resource record may be cached before it should be discarded.",type:"long"},"dns.answers.type":{dashed_name:"dns-answers-type",description:"The type of data contained in this resource record.",example:"CNAME",flat_name:"dns.answers.type",ignore_above:1024,level:"extended",name:"answers.type",normalize:[],short:"The type of data contained in this resource record.",type:"keyword"},"dns.header_flags":{dashed_name:"dns-header-flags",description:"Array of 2 letter DNS header flags.",example:'["RD", "RA"]',expected_values:["AA","TC","RD","RA","AD","CD","DO"],flat_name:"dns.header_flags",ignore_above:1024,level:"extended",name:"header_flags",normalize:["array"],short:"Array of DNS header flags.",type:"keyword"},"dns.id":{dashed_name:"dns-id",description:"The DNS packet identifier assigned by the program that generated the query. The identifier is copied to the response.",example:62111,flat_name:"dns.id",ignore_above:1024,level:"extended",name:"id",normalize:[],short:"The DNS packet identifier assigned by the program that generated the query. The identifier is copied to the response.",type:"keyword"},"dns.op_code":{dashed_name:"dns-op-code",description:"The DNS operation code that specifies the kind of query in the message. This value is set by the originator of a query and copied into the response.",example:"QUERY",flat_name:"dns.op_code",ignore_above:1024,level:"extended",name:"op_code",normalize:[],short:"The DNS operation code that specifies the kind of query in the message.",type:"keyword"},"dns.question.class":{dashed_name:"dns-question-class",description:"The class of records being queried.",example:"IN",flat_name:"dns.question.class",ignore_above:1024,level:"extended",name:"question.class",normalize:[],short:"The class of records being queried.",type:"keyword"},"dns.question.name":{dashed_name:"dns-question-name",description:"The name being queried.\nIf the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \\t, \\r, and \\n respectively.",example:"www.example.com",flat_name:"dns.question.name",ignore_above:1024,level:"extended",name:"question.name",normalize:[],short:"The name being queried.",type:"keyword"},"dns.question.registered_domain":{dashed_name:"dns-question-registered-domain",description:'The highest registered domain, stripped of the subdomain.\nFor example, the registered domain for "foo.example.com" is "example.com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".',example:"example.com",flat_name:"dns.question.registered_domain",ignore_above:1024,level:"extended",name:"question.registered_domain",normalize:[],short:"The highest registered domain, stripped of the subdomain.",type:"keyword"},"dns.question.subdomain":{dashed_name:"dns-question-subdomain",description:'The subdomain is all of the labels under the registered_domain.\nIf the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.',example:"www",flat_name:"dns.question.subdomain",ignore_above:1024,level:"extended",name:"question.subdomain",normalize:[],short:"The subdomain of the domain.",type:"keyword"},"dns.question.top_level_domain":{dashed_name:"dns-question-top-level-domain",description:'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".',example:"co.uk",flat_name:"dns.question.top_level_domain",ignore_above:1024,level:"extended",name:"question.top_level_domain",normalize:[],short:"The effective top level domain (com, org, net, co.uk).",type:"keyword"},"dns.question.type":{dashed_name:"dns-question-type",description:"The type of record being queried.",example:"AAAA",flat_name:"dns.question.type",ignore_above:1024,level:"extended",name:"question.type",normalize:[],short:"The type of record being queried.",type:"keyword"},"dns.resolved_ip":{dashed_name:"dns-resolved-ip",description:"Array containing all IPs seen in `answers.data`.\nThe `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for.",example:'["10.10.10.10", "10.10.10.11"]',flat_name:"dns.resolved_ip",level:"extended",name:"resolved_ip",normalize:["array"],short:"Array containing all IPs seen in answers.data",type:"ip"},"dns.response_code":{dashed_name:"dns-response-code",description:"The DNS response code.",example:"NOERROR",flat_name:"dns.response_code",ignore_above:1024,level:"extended",name:"response_code",normalize:[],short:"The DNS response code.",type:"keyword"},"dns.type":{dashed_name:"dns-type",description:"The type of DNS event captured, query or answer.\nIf your source of DNS events only gives you DNS queries, you should only create dns events of type `dns.type:query`.\nIf your source of DNS events gives you answers as well, you should create one event per query (optionally as soon as the query is seen). And a second event containing all query details as well as an array of answers.",example:"answer",flat_name:"dns.type",ignore_above:1024,level:"extended",name:"type",normalize:[],short:"The type of DNS event captured, query or answer.",type:"keyword"},"ecs.version":{dashed_name:"ecs-version",description:"ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.\nWhen querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.",example:"1.0.0",flat_name:"ecs.version",ignore_above:1024,level:"core",name:"version",normalize:[],required:!0,short:"ECS version this event conforms to.",type:"keyword"},"email.attachments":{dashed_name:"email-attachments",description:"A list of objects describing the attachment files sent along with an email message.",flat_name:"email.attachments",level:"extended",name:"attachments",normalize:["array"],short:"List of objects describing the attachments.",type:"nested"},"email.attachments.file.extension":{dashed_name:"email-attachments-file-extension",description:"Attachment file extension, excluding the leading dot.",example:"txt",flat_name:"email.attachments.file.extension",ignore_above:1024,level:"extended",name:"attachments.file.extension",normalize:[],short:"Attachment file extension.",type:"keyword"},"email.attachments.file.hash.md5":{dashed_name:"email-attachments-file-hash-md5",description:"MD5 hash.",flat_name:"email.attachments.file.hash.md5",ignore_above:1024,level:"extended",name:"md5",normalize:[],original_fieldset:"hash",short:"MD5 hash.",type:"keyword"},"email.attachments.file.hash.sha1":{dashed_name:"email-attachments-file-hash-sha1",description:"SHA1 hash.",flat_name:"email.attachments.file.hash.sha1",ignore_above:1024,level:"extended",name:"sha1",normalize:[],original_fieldset:"hash",short:"SHA1 hash.",type:"keyword"},"email.attachments.file.hash.sha256":{dashed_name:"email-attachments-file-hash-sha256",description:"SHA256 hash.",flat_name:"email.attachments.file.hash.sha256",ignore_above:1024,level:"extended",name:"sha256",normalize:[],original_fieldset:"hash",short:"SHA256 hash.",type:"keyword"},"email.attachments.file.hash.sha384":{dashed_name:"email-attachments-file-hash-sha384",description:"SHA384 hash.",flat_name:"email.attachments.file.hash.sha384",ignore_above:1024,level:"extended",name:"sha384",normalize:[],original_fieldset:"hash",short:"SHA384 hash.",type:"keyword"},"email.attachments.file.hash.sha512":{dashed_name:"email-attachments-file-hash-sha512",description:"SHA512 hash.",flat_name:"email.attachments.file.hash.sha512",ignore_above:1024,level:"extended",name:"sha512",normalize:[],original_fieldset:"hash",short:"SHA512 hash.",type:"keyword"},"email.attachments.file.hash.ssdeep":{dashed_name:"email-attachments-file-hash-ssdeep",description:"SSDEEP hash.",flat_name:"email.attachments.file.hash.ssdeep",ignore_above:1024,level:"extended",name:"ssdeep",normalize:[],original_fieldset:"hash",short:"SSDEEP hash.",type:"keyword"},"email.attachments.file.hash.tlsh":{dashed_name:"email-attachments-file-hash-tlsh",description:"TLSH hash.",flat_name:"email.attachments.file.hash.tlsh",ignore_above:1024,level:"extended",name:"tlsh",normalize:[],original_fieldset:"hash",short:"TLSH hash.",type:"keyword"},"email.attachments.file.mime_type":{dashed_name:"email-attachments-file-mime-type",description:"The MIME media type of the attachment.\nThis value will typically be extracted from the `Content-Type` MIME header field.",example:"text/plain",flat_name:"email.attachments.file.mime_type",ignore_above:1024,level:"extended",name:"attachments.file.mime_type",normalize:[],short:"MIME type of the attachment file.",type:"keyword"},"email.attachments.file.name":{dashed_name:"email-attachments-file-name",description:"Name of the attachment file including the file extension.",example:"attachment.txt",flat_name:"email.attachments.file.name",ignore_above:1024,level:"extended",name:"attachments.file.name",normalize:[],short:"Name of the attachment file.",type:"keyword"},"email.attachments.file.size":{dashed_name:"email-attachments-file-size",description:"Attachment file size in bytes.",example:64329,flat_name:"email.attachments.file.size",level:"extended",name:"attachments.file.size",normalize:[],short:"Attachment file size.",type:"long"},"email.bcc.address":{dashed_name:"email-bcc-address",description:"The email address of BCC recipient",example:"bcc.user1@example.com",flat_name:"email.bcc.address",ignore_above:1024,level:"extended",name:"bcc.address",normalize:["array"],short:"Email address of BCC recipient",type:"keyword"},"email.cc.address":{dashed_name:"email-cc-address",description:"The email address of CC recipient",example:"cc.user1@example.com",flat_name:"email.cc.address",ignore_above:1024,level:"extended",name:"cc.address",normalize:["array"],short:"Email address of CC recipient",type:"keyword"},"email.content_type":{dashed_name:"email-content-type",description:"Information about how the message is to be displayed.\nTypically a MIME type.",example:"text/plain",flat_name:"email.content_type",ignore_above:1024,level:"extended",name:"content_type",normalize:[],short:"MIME type of the email message.",type:"keyword"},"email.delivery_timestamp":{dashed_name:"email-delivery-timestamp",description:"The date and time when the email message was received by the service or client.",example:"2020-11-10T22:12:34.8196921Z",flat_name:"email.delivery_timestamp",level:"extended",name:"delivery_timestamp",normalize:[],short:"Date and time when message was delivered.",type:"date"},"email.direction":{dashed_name:"email-direction",description:"The direction of the message based on the sending and receiving domains.",example:"inbound",flat_name:"email.direction",ignore_above:1024,level:"extended",name:"direction",normalize:[],short:"Direction of the message.",type:"keyword"},"email.from.address":{dashed_name:"email-from-address",description:"The email address of the sender, typically from the RFC 5322 `From:` header field.",example:"sender@example.com",flat_name:"email.from.address",ignore_above:1024,level:"extended",name:"from.address",normalize:["array"],short:"The sender's email address.",type:"keyword"},"email.local_id":{dashed_name:"email-local-id",description:"Unique identifier given to the email by the source that created the event.\nIdentifier is not persistent across hops.",example:"c26dbea0-80d5-463b-b93c-4e8b708219ce",flat_name:"email.local_id",ignore_above:1024,level:"extended",name:"local_id",normalize:[],short:"Unique identifier given by the source.",type:"keyword"},"email.message_id":{dashed_name:"email-message-id",description:"Identifier from the RFC 5322 `Message-ID:` email header that refers to a particular email message.",example:"81ce15$8r2j59@mail01.example.com",flat_name:"email.message_id",level:"extended",name:"message_id",normalize:[],short:"Value from the Message-ID header.",type:"wildcard"},"email.origination_timestamp":{dashed_name:"email-origination-timestamp",description:"The date and time the email message was composed. Many email clients will fill in this value automatically when the message is sent by a user.",example:"2020-11-10T22:12:34.8196921Z",flat_name:"email.origination_timestamp",level:"extended",name:"origination_timestamp",normalize:[],short:"Date and time the email was composed.",type:"date"},"email.reply_to.address":{dashed_name:"email-reply-to-address",description:"The address that replies should be delivered to based on the value in the RFC 5322 `Reply-To:` header.",example:"reply.here@example.com",flat_name:"email.reply_to.address",ignore_above:1024,level:"extended",name:"reply_to.address",normalize:["array"],short:"Address replies should be delivered to.",type:"keyword"},"email.sender.address":{dashed_name:"email-sender-address",description:"Per RFC 5322, specifies the address responsible for the actual transmission of the message.",flat_name:"email.sender.address",ignore_above:1024,level:"extended",name:"sender.address",normalize:[],short:"Address of the message sender.",type:"keyword"},"email.subject":{dashed_name:"email-subject",description:"A brief summary of the topic of the message.",example:"Please see this important message.",flat_name:"email.subject",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"email.subject.text",name:"text",type:"match_only_text"}],name:"subject",normalize:[],short:"The subject of the email message.",type:"keyword"},"email.to.address":{dashed_name:"email-to-address",description:"The email address of recipient",example:"user1@example.com",flat_name:"email.to.address",ignore_above:1024,level:"extended",name:"to.address",normalize:["array"],short:"Email address of recipient",type:"keyword"},"email.x_mailer":{dashed_name:"email-x-mailer",description:"The name of the application that was used to draft and send the original email message.",example:"Spambot v2.5",flat_name:"email.x_mailer",ignore_above:1024,level:"extended",name:"x_mailer",normalize:[],short:"Application that drafted email.",type:"keyword"},"error.code":{dashed_name:"error-code",description:"Error code describing the error.",flat_name:"error.code",ignore_above:1024,level:"core",name:"code",normalize:[],short:"Error code describing the error.",type:"keyword"},"error.id":{dashed_name:"error-id",description:"Unique identifier for the error.",flat_name:"error.id",ignore_above:1024,level:"core",name:"id",normalize:[],short:"Unique identifier for the error.",type:"keyword"},"error.message":{dashed_name:"error-message",description:"Error message.",flat_name:"error.message",level:"core",name:"message",normalize:[],short:"Error message.",type:"match_only_text"},"error.stack_trace":{dashed_name:"error-stack-trace",description:"The stack trace of this error in plain text.",flat_name:"error.stack_trace",level:"extended",multi_fields:[{flat_name:"error.stack_trace.text",name:"text",type:"match_only_text"}],name:"stack_trace",normalize:[],short:"The stack trace of this error in plain text.",type:"wildcard"},"error.type":{dashed_name:"error-type",description:"The type of the error, for example the class name of the exception.",example:"java.lang.NullPointerException",flat_name:"error.type",ignore_above:1024,level:"extended",name:"type",normalize:[],short:"The type of the error, for example the class name of the exception.",type:"keyword"},"event.action":{dashed_name:"event-action",description:"The action captured by the event.\nThis describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.",example:"user-password-change",flat_name:"event.action",ignore_above:1024,level:"core",name:"action",normalize:[],short:"The action captured by the event.",type:"keyword"},"event.agent_id_status":{dashed_name:"event-agent-id-status",description:"Agents are normally responsible for populating the `agent.id` field value. If the system receiving events is capable of validating the value based on authentication information for the client then this field can be used to reflect the outcome of that validation.\nFor example if the agent's connection is authenticated with mTLS and the client cert contains the ID of the agent to which the cert was issued then the `agent.id` value in events can be checked against the certificate. If the values match then `event.agent_id_status: verified` is added to the event, otherwise one of the other allowed values should be used.\nIf no validation is performed then the field should be omitted.\nThe allowed values are:\n`verified` - The `agent.id` field value matches expected value obtained from auth metadata.\n`mismatch` - The `agent.id` field value does not match the expected value obtained from auth metadata.\n`missing` - There was no `agent.id` field in the event to validate.\n`auth_metadata_missing` - There was no auth metadata or it was missing information about the agent ID.",example:"verified",flat_name:"event.agent_id_status",ignore_above:1024,level:"extended",name:"agent_id_status",normalize:[],short:"Validation status of the event's agent.id field.",type:"keyword"},"event.category":{allowed_values:[{description:"Events in this category annotate API calls that occured on a system. Typical sources for those events could be from the Operating System level through the native libraries (for example Windows Win32, Linux libc, etc.), or managed sources of events (such as ETW, syslog), but can also include network protocols (such as SOAP, RPC, Websocket, REST, etc.)",expected_event_types:["access","admin","allowed","change","creation","deletion","denied","end","info","start","user"],name:"api"},{description:"Events in this category are related to the challenge and response process in which credentials are supplied and verified to allow the creation of a session. Common sources for these logs are Windows event logs and ssh logs. Visualize and analyze events in this category to look for failed logins, and other authentication-related activity.",expected_event_types:["start","end","info"],name:"authentication"},{description:"Events in the configuration category have to deal with creating, modifying, or deleting the settings or parameters of an application, process, or system.\nExample sources include security policy change logs, configuration auditing logging, and system integrity monitoring.",expected_event_types:["access","change","creation","deletion","info"],name:"configuration"},{description:"The database category denotes events and metrics relating to a data storage and retrieval system. Note that use of this category is not limited to relational database systems. Examples include event logs from MS SQL, MySQL, Elasticsearch, MongoDB, etc. Use this category to visualize and analyze database activity such as accesses and changes.",expected_event_types:["access","change","info","error"],name:"database"},{description:"Events in the driver category have to do with operating system device drivers and similar software entities such as Windows drivers, kernel extensions, kernel modules, etc.\nUse events and metrics in this category to visualize and analyze driver-related activity and status on hosts.",expected_event_types:["change","end","info","start"],name:"driver"},{description:"This category is used for events relating to email messages, email attachments, and email network or protocol activity.\nEmails events can be produced by email security gateways, mail transfer agents, email cloud service providers, or mail server monitoring applications.",expected_event_types:["info"],name:"email"},{description:"Relating to a set of information that has been created on, or has existed on a filesystem. Use this category of events to visualize and analyze the creation, access, and deletions of files. Events in this category can come from both host-based and network-based sources. An example source of a network-based detection of a file transfer would be the Zeek file.log.",expected_event_types:["access","change","creation","deletion","info"],name:"file"},{description:'Use this category to visualize and analyze information such as host inventory or host lifecycle events.\nMost of the events in this category can usually be observed from the outside, such as from a hypervisor or a control plane\'s point of view. Some can also be seen from within, such as "start" or "end".\nNote that this category is for information about hosts themselves; it is not meant to capture activity "happening on a host".',expected_event_types:["access","change","end","info","start"],name:"host"},{description:"Identity and access management (IAM) events relating to users, groups, and administration. Use this category to visualize and analyze IAM-related logs and data from active directory, LDAP, Okta, Duo, and other IAM systems.",expected_event_types:["admin","change","creation","deletion","group","info","user"],name:"iam"},{description:"Relating to intrusion detections from IDS/IPS systems and functions, both network and host-based. Use this category to visualize and analyze intrusion detection alerts from systems such as Snort, Suricata, and Palo Alto threat detections.",expected_event_types:["allowed","denied","info"],name:"intrusion_detection"},{description:'Events in this category refer to the loading of a library, such as (dll / so / dynlib), into a process. Use this category to visualize and analyze library loading related activity on hosts.  Keep in mind that driver related activity will be captured under the "driver" category above.',expected_event_types:["start"],name:"library"},{description:"Malware detection events and alerts. Use this category to visualize and analyze malware detections from EDR/EPP systems such as Elastic Endpoint Security, Symantec Endpoint Protection, Crowdstrike, and network IDS/IPS systems such as Suricata, or other sources of malware-related events such as Palo Alto Networks threat logs and Wildfire logs.",expected_event_types:["info"],name:"malware"},{description:"Relating to all network activity, including network connection lifecycle, network traffic, and essentially any event that includes an IP address. Many events containing decoded network protocol transactions fit into this category. Use events in this category to visualize or analyze counts of network ports, protocols, addresses, geolocation information, etc.",expected_event_types:["access","allowed","connection","denied","end","info","protocol","start"],name:"network"},{description:"Relating to software packages installed on hosts. Use this category to visualize and analyze inventory of software installed on various hosts, or to determine host vulnerability in the absence of vulnerability scan data.",expected_event_types:["access","change","deletion","info","installation","start"],name:"package"},{description:"Use this category of events to visualize and analyze process-specific information such as lifecycle events or process ancestry.",expected_event_types:["access","change","end","info","start"],name:"process"},{description:"Having to do with settings and assets stored in the Windows registry. Use this category to visualize and analyze activity such as registry access and modifications.",expected_event_types:["access","change","creation","deletion"],name:"registry"},{description:"The session category is applied to events and metrics regarding logical persistent connections to hosts and services. Use this category to visualize and analyze interactive or automated persistent connections between assets. Data for this category may come from Windows Event logs, SSH logs, or stateless sessions such as HTTP cookie-based sessions, etc.",expected_event_types:["start","end","info"],name:"session"},{description:"Use this category to visualize and analyze events describing threat actors' targets, motives, or behaviors.",expected_event_types:["indicator"],name:"threat"},{description:"Relating to vulnerability scan results. Use this category to analyze vulnerabilities detected by Tenable, Qualys, internal scanners, and other vulnerability management sources.",expected_event_types:["info"],name:"vulnerability"},{description:"Relating to web server access. Use this category to create a dashboard of web server/proxy activity from apache, IIS, nginx web servers, etc. Note: events from network observers such as Zeek http log may also be included in this category.",expected_event_types:["access","error","info"],name:"web"}],dashed_name:"event-category",description:'This is one of four ECS Categorization Fields, and indicates the second level in the ECS category hierarchy.\n`event.category` represents the "big buckets" of ECS categories. For example, filtering on `event.category:process` yields all events relating to process activity. This field is closely related to `event.type`, which is used as a subcategory.\nThis field is an array. This will allow proper categorization of some events that fall in multiple categories.',example:"authentication",flat_name:"event.category",ignore_above:1024,level:"core",name:"category",normalize:["array"],short:"Event category. The second categorization field in the hierarchy.",type:"keyword"},"event.code":{dashed_name:"event-code",description:"Identification code for this event, if one exists.\nSome event sources use event codes to identify messages unambiguously, regardless of message language or wording adjustments over time. An example of this is the Windows Event ID.",example:4648,flat_name:"event.code",ignore_above:1024,level:"extended",name:"code",normalize:[],short:"Identification code for this event.",type:"keyword"},"event.created":{dashed_name:"event-created",description:"`event.created` contains the date/time when the event was first read by an agent, or by your pipeline.\nThis field is distinct from `@timestamp` in that `@timestamp` typically contain the time extracted from the original event.\nIn most situations, these two timestamps will be slightly different. The difference can be used to calculate the delay between your source generating an event, and the time when your agent first processed it. This can be used to monitor your agent's or pipeline's ability to keep up with your event source.\nIn case the two timestamps are identical, `@timestamp` should be used.",example:"2016-05-23T08:05:34.857Z",flat_name:"event.created",level:"core",name:"created",normalize:[],short:"Time when the event was first read by an agent or by your pipeline.",type:"date"},"event.dataset":{dashed_name:"event-dataset",description:"Name of the dataset.\nIf an event source publishes more than one type of log or events (e.g. access log, error log), the dataset is used to specify which one the event comes from.\nIt's recommended but not required to start the dataset name with the module name, followed by a dot, then the dataset name.",example:"apache.access",flat_name:"event.dataset",ignore_above:1024,level:"core",name:"dataset",normalize:[],short:"Name of the dataset.",type:"keyword"},"event.duration":{dashed_name:"event-duration",description:"Duration of the event in nanoseconds.\nIf `event.start` and `event.end` are known this value should be the difference between the end and start time.",flat_name:"event.duration",format:"duration",input_format:"nanoseconds",level:"core",name:"duration",normalize:[],output_format:"asMilliseconds",output_precision:1,short:"Duration of the event in nanoseconds.",type:"long"},"event.end":{dashed_name:"event-end",description:"`event.end` contains the date when the event ended or when the activity was last observed.",flat_name:"event.end",level:"extended",name:"end",normalize:[],short:"`event.end` contains the date when the event ended or when the activity was last observed.",type:"date"},"event.hash":{dashed_name:"event-hash",description:"Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity.",example:"123456789012345678901234567890ABCD",flat_name:"event.hash",ignore_above:1024,level:"extended",name:"hash",normalize:[],short:"Hash (perhaps logstash fingerprint) of raw field to be able to demonstrate log integrity.",type:"keyword"},"event.id":{dashed_name:"event-id",description:"Unique ID to describe the event.",example:"8a4f500d",flat_name:"event.id",ignore_above:1024,level:"core",name:"id",normalize:[],short:"Unique ID to describe the event.",type:"keyword"},"event.ingested":{dashed_name:"event-ingested",description:"Timestamp when an event arrived in the central data store.\nThis is different from `@timestamp`, which is when the event originally occurred.  It's also different from `event.created`, which is meant to capture the first time an agent saw the event.\nIn normal conditions, assuming no tampering, the timestamps should chronologically look like this: `@timestamp` < `event.created` < `event.ingested`.",example:"2016-05-23T08:05:35.101Z",flat_name:"event.ingested",level:"core",name:"ingested",normalize:[],short:"Timestamp when an event arrived in the central data store.",type:"date"},"event.kind":{allowed_values:[{description:"This value indicates an event such as an alert or notable event, triggered by a detection rule executing externally to the Elastic Stack.\n`event.kind:alert` is often populated for events coming from firewalls, intrusion detection systems, endpoint detection and response systems, and so on.\nThis value is not used by Elastic solutions for alert documents that are created by rules executing within the Kibana alerting framework.",name:"alert"},{beta:"This event categorization value is beta and subject to change.",description:"This value indicates events whose primary purpose is to store an inventory of assets/entities and their attributes. Assets/entities are objects (such as users and hosts) that are expected to be subjects of detailed analysis within the system.\nExamples include lists of user identities or accounts ingested from directory services such as Active Directory (AD), inventory of hosts pulled from configuration management databases (CMDB), and lists of cloud storage buckets pulled from cloud provider APIs.\nThis value is used by Elastic Security for asset management solutions. `event.kind: asset` is not used for normal system events or logs that are coming from an asset/entity, nor is it used for system events or logs coming from a directory or CMDB system.",name:"asset"},{description:"The `enrichment` value indicates an event collected to provide additional context, often to other events.\nAn example is collecting indicators of compromise (IOCs) from a threat intelligence provider with the intent to use those values to enrich other events. The IOC events from the intelligence provider should be categorized as `event.kind:enrichment`.",name:"enrichment"},{description:"This value is the most general and most common value for this field. It is used to represent events that indicate that something happened.",name:"event"},{description:"This value is used to indicate that this event describes a numeric measurement taken at given point in time.\nExamples include CPU utilization, memory usage, or device temperature.\nMetric events are often collected on a predictable frequency, such as once every few seconds, or once a minute, but can also be used to describe ad-hoc numeric metric queries.",name:"metric"},{description:"The state value is similar to metric, indicating that this event describes a measurement taken at given point in time, except that the measurement does not result in a numeric value, but rather one of a fixed set of categorical values that represent conditions or states.\nExamples include periodic events reporting Elasticsearch cluster state (green/yellow/red), the state of a TCP connection (open, closed, fin_wait, etc.), the state of a host with respect to a software vulnerability (vulnerable, not vulnerable), and the state of a system regarding compliance with a regulatory standard (compliant, not compliant).\nNote that an event that describes a change of state would not use `event.kind:state`, but instead would use 'event.kind:event' since a state change fits the more general event definition of something that happened.\nState events are often collected on a predictable frequency, such as once every few seconds, once a minute, once an hour, or once a day, but can also be used to describe ad-hoc state queries.",name:"state"},{description:"This value indicates that an error occurred during the ingestion of this event, and that event data may be missing, inconsistent, or incorrect. `event.kind:pipeline_error` is often associated with parsing errors.",name:"pipeline_error"},{description:'This value is used by Elastic solutions (e.g., Security, Observability) for alert documents that are created by rules executing within the Kibana alerting framework.\nUsage of this value is reserved, and data ingestion pipelines must not populate `event.kind` with the value "signal".',name:"signal"}],dashed_name:"event-kind",description:"This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy.\n`event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events.\nThe value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data is coming in at a regular interval or not.",example:"alert",flat_name:"event.kind",ignore_above:1024,level:"core",name:"kind",normalize:[],short:"The kind of the event. The highest categorization field in the hierarchy.",type:"keyword"},"event.module":{dashed_name:"event-module",description:"Name of the module this data is coming from.\nIf your monitoring agent supports the concept of modules or plugins to process events of a given source (e.g. Apache logs), `event.module` should contain the name of this module.",example:"apache",flat_name:"event.module",ignore_above:1024,level:"core",name:"module",normalize:[],short:"Name of the module this data is coming from.",type:"keyword"},"event.original":{dashed_name:"event-original",description:"Raw text message of entire event. Used to demonstrate log integrity or where the full log message (before splitting it up in multiple parts) may be required, e.g. for reindex.\nThis field is not indexed and doc_values are disabled. It cannot be searched, but it can be retrieved from `_source`. If users wish to override this and index this field, please see `Field data types` in the `Elasticsearch Reference`.",doc_values:!1,example:"Sep 19 08:26:10 host CEF:0&#124;Security&#124; threatmanager&#124;1.0&#124;100&#124; worm successfully stopped&#124;10&#124;src=10.0.0.1 dst=2.1.2.2spt=1232",flat_name:"event.original",index:!1,level:"core",name:"original",normalize:[],short:"Raw text message of entire event.",type:"keyword"},"event.outcome":{allowed_values:[{description:"Indicates that this event describes a failed result. A common example is `event.category:file AND event.type:access AND event.outcome:failure` to indicate that a file access was attempted, but was not successful.",name:"failure"},{description:"Indicates that this event describes a successful result. A common example is `event.category:file AND event.type:create AND event.outcome:success` to indicate that a file was successfully created.",name:"success"},{description:"Indicates that this event describes only an attempt for which the result is unknown from the perspective of the event producer. For example, if the event contains information only about the request side of a transaction that results in a response, populating `event.outcome:unknown` in the request event is appropriate. The unknown value should not be used when an outcome doesn't make logical sense for the event. In such cases `event.outcome` should not be populated.",name:"unknown"}],dashed_name:"event-outcome",description:"This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy.\n`event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.\nNote that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.\nAlso note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.\nFurther note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.",example:"success",flat_name:"event.outcome",ignore_above:1024,level:"core",name:"outcome",normalize:[],short:"The outcome of the event. The lowest level categorization field in the hierarchy.",type:"keyword"},"event.provider":{dashed_name:"event-provider",description:"Source of the event.\nEvent transports such as Syslog or the Windows Event Log typically mention the source of an event. It can be the name of the software that generated the event (e.g. Sysmon, httpd), or of a subsystem of the operating system (kernel, Microsoft-Windows-Security-Auditing).",example:"kernel",flat_name:"event.provider",ignore_above:1024,level:"extended",name:"provider",normalize:[],short:"Source of the event.",type:"keyword"},"event.reason":{dashed_name:"event-reason",description:"Reason why this event happened, according to the source.\nThis describes the why of a particular action or outcome captured in the event. Where `event.action` captures the action from the event, `event.reason` describes why that action was taken. For example, a web proxy with an `event.action` which denied the request may also populate `event.reason` with the reason why (e.g. `blocked site`).",example:"Terminated an unexpected process",flat_name:"event.reason",ignore_above:1024,level:"extended",name:"reason",normalize:[],short:"Reason why this event happened, according to the source",type:"keyword"},"event.reference":{dashed_name:"event-reference",description:"Reference URL linking to additional information about this event.\nThis URL links to a static definition of this event. Alert events, indicated by `event.kind:alert`, are a common use case for this field.",example:"https://system.example.com/event/#0001234",flat_name:"event.reference",ignore_above:1024,level:"extended",name:"reference",normalize:[],short:"Event reference URL",type:"keyword"},"event.risk_score":{dashed_name:"event-risk-score",description:"Risk score or priority of the event (e.g. security solutions). Use your system's original value here.",flat_name:"event.risk_score",level:"core",name:"risk_score",normalize:[],short:"Risk score or priority of the event (e.g. security solutions). Use your system's original value here.",type:"float"},"event.risk_score_norm":{dashed_name:"event-risk-score-norm",description:"Normalized risk score or priority of the event, on a scale of 0 to 100.\nThis is mainly useful if you use more than one system that assigns risk scores, and you want to see a normalized value across all systems.",flat_name:"event.risk_score_norm",level:"extended",name:"risk_score_norm",normalize:[],short:"Normalized risk score or priority of the event (0-100).",type:"float"},"event.sequence":{dashed_name:"event-sequence",description:"Sequence number of the event.\nThe sequence number is a value published by some event sources, to make the exact ordering of events unambiguous, regardless of the timestamp precision.",flat_name:"event.sequence",format:"string",level:"extended",name:"sequence",normalize:[],short:"Sequence number of the event.",type:"long"},"event.severity":{dashed_name:"event-severity",description:"The numeric severity of the event according to your event source.\nWhat the different severity values mean can be different between sources and use cases. It's up to the implementer to make sure severities are consistent across events from the same source.\nThe Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.",example:7,flat_name:"event.severity",format:"string",level:"core",name:"severity",normalize:[],short:"Numeric severity of the event.",type:"long"},"event.start":{dashed_name:"event-start",description:"`event.start` contains the date when the event started or when the activity was first observed.",flat_name:"event.start",level:"extended",name:"start",normalize:[],short:"`event.start` contains the date when the event started or when the activity was first observed.",type:"date"},"event.timezone":{dashed_name:"event-timezone",description:'This field should be populated when the event\'s timestamp does not include timezone information already (e.g. default Syslog timestamps). It\'s optional otherwise.\nAcceptable timezone formats are: a canonical ID (e.g. "Europe/Amsterdam"), abbreviated (e.g. "EST") or an HH:mm differential (e.g. "-05:00").',flat_name:"event.timezone",ignore_above:1024,level:"extended",name:"timezone",normalize:[],short:"Event time zone.",type:"keyword"},"event.type":{allowed_values:[{description:"The access event type is used for the subset of events within a category that indicate that something was accessed. Common examples include `event.category:database AND event.type:access`, or `event.category:file AND event.type:access`. Note for file access, both directory listings and file opens should be included in this subcategory. You can further distinguish access operations using the ECS `event.action` field.",name:"access"},{description:"The admin event type is used for the subset of events within a category that are related to admin objects. For example, administrative changes within an IAM framework that do not specifically affect a user or group (e.g., adding new applications to a federation solution or connecting discrete forests in Active Directory) would fall into this subcategory. Common example: `event.category:iam AND event.type:change AND event.type:admin`. You can further distinguish admin operations using the ECS `event.action` field.",name:"admin"},{description:'The allowed event type is used for the subset of events within a category that indicate that something was allowed. Common examples include `event.category:network AND event.type:connection AND event.type:allowed` (to indicate a network firewall event for which the firewall disposition was to allow the connection to complete) and `event.category:intrusion_detection AND event.type:allowed` (to indicate a network intrusion prevention system event for which the IPS disposition was to allow the connection to complete). You can further distinguish allowed operations using the ECS `event.action` field, populating with values of your choosing, such as "allow", "detect", or "pass".',name:"allowed"},{description:"The change event type is used for the subset of events within a category that indicate that something has changed. If semantics best describe an event as modified, then include them in this subcategory. Common examples include `event.category:process AND event.type:change`, and `event.category:file AND event.type:change`. You can further distinguish change operations using the ECS `event.action` field.",name:"change"},{description:'Used primarily with `event.category:network` this value is used for the subset of network traffic that includes sufficient information for the event to be included in flow or connection analysis. Events in this subcategory will contain at least source and destination IP addresses, source and destination TCP/UDP ports, and will usually contain counts of bytes and/or packets transferred. Events in this subcategory may contain unidirectional or bidirectional information, including summary information. Use this subcategory to visualize and analyze network connections. Flow analysis, including Netflow, IPFIX, and other flow-related events fit in this subcategory. Note that firewall events from many Next-Generation Firewall (NGFW) devices will also fit into this subcategory.  A common filter for flow/connection information would be `event.category:network AND event.type:connection AND event.type:end` (to view or analyze all completed network connections, ignoring mid-flow reports). You can further distinguish connection events using the ECS `event.action` field, populating with values of your choosing, such as "timeout", or "reset".',name:"connection"},{description:'The "creation" event type is used for the subset of events within a category that indicate that something was created. A common example is `event.category:file AND event.type:creation`.',name:"creation"},{description:"The deletion event type is used for the subset of events within a category that indicate that something was deleted. A common example is `event.category:file AND event.type:deletion` to indicate that a file has been deleted.",name:"deletion"},{description:'The denied event type is used for the subset of events within a category that indicate that something was denied. Common examples include `event.category:network AND event.type:denied` (to indicate a network firewall event for which the firewall disposition was to deny the connection) and `event.category:intrusion_detection AND event.type:denied` (to indicate a network intrusion prevention system event for which the IPS disposition was to deny the connection to complete). You can further distinguish denied operations using the ECS `event.action` field, populating with values of your choosing, such as "blocked", "dropped", or "quarantined".',name:"denied"},{description:"The end event type is used for the subset of events within a category that indicate something has ended. A common example is `event.category:process AND event.type:end`.",name:"end"},{description:"The error event type is used for the subset of events within a category that indicate or describe an error. A common example is `event.category:database AND event.type:error`. Note that pipeline errors that occur during the event ingestion process should not use this `event.type` value. Instead, they should use `event.kind:pipeline_error`.",name:"error"},{description:"The group event type is used for the subset of events within a category that are related to group objects. Common example: `event.category:iam AND event.type:creation AND event.type:group`. You can further distinguish group operations using the ECS `event.action` field.",name:"group"},{description:"The indicator event type is used for the subset of events within a category that contain details about indicators of compromise (IOCs).\nA common example is `event.category:threat AND event.type:indicator`.",name:"indicator"},{description:'The info event type is used for the subset of events within a category that indicate that they are purely informational, and don\'t report a state change, or any type of action. For example, an initial run of a file integrity monitoring system (FIM), where an agent reports all files under management, would fall into the "info" subcategory. Similarly, an event containing a dump of all currently running processes (as opposed to reporting that a process started/ended) would fall into the "info" subcategory. An additional common examples is `event.category:intrusion_detection AND event.type:info`.',name:"info"},{description:"The installation event type is used for the subset of events within a category that indicate that something was installed. A common example is `event.category:package` AND `event.type:installation`.",name:"installation"},{description:"The protocol event type is used for the subset of events within a category that indicate that they contain protocol details or analysis, beyond simply identifying the protocol. Generally, network events that contain specific protocol details will fall into this subcategory. A common example is `event.category:network AND event.type:protocol AND event.type:connection AND event.type:end` (to indicate that the event is a network connection event sent at the end of a connection that also includes a protocol detail breakdown). Note that events that only indicate the name or id of the protocol should not use the protocol value. Further note that when the protocol subcategory is used, the identified protocol is populated in the ECS `network.protocol` field.",name:"protocol"},{description:"The start event type is used for the subset of events within a category that indicate something has started. A common example is `event.category:process AND event.type:start`.",name:"start"},{description:"The user event type is used for the subset of events within a category that are related to user objects. Common example: `event.category:iam AND event.type:deletion AND event.type:user`. You can further distinguish user operations using the ECS `event.action` field.",name:"user"}],dashed_name:"event-type",description:'This is one of four ECS Categorization Fields, and indicates the third level in the ECS category hierarchy.\n`event.type` represents a categorization "sub-bucket" that, when used along with the `event.category` field values, enables filtering events down to a level appropriate for single visualization.\nThis field is an array. This will allow proper categorization of some events that fall in multiple event types.',flat_name:"event.type",ignore_above:1024,level:"core",name:"type",normalize:["array"],short:"Event type. The third categorization field in the hierarchy.",type:"keyword"},"event.url":{dashed_name:"event-url",description:"URL linking to an external system to continue investigation of this event.\nThis URL links to another system where in-depth investigation of the specific occurrence of this event can take place. Alert events, indicated by `event.kind:alert`, are a common use case for this field.",example:"https://mysystem.example.com/alert/5271dedb-f5b0-4218-87f0-4ac4870a38fe",flat_name:"event.url",ignore_above:1024,level:"extended",name:"url",normalize:[],short:"Event investigation URL",type:"keyword"},"faas.coldstart":{dashed_name:"faas-coldstart",description:"Boolean value indicating a cold start of a function.",flat_name:"faas.coldstart",level:"extended",name:"coldstart",normalize:[],short:"Boolean value indicating a cold start of a function.",type:"boolean"},"faas.execution":{dashed_name:"faas-execution",description:"The execution ID of the current function execution.",example:"af9d5aa4-a685-4c5f-a22b-444f80b3cc28",flat_name:"faas.execution",ignore_above:1024,level:"extended",name:"execution",normalize:[],short:"The execution ID of the current function execution.",type:"keyword"},"faas.id":{dashed_name:"faas-id",description:"The unique identifier of a serverless function.\nFor AWS Lambda it's the function ARN (Amazon Resource Name) without a version or alias suffix.",example:"arn:aws:lambda:us-west-2:123456789012:function:my-function",flat_name:"faas.id",ignore_above:1024,level:"extended",name:"id",normalize:[],short:"The unique identifier of a serverless function.",type:"keyword"},"faas.name":{dashed_name:"faas-name",description:"The name of a serverless function.",example:"my-function",flat_name:"faas.name",ignore_above:1024,level:"extended",name:"name",normalize:[],short:"The name of a serverless function.",type:"keyword"},"faas.trigger.request_id":{dashed_name:"faas-trigger-request-id",description:"The ID of the trigger request , message, event, etc.",example:123456789,flat_name:"faas.trigger.request_id",ignore_above:1024,level:"extended",name:"trigger.request_id",normalize:[],short:"The ID of the trigger request , message, event, etc.",type:"keyword"},"faas.trigger.type":{dashed_name:"faas-trigger-type",description:"The trigger for the function execution.",example:"http",expected_values:["http","pubsub","datasource","timer","other"],flat_name:"faas.trigger.type",ignore_above:1024,level:"extended",name:"trigger.type",normalize:[],short:"The trigger for the function execution.",type:"keyword"},"faas.version":{dashed_name:"faas-version",description:"The version of a serverless function.",example:"123",flat_name:"faas.version",ignore_above:1024,level:"extended",name:"version",normalize:[],short:"The version of a serverless function.",type:"keyword"},"file.accessed":{dashed_name:"file-accessed",description:"Last time the file was accessed.\nNote that not all filesystems keep track of access time.",flat_name:"file.accessed",level:"extended",name:"accessed",normalize:[],short:"Last time the file was accessed.",type:"date"},"file.attributes":{dashed_name:"file-attributes",description:"Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.",example:'["readonly", "system"]',flat_name:"file.attributes",ignore_above:1024,level:"extended",name:"attributes",normalize:["array"],short:"Array of file attributes.",type:"keyword"},"file.code_signature.digest_algorithm":{dashed_name:"file-code-signature-digest-algorithm",description:"The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",example:"sha256",flat_name:"file.code_signature.digest_algorithm",ignore_above:1024,level:"extended",name:"digest_algorithm",normalize:[],original_fieldset:"code_signature",short:"Hashing algorithm used to sign the process.",type:"keyword"},"file.code_signature.exists":{dashed_name:"file-code-signature-exists",description:"Boolean to capture if a signature is present.",example:"true",flat_name:"file.code_signature.exists",level:"core",name:"exists",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if a signature is present.",type:"boolean"},"file.code_signature.signing_id":{dashed_name:"file-code-signature-signing-id",description:"The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",example:"com.apple.xpc.proxy",flat_name:"file.code_signature.signing_id",ignore_above:1024,level:"extended",name:"signing_id",normalize:[],original_fieldset:"code_signature",short:"The identifier used to sign the process.",type:"keyword"},"file.code_signature.status":{dashed_name:"file-code-signature-status",description:"Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",example:"ERROR_UNTRUSTED_ROOT",flat_name:"file.code_signature.status",ignore_above:1024,level:"extended",name:"status",normalize:[],original_fieldset:"code_signature",short:"Additional information about the certificate status.",type:"keyword"},"file.code_signature.subject_name":{dashed_name:"file-code-signature-subject-name",description:"Subject name of the code signer",example:"Microsoft Corporation",flat_name:"file.code_signature.subject_name",ignore_above:1024,level:"core",name:"subject_name",normalize:[],original_fieldset:"code_signature",short:"Subject name of the code signer",type:"keyword"},"file.code_signature.team_id":{dashed_name:"file-code-signature-team-id",description:"The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",example:"EQHXZ8M8AV",flat_name:"file.code_signature.team_id",ignore_above:1024,level:"extended",name:"team_id",normalize:[],original_fieldset:"code_signature",short:"The team identifier used to sign the process.",type:"keyword"},"file.code_signature.timestamp":{dashed_name:"file-code-signature-timestamp",description:"Date and time when the code signature was generated and signed.",example:"2021-01-01T12:10:30Z",flat_name:"file.code_signature.timestamp",level:"extended",name:"timestamp",normalize:[],original_fieldset:"code_signature",short:"When the signature was generated and signed.",type:"date"},"file.code_signature.trusted":{dashed_name:"file-code-signature-trusted",description:"Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",example:"true",flat_name:"file.code_signature.trusted",level:"extended",name:"trusted",normalize:[],original_fieldset:"code_signature",short:"Stores the trust status of the certificate chain.",type:"boolean"},"file.code_signature.valid":{dashed_name:"file-code-signature-valid",description:"Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",example:"true",flat_name:"file.code_signature.valid",level:"extended",name:"valid",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if the digital signature is verified against the binary content.",type:"boolean"},"file.created":{dashed_name:"file-created",description:"File creation time.\nNote that not all filesystems store the creation time.",flat_name:"file.created",level:"extended",name:"created",normalize:[],short:"File creation time.",type:"date"},"file.ctime":{dashed_name:"file-ctime",description:"Last time the file attributes or metadata changed.\nNote that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.",flat_name:"file.ctime",level:"extended",name:"ctime",normalize:[],short:"Last time the file attributes or metadata changed.",type:"date"},"file.device":{dashed_name:"file-device",description:"Device that is the source of the file.",example:"sda",flat_name:"file.device",ignore_above:1024,level:"extended",name:"device",normalize:[],short:"Device that is the source of the file.",type:"keyword"},"file.directory":{dashed_name:"file-directory",description:"Directory where the file is located. It should include the drive letter, when appropriate.",example:"/home/alice",flat_name:"file.directory",ignore_above:1024,level:"extended",name:"directory",normalize:[],short:"Directory where the file is located.",type:"keyword"},"file.drive_letter":{dashed_name:"file-drive-letter",description:"Drive letter where the file is located. This field is only relevant on Windows.\nThe value should be uppercase, and not include the colon.",example:"C",flat_name:"file.drive_letter",ignore_above:1,level:"extended",name:"drive_letter",normalize:[],short:"Drive letter where the file is located.",type:"keyword"},"file.elf.architecture":{dashed_name:"file-elf-architecture",description:"Machine architecture of the ELF file.",example:"x86-64",flat_name:"file.elf.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"elf",short:"Machine architecture of the ELF file.",type:"keyword"},"file.elf.byte_order":{dashed_name:"file-elf-byte-order",description:"Byte sequence of ELF file.",example:"Little Endian",flat_name:"file.elf.byte_order",ignore_above:1024,level:"extended",name:"byte_order",normalize:[],original_fieldset:"elf",short:"Byte sequence of ELF file.",type:"keyword"},"file.elf.cpu_type":{dashed_name:"file-elf-cpu-type",description:"CPU type of the ELF file.",example:"Intel",flat_name:"file.elf.cpu_type",ignore_above:1024,level:"extended",name:"cpu_type",normalize:[],original_fieldset:"elf",short:"CPU type of the ELF file.",type:"keyword"},"file.elf.creation_date":{dashed_name:"file-elf-creation-date",description:"Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",flat_name:"file.elf.creation_date",level:"extended",name:"creation_date",normalize:[],original_fieldset:"elf",short:"Build or compile date.",type:"date"},"file.elf.exports":{dashed_name:"file-elf-exports",description:"List of exported element names and types.",flat_name:"file.elf.exports",level:"extended",name:"exports",normalize:["array"],original_fieldset:"elf",short:"List of exported element names and types.",type:"flattened"},"file.elf.go_import_hash":{dashed_name:"file-elf-go-import-hash",description:"A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"file.elf.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the Go language imports in an ELF file.",type:"keyword"},"file.elf.go_imports":{dashed_name:"file-elf-go-imports",description:"List of imported Go language element names and types.",flat_name:"file.elf.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"elf",short:"List of imported Go language element names and types.",type:"flattened"},"file.elf.go_imports_names_entropy":{dashed_name:"file-elf-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"file.elf.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"file.elf.go_imports_names_var_entropy":{dashed_name:"file-elf-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"file.elf.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"file.elf.go_stripped":{dashed_name:"file-elf-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"file.elf.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"elf",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"file.elf.header.abi_version":{dashed_name:"file-elf-header-abi-version",description:"Version of the ELF Application Binary Interface (ABI).",flat_name:"file.elf.header.abi_version",ignore_above:1024,level:"extended",name:"header.abi_version",normalize:[],original_fieldset:"elf",short:"Version of the ELF Application Binary Interface (ABI).",type:"keyword"},"file.elf.header.class":{dashed_name:"file-elf-header-class",description:"Header class of the ELF file.",flat_name:"file.elf.header.class",ignore_above:1024,level:"extended",name:"header.class",normalize:[],original_fieldset:"elf",short:"Header class of the ELF file.",type:"keyword"},"file.elf.header.data":{dashed_name:"file-elf-header-data",description:"Data table of the ELF header.",flat_name:"file.elf.header.data",ignore_above:1024,level:"extended",name:"header.data",normalize:[],original_fieldset:"elf",short:"Data table of the ELF header.",type:"keyword"},"file.elf.header.entrypoint":{dashed_name:"file-elf-header-entrypoint",description:"Header entrypoint of the ELF file.",flat_name:"file.elf.header.entrypoint",format:"string",level:"extended",name:"header.entrypoint",normalize:[],original_fieldset:"elf",short:"Header entrypoint of the ELF file.",type:"long"},"file.elf.header.object_version":{dashed_name:"file-elf-header-object-version",description:'"0x1" for original ELF files.',flat_name:"file.elf.header.object_version",ignore_above:1024,level:"extended",name:"header.object_version",normalize:[],original_fieldset:"elf",short:'"0x1" for original ELF files.',type:"keyword"},"file.elf.header.os_abi":{dashed_name:"file-elf-header-os-abi",description:"Application Binary Interface (ABI) of the Linux OS.",flat_name:"file.elf.header.os_abi",ignore_above:1024,level:"extended",name:"header.os_abi",normalize:[],original_fieldset:"elf",short:"Application Binary Interface (ABI) of the Linux OS.",type:"keyword"},"file.elf.header.type":{dashed_name:"file-elf-header-type",description:"Header type of the ELF file.",flat_name:"file.elf.header.type",ignore_above:1024,level:"extended",name:"header.type",normalize:[],original_fieldset:"elf",short:"Header type of the ELF file.",type:"keyword"},"file.elf.header.version":{dashed_name:"file-elf-header-version",description:"Version of the ELF header.",flat_name:"file.elf.header.version",ignore_above:1024,level:"extended",name:"header.version",normalize:[],original_fieldset:"elf",short:"Version of the ELF header.",type:"keyword"},"file.elf.import_hash":{dashed_name:"file-elf-import-hash",description:"A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"file.elf.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the imports in an ELF file.",type:"keyword"},"file.elf.imports":{dashed_name:"file-elf-imports",description:"List of imported element names and types.",flat_name:"file.elf.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"elf",short:"List of imported element names and types.",type:"flattened"},"file.elf.imports_names_entropy":{dashed_name:"file-elf-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"file.elf.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"file.elf.imports_names_var_entropy":{dashed_name:"file-elf-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"file.elf.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"file.elf.sections":{dashed_name:"file-elf-sections",description:"An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",flat_name:"file.elf.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"elf",short:"Section information of the ELF file.",type:"nested"},"file.elf.sections.chi2":{dashed_name:"file-elf-sections-chi2",description:"Chi-square probability distribution of the section.",flat_name:"file.elf.sections.chi2",format:"number",level:"extended",name:"sections.chi2",normalize:[],original_fieldset:"elf",short:"Chi-square probability distribution of the section.",type:"long"},"file.elf.sections.entropy":{dashed_name:"file-elf-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"file.elf.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the section.",type:"long"},"file.elf.sections.flags":{dashed_name:"file-elf-sections-flags",description:"ELF Section List flags.",flat_name:"file.elf.sections.flags",ignore_above:1024,level:"extended",name:"sections.flags",normalize:[],original_fieldset:"elf",short:"ELF Section List flags.",type:"keyword"},"file.elf.sections.name":{dashed_name:"file-elf-sections-name",description:"ELF Section List name.",flat_name:"file.elf.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"elf",short:"ELF Section List name.",type:"keyword"},"file.elf.sections.physical_offset":{dashed_name:"file-elf-sections-physical-offset",description:"ELF Section List offset.",flat_name:"file.elf.sections.physical_offset",ignore_above:1024,level:"extended",name:"sections.physical_offset",normalize:[],original_fieldset:"elf",short:"ELF Section List offset.",type:"keyword"},"file.elf.sections.physical_size":{dashed_name:"file-elf-sections-physical-size",description:"ELF Section List physical size.",flat_name:"file.elf.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"elf",short:"ELF Section List physical size.",type:"long"},"file.elf.sections.type":{dashed_name:"file-elf-sections-type",description:"ELF Section List type.",flat_name:"file.elf.sections.type",ignore_above:1024,level:"extended",name:"sections.type",normalize:[],original_fieldset:"elf",short:"ELF Section List type.",type:"keyword"},"file.elf.sections.var_entropy":{dashed_name:"file-elf-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"file.elf.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"file.elf.sections.virtual_address":{dashed_name:"file-elf-sections-virtual-address",description:"ELF Section List virtual address.",flat_name:"file.elf.sections.virtual_address",format:"string",level:"extended",name:"sections.virtual_address",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual address.",type:"long"},"file.elf.sections.virtual_size":{dashed_name:"file-elf-sections-virtual-size",description:"ELF Section List virtual size.",flat_name:"file.elf.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual size.",type:"long"},"file.elf.segments":{dashed_name:"file-elf-segments",description:"An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",flat_name:"file.elf.segments",level:"extended",name:"segments",normalize:["array"],original_fieldset:"elf",short:"ELF object segment list.",type:"nested"},"file.elf.segments.sections":{dashed_name:"file-elf-segments-sections",description:"ELF object segment sections.",flat_name:"file.elf.segments.sections",ignore_above:1024,level:"extended",name:"segments.sections",normalize:[],original_fieldset:"elf",short:"ELF object segment sections.",type:"keyword"},"file.elf.segments.type":{dashed_name:"file-elf-segments-type",description:"ELF object segment type.",flat_name:"file.elf.segments.type",ignore_above:1024,level:"extended",name:"segments.type",normalize:[],original_fieldset:"elf",short:"ELF object segment type.",type:"keyword"},"file.elf.shared_libraries":{dashed_name:"file-elf-shared-libraries",description:"List of shared libraries used by this ELF object.",flat_name:"file.elf.shared_libraries",ignore_above:1024,level:"extended",name:"shared_libraries",normalize:["array"],original_fieldset:"elf",short:"List of shared libraries used by this ELF object.",type:"keyword"},"file.elf.telfhash":{dashed_name:"file-elf-telfhash",description:"telfhash symbol hash for ELF file.",flat_name:"file.elf.telfhash",ignore_above:1024,level:"extended",name:"telfhash",normalize:[],original_fieldset:"elf",short:"telfhash hash for ELF file.",type:"keyword"},"file.extension":{dashed_name:"file-extension",description:'File extension, excluding the leading dot.\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").',example:"png",flat_name:"file.extension",ignore_above:1024,level:"extended",name:"extension",normalize:[],short:"File extension, excluding the leading dot.",type:"keyword"},"file.fork_name":{dashed_name:"file-fork-name",description:"A fork is additional data associated with a filesystem object.\nOn Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\nOn NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: `C:\\path\\to\\filename.extension:some_fork_name`, and `some_fork_name` is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name.",example:"Zone.Identifer",flat_name:"file.fork_name",ignore_above:1024,level:"extended",name:"fork_name",normalize:[],short:"A fork is additional data associated with a filesystem object.",type:"keyword"},"file.gid":{dashed_name:"file-gid",description:"Primary group ID (GID) of the file.",example:"1001",flat_name:"file.gid",ignore_above:1024,level:"extended",name:"gid",normalize:[],short:"Primary group ID (GID) of the file.",type:"keyword"},"file.group":{dashed_name:"file-group",description:"Primary group name of the file.",example:"alice",flat_name:"file.group",ignore_above:1024,level:"extended",name:"group",normalize:[],short:"Primary group name of the file.",type:"keyword"},"file.hash.md5":{dashed_name:"file-hash-md5",description:"MD5 hash.",flat_name:"file.hash.md5",ignore_above:1024,level:"extended",name:"md5",normalize:[],original_fieldset:"hash",short:"MD5 hash.",type:"keyword"},"file.hash.sha1":{dashed_name:"file-hash-sha1",description:"SHA1 hash.",flat_name:"file.hash.sha1",ignore_above:1024,level:"extended",name:"sha1",normalize:[],original_fieldset:"hash",short:"SHA1 hash.",type:"keyword"},"file.hash.sha256":{dashed_name:"file-hash-sha256",description:"SHA256 hash.",flat_name:"file.hash.sha256",ignore_above:1024,level:"extended",name:"sha256",normalize:[],original_fieldset:"hash",short:"SHA256 hash.",type:"keyword"},"file.hash.sha384":{dashed_name:"file-hash-sha384",description:"SHA384 hash.",flat_name:"file.hash.sha384",ignore_above:1024,level:"extended",name:"sha384",normalize:[],original_fieldset:"hash",short:"SHA384 hash.",type:"keyword"},"file.hash.sha512":{dashed_name:"file-hash-sha512",description:"SHA512 hash.",flat_name:"file.hash.sha512",ignore_above:1024,level:"extended",name:"sha512",normalize:[],original_fieldset:"hash",short:"SHA512 hash.",type:"keyword"},"file.hash.ssdeep":{dashed_name:"file-hash-ssdeep",description:"SSDEEP hash.",flat_name:"file.hash.ssdeep",ignore_above:1024,level:"extended",name:"ssdeep",normalize:[],original_fieldset:"hash",short:"SSDEEP hash.",type:"keyword"},"file.hash.tlsh":{dashed_name:"file-hash-tlsh",description:"TLSH hash.",flat_name:"file.hash.tlsh",ignore_above:1024,level:"extended",name:"tlsh",normalize:[],original_fieldset:"hash",short:"TLSH hash.",type:"keyword"},"file.inode":{dashed_name:"file-inode",description:"Inode representing the file in the filesystem.",example:"256383",flat_name:"file.inode",ignore_above:1024,level:"extended",name:"inode",normalize:[],short:"Inode representing the file in the filesystem.",type:"keyword"},"file.macho.go_import_hash":{dashed_name:"file-macho-go-import-hash",description:"A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"file.macho.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"macho",short:"A hash of the Go language imports in a Mach-O file.",type:"keyword"},"file.macho.go_imports":{dashed_name:"file-macho-go-imports",description:"List of imported Go language element names and types.",flat_name:"file.macho.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"macho",short:"List of imported Go language element names and types.",type:"flattened"},"file.macho.go_imports_names_entropy":{dashed_name:"file-macho-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"file.macho.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"macho",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"file.macho.go_imports_names_var_entropy":{dashed_name:"file-macho-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"file.macho.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"macho",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"file.macho.go_stripped":{dashed_name:"file-macho-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"file.macho.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"macho",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"file.macho.import_hash":{dashed_name:"file-macho-import-hash",description:"A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for symhash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"file.macho.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"macho",short:"A hash of the imports in a Mach-O file.",type:"keyword"},"file.macho.imports":{dashed_name:"file-macho-imports",description:"List of imported element names and types.",flat_name:"file.macho.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"macho",short:"List of imported element names and types.",type:"flattened"},"file.macho.imports_names_entropy":{dashed_name:"file-macho-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"file.macho.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"macho",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"file.macho.imports_names_var_entropy":{dashed_name:"file-macho-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"file.macho.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"macho",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"file.macho.sections":{dashed_name:"file-macho-sections",description:"An array containing an object for each section of the Mach-O file.\nThe keys that should be present in these objects are defined by sub-fields underneath `macho.sections.*`.",flat_name:"file.macho.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"macho",short:"Section information of the Mach-O file.",type:"nested"},"file.macho.sections.entropy":{dashed_name:"file-macho-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"file.macho.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"macho",short:"Shannon entropy calculation from the section.",type:"long"},"file.macho.sections.name":{dashed_name:"file-macho-sections-name",description:"Mach-O Section List name.",flat_name:"file.macho.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"macho",short:"Mach-O Section List name.",type:"keyword"},"file.macho.sections.physical_size":{dashed_name:"file-macho-sections-physical-size",description:"Mach-O Section List physical size.",flat_name:"file.macho.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"macho",short:"Mach-O Section List physical size.",type:"long"},"file.macho.sections.var_entropy":{dashed_name:"file-macho-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"file.macho.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"macho",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"file.macho.sections.virtual_size":{dashed_name:"file-macho-sections-virtual-size",description:"Mach-O Section List virtual size. This is always the same as `physical_size`.",flat_name:"file.macho.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"macho",short:"Mach-O Section List virtual size. This is always the same as `physical_size`.",type:"long"},"file.macho.symhash":{dashed_name:"file-macho-symhash",description:"A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a Mach-O implementation of the Windows PE imphash",example:"d3ccf195b62a9279c3c19af1080497ec",flat_name:"file.macho.symhash",ignore_above:1024,level:"extended",name:"symhash",normalize:[],original_fieldset:"macho",short:"A hash of the imports in a Mach-O file.",type:"keyword"},"file.mime_type":{dashed_name:"file-mime-type",description:"MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.",flat_name:"file.mime_type",ignore_above:1024,level:"extended",name:"mime_type",normalize:[],short:"Media type of file, document, or arrangement of bytes.",type:"keyword"},"file.mode":{dashed_name:"file-mode",description:"Mode of the file in octal representation.",example:"0640",flat_name:"file.mode",ignore_above:1024,level:"extended",name:"mode",normalize:[],short:"Mode of the file in octal representation.",type:"keyword"},"file.mtime":{dashed_name:"file-mtime",description:"Last time the file content was modified.",flat_name:"file.mtime",level:"extended",name:"mtime",normalize:[],short:"Last time the file content was modified.",type:"date"},"file.name":{dashed_name:"file-name",description:"Name of the file including the extension, without the directory.",example:"example.png",flat_name:"file.name",ignore_above:1024,level:"extended",name:"name",normalize:[],short:"Name of the file including the extension, without the directory.",type:"keyword"},"file.owner":{dashed_name:"file-owner",description:"File owner's username.",example:"alice",flat_name:"file.owner",ignore_above:1024,level:"extended",name:"owner",normalize:[],short:"File owner's username.",type:"keyword"},"file.path":{dashed_name:"file-path",description:"Full path to the file, including the file name. It should include the drive letter, when appropriate.",example:"/home/alice/example.png",flat_name:"file.path",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"file.path.text",name:"text",type:"match_only_text"}],name:"path",normalize:[],short:"Full path to the file, including the file name.",type:"keyword"},"file.pe.architecture":{dashed_name:"file-pe-architecture",description:"CPU architecture target for the file.",example:"x64",flat_name:"file.pe.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"pe",short:"CPU architecture target for the file.",type:"keyword"},"file.pe.company":{dashed_name:"file-pe-company",description:"Internal company name of the file, provided at compile-time.",example:"Microsoft Corporation",flat_name:"file.pe.company",ignore_above:1024,level:"extended",name:"company",normalize:[],original_fieldset:"pe",short:"Internal company name of the file, provided at compile-time.",type:"keyword"},"file.pe.description":{dashed_name:"file-pe-description",description:"Internal description of the file, provided at compile-time.",example:"Paint",flat_name:"file.pe.description",ignore_above:1024,level:"extended",name:"description",normalize:[],original_fieldset:"pe",short:"Internal description of the file, provided at compile-time.",type:"keyword"},"file.pe.file_version":{dashed_name:"file-pe-file-version",description:"Internal version of the file, provided at compile-time.",example:"6.3.9600.17415",flat_name:"file.pe.file_version",ignore_above:1024,level:"extended",name:"file_version",normalize:[],original_fieldset:"pe",short:"Process name.",type:"keyword"},"file.pe.go_import_hash":{dashed_name:"file-pe-go-import-hash",description:"A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"file.pe.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the Go language imports in a PE file.",type:"keyword"},"file.pe.go_imports":{dashed_name:"file-pe-go-imports",description:"List of imported Go language element names and types.",flat_name:"file.pe.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"pe",short:"List of imported Go language element names and types.",type:"flattened"},"file.pe.go_imports_names_entropy":{dashed_name:"file-pe-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"file.pe.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"file.pe.go_imports_names_var_entropy":{dashed_name:"file-pe-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"file.pe.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"file.pe.go_stripped":{dashed_name:"file-pe-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"file.pe.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"pe",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"file.pe.imphash":{dashed_name:"file-pe-imphash",description:"A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",example:"0c6803c4e922103c4dca5963aad36ddf",flat_name:"file.pe.imphash",ignore_above:1024,level:"extended",name:"imphash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"file.pe.import_hash":{dashed_name:"file-pe-import-hash",description:"A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"file.pe.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"file.pe.imports":{dashed_name:"file-pe-imports",description:"List of imported element names and types.",flat_name:"file.pe.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"pe",short:"List of imported element names and types.",type:"flattened"},"file.pe.imports_names_entropy":{dashed_name:"file-pe-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"file.pe.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"file.pe.imports_names_var_entropy":{dashed_name:"file-pe-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"file.pe.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"file.pe.original_file_name":{dashed_name:"file-pe-original-file-name",description:"Internal name of the file, provided at compile-time.",example:"MSPAINT.EXE",flat_name:"file.pe.original_file_name",ignore_above:1024,level:"extended",name:"original_file_name",normalize:[],original_fieldset:"pe",short:"Internal name of the file, provided at compile-time.",type:"keyword"},"file.pe.pehash":{dashed_name:"file-pe-pehash",description:"A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.",example:"73ff189b63cd6be375a7ff25179a38d347651975",flat_name:"file.pe.pehash",ignore_above:1024,level:"extended",name:"pehash",normalize:[],original_fieldset:"pe",short:"A hash of the PE header and data from one or more PE sections.",type:"keyword"},"file.pe.product":{dashed_name:"file-pe-product",description:"Internal product name of the file, provided at compile-time.",example:"Microsoft® Windows® Operating System",flat_name:"file.pe.product",ignore_above:1024,level:"extended",name:"product",normalize:[],original_fieldset:"pe",short:"Internal product name of the file, provided at compile-time.",type:"keyword"},"file.pe.sections":{dashed_name:"file-pe-sections",description:"An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.",flat_name:"file.pe.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"pe",short:"Section information of the PE file.",type:"nested"},"file.pe.sections.entropy":{dashed_name:"file-pe-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"file.pe.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the section.",type:"long"},"file.pe.sections.name":{dashed_name:"file-pe-sections-name",description:"PE Section List name.",flat_name:"file.pe.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"pe",short:"PE Section List name.",type:"keyword"},"file.pe.sections.physical_size":{dashed_name:"file-pe-sections-physical-size",description:"PE Section List physical size.",flat_name:"file.pe.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"pe",short:"PE Section List physical size.",type:"long"},"file.pe.sections.var_entropy":{dashed_name:"file-pe-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"file.pe.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"file.pe.sections.virtual_size":{dashed_name:"file-pe-sections-virtual-size",description:"PE Section List virtual size. This is always the same as `physical_size`.",flat_name:"file.pe.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"pe",short:"PE Section List virtual size. This is always the same as `physical_size`.",type:"long"},"file.size":{dashed_name:"file-size",description:'File size in bytes.\nOnly relevant when `file.type` is "file".',example:16384,flat_name:"file.size",level:"extended",name:"size",normalize:[],short:"File size in bytes.",type:"long"},"file.target_path":{dashed_name:"file-target-path",description:"Target path for symlinks.",flat_name:"file.target_path",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"file.target_path.text",name:"text",type:"match_only_text"}],name:"target_path",normalize:[],short:"Target path for symlinks.",type:"keyword"},"file.type":{dashed_name:"file-type",description:"File type (file, dir, or symlink).",example:"file",flat_name:"file.type",ignore_above:1024,level:"extended",name:"type",normalize:[],short:"File type (file, dir, or symlink).",type:"keyword"},"file.uid":{dashed_name:"file-uid",description:"The user ID (UID) or security identifier (SID) of the file owner.",example:"1001",flat_name:"file.uid",ignore_above:1024,level:"extended",name:"uid",normalize:[],short:"The user ID (UID) or security identifier (SID) of the file owner.",type:"keyword"},"file.x509.alternative_names":{dashed_name:"file-x509-alternative-names",description:"List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",example:"*.elastic.co",flat_name:"file.x509.alternative_names",ignore_above:1024,level:"extended",name:"alternative_names",normalize:["array"],original_fieldset:"x509",short:"List of subject alternative names (SAN).",type:"keyword"},"file.x509.issuer.common_name":{dashed_name:"file-x509-issuer-common-name",description:"List of common name (CN) of issuing certificate authority.",example:"Example SHA2 High Assurance Server CA",flat_name:"file.x509.issuer.common_name",ignore_above:1024,level:"extended",name:"issuer.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common name (CN) of issuing certificate authority.",type:"keyword"},"file.x509.issuer.country":{dashed_name:"file-x509-issuer-country",description:"List of country \\(C) codes",example:"US",flat_name:"file.x509.issuer.country",ignore_above:1024,level:"extended",name:"issuer.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) codes",type:"keyword"},"file.x509.issuer.distinguished_name":{dashed_name:"file-x509-issuer-distinguished-name",description:"Distinguished name (DN) of issuing certificate authority.",example:"C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA",flat_name:"file.x509.issuer.distinguished_name",ignore_above:1024,level:"extended",name:"issuer.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of issuing certificate authority.",type:"keyword"},"file.x509.issuer.locality":{dashed_name:"file-x509-issuer-locality",description:"List of locality names (L)",example:"Mountain View",flat_name:"file.x509.issuer.locality",ignore_above:1024,level:"extended",name:"issuer.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"file.x509.issuer.organization":{dashed_name:"file-x509-issuer-organization",description:"List of organizations (O) of issuing certificate authority.",example:"Example Inc",flat_name:"file.x509.issuer.organization",ignore_above:1024,level:"extended",name:"issuer.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of issuing certificate authority.",type:"keyword"},"file.x509.issuer.organizational_unit":{dashed_name:"file-x509-issuer-organizational-unit",description:"List of organizational units (OU) of issuing certificate authority.",example:"www.example.com",flat_name:"file.x509.issuer.organizational_unit",ignore_above:1024,level:"extended",name:"issuer.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of issuing certificate authority.",type:"keyword"},"file.x509.issuer.state_or_province":{dashed_name:"file-x509-issuer-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"file.x509.issuer.state_or_province",ignore_above:1024,level:"extended",name:"issuer.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"file.x509.not_after":{dashed_name:"file-x509-not-after",description:"Time at which the certificate is no longer considered valid.",example:"2020-07-16T03:15:39Z",flat_name:"file.x509.not_after",level:"extended",name:"not_after",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is no longer considered valid.",type:"date"},"file.x509.not_before":{dashed_name:"file-x509-not-before",description:"Time at which the certificate is first considered valid.",example:"2019-08-16T01:40:25Z",flat_name:"file.x509.not_before",level:"extended",name:"not_before",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is first considered valid.",type:"date"},"file.x509.public_key_algorithm":{dashed_name:"file-x509-public-key-algorithm",description:"Algorithm used to generate the public key.",example:"RSA",flat_name:"file.x509.public_key_algorithm",ignore_above:1024,level:"extended",name:"public_key_algorithm",normalize:[],original_fieldset:"x509",short:"Algorithm used to generate the public key.",type:"keyword"},"file.x509.public_key_curve":{dashed_name:"file-x509-public-key-curve",description:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",example:"nistp521",flat_name:"file.x509.public_key_curve",ignore_above:1024,level:"extended",name:"public_key_curve",normalize:[],original_fieldset:"x509",short:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",type:"keyword"},"file.x509.public_key_exponent":{dashed_name:"file-x509-public-key-exponent",description:"Exponent used to derive the public key. This is algorithm specific.",doc_values:!1,example:65537,flat_name:"file.x509.public_key_exponent",index:!1,level:"extended",name:"public_key_exponent",normalize:[],original_fieldset:"x509",short:"Exponent used to derive the public key. This is algorithm specific.",type:"long"},"file.x509.public_key_size":{dashed_name:"file-x509-public-key-size",description:"The size of the public key space in bits.",example:2048,flat_name:"file.x509.public_key_size",level:"extended",name:"public_key_size",normalize:[],original_fieldset:"x509",short:"The size of the public key space in bits.",type:"long"},"file.x509.serial_number":{dashed_name:"file-x509-serial-number",description:"Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",example:"55FBB9C7DEBF09809D12CCAA",flat_name:"file.x509.serial_number",ignore_above:1024,level:"extended",name:"serial_number",normalize:[],original_fieldset:"x509",short:"Unique serial number issued by the certificate authority.",type:"keyword"},"file.x509.signature_algorithm":{dashed_name:"file-x509-signature-algorithm",description:"Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",example:"SHA256-RSA",flat_name:"file.x509.signature_algorithm",ignore_above:1024,level:"extended",name:"signature_algorithm",normalize:[],original_fieldset:"x509",short:"Identifier for certificate signature algorithm.",type:"keyword"},"file.x509.subject.common_name":{dashed_name:"file-x509-subject-common-name",description:"List of common names (CN) of subject.",example:"shared.global.example.net",flat_name:"file.x509.subject.common_name",ignore_above:1024,level:"extended",name:"subject.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common names (CN) of subject.",type:"keyword"},"file.x509.subject.country":{dashed_name:"file-x509-subject-country",description:"List of country \\(C) code",example:"US",flat_name:"file.x509.subject.country",ignore_above:1024,level:"extended",name:"subject.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) code",type:"keyword"},"file.x509.subject.distinguished_name":{dashed_name:"file-x509-subject-distinguished-name",description:"Distinguished name (DN) of the certificate subject entity.",example:"C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net",flat_name:"file.x509.subject.distinguished_name",ignore_above:1024,level:"extended",name:"subject.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of the certificate subject entity.",type:"keyword"},"file.x509.subject.locality":{dashed_name:"file-x509-subject-locality",description:"List of locality names (L)",example:"San Francisco",flat_name:"file.x509.subject.locality",ignore_above:1024,level:"extended",name:"subject.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"file.x509.subject.organization":{dashed_name:"file-x509-subject-organization",description:"List of organizations (O) of subject.",example:"Example, Inc.",flat_name:"file.x509.subject.organization",ignore_above:1024,level:"extended",name:"subject.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of subject.",type:"keyword"},"file.x509.subject.organizational_unit":{dashed_name:"file-x509-subject-organizational-unit",description:"List of organizational units (OU) of subject.",flat_name:"file.x509.subject.organizational_unit",ignore_above:1024,level:"extended",name:"subject.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of subject.",type:"keyword"},"file.x509.subject.state_or_province":{dashed_name:"file-x509-subject-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"file.x509.subject.state_or_province",ignore_above:1024,level:"extended",name:"subject.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"file.x509.version_number":{dashed_name:"file-x509-version-number",description:"Version of x509 format.",example:3,flat_name:"file.x509.version_number",ignore_above:1024,level:"extended",name:"version_number",normalize:[],original_fieldset:"x509",short:"Version of x509 format.",type:"keyword"},"group.domain":{dashed_name:"group-domain",description:"Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"group.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],short:"Name of the directory the group is a member of.",type:"keyword"},"group.id":{dashed_name:"group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],short:"Unique identifier for the group on the system/platform.",type:"keyword"},"group.name":{dashed_name:"group-name",description:"Name of the group.",flat_name:"group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],short:"Name of the group.",type:"keyword"},"host.architecture":{dashed_name:"host-architecture",description:"Operating system architecture.",example:"x86_64",flat_name:"host.architecture",ignore_above:1024,level:"core",name:"architecture",normalize:[],short:"Operating system architecture.",type:"keyword"},"host.boot.id":{beta:"This field is beta and subject to change.",dashed_name:"host-boot-id",description:"Linux boot uuid taken from /proc/sys/kernel/random/boot_id. Note the boot_id value from /proc may or may not be the same in containers as on the host. Some container runtimes will bind mount a new boot_id value onto the proc file in each container.",example:"88a1f0ed-5ae5-41ee-af6b-41921c311872",flat_name:"host.boot.id",ignore_above:1024,level:"extended",name:"boot.id",normalize:[],short:"Linux boot uuid taken from /proc/sys/kernel/random/boot_id",type:"keyword"},"host.cpu.usage":{dashed_name:"host-cpu-usage",description:"Percent CPU used which is normalized by the number of CPU cores and it ranges from 0 to 1.\nScaling factor: 1000.\nFor example: For a two core host, this value should be the average of the two cores, between 0 and 1.",flat_name:"host.cpu.usage",level:"extended",name:"cpu.usage",normalize:[],scaling_factor:1e3,short:"Percent CPU used, between 0 and 1.",type:"scaled_float"},"host.disk.read.bytes":{dashed_name:"host-disk-read-bytes",description:"The total number of bytes (gauge) read successfully (aggregated from all disks) since the last metric collection.",flat_name:"host.disk.read.bytes",level:"extended",name:"disk.read.bytes",normalize:[],short:"The number of bytes read by all disks.",type:"long"},"host.disk.write.bytes":{dashed_name:"host-disk-write-bytes",description:"The total number of bytes (gauge) written successfully (aggregated from all disks) since the last metric collection.",flat_name:"host.disk.write.bytes",level:"extended",name:"disk.write.bytes",normalize:[],short:"The number of bytes written on all disks.",type:"long"},"host.domain":{dashed_name:"host-domain",description:"Name of the domain of which the host is a member.\nFor example, on Windows this could be the host's Active Directory domain or NetBIOS domain name. For Linux this could be the domain of the host's LDAP provider.",example:"CONTOSO",flat_name:"host.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],short:"Name of the directory the group is a member of.",type:"keyword"},"host.geo.city_name":{dashed_name:"host-geo-city-name",description:"City name.",example:"Montreal",flat_name:"host.geo.city_name",ignore_above:1024,level:"core",name:"city_name",normalize:[],original_fieldset:"geo",short:"City name.",type:"keyword"},"host.geo.continent_code":{dashed_name:"host-geo-continent-code",description:"Two-letter code representing continent's name.",example:"NA",flat_name:"host.geo.continent_code",ignore_above:1024,level:"core",name:"continent_code",normalize:[],original_fieldset:"geo",short:"Continent code.",type:"keyword"},"host.geo.continent_name":{dashed_name:"host-geo-continent-name",description:"Name of the continent.",example:"North America",flat_name:"host.geo.continent_name",ignore_above:1024,level:"core",name:"continent_name",normalize:[],original_fieldset:"geo",short:"Name of the continent.",type:"keyword"},"host.geo.country_iso_code":{dashed_name:"host-geo-country-iso-code",description:"Country ISO code.",example:"CA",flat_name:"host.geo.country_iso_code",ignore_above:1024,level:"core",name:"country_iso_code",normalize:[],original_fieldset:"geo",short:"Country ISO code.",type:"keyword"},"host.geo.country_name":{dashed_name:"host-geo-country-name",description:"Country name.",example:"Canada",flat_name:"host.geo.country_name",ignore_above:1024,level:"core",name:"country_name",normalize:[],original_fieldset:"geo",short:"Country name.",type:"keyword"},"host.geo.location":{dashed_name:"host-geo-location",description:"Longitude and latitude.",example:'{ "lon": -73.614830, "lat": 45.505918 }',flat_name:"host.geo.location",level:"core",name:"location",normalize:[],original_fieldset:"geo",short:"Longitude and latitude.",type:"geo_point"},"host.geo.name":{dashed_name:"host-geo-name",description:"User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",example:"boston-dc",flat_name:"host.geo.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"geo",short:"User-defined description of a location.",type:"keyword"},"host.geo.postal_code":{dashed_name:"host-geo-postal-code",description:"Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",example:94040,flat_name:"host.geo.postal_code",ignore_above:1024,level:"core",name:"postal_code",normalize:[],original_fieldset:"geo",short:"Postal code.",type:"keyword"},"host.geo.region_iso_code":{dashed_name:"host-geo-region-iso-code",description:"Region ISO code.",example:"CA-QC",flat_name:"host.geo.region_iso_code",ignore_above:1024,level:"core",name:"region_iso_code",normalize:[],original_fieldset:"geo",short:"Region ISO code.",type:"keyword"},"host.geo.region_name":{dashed_name:"host-geo-region-name",description:"Region name.",example:"Quebec",flat_name:"host.geo.region_name",ignore_above:1024,level:"core",name:"region_name",normalize:[],original_fieldset:"geo",short:"Region name.",type:"keyword"},"host.geo.timezone":{dashed_name:"host-geo-timezone",description:"The time zone of the location, such as IANA time zone name.",example:"America/Argentina/Buenos_Aires",flat_name:"host.geo.timezone",ignore_above:1024,level:"core",name:"timezone",normalize:[],original_fieldset:"geo",short:"Time zone.",type:"keyword"},"host.hostname":{dashed_name:"host-hostname",description:"Hostname of the host.\nIt normally contains what the `hostname` command returns on the host machine.",flat_name:"host.hostname",ignore_above:1024,level:"core",name:"hostname",normalize:[],short:"Hostname of the host.",type:"keyword"},"host.id":{dashed_name:"host-id",description:"Unique host id.\nAs hostname is not always unique, use values that are meaningful in your environment.\nExample: The current usage of `beat.name`.",flat_name:"host.id",ignore_above:1024,level:"core",name:"id",normalize:[],short:"Unique host id.",type:"keyword"},"host.ip":{dashed_name:"host-ip",description:"Host ip addresses.",flat_name:"host.ip",level:"core",name:"ip",normalize:["array"],short:"Host ip addresses.",type:"ip"},"host.mac":{dashed_name:"host-mac",description:"Host MAC addresses.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",example:'["00-00-5E-00-53-23", "00-00-5E-00-53-24"]',flat_name:"host.mac",ignore_above:1024,level:"core",name:"mac",normalize:["array"],pattern:"^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$",short:"Host MAC addresses.",type:"keyword"},"host.name":{dashed_name:"host-name",description:"Name of the host.\nIt can contain what hostname returns on Unix systems, the fully qualified domain name (FQDN), or a name specified by the user. The recommended value is the lowercase FQDN of the host.",flat_name:"host.name",ignore_above:1024,level:"core",name:"name",normalize:[],short:"Name of the host.",type:"keyword"},"host.network.egress.bytes":{dashed_name:"host-network-egress-bytes",description:"The number of bytes (gauge) sent out on all network interfaces by the host since the last metric collection.",flat_name:"host.network.egress.bytes",level:"extended",name:"network.egress.bytes",normalize:[],short:"The number of bytes sent on all network interfaces.",type:"long"},"host.network.egress.packets":{dashed_name:"host-network-egress-packets",description:"The number of packets (gauge) sent out on all network interfaces by the host since the last metric collection.",flat_name:"host.network.egress.packets",level:"extended",name:"network.egress.packets",normalize:[],short:"The number of packets sent on all network interfaces.",type:"long"},"host.network.ingress.bytes":{dashed_name:"host-network-ingress-bytes",description:"The number of bytes received (gauge) on all network interfaces by the host since the last metric collection.",flat_name:"host.network.ingress.bytes",level:"extended",name:"network.ingress.bytes",normalize:[],short:"The number of bytes received on all network interfaces.",type:"long"},"host.network.ingress.packets":{dashed_name:"host-network-ingress-packets",description:"The number of packets (gauge) received on all network interfaces by the host since the last metric collection.",flat_name:"host.network.ingress.packets",level:"extended",name:"network.ingress.packets",normalize:[],short:"The number of packets received on all network interfaces.",type:"long"},"host.os.family":{dashed_name:"host-os-family",description:"OS family (such as redhat, debian, freebsd, windows).",example:"debian",flat_name:"host.os.family",ignore_above:1024,level:"extended",name:"family",normalize:[],original_fieldset:"os",short:"OS family (such as redhat, debian, freebsd, windows).",type:"keyword"},"host.os.full":{dashed_name:"host-os-full",description:"Operating system name, including the version or code name.",example:"Mac OS Mojave",flat_name:"host.os.full",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"host.os.full.text",name:"text",type:"match_only_text"}],name:"full",normalize:[],original_fieldset:"os",short:"Operating system name, including the version or code name.",type:"keyword"},"host.os.kernel":{dashed_name:"host-os-kernel",description:"Operating system kernel version as a raw string.",example:"4.4.0-112-generic",flat_name:"host.os.kernel",ignore_above:1024,level:"extended",name:"kernel",normalize:[],original_fieldset:"os",short:"Operating system kernel version as a raw string.",type:"keyword"},"host.os.name":{dashed_name:"host-os-name",description:"Operating system name, without the version.",example:"Mac OS X",flat_name:"host.os.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"host.os.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"os",short:"Operating system name, without the version.",type:"keyword"},"host.os.platform":{dashed_name:"host-os-platform",description:"Operating system platform (such centos, ubuntu, windows).",example:"darwin",flat_name:"host.os.platform",ignore_above:1024,level:"extended",name:"platform",normalize:[],original_fieldset:"os",short:"Operating system platform (such centos, ubuntu, windows).",type:"keyword"},"host.os.type":{dashed_name:"host-os-type",description:"Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nIf the OS you're dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.",example:"macos",expected_values:["linux","macos","unix","windows","ios","android"],flat_name:"host.os.type",ignore_above:1024,level:"extended",name:"type",normalize:[],original_fieldset:"os",short:"Which commercial OS family (one of: linux, macos, unix, windows, ios or android).",type:"keyword"},"host.os.version":{dashed_name:"host-os-version",description:"Operating system version as a raw string.",example:"10.14.1",flat_name:"host.os.version",ignore_above:1024,level:"extended",name:"version",normalize:[],original_fieldset:"os",short:"Operating system version as a raw string.",type:"keyword"},"host.pid_ns_ino":{beta:"This field is beta and subject to change.",dashed_name:"host-pid-ns-ino",description:"This is the inode number of the namespace in the namespace file system (nsfs). Unsigned int inum in include/linux/ns_common.h.",example:256383,flat_name:"host.pid_ns_ino",ignore_above:1024,level:"extended",name:"pid_ns_ino",normalize:[],short:"Pid namespace inode",type:"keyword"},"host.risk.calculated_level":{dashed_name:"host-risk-calculated-level",description:"A risk classification level calculated by an internal system as part of entity analytics and entity risk scoring.",example:"High",flat_name:"host.risk.calculated_level",ignore_above:1024,level:"extended",name:"calculated_level",normalize:[],original_fieldset:"risk",short:"A risk classification level calculated by an internal system as part of entity analytics and entity risk scoring.",type:"keyword"},"host.risk.calculated_score":{dashed_name:"host-risk-calculated-score",description:"A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring.",example:880.73,flat_name:"host.risk.calculated_score",level:"extended",name:"calculated_score",normalize:[],original_fieldset:"risk",short:"A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring.",type:"float"},"host.risk.calculated_score_norm":{dashed_name:"host-risk-calculated-score-norm",description:"A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring, and normalized to a range of 0 to 100.",example:88.73,flat_name:"host.risk.calculated_score_norm",level:"extended",name:"calculated_score_norm",normalize:[],original_fieldset:"risk",short:"A normalized risk score calculated by an internal system.",type:"float"},"host.risk.static_level":{dashed_name:"host-risk-static-level",description:"A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform.",example:"High",flat_name:"host.risk.static_level",ignore_above:1024,level:"extended",name:"static_level",normalize:[],original_fieldset:"risk",short:"A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform.",type:"keyword"},"host.risk.static_score":{dashed_name:"host-risk-static-score",description:"A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform.",example:830,flat_name:"host.risk.static_score",level:"extended",name:"static_score",normalize:[],original_fieldset:"risk",short:"A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform.",type:"float"},"host.risk.static_score_norm":{dashed_name:"host-risk-static-score-norm",description:"A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform, and normalized to a range of 0 to 100.",example:83,flat_name:"host.risk.static_score_norm",level:"extended",name:"static_score_norm",normalize:[],original_fieldset:"risk",short:"A normalized risk score calculated by an external system.",type:"float"},"host.type":{dashed_name:"host-type",description:"Type of host.\nFor Cloud providers this can be the machine type like `t2.medium`. If vm, this could be the container, for example, or other information meaningful in your environment.",flat_name:"host.type",ignore_above:1024,level:"core",name:"type",normalize:[],short:"Type of host.",type:"keyword"},"host.uptime":{dashed_name:"host-uptime",description:"Seconds the host has been up.",example:1325,flat_name:"host.uptime",level:"extended",name:"uptime",normalize:[],short:"Seconds the host has been up.",type:"long"},"http.request.body.bytes":{dashed_name:"http-request-body-bytes",description:"Size in bytes of the request body.",example:887,flat_name:"http.request.body.bytes",format:"bytes",level:"extended",name:"request.body.bytes",normalize:[],short:"Size in bytes of the request body.",type:"long"},"http.request.body.content":{dashed_name:"http-request-body-content",description:"The full HTTP request body.",example:"Hello world",flat_name:"http.request.body.content",level:"extended",multi_fields:[{flat_name:"http.request.body.content.text",name:"text",type:"match_only_text"}],name:"request.body.content",normalize:[],short:"The full HTTP request body.",type:"wildcard"},"http.request.bytes":{dashed_name:"http-request-bytes",description:"Total size in bytes of the request (body and headers).",example:1437,flat_name:"http.request.bytes",format:"bytes",level:"extended",name:"request.bytes",normalize:[],short:"Total size in bytes of the request (body and headers).",type:"long"},"http.request.id":{dashed_name:"http-request-id",description:"A unique identifier for each HTTP request to correlate logs between clients and servers in transactions.\nThe id may be contained in a non-standard HTTP header, such as `X-Request-ID` or `X-Correlation-ID`.",example:"123e4567-e89b-12d3-a456-426614174000",flat_name:"http.request.id",ignore_above:1024,level:"extended",name:"request.id",normalize:[],short:"HTTP request ID.",type:"keyword"},"http.request.method":{dashed_name:"http-request-method",description:"HTTP request method.\nThe value should retain its casing from the original event. For example, `GET`, `get`, and `GeT` are all considered valid values for this field.",example:"POST",flat_name:"http.request.method",ignore_above:1024,level:"extended",name:"request.method",normalize:[],short:"HTTP request method.",type:"keyword"},"http.request.mime_type":{dashed_name:"http-request-mime-type",description:"Mime type of the body of the request.\nThis value must only be populated based on the content of the request body, not on the `Content-Type` header. Comparing the mime type of a request with the request's Content-Type header can be helpful in detecting threats or misconfigured clients.",example:"image/gif",flat_name:"http.request.mime_type",ignore_above:1024,level:"extended",name:"request.mime_type",normalize:[],short:"Mime type of the body of the request.",type:"keyword"},"http.request.referrer":{dashed_name:"http-request-referrer",description:"Referrer for this HTTP request.",example:"https://blog.example.com/",flat_name:"http.request.referrer",ignore_above:1024,level:"extended",name:"request.referrer",normalize:[],short:"Referrer for this HTTP request.",type:"keyword"},"http.response.body.bytes":{dashed_name:"http-response-body-bytes",description:"Size in bytes of the response body.",example:887,flat_name:"http.response.body.bytes",format:"bytes",level:"extended",name:"response.body.bytes",normalize:[],short:"Size in bytes of the response body.",type:"long"},"http.response.body.content":{dashed_name:"http-response-body-content",description:"The full HTTP response body.",example:"Hello world",flat_name:"http.response.body.content",level:"extended",multi_fields:[{flat_name:"http.response.body.content.text",name:"text",type:"match_only_text"}],name:"response.body.content",normalize:[],short:"The full HTTP response body.",type:"wildcard"},"http.response.bytes":{dashed_name:"http-response-bytes",description:"Total size in bytes of the response (body and headers).",example:1437,flat_name:"http.response.bytes",format:"bytes",level:"extended",name:"response.bytes",normalize:[],short:"Total size in bytes of the response (body and headers).",type:"long"},"http.response.mime_type":{dashed_name:"http-response-mime-type",description:"Mime type of the body of the response.\nThis value must only be populated based on the content of the response body, not on the `Content-Type` header. Comparing the mime type of a response with the response's Content-Type header can be helpful in detecting misconfigured servers.",example:"image/gif",flat_name:"http.response.mime_type",ignore_above:1024,level:"extended",name:"response.mime_type",normalize:[],short:"Mime type of the body of the response.",type:"keyword"},"http.response.status_code":{dashed_name:"http-response-status-code",description:"HTTP response status code.",example:404,flat_name:"http.response.status_code",format:"string",level:"extended",name:"response.status_code",normalize:[],short:"HTTP response status code.",type:"long"},"http.version":{dashed_name:"http-version",description:"HTTP version.",example:1.1,flat_name:"http.version",ignore_above:1024,level:"extended",name:"version",normalize:[],short:"HTTP version.",type:"keyword"},labels:{dashed_name:"labels",description:"Custom key/value pairs.\nCan be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.\nExample: `docker` and `k8s` labels.",example:'{"application": "foo-bar", "env": "production"}',flat_name:"labels",level:"core",name:"labels",normalize:[],object_type:"keyword",short:"Custom key/value pairs.",type:"object"},"log.file.path":{dashed_name:"log-file-path",description:"Full path to the log file this event came from, including the file name. It should include the drive letter, when appropriate.\nIf the event wasn't read from a log file, do not populate this field.",example:"/var/log/fun-times.log",flat_name:"log.file.path",ignore_above:1024,level:"extended",name:"file.path",normalize:[],short:"Full path to the log file this event came from.",type:"keyword"},"log.level":{dashed_name:"log-level",description:"Original log level of the log event.\nIf the source of the event provides a log level or textual severity, this is the one that goes in `log.level`. If your source doesn't specify one, you may put your event transport's severity here (e.g. Syslog severity).\nSome examples are `warn`, `err`, `i`, `informational`.",example:"error",flat_name:"log.level",ignore_above:1024,level:"core",name:"level",normalize:[],short:"Log level of the log event.",type:"keyword"},"log.logger":{dashed_name:"log-logger",description:"The name of the logger inside an application. This is usually the name of the class which initialized the logger, or can be a custom name.",example:"org.elasticsearch.bootstrap.Bootstrap",flat_name:"log.logger",ignore_above:1024,level:"core",name:"logger",normalize:[],short:"Name of the logger.",type:"keyword"},"log.origin.file.line":{dashed_name:"log-origin-file-line",description:"The line number of the file containing the source code which originated the log event.",example:42,flat_name:"log.origin.file.line",level:"extended",name:"origin.file.line",normalize:[],short:"The line number of the file which originated the log event.",type:"long"},"log.origin.file.name":{dashed_name:"log-origin-file-name",description:"The name of the file containing the source code which originated the log event.\nNote that this field is not meant to capture the log file. The correct field to capture the log file is `log.file.path`.",example:"Bootstrap.java",flat_name:"log.origin.file.name",ignore_above:1024,level:"extended",name:"origin.file.name",normalize:[],short:"The code file which originated the log event.",type:"keyword"},"log.origin.function":{dashed_name:"log-origin-function",description:"The name of the function or method which originated the log event.",example:"init",flat_name:"log.origin.function",ignore_above:1024,level:"extended",name:"origin.function",normalize:[],short:"The function which originated the log event.",type:"keyword"},"log.syslog":{dashed_name:"log-syslog",description:"The Syslog metadata of the event, if the event was transmitted via Syslog. Please see RFCs 5424 or 3164.",flat_name:"log.syslog",level:"extended",name:"syslog",normalize:[],short:"Syslog metadata",type:"object"},"log.syslog.appname":{dashed_name:"log-syslog-appname",description:"The device or application that originated the Syslog message, if available.",example:"sshd",flat_name:"log.syslog.appname",ignore_above:1024,level:"extended",name:"syslog.appname",normalize:[],short:"The device or application that originated the Syslog message.",type:"keyword"},"log.syslog.facility.code":{dashed_name:"log-syslog-facility-code",description:"The Syslog numeric facility of the log event, if available.\nAccording to RFCs 5424 and 3164, this value should be an integer between 0 and 23.",example:23,flat_name:"log.syslog.facility.code",format:"string",level:"extended",name:"syslog.facility.code",normalize:[],short:"Syslog numeric facility of the event.",type:"long"},"log.syslog.facility.name":{dashed_name:"log-syslog-facility-name",description:"The Syslog text-based facility of the log event, if available.",example:"local7",flat_name:"log.syslog.facility.name",ignore_above:1024,level:"extended",name:"syslog.facility.name",normalize:[],short:"Syslog text-based facility of the event.",type:"keyword"},"log.syslog.hostname":{dashed_name:"log-syslog-hostname",description:"The hostname, FQDN, or IP of the machine that originally sent the Syslog message. This is sourced from the hostname field of the syslog header. Depending on the environment, this value may be different from the host that handled the event, especially if the host handling the events is acting as a collector.",example:"example-host",flat_name:"log.syslog.hostname",ignore_above:1024,level:"extended",name:"syslog.hostname",normalize:[],short:"The host that originated the Syslog message.",type:"keyword"},"log.syslog.msgid":{dashed_name:"log-syslog-msgid",description:"An identifier for the type of Syslog message, if available. Only applicable for RFC 5424 messages.",example:"ID47",flat_name:"log.syslog.msgid",ignore_above:1024,level:"extended",name:"syslog.msgid",normalize:[],short:"An identifier for the type of Syslog message.",type:"keyword"},"log.syslog.priority":{dashed_name:"log-syslog-priority",description:"Syslog numeric priority of the event, if available.\nAccording to RFCs 5424 and 3164, the priority is 8 * facility + severity. This number is therefore expected to contain a value between 0 and 191.",example:135,flat_name:"log.syslog.priority",format:"string",level:"extended",name:"syslog.priority",normalize:[],short:"Syslog priority of the event.",type:"long"},"log.syslog.procid":{dashed_name:"log-syslog-procid",description:"The process name or ID that originated the Syslog message, if available.",example:12345,flat_name:"log.syslog.procid",ignore_above:1024,level:"extended",name:"syslog.procid",normalize:[],short:"The process name or ID that originated the Syslog message.",type:"keyword"},"log.syslog.severity.code":{dashed_name:"log-syslog-severity-code",description:"The Syslog numeric severity of the log event, if available.\nIf the event source publishing via Syslog provides a different numeric severity value (e.g. firewall, IDS), your source's numeric severity should go to `event.severity`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `event.severity`.",example:3,flat_name:"log.syslog.severity.code",level:"extended",name:"syslog.severity.code",normalize:[],short:"Syslog numeric severity of the event.",type:"long"},"log.syslog.severity.name":{dashed_name:"log-syslog-severity-name",description:"The Syslog numeric severity of the log event, if available.\nIf the event source publishing via Syslog provides a different severity value (e.g. firewall, IDS), your source's text severity should go to `log.level`. If the event source does not specify a distinct severity, you can optionally copy the Syslog severity to `log.level`.",example:"Error",flat_name:"log.syslog.severity.name",ignore_above:1024,level:"extended",name:"syslog.severity.name",normalize:[],short:"Syslog text-based severity of the event.",type:"keyword"},"log.syslog.structured_data":{dashed_name:"log-syslog-structured-data",description:"Structured data expressed in RFC 5424 messages, if available. These are key-value pairs formed from the structured data portion of the syslog message, as defined in RFC 5424 Section 6.3.",flat_name:"log.syslog.structured_data",level:"extended",name:"syslog.structured_data",normalize:[],short:"Structured data expressed in RFC 5424 messages.",type:"flattened"},"log.syslog.version":{dashed_name:"log-syslog-version",description:"The version of the Syslog protocol specification. Only applicable for RFC 5424 messages.",example:1,flat_name:"log.syslog.version",ignore_above:1024,level:"extended",name:"syslog.version",normalize:[],short:"Syslog protocol version.",type:"keyword"},message:{dashed_name:"message",description:"For log events the message field contains the log message, optimized for viewing in a log viewer.\nFor structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event.\nIf multiple messages exist, they can be combined into one message.",example:"Hello World",flat_name:"message",level:"core",name:"message",normalize:[],short:"Log message optimized for viewing in a log viewer.",type:"match_only_text"},"network.application":{dashed_name:"network-application",description:"When a specific application or service is identified from network connection details (source/dest IPs, ports, certificates, or wire format), this field captures the application's or service's name.\nFor example, the original event identifies the network connection being from a specific web service in a `https` network connection, like `facebook` or `twitter`.\nThe field value must be normalized to lowercase for querying.",example:"aim",flat_name:"network.application",ignore_above:1024,level:"extended",name:"application",normalize:[],short:"Application level protocol name.",type:"keyword"},"network.bytes":{dashed_name:"network-bytes",description:"Total bytes transferred in both directions.\nIf `source.bytes` and `destination.bytes` are known, `network.bytes` is their sum.",example:368,flat_name:"network.bytes",format:"bytes",level:"core",name:"bytes",normalize:[],short:"Total bytes transferred in both directions.",type:"long"},"network.community_id":{dashed_name:"network-community-id",description:"A hash of source and destination IPs and ports, as well as the protocol used in a communication. This is a tool-agnostic standard to identify flows.\nLearn more at https://github.com/corelight/community-id-spec.",example:"1:hO+sN4H+MG5MY/8hIrXPqc4ZQz0=",flat_name:"network.community_id",ignore_above:1024,level:"extended",name:"community_id",normalize:[],short:"A hash of source and destination IPs and ports.",type:"keyword"},"network.direction":{dashed_name:"network-direction",description:'Direction of the network traffic.\nWhen mapping events from a host-based monitoring context, populate this field from the host\'s point of view, using the values "ingress" or "egress".\nWhen mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of the network perimeter, using the values "inbound", "outbound", "internal" or "external".\nNote that "internal" is not crossing perimeter boundaries, and is meant to describe communication between two hosts within the perimeter. Note also that "external" is meant to describe traffic between two hosts that are external to the perimeter. This could for example be useful for ISPs or VPN service providers.',example:"inbound",expected_values:["ingress","egress","inbound","outbound","internal","external","unknown"],flat_name:"network.direction",ignore_above:1024,level:"core",name:"direction",normalize:[],short:"Direction of the network traffic.",type:"keyword"},"network.forwarded_ip":{dashed_name:"network-forwarded-ip",description:"Host IP address when the source IP address is the proxy.",example:"192.1.1.2",flat_name:"network.forwarded_ip",level:"core",name:"forwarded_ip",normalize:[],short:"Host IP address when the source IP address is the proxy.",type:"ip"},"network.iana_number":{dashed_name:"network-iana-number",description:"IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml). Standardized list of protocols. This aligns well with NetFlow and sFlow related logs which use the IANA Protocol Number.",example:6,flat_name:"network.iana_number",ignore_above:1024,level:"extended",name:"iana_number",normalize:[],short:"IANA Protocol Number.",type:"keyword"},"network.inner":{dashed_name:"network-inner",description:"Network.inner fields are added in addition to network.vlan fields to describe the innermost VLAN when q-in-q VLAN tagging is present. Allowed fields include vlan.id and vlan.name. Inner vlan fields are typically used when sending traffic with multiple 802.1q encapsulations to a network sensor (e.g. Zeek, Wireshark.)",flat_name:"network.inner",level:"extended",name:"inner",normalize:[],short:"Inner VLAN tag information",type:"object"},"network.inner.vlan.id":{dashed_name:"network-inner-vlan-id",description:"VLAN ID as reported by the observer.",example:10,flat_name:"network.inner.vlan.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"vlan",short:"VLAN ID as reported by the observer.",type:"keyword"},"network.inner.vlan.name":{dashed_name:"network-inner-vlan-name",description:"Optional VLAN name as reported by the observer.",example:"outside",flat_name:"network.inner.vlan.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"vlan",short:"Optional VLAN name as reported by the observer.",type:"keyword"},"network.name":{dashed_name:"network-name",description:"Name given by operators to sections of their network.",example:"Guest Wifi",flat_name:"network.name",ignore_above:1024,level:"extended",name:"name",normalize:[],short:"Name given by operators to sections of their network.",type:"keyword"},"network.packets":{dashed_name:"network-packets",description:"Total packets transferred in both directions.\nIf `source.packets` and `destination.packets` are known, `network.packets` is their sum.",example:24,flat_name:"network.packets",level:"core",name:"packets",normalize:[],short:"Total packets transferred in both directions.",type:"long"},"network.protocol":{dashed_name:"network-protocol",description:"In the OSI Model this would be the Application Layer protocol. For example, `http`, `dns`, or `ssh`.\nThe field value must be normalized to lowercase for querying.",example:"http",flat_name:"network.protocol",ignore_above:1024,level:"core",name:"protocol",normalize:[],short:"Application protocol name.",type:"keyword"},"network.transport":{dashed_name:"network-transport",description:"Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.)\nThe field value must be normalized to lowercase for querying.",example:"tcp",flat_name:"network.transport",ignore_above:1024,level:"core",name:"transport",normalize:[],short:"Protocol Name corresponding to the field `iana_number`.",type:"keyword"},"network.type":{dashed_name:"network-type",description:"In the OSI Model this would be the Network Layer. ipv4, ipv6, ipsec, pim, etc\nThe field value must be normalized to lowercase for querying.",example:"ipv4",flat_name:"network.type",ignore_above:1024,level:"core",name:"type",normalize:[],short:"In the OSI Model this would be the Network Layer. ipv4, ipv6, ipsec, pim, etc",type:"keyword"},"network.vlan.id":{dashed_name:"network-vlan-id",description:"VLAN ID as reported by the observer.",example:10,flat_name:"network.vlan.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"vlan",short:"VLAN ID as reported by the observer.",type:"keyword"},"network.vlan.name":{dashed_name:"network-vlan-name",description:"Optional VLAN name as reported by the observer.",example:"outside",flat_name:"network.vlan.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"vlan",short:"Optional VLAN name as reported by the observer.",type:"keyword"},"observer.egress":{dashed_name:"observer-egress",description:"Observer.egress holds information like interface number and name, vlan, and zone information to classify egress traffic.  Single armed monitoring such as a network sensor on a span port should only use observer.ingress to categorize traffic.",flat_name:"observer.egress",level:"extended",name:"egress",normalize:[],short:"Object field for egress information",type:"object"},"observer.egress.interface.alias":{dashed_name:"observer-egress-interface-alias",description:"Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.",example:"outside",flat_name:"observer.egress.interface.alias",ignore_above:1024,level:"extended",name:"alias",normalize:[],original_fieldset:"interface",short:"Interface alias",type:"keyword"},"observer.egress.interface.id":{dashed_name:"observer-egress-interface-id",description:"Interface ID as reported by an observer (typically SNMP interface ID).",example:10,flat_name:"observer.egress.interface.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"interface",short:"Interface ID",type:"keyword"},"observer.egress.interface.name":{dashed_name:"observer-egress-interface-name",description:"Interface name as reported by the system.",example:"eth0",flat_name:"observer.egress.interface.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"interface",short:"Interface name",type:"keyword"},"observer.egress.vlan.id":{dashed_name:"observer-egress-vlan-id",description:"VLAN ID as reported by the observer.",example:10,flat_name:"observer.egress.vlan.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"vlan",short:"VLAN ID as reported by the observer.",type:"keyword"},"observer.egress.vlan.name":{dashed_name:"observer-egress-vlan-name",description:"Optional VLAN name as reported by the observer.",example:"outside",flat_name:"observer.egress.vlan.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"vlan",short:"Optional VLAN name as reported by the observer.",type:"keyword"},"observer.egress.zone":{dashed_name:"observer-egress-zone",description:"Network zone of outbound traffic as reported by the observer to categorize the destination area of egress traffic, e.g. Internal, External, DMZ, HR, Legal, etc.",example:"Public_Internet",flat_name:"observer.egress.zone",ignore_above:1024,level:"extended",name:"egress.zone",normalize:[],short:"Observer Egress zone",type:"keyword"},"observer.geo.city_name":{dashed_name:"observer-geo-city-name",description:"City name.",example:"Montreal",flat_name:"observer.geo.city_name",ignore_above:1024,level:"core",name:"city_name",normalize:[],original_fieldset:"geo",short:"City name.",type:"keyword"},"observer.geo.continent_code":{dashed_name:"observer-geo-continent-code",description:"Two-letter code representing continent's name.",example:"NA",flat_name:"observer.geo.continent_code",ignore_above:1024,level:"core",name:"continent_code",normalize:[],original_fieldset:"geo",short:"Continent code.",type:"keyword"},"observer.geo.continent_name":{dashed_name:"observer-geo-continent-name",description:"Name of the continent.",example:"North America",flat_name:"observer.geo.continent_name",ignore_above:1024,level:"core",name:"continent_name",normalize:[],original_fieldset:"geo",short:"Name of the continent.",type:"keyword"},"observer.geo.country_iso_code":{dashed_name:"observer-geo-country-iso-code",description:"Country ISO code.",example:"CA",flat_name:"observer.geo.country_iso_code",ignore_above:1024,level:"core",name:"country_iso_code",normalize:[],original_fieldset:"geo",short:"Country ISO code.",type:"keyword"},"observer.geo.country_name":{dashed_name:"observer-geo-country-name",description:"Country name.",example:"Canada",flat_name:"observer.geo.country_name",ignore_above:1024,level:"core",name:"country_name",normalize:[],original_fieldset:"geo",short:"Country name.",type:"keyword"},"observer.geo.location":{dashed_name:"observer-geo-location",description:"Longitude and latitude.",example:'{ "lon": -73.614830, "lat": 45.505918 }',flat_name:"observer.geo.location",level:"core",name:"location",normalize:[],original_fieldset:"geo",short:"Longitude and latitude.",type:"geo_point"},"observer.geo.name":{dashed_name:"observer-geo-name",description:"User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",example:"boston-dc",flat_name:"observer.geo.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"geo",short:"User-defined description of a location.",type:"keyword"},"observer.geo.postal_code":{dashed_name:"observer-geo-postal-code",description:"Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",example:94040,flat_name:"observer.geo.postal_code",ignore_above:1024,level:"core",name:"postal_code",normalize:[],original_fieldset:"geo",short:"Postal code.",type:"keyword"},"observer.geo.region_iso_code":{dashed_name:"observer-geo-region-iso-code",description:"Region ISO code.",example:"CA-QC",flat_name:"observer.geo.region_iso_code",ignore_above:1024,level:"core",name:"region_iso_code",normalize:[],original_fieldset:"geo",short:"Region ISO code.",type:"keyword"},"observer.geo.region_name":{dashed_name:"observer-geo-region-name",description:"Region name.",example:"Quebec",flat_name:"observer.geo.region_name",ignore_above:1024,level:"core",name:"region_name",normalize:[],original_fieldset:"geo",short:"Region name.",type:"keyword"},"observer.geo.timezone":{dashed_name:"observer-geo-timezone",description:"The time zone of the location, such as IANA time zone name.",example:"America/Argentina/Buenos_Aires",flat_name:"observer.geo.timezone",ignore_above:1024,level:"core",name:"timezone",normalize:[],original_fieldset:"geo",short:"Time zone.",type:"keyword"},"observer.hostname":{dashed_name:"observer-hostname",description:"Hostname of the observer.",flat_name:"observer.hostname",ignore_above:1024,level:"core",name:"hostname",normalize:[],short:"Hostname of the observer.",type:"keyword"},"observer.ingress":{dashed_name:"observer-ingress",description:"Observer.ingress holds information like interface number and name, vlan, and zone information to classify ingress traffic.  Single armed monitoring such as a network sensor on a span port should only use observer.ingress to categorize traffic.",flat_name:"observer.ingress",level:"extended",name:"ingress",normalize:[],short:"Object field for ingress information",type:"object"},"observer.ingress.interface.alias":{dashed_name:"observer-ingress-interface-alias",description:"Interface alias as reported by the system, typically used in firewall implementations for e.g. inside, outside, or dmz logical interface naming.",example:"outside",flat_name:"observer.ingress.interface.alias",ignore_above:1024,level:"extended",name:"alias",normalize:[],original_fieldset:"interface",short:"Interface alias",type:"keyword"},"observer.ingress.interface.id":{dashed_name:"observer-ingress-interface-id",description:"Interface ID as reported by an observer (typically SNMP interface ID).",example:10,flat_name:"observer.ingress.interface.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"interface",short:"Interface ID",type:"keyword"},"observer.ingress.interface.name":{dashed_name:"observer-ingress-interface-name",description:"Interface name as reported by the system.",example:"eth0",flat_name:"observer.ingress.interface.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"interface",short:"Interface name",type:"keyword"},"observer.ingress.vlan.id":{dashed_name:"observer-ingress-vlan-id",description:"VLAN ID as reported by the observer.",example:10,flat_name:"observer.ingress.vlan.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"vlan",short:"VLAN ID as reported by the observer.",type:"keyword"},"observer.ingress.vlan.name":{dashed_name:"observer-ingress-vlan-name",description:"Optional VLAN name as reported by the observer.",example:"outside",flat_name:"observer.ingress.vlan.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"vlan",short:"Optional VLAN name as reported by the observer.",type:"keyword"},"observer.ingress.zone":{dashed_name:"observer-ingress-zone",description:"Network zone of incoming traffic as reported by the observer to categorize the source area of ingress traffic. e.g. internal, External, DMZ, HR, Legal, etc.",example:"DMZ",flat_name:"observer.ingress.zone",ignore_above:1024,level:"extended",name:"ingress.zone",normalize:[],short:"Observer ingress zone",type:"keyword"},"observer.ip":{dashed_name:"observer-ip",description:"IP addresses of the observer.",flat_name:"observer.ip",level:"core",name:"ip",normalize:["array"],short:"IP addresses of the observer.",type:"ip"},"observer.mac":{dashed_name:"observer-mac",description:"MAC addresses of the observer.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",example:'["00-00-5E-00-53-23", "00-00-5E-00-53-24"]',flat_name:"observer.mac",ignore_above:1024,level:"core",name:"mac",normalize:["array"],pattern:"^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$",short:"MAC addresses of the observer.",type:"keyword"},"observer.name":{dashed_name:"observer-name",description:"Custom name of the observer.\nThis is a name that can be given to an observer. This can be helpful for example if multiple firewalls of the same model are used in an organization.\nIf no custom name is needed, the field can be left empty.",example:"1_proxySG",flat_name:"observer.name",ignore_above:1024,level:"extended",name:"name",normalize:[],short:"Custom name of the observer.",type:"keyword"},"observer.os.family":{dashed_name:"observer-os-family",description:"OS family (such as redhat, debian, freebsd, windows).",example:"debian",flat_name:"observer.os.family",ignore_above:1024,level:"extended",name:"family",normalize:[],original_fieldset:"os",short:"OS family (such as redhat, debian, freebsd, windows).",type:"keyword"},"observer.os.full":{dashed_name:"observer-os-full",description:"Operating system name, including the version or code name.",example:"Mac OS Mojave",flat_name:"observer.os.full",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"observer.os.full.text",name:"text",type:"match_only_text"}],name:"full",normalize:[],original_fieldset:"os",short:"Operating system name, including the version or code name.",type:"keyword"},"observer.os.kernel":{dashed_name:"observer-os-kernel",description:"Operating system kernel version as a raw string.",example:"4.4.0-112-generic",flat_name:"observer.os.kernel",ignore_above:1024,level:"extended",name:"kernel",normalize:[],original_fieldset:"os",short:"Operating system kernel version as a raw string.",type:"keyword"},"observer.os.name":{dashed_name:"observer-os-name",description:"Operating system name, without the version.",example:"Mac OS X",flat_name:"observer.os.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"observer.os.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"os",short:"Operating system name, without the version.",type:"keyword"},"observer.os.platform":{dashed_name:"observer-os-platform",description:"Operating system platform (such centos, ubuntu, windows).",example:"darwin",flat_name:"observer.os.platform",ignore_above:1024,level:"extended",name:"platform",normalize:[],original_fieldset:"os",short:"Operating system platform (such centos, ubuntu, windows).",type:"keyword"},"observer.os.type":{dashed_name:"observer-os-type",description:"Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nIf the OS you're dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.",example:"macos",expected_values:["linux","macos","unix","windows","ios","android"],flat_name:"observer.os.type",ignore_above:1024,level:"extended",name:"type",normalize:[],original_fieldset:"os",short:"Which commercial OS family (one of: linux, macos, unix, windows, ios or android).",type:"keyword"},"observer.os.version":{dashed_name:"observer-os-version",description:"Operating system version as a raw string.",example:"10.14.1",flat_name:"observer.os.version",ignore_above:1024,level:"extended",name:"version",normalize:[],original_fieldset:"os",short:"Operating system version as a raw string.",type:"keyword"},"observer.product":{dashed_name:"observer-product",description:"The product name of the observer.",example:"s200",flat_name:"observer.product",ignore_above:1024,level:"extended",name:"product",normalize:[],short:"The product name of the observer.",type:"keyword"},"observer.serial_number":{dashed_name:"observer-serial-number",description:"Observer serial number.",flat_name:"observer.serial_number",ignore_above:1024,level:"extended",name:"serial_number",normalize:[],short:"Observer serial number.",type:"keyword"},"observer.type":{dashed_name:"observer-type",description:"The type of the observer the data is coming from.\nThere is no predefined list of observer types. Some examples are `forwarder`, `firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`.",example:"firewall",flat_name:"observer.type",ignore_above:1024,level:"core",name:"type",normalize:[],short:"The type of the observer the data is coming from.",type:"keyword"},"observer.vendor":{dashed_name:"observer-vendor",description:"Vendor name of the observer.",example:"Symantec",flat_name:"observer.vendor",ignore_above:1024,level:"core",name:"vendor",normalize:[],short:"Vendor name of the observer.",type:"keyword"},"observer.version":{dashed_name:"observer-version",description:"Observer version.",flat_name:"observer.version",ignore_above:1024,level:"core",name:"version",normalize:[],short:"Observer version.",type:"keyword"},"orchestrator.api_version":{dashed_name:"orchestrator-api-version",description:"API version being used to carry out the action",example:"v1beta1",flat_name:"orchestrator.api_version",ignore_above:1024,level:"extended",name:"api_version",normalize:[],short:"API version being used to carry out the action",type:"keyword"},"orchestrator.cluster.id":{dashed_name:"orchestrator-cluster-id",description:"Unique ID of the cluster.",flat_name:"orchestrator.cluster.id",ignore_above:1024,level:"extended",name:"cluster.id",normalize:[],short:"Unique ID of the cluster.",type:"keyword"},"orchestrator.cluster.name":{dashed_name:"orchestrator-cluster-name",description:"Name of the cluster.",flat_name:"orchestrator.cluster.name",ignore_above:1024,level:"extended",name:"cluster.name",normalize:[],short:"Name of the cluster.",type:"keyword"},"orchestrator.cluster.url":{dashed_name:"orchestrator-cluster-url",description:"URL of the API used to manage the cluster.",flat_name:"orchestrator.cluster.url",ignore_above:1024,level:"extended",name:"cluster.url",normalize:[],short:"URL of the API used to manage the cluster.",type:"keyword"},"orchestrator.cluster.version":{dashed_name:"orchestrator-cluster-version",description:"The version of the cluster.",flat_name:"orchestrator.cluster.version",ignore_above:1024,level:"extended",name:"cluster.version",normalize:[],short:"The version of the cluster.",type:"keyword"},"orchestrator.namespace":{dashed_name:"orchestrator-namespace",description:"Namespace in which the action is taking place.",example:"kube-system",flat_name:"orchestrator.namespace",ignore_above:1024,level:"extended",name:"namespace",normalize:[],short:"Namespace in which the action is taking place.",type:"keyword"},"orchestrator.organization":{dashed_name:"orchestrator-organization",description:"Organization affected by the event (for multi-tenant orchestrator setups).",example:"elastic",flat_name:"orchestrator.organization",ignore_above:1024,level:"extended",name:"organization",normalize:[],short:"Organization affected by the event (for multi-tenant orchestrator setups).",type:"keyword"},"orchestrator.resource.annotation":{dashed_name:"orchestrator-resource-annotation",description:"The list of annotations added to the resource.",example:"['key1:value1', 'key2:value2', 'key3:value3']",flat_name:"orchestrator.resource.annotation",ignore_above:1024,level:"extended",name:"resource.annotation",normalize:["array"],short:"The list of annotations added to the resource.",type:"keyword"},"orchestrator.resource.id":{dashed_name:"orchestrator-resource-id",description:"Unique ID of the resource being acted upon.",flat_name:"orchestrator.resource.id",ignore_above:1024,level:"extended",name:"resource.id",normalize:[],short:"Unique ID of the resource being acted upon.",type:"keyword"},"orchestrator.resource.ip":{dashed_name:"orchestrator-resource-ip",description:"IP address assigned to the resource associated with the event being observed. In the case of a Kubernetes Pod, this array would contain only one element: the IP of the Pod (as opposed to the Node on which the Pod is running).",flat_name:"orchestrator.resource.ip",level:"extended",name:"resource.ip",normalize:["array"],short:"IP address assigned to the resource associated with the event being observed.",type:"ip"},"orchestrator.resource.label":{dashed_name:"orchestrator-resource-label",description:"The list of labels added to the resource.",example:"['key1:value1', 'key2:value2', 'key3:value3']",flat_name:"orchestrator.resource.label",ignore_above:1024,level:"extended",name:"resource.label",normalize:["array"],short:"The list of labels added to the resource.",type:"keyword"},"orchestrator.resource.name":{dashed_name:"orchestrator-resource-name",description:"Name of the resource being acted upon.",example:"test-pod-cdcws",flat_name:"orchestrator.resource.name",ignore_above:1024,level:"extended",name:"resource.name",normalize:[],short:"Name of the resource being acted upon.",type:"keyword"},"orchestrator.resource.parent.type":{dashed_name:"orchestrator-resource-parent-type",description:"Type or kind of the parent resource associated with the event being observed. In Kubernetes, this will be the name of a built-in workload resource (e.g., Deployment, StatefulSet, DaemonSet).",example:"DaemonSet",flat_name:"orchestrator.resource.parent.type",ignore_above:1024,level:"extended",name:"resource.parent.type",normalize:[],short:"Type or kind of the parent resource associated with the event being observed.",type:"keyword"},"orchestrator.resource.type":{dashed_name:"orchestrator-resource-type",description:"Type of resource being acted upon.",example:"service",flat_name:"orchestrator.resource.type",ignore_above:1024,level:"extended",name:"resource.type",normalize:[],short:"Type of resource being acted upon.",type:"keyword"},"orchestrator.type":{dashed_name:"orchestrator-type",description:"Orchestrator cluster type (e.g. kubernetes, nomad or cloudfoundry).",example:"kubernetes",flat_name:"orchestrator.type",ignore_above:1024,level:"extended",name:"type",normalize:[],short:"Orchestrator cluster type (e.g. kubernetes, nomad or cloudfoundry).",type:"keyword"},"organization.id":{dashed_name:"organization-id",description:"Unique identifier for the organization.",flat_name:"organization.id",ignore_above:1024,level:"extended",name:"id",normalize:[],short:"Unique identifier for the organization.",type:"keyword"},"organization.name":{dashed_name:"organization-name",description:"Organization name.",flat_name:"organization.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"organization.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],short:"Organization name.",type:"keyword"},"package.architecture":{dashed_name:"package-architecture",description:"Package architecture.",example:"x86_64",flat_name:"package.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],short:"Package architecture.",type:"keyword"},"package.build_version":{dashed_name:"package-build-version",description:"Additional information about the build version of the installed package.\nFor example use the commit SHA of a non-released package.",example:"36f4f7e89dd61b0988b12ee000b98966867710cd",flat_name:"package.build_version",ignore_above:1024,level:"extended",name:"build_version",normalize:[],short:"Build version information",type:"keyword"},"package.checksum":{dashed_name:"package-checksum",description:"Checksum of the installed package for verification.",example:"68b329da9893e34099c7d8ad5cb9c940",flat_name:"package.checksum",ignore_above:1024,level:"extended",name:"checksum",normalize:[],short:"Checksum of the installed package for verification.",type:"keyword"},"package.description":{dashed_name:"package-description",description:"Description of the package.",example:"Open source programming language to build simple/reliable/efficient software.",flat_name:"package.description",ignore_above:1024,level:"extended",name:"description",normalize:[],short:"Description of the package.",type:"keyword"},"package.install_scope":{dashed_name:"package-install-scope",description:"Indicating how the package was installed, e.g. user-local, global.",example:"global",flat_name:"package.install_scope",ignore_above:1024,level:"extended",name:"install_scope",normalize:[],short:"Indicating how the package was installed, e.g. user-local, global.",type:"keyword"},"package.installed":{dashed_name:"package-installed",description:"Time when package was installed.",flat_name:"package.installed",level:"extended",name:"installed",normalize:[],short:"Time when package was installed.",type:"date"},"package.license":{dashed_name:"package-license",description:"License under which the package was released.\nUse a short name, e.g. the license identifier from SPDX License List where possible (https://spdx.org/licenses/).",example:"Apache License 2.0",flat_name:"package.license",ignore_above:1024,level:"extended",name:"license",normalize:[],short:"Package license",type:"keyword"},"package.name":{dashed_name:"package-name",description:"Package name",example:"go",flat_name:"package.name",ignore_above:1024,level:"extended",name:"name",normalize:[],short:"Package name",type:"keyword"},"package.path":{dashed_name:"package-path",description:"Path where the package is installed.",example:"/usr/local/Cellar/go/1.12.9/",flat_name:"package.path",ignore_above:1024,level:"extended",name:"path",normalize:[],short:"Path where the package is installed.",type:"keyword"},"package.reference":{dashed_name:"package-reference",description:"Home page or reference URL of the software in this package, if available.",example:"https://golang.org",flat_name:"package.reference",ignore_above:1024,level:"extended",name:"reference",normalize:[],short:"Package home page or reference URL",type:"keyword"},"package.size":{dashed_name:"package-size",description:"Package size in bytes.",example:62231,flat_name:"package.size",format:"string",level:"extended",name:"size",normalize:[],short:"Package size in bytes.",type:"long"},"package.type":{dashed_name:"package-type",description:"Type of package.\nThis should contain the package file type, rather than the package manager name. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar.",example:"rpm",flat_name:"package.type",ignore_above:1024,level:"extended",name:"type",normalize:[],short:"Package type",type:"keyword"},"package.version":{dashed_name:"package-version",description:"Package version",example:"1.12.9",flat_name:"package.version",ignore_above:1024,level:"extended",name:"version",normalize:[],short:"Package version",type:"keyword"},"process.args":{dashed_name:"process-args",description:"Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.",example:'["/usr/bin/ssh", "-l", "user", "10.0.0.16"]',flat_name:"process.args",ignore_above:1024,level:"extended",name:"args",normalize:["array"],short:"Array of process arguments.",type:"keyword"},"process.args_count":{dashed_name:"process-args-count",description:"Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.",example:4,flat_name:"process.args_count",level:"extended",name:"args_count",normalize:[],short:"Length of the process.args array.",type:"long"},"process.code_signature.digest_algorithm":{dashed_name:"process-code-signature-digest-algorithm",description:"The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",example:"sha256",flat_name:"process.code_signature.digest_algorithm",ignore_above:1024,level:"extended",name:"digest_algorithm",normalize:[],original_fieldset:"code_signature",short:"Hashing algorithm used to sign the process.",type:"keyword"},"process.code_signature.exists":{dashed_name:"process-code-signature-exists",description:"Boolean to capture if a signature is present.",example:"true",flat_name:"process.code_signature.exists",level:"core",name:"exists",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if a signature is present.",type:"boolean"},"process.code_signature.signing_id":{dashed_name:"process-code-signature-signing-id",description:"The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",example:"com.apple.xpc.proxy",flat_name:"process.code_signature.signing_id",ignore_above:1024,level:"extended",name:"signing_id",normalize:[],original_fieldset:"code_signature",short:"The identifier used to sign the process.",type:"keyword"},"process.code_signature.status":{dashed_name:"process-code-signature-status",description:"Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",example:"ERROR_UNTRUSTED_ROOT",flat_name:"process.code_signature.status",ignore_above:1024,level:"extended",name:"status",normalize:[],original_fieldset:"code_signature",short:"Additional information about the certificate status.",type:"keyword"},"process.code_signature.subject_name":{dashed_name:"process-code-signature-subject-name",description:"Subject name of the code signer",example:"Microsoft Corporation",flat_name:"process.code_signature.subject_name",ignore_above:1024,level:"core",name:"subject_name",normalize:[],original_fieldset:"code_signature",short:"Subject name of the code signer",type:"keyword"},"process.code_signature.team_id":{dashed_name:"process-code-signature-team-id",description:"The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",example:"EQHXZ8M8AV",flat_name:"process.code_signature.team_id",ignore_above:1024,level:"extended",name:"team_id",normalize:[],original_fieldset:"code_signature",short:"The team identifier used to sign the process.",type:"keyword"},"process.code_signature.timestamp":{dashed_name:"process-code-signature-timestamp",description:"Date and time when the code signature was generated and signed.",example:"2021-01-01T12:10:30Z",flat_name:"process.code_signature.timestamp",level:"extended",name:"timestamp",normalize:[],original_fieldset:"code_signature",short:"When the signature was generated and signed.",type:"date"},"process.code_signature.trusted":{dashed_name:"process-code-signature-trusted",description:"Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",example:"true",flat_name:"process.code_signature.trusted",level:"extended",name:"trusted",normalize:[],original_fieldset:"code_signature",short:"Stores the trust status of the certificate chain.",type:"boolean"},"process.code_signature.valid":{dashed_name:"process-code-signature-valid",description:"Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",example:"true",flat_name:"process.code_signature.valid",level:"extended",name:"valid",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if the digital signature is verified against the binary content.",type:"boolean"},"process.command_line":{dashed_name:"process-command-line",description:"Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information.",example:"/usr/bin/ssh -l user 10.0.0.16",flat_name:"process.command_line",level:"extended",multi_fields:[{flat_name:"process.command_line.text",name:"text",type:"match_only_text"}],name:"command_line",normalize:[],short:"Full command line that started the process.",type:"wildcard"},"process.elf.architecture":{dashed_name:"process-elf-architecture",description:"Machine architecture of the ELF file.",example:"x86-64",flat_name:"process.elf.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"elf",short:"Machine architecture of the ELF file.",type:"keyword"},"process.elf.byte_order":{dashed_name:"process-elf-byte-order",description:"Byte sequence of ELF file.",example:"Little Endian",flat_name:"process.elf.byte_order",ignore_above:1024,level:"extended",name:"byte_order",normalize:[],original_fieldset:"elf",short:"Byte sequence of ELF file.",type:"keyword"},"process.elf.cpu_type":{dashed_name:"process-elf-cpu-type",description:"CPU type of the ELF file.",example:"Intel",flat_name:"process.elf.cpu_type",ignore_above:1024,level:"extended",name:"cpu_type",normalize:[],original_fieldset:"elf",short:"CPU type of the ELF file.",type:"keyword"},"process.elf.creation_date":{dashed_name:"process-elf-creation-date",description:"Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",flat_name:"process.elf.creation_date",level:"extended",name:"creation_date",normalize:[],original_fieldset:"elf",short:"Build or compile date.",type:"date"},"process.elf.exports":{dashed_name:"process-elf-exports",description:"List of exported element names and types.",flat_name:"process.elf.exports",level:"extended",name:"exports",normalize:["array"],original_fieldset:"elf",short:"List of exported element names and types.",type:"flattened"},"process.elf.go_import_hash":{dashed_name:"process-elf-go-import-hash",description:"A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"process.elf.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the Go language imports in an ELF file.",type:"keyword"},"process.elf.go_imports":{dashed_name:"process-elf-go-imports",description:"List of imported Go language element names and types.",flat_name:"process.elf.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"elf",short:"List of imported Go language element names and types.",type:"flattened"},"process.elf.go_imports_names_entropy":{dashed_name:"process-elf-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"process.elf.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"process.elf.go_imports_names_var_entropy":{dashed_name:"process-elf-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"process.elf.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"process.elf.go_stripped":{dashed_name:"process-elf-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"process.elf.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"elf",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"process.elf.header.abi_version":{dashed_name:"process-elf-header-abi-version",description:"Version of the ELF Application Binary Interface (ABI).",flat_name:"process.elf.header.abi_version",ignore_above:1024,level:"extended",name:"header.abi_version",normalize:[],original_fieldset:"elf",short:"Version of the ELF Application Binary Interface (ABI).",type:"keyword"},"process.elf.header.class":{dashed_name:"process-elf-header-class",description:"Header class of the ELF file.",flat_name:"process.elf.header.class",ignore_above:1024,level:"extended",name:"header.class",normalize:[],original_fieldset:"elf",short:"Header class of the ELF file.",type:"keyword"},"process.elf.header.data":{dashed_name:"process-elf-header-data",description:"Data table of the ELF header.",flat_name:"process.elf.header.data",ignore_above:1024,level:"extended",name:"header.data",normalize:[],original_fieldset:"elf",short:"Data table of the ELF header.",type:"keyword"},"process.elf.header.entrypoint":{dashed_name:"process-elf-header-entrypoint",description:"Header entrypoint of the ELF file.",flat_name:"process.elf.header.entrypoint",format:"string",level:"extended",name:"header.entrypoint",normalize:[],original_fieldset:"elf",short:"Header entrypoint of the ELF file.",type:"long"},"process.elf.header.object_version":{dashed_name:"process-elf-header-object-version",description:'"0x1" for original ELF files.',flat_name:"process.elf.header.object_version",ignore_above:1024,level:"extended",name:"header.object_version",normalize:[],original_fieldset:"elf",short:'"0x1" for original ELF files.',type:"keyword"},"process.elf.header.os_abi":{dashed_name:"process-elf-header-os-abi",description:"Application Binary Interface (ABI) of the Linux OS.",flat_name:"process.elf.header.os_abi",ignore_above:1024,level:"extended",name:"header.os_abi",normalize:[],original_fieldset:"elf",short:"Application Binary Interface (ABI) of the Linux OS.",type:"keyword"},"process.elf.header.type":{dashed_name:"process-elf-header-type",description:"Header type of the ELF file.",flat_name:"process.elf.header.type",ignore_above:1024,level:"extended",name:"header.type",normalize:[],original_fieldset:"elf",short:"Header type of the ELF file.",type:"keyword"},"process.elf.header.version":{dashed_name:"process-elf-header-version",description:"Version of the ELF header.",flat_name:"process.elf.header.version",ignore_above:1024,level:"extended",name:"header.version",normalize:[],original_fieldset:"elf",short:"Version of the ELF header.",type:"keyword"},"process.elf.import_hash":{dashed_name:"process-elf-import-hash",description:"A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"process.elf.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the imports in an ELF file.",type:"keyword"},"process.elf.imports":{dashed_name:"process-elf-imports",description:"List of imported element names and types.",flat_name:"process.elf.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"elf",short:"List of imported element names and types.",type:"flattened"},"process.elf.imports_names_entropy":{dashed_name:"process-elf-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.elf.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.elf.imports_names_var_entropy":{dashed_name:"process-elf-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.elf.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.elf.sections":{dashed_name:"process-elf-sections",description:"An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",flat_name:"process.elf.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"elf",short:"Section information of the ELF file.",type:"nested"},"process.elf.sections.chi2":{dashed_name:"process-elf-sections-chi2",description:"Chi-square probability distribution of the section.",flat_name:"process.elf.sections.chi2",format:"number",level:"extended",name:"sections.chi2",normalize:[],original_fieldset:"elf",short:"Chi-square probability distribution of the section.",type:"long"},"process.elf.sections.entropy":{dashed_name:"process-elf-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"process.elf.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the section.",type:"long"},"process.elf.sections.flags":{dashed_name:"process-elf-sections-flags",description:"ELF Section List flags.",flat_name:"process.elf.sections.flags",ignore_above:1024,level:"extended",name:"sections.flags",normalize:[],original_fieldset:"elf",short:"ELF Section List flags.",type:"keyword"},"process.elf.sections.name":{dashed_name:"process-elf-sections-name",description:"ELF Section List name.",flat_name:"process.elf.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"elf",short:"ELF Section List name.",type:"keyword"},"process.elf.sections.physical_offset":{dashed_name:"process-elf-sections-physical-offset",description:"ELF Section List offset.",flat_name:"process.elf.sections.physical_offset",ignore_above:1024,level:"extended",name:"sections.physical_offset",normalize:[],original_fieldset:"elf",short:"ELF Section List offset.",type:"keyword"},"process.elf.sections.physical_size":{dashed_name:"process-elf-sections-physical-size",description:"ELF Section List physical size.",flat_name:"process.elf.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"elf",short:"ELF Section List physical size.",type:"long"},"process.elf.sections.type":{dashed_name:"process-elf-sections-type",description:"ELF Section List type.",flat_name:"process.elf.sections.type",ignore_above:1024,level:"extended",name:"sections.type",normalize:[],original_fieldset:"elf",short:"ELF Section List type.",type:"keyword"},"process.elf.sections.var_entropy":{dashed_name:"process-elf-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"process.elf.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"process.elf.sections.virtual_address":{dashed_name:"process-elf-sections-virtual-address",description:"ELF Section List virtual address.",flat_name:"process.elf.sections.virtual_address",format:"string",level:"extended",name:"sections.virtual_address",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual address.",type:"long"},"process.elf.sections.virtual_size":{dashed_name:"process-elf-sections-virtual-size",description:"ELF Section List virtual size.",flat_name:"process.elf.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual size.",type:"long"},"process.elf.segments":{dashed_name:"process-elf-segments",description:"An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",flat_name:"process.elf.segments",level:"extended",name:"segments",normalize:["array"],original_fieldset:"elf",short:"ELF object segment list.",type:"nested"},"process.elf.segments.sections":{dashed_name:"process-elf-segments-sections",description:"ELF object segment sections.",flat_name:"process.elf.segments.sections",ignore_above:1024,level:"extended",name:"segments.sections",normalize:[],original_fieldset:"elf",short:"ELF object segment sections.",type:"keyword"},"process.elf.segments.type":{dashed_name:"process-elf-segments-type",description:"ELF object segment type.",flat_name:"process.elf.segments.type",ignore_above:1024,level:"extended",name:"segments.type",normalize:[],original_fieldset:"elf",short:"ELF object segment type.",type:"keyword"},"process.elf.shared_libraries":{dashed_name:"process-elf-shared-libraries",description:"List of shared libraries used by this ELF object.",flat_name:"process.elf.shared_libraries",ignore_above:1024,level:"extended",name:"shared_libraries",normalize:["array"],original_fieldset:"elf",short:"List of shared libraries used by this ELF object.",type:"keyword"},"process.elf.telfhash":{dashed_name:"process-elf-telfhash",description:"telfhash symbol hash for ELF file.",flat_name:"process.elf.telfhash",ignore_above:1024,level:"extended",name:"telfhash",normalize:[],original_fieldset:"elf",short:"telfhash hash for ELF file.",type:"keyword"},"process.end":{dashed_name:"process-end",description:"The time the process ended.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.end",level:"extended",name:"end",normalize:[],short:"The time the process ended.",type:"date"},"process.entity_id":{dashed_name:"process-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],short:"Unique identifier for the process.",type:"keyword"},"process.entry_leader.args":{dashed_name:"process-entry-leader-args",description:"Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.",example:'["/usr/bin/ssh", "-l", "user", "10.0.0.16"]',flat_name:"process.entry_leader.args",ignore_above:1024,level:"extended",name:"args",normalize:["array"],original_fieldset:"process",short:"Array of process arguments.",type:"keyword"},"process.entry_leader.args_count":{dashed_name:"process-entry-leader-args-count",description:"Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.",example:4,flat_name:"process.entry_leader.args_count",level:"extended",name:"args_count",normalize:[],original_fieldset:"process",short:"Length of the process.args array.",type:"long"},"process.entry_leader.attested_groups.name":{dashed_name:"process-entry-leader-attested-groups-name",description:"Name of the group.",flat_name:"process.entry_leader.attested_groups.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.entry_leader.attested_user.id":{dashed_name:"process-entry-leader-attested-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.entry_leader.attested_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.entry_leader.attested_user.name":{dashed_name:"process-entry-leader-attested-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.entry_leader.attested_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.entry_leader.attested_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.entry_leader.command_line":{dashed_name:"process-entry-leader-command-line",description:"Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information.",example:"/usr/bin/ssh -l user 10.0.0.16",flat_name:"process.entry_leader.command_line",level:"extended",multi_fields:[{flat_name:"process.entry_leader.command_line.text",name:"text",type:"match_only_text"}],name:"command_line",normalize:[],original_fieldset:"process",short:"Full command line that started the process.",type:"wildcard"},"process.entry_leader.entity_id":{dashed_name:"process-entry-leader-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.entry_leader.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],original_fieldset:"process",short:"Unique identifier for the process.",type:"keyword"},"process.entry_leader.entry_meta.source.ip":{dashed_name:"process-entry-leader-entry-meta-source-ip",description:"IP address of the source (IPv4 or IPv6).",flat_name:"process.entry_leader.entry_meta.source.ip",level:"core",name:"ip",normalize:[],original_fieldset:"source",short:"IP address of the source.",type:"ip"},"process.entry_leader.entry_meta.type":{dashed_name:"process-entry-leader-entry-meta-type",description:"The entry type for the entry session leader. Values include: init(e.g systemd), sshd, ssm, kubelet, teleport, terminal, console\nNote: This field is only set on process.session_leader.",flat_name:"process.entry_leader.entry_meta.type",ignore_above:1024,level:"extended",name:"entry_meta.type",normalize:[],original_fieldset:"process",short:"The entry type for the entry session leader.",type:"keyword"},"process.entry_leader.executable":{dashed_name:"process-entry-leader-executable",description:"Absolute path to the process executable.",example:"/usr/bin/ssh",flat_name:"process.entry_leader.executable",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.entry_leader.executable.text",name:"text",type:"match_only_text"}],name:"executable",normalize:[],original_fieldset:"process",short:"Absolute path to the process executable.",type:"keyword"},"process.entry_leader.group.id":{dashed_name:"process-entry-leader-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.entry_leader.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.entry_leader.group.name":{dashed_name:"process-entry-leader-group-name",description:"Name of the group.",flat_name:"process.entry_leader.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.entry_leader.interactive":{dashed_name:"process-entry-leader-interactive",description:"Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.",example:!0,flat_name:"process.entry_leader.interactive",level:"extended",name:"interactive",normalize:[],original_fieldset:"process",short:"Whether the process is connected to an interactive shell.",type:"boolean"},"process.entry_leader.name":{dashed_name:"process-entry-leader-name",description:"Process name.\nSometimes called program name or similar.",example:"ssh",flat_name:"process.entry_leader.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.entry_leader.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"process",short:"Process name.",type:"keyword"},"process.entry_leader.parent.entity_id":{dashed_name:"process-entry-leader-parent-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.entry_leader.parent.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],original_fieldset:"process",short:"Unique identifier for the process.",type:"keyword"},"process.entry_leader.parent.pid":{dashed_name:"process-entry-leader-parent-pid",description:"Process id.",example:4242,flat_name:"process.entry_leader.parent.pid",format:"string",level:"core",name:"pid",normalize:[],original_fieldset:"process",short:"Process id.",type:"long"},"process.entry_leader.parent.session_leader.entity_id":{dashed_name:"process-entry-leader-parent-session-leader-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.entry_leader.parent.session_leader.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],original_fieldset:"process",short:"Unique identifier for the process.",type:"keyword"},"process.entry_leader.parent.session_leader.pid":{dashed_name:"process-entry-leader-parent-session-leader-pid",description:"Process id.",example:4242,flat_name:"process.entry_leader.parent.session_leader.pid",format:"string",level:"core",name:"pid",normalize:[],original_fieldset:"process",short:"Process id.",type:"long"},"process.entry_leader.parent.session_leader.start":{dashed_name:"process-entry-leader-parent-session-leader-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.entry_leader.parent.session_leader.start",level:"extended",name:"start",normalize:[],original_fieldset:"process",short:"The time the process started.",type:"date"},"process.entry_leader.parent.session_leader.vpid":{dashed_name:"process-entry-leader-parent-session-leader-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.entry_leader.parent.session_leader.vpid",format:"string",level:"core",name:"vpid",normalize:[],original_fieldset:"process",short:"Virtual process id.",type:"long"},"process.entry_leader.parent.start":{dashed_name:"process-entry-leader-parent-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.entry_leader.parent.start",level:"extended",name:"start",normalize:[],original_fieldset:"process",short:"The time the process started.",type:"date"},"process.entry_leader.parent.vpid":{dashed_name:"process-entry-leader-parent-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.entry_leader.parent.vpid",format:"string",level:"core",name:"vpid",normalize:[],original_fieldset:"process",short:"Virtual process id.",type:"long"},"process.entry_leader.pid":{dashed_name:"process-entry-leader-pid",description:"Process id.",example:4242,flat_name:"process.entry_leader.pid",format:"string",level:"core",name:"pid",normalize:[],original_fieldset:"process",short:"Process id.",type:"long"},"process.entry_leader.real_group.id":{dashed_name:"process-entry-leader-real-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.entry_leader.real_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.entry_leader.real_group.name":{dashed_name:"process-entry-leader-real-group-name",description:"Name of the group.",flat_name:"process.entry_leader.real_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.entry_leader.real_user.id":{dashed_name:"process-entry-leader-real-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.entry_leader.real_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.entry_leader.real_user.name":{dashed_name:"process-entry-leader-real-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.entry_leader.real_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.entry_leader.real_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.entry_leader.same_as_process":{dashed_name:"process-entry-leader-same-as-process",description:"This boolean is used to identify if a leader process is the same as the top level process.\nFor example, if `process.group_leader.same_as_process = true`, it means the process event in question is the leader of its process group. Details under `process.*` like `pid` would be the same under `process.group_leader.*` The same applies for both `process.session_leader` and `process.entry_leader`.\nThis field exists to the benefit of EQL and other rule engines since it's not possible to compare equality between two fields in a single document. e.g `process.entity_id` = `process.group_leader.entity_id` (top level process is the process group leader) OR `process.entity_id` = `process.entry_leader.entity_id` (top level process is the entry session leader)\nInstead these rules could be written like: `process.group_leader.same_as_process: true` OR `process.entry_leader.same_as_process: true`\nNote: This field is only set on `process.entry_leader`, `process.session_leader` and `process.group_leader`.",example:!0,flat_name:"process.entry_leader.same_as_process",level:"extended",name:"same_as_process",normalize:[],original_fieldset:"process",short:"This boolean is used to identify if a leader process is the same as the top level process.",type:"boolean"},"process.entry_leader.saved_group.id":{dashed_name:"process-entry-leader-saved-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.entry_leader.saved_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.entry_leader.saved_group.name":{dashed_name:"process-entry-leader-saved-group-name",description:"Name of the group.",flat_name:"process.entry_leader.saved_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.entry_leader.saved_user.id":{dashed_name:"process-entry-leader-saved-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.entry_leader.saved_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.entry_leader.saved_user.name":{dashed_name:"process-entry-leader-saved-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.entry_leader.saved_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.entry_leader.saved_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.entry_leader.start":{dashed_name:"process-entry-leader-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.entry_leader.start",level:"extended",name:"start",normalize:[],original_fieldset:"process",short:"The time the process started.",type:"date"},"process.entry_leader.supplemental_groups.id":{dashed_name:"process-entry-leader-supplemental-groups-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.entry_leader.supplemental_groups.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.entry_leader.supplemental_groups.name":{dashed_name:"process-entry-leader-supplemental-groups-name",description:"Name of the group.",flat_name:"process.entry_leader.supplemental_groups.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.entry_leader.tty":{dashed_name:"process-entry-leader-tty",description:"Information about the controlling TTY device. If set, the process belongs to an interactive session.",flat_name:"process.entry_leader.tty",level:"extended",name:"tty",normalize:[],original_fieldset:"process",short:"Information about the controlling TTY device.",type:"object"},"process.entry_leader.tty.char_device.major":{dashed_name:"process-entry-leader-tty-char-device-major",description:'The major number identifies the driver associated with the device. The character device\'s major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0". For more details, please refer to the Linux kernel documentation.',example:4,flat_name:"process.entry_leader.tty.char_device.major",level:"extended",name:"tty.char_device.major",normalize:[],original_fieldset:"process",short:"The TTY character device's major number.",type:"long"},"process.entry_leader.tty.char_device.minor":{dashed_name:"process-entry-leader-tty-char-device-minor",description:"The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them.",example:1,flat_name:"process.entry_leader.tty.char_device.minor",level:"extended",name:"tty.char_device.minor",normalize:[],original_fieldset:"process",short:"The TTY character device's minor number.",type:"long"},"process.entry_leader.user.id":{dashed_name:"process-entry-leader-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.entry_leader.user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.entry_leader.user.name":{dashed_name:"process-entry-leader-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.entry_leader.user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.entry_leader.user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.entry_leader.vpid":{dashed_name:"process-entry-leader-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.entry_leader.vpid",format:"string",level:"core",name:"vpid",normalize:[],original_fieldset:"process",short:"Virtual process id.",type:"long"},"process.entry_leader.working_directory":{dashed_name:"process-entry-leader-working-directory",description:"The working directory of the process.",example:"/home/alice",flat_name:"process.entry_leader.working_directory",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.entry_leader.working_directory.text",name:"text",type:"match_only_text"}],name:"working_directory",normalize:[],original_fieldset:"process",short:"The working directory of the process.",type:"keyword"},"process.env_vars":{beta:"This field is beta and subject to change.",dashed_name:"process-env-vars",description:"Array of environment variable bindings. Captured from a snapshot of the environment at the time of execution.\nMay be filtered to protect sensitive information.",example:'["PATH=/usr/local/bin:/usr/bin", "USER=ubuntu"]',flat_name:"process.env_vars",ignore_above:1024,level:"extended",name:"env_vars",normalize:["array"],short:"Array of environment variable bindings.",type:"keyword"},"process.executable":{dashed_name:"process-executable",description:"Absolute path to the process executable.",example:"/usr/bin/ssh",flat_name:"process.executable",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.executable.text",name:"text",type:"match_only_text"}],name:"executable",normalize:[],short:"Absolute path to the process executable.",type:"keyword"},"process.exit_code":{dashed_name:"process-exit-code",description:"The exit code of the process, if this is a termination event.\nThe field should be absent if there is no exit code for the event (e.g. process start).",example:137,flat_name:"process.exit_code",level:"extended",name:"exit_code",normalize:[],short:"The exit code of the process.",type:"long"},"process.group_leader.args":{dashed_name:"process-group-leader-args",description:"Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.",example:'["/usr/bin/ssh", "-l", "user", "10.0.0.16"]',flat_name:"process.group_leader.args",ignore_above:1024,level:"extended",name:"args",normalize:["array"],original_fieldset:"process",short:"Array of process arguments.",type:"keyword"},"process.group_leader.args_count":{dashed_name:"process-group-leader-args-count",description:"Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.",example:4,flat_name:"process.group_leader.args_count",level:"extended",name:"args_count",normalize:[],original_fieldset:"process",short:"Length of the process.args array.",type:"long"},"process.group_leader.command_line":{dashed_name:"process-group-leader-command-line",description:"Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information.",example:"/usr/bin/ssh -l user 10.0.0.16",flat_name:"process.group_leader.command_line",level:"extended",multi_fields:[{flat_name:"process.group_leader.command_line.text",name:"text",type:"match_only_text"}],name:"command_line",normalize:[],original_fieldset:"process",short:"Full command line that started the process.",type:"wildcard"},"process.group_leader.entity_id":{dashed_name:"process-group-leader-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.group_leader.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],original_fieldset:"process",short:"Unique identifier for the process.",type:"keyword"},"process.group_leader.executable":{dashed_name:"process-group-leader-executable",description:"Absolute path to the process executable.",example:"/usr/bin/ssh",flat_name:"process.group_leader.executable",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.group_leader.executable.text",name:"text",type:"match_only_text"}],name:"executable",normalize:[],original_fieldset:"process",short:"Absolute path to the process executable.",type:"keyword"},"process.group_leader.group.id":{dashed_name:"process-group-leader-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.group_leader.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.group_leader.group.name":{dashed_name:"process-group-leader-group-name",description:"Name of the group.",flat_name:"process.group_leader.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.group_leader.interactive":{dashed_name:"process-group-leader-interactive",description:"Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.",example:!0,flat_name:"process.group_leader.interactive",level:"extended",name:"interactive",normalize:[],original_fieldset:"process",short:"Whether the process is connected to an interactive shell.",type:"boolean"},"process.group_leader.name":{dashed_name:"process-group-leader-name",description:"Process name.\nSometimes called program name or similar.",example:"ssh",flat_name:"process.group_leader.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.group_leader.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"process",short:"Process name.",type:"keyword"},"process.group_leader.pid":{dashed_name:"process-group-leader-pid",description:"Process id.",example:4242,flat_name:"process.group_leader.pid",format:"string",level:"core",name:"pid",normalize:[],original_fieldset:"process",short:"Process id.",type:"long"},"process.group_leader.real_group.id":{dashed_name:"process-group-leader-real-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.group_leader.real_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.group_leader.real_group.name":{dashed_name:"process-group-leader-real-group-name",description:"Name of the group.",flat_name:"process.group_leader.real_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.group_leader.real_user.id":{dashed_name:"process-group-leader-real-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.group_leader.real_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.group_leader.real_user.name":{dashed_name:"process-group-leader-real-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.group_leader.real_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.group_leader.real_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.group_leader.same_as_process":{dashed_name:"process-group-leader-same-as-process",description:"This boolean is used to identify if a leader process is the same as the top level process.\nFor example, if `process.group_leader.same_as_process = true`, it means the process event in question is the leader of its process group. Details under `process.*` like `pid` would be the same under `process.group_leader.*` The same applies for both `process.session_leader` and `process.entry_leader`.\nThis field exists to the benefit of EQL and other rule engines since it's not possible to compare equality between two fields in a single document. e.g `process.entity_id` = `process.group_leader.entity_id` (top level process is the process group leader) OR `process.entity_id` = `process.entry_leader.entity_id` (top level process is the entry session leader)\nInstead these rules could be written like: `process.group_leader.same_as_process: true` OR `process.entry_leader.same_as_process: true`\nNote: This field is only set on `process.entry_leader`, `process.session_leader` and `process.group_leader`.",example:!0,flat_name:"process.group_leader.same_as_process",level:"extended",name:"same_as_process",normalize:[],original_fieldset:"process",short:"This boolean is used to identify if a leader process is the same as the top level process.",type:"boolean"},"process.group_leader.saved_group.id":{dashed_name:"process-group-leader-saved-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.group_leader.saved_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.group_leader.saved_group.name":{dashed_name:"process-group-leader-saved-group-name",description:"Name of the group.",flat_name:"process.group_leader.saved_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.group_leader.saved_user.id":{dashed_name:"process-group-leader-saved-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.group_leader.saved_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.group_leader.saved_user.name":{dashed_name:"process-group-leader-saved-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.group_leader.saved_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.group_leader.saved_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.group_leader.start":{dashed_name:"process-group-leader-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.group_leader.start",level:"extended",name:"start",normalize:[],original_fieldset:"process",short:"The time the process started.",type:"date"},"process.group_leader.supplemental_groups.id":{dashed_name:"process-group-leader-supplemental-groups-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.group_leader.supplemental_groups.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.group_leader.supplemental_groups.name":{dashed_name:"process-group-leader-supplemental-groups-name",description:"Name of the group.",flat_name:"process.group_leader.supplemental_groups.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.group_leader.tty":{dashed_name:"process-group-leader-tty",description:"Information about the controlling TTY device. If set, the process belongs to an interactive session.",flat_name:"process.group_leader.tty",level:"extended",name:"tty",normalize:[],original_fieldset:"process",short:"Information about the controlling TTY device.",type:"object"},"process.group_leader.tty.char_device.major":{dashed_name:"process-group-leader-tty-char-device-major",description:'The major number identifies the driver associated with the device. The character device\'s major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0". For more details, please refer to the Linux kernel documentation.',example:4,flat_name:"process.group_leader.tty.char_device.major",level:"extended",name:"tty.char_device.major",normalize:[],original_fieldset:"process",short:"The TTY character device's major number.",type:"long"},"process.group_leader.tty.char_device.minor":{dashed_name:"process-group-leader-tty-char-device-minor",description:"The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them.",example:1,flat_name:"process.group_leader.tty.char_device.minor",level:"extended",name:"tty.char_device.minor",normalize:[],original_fieldset:"process",short:"The TTY character device's minor number.",type:"long"},"process.group_leader.user.id":{dashed_name:"process-group-leader-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.group_leader.user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.group_leader.user.name":{dashed_name:"process-group-leader-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.group_leader.user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.group_leader.user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.group_leader.vpid":{dashed_name:"process-group-leader-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.group_leader.vpid",format:"string",level:"core",name:"vpid",normalize:[],original_fieldset:"process",short:"Virtual process id.",type:"long"},"process.group_leader.working_directory":{dashed_name:"process-group-leader-working-directory",description:"The working directory of the process.",example:"/home/alice",flat_name:"process.group_leader.working_directory",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.group_leader.working_directory.text",name:"text",type:"match_only_text"}],name:"working_directory",normalize:[],original_fieldset:"process",short:"The working directory of the process.",type:"keyword"},"process.hash.md5":{dashed_name:"process-hash-md5",description:"MD5 hash.",flat_name:"process.hash.md5",ignore_above:1024,level:"extended",name:"md5",normalize:[],original_fieldset:"hash",short:"MD5 hash.",type:"keyword"},"process.hash.sha1":{dashed_name:"process-hash-sha1",description:"SHA1 hash.",flat_name:"process.hash.sha1",ignore_above:1024,level:"extended",name:"sha1",normalize:[],original_fieldset:"hash",short:"SHA1 hash.",type:"keyword"},"process.hash.sha256":{dashed_name:"process-hash-sha256",description:"SHA256 hash.",flat_name:"process.hash.sha256",ignore_above:1024,level:"extended",name:"sha256",normalize:[],original_fieldset:"hash",short:"SHA256 hash.",type:"keyword"},"process.hash.sha384":{dashed_name:"process-hash-sha384",description:"SHA384 hash.",flat_name:"process.hash.sha384",ignore_above:1024,level:"extended",name:"sha384",normalize:[],original_fieldset:"hash",short:"SHA384 hash.",type:"keyword"},"process.hash.sha512":{dashed_name:"process-hash-sha512",description:"SHA512 hash.",flat_name:"process.hash.sha512",ignore_above:1024,level:"extended",name:"sha512",normalize:[],original_fieldset:"hash",short:"SHA512 hash.",type:"keyword"},"process.hash.ssdeep":{dashed_name:"process-hash-ssdeep",description:"SSDEEP hash.",flat_name:"process.hash.ssdeep",ignore_above:1024,level:"extended",name:"ssdeep",normalize:[],original_fieldset:"hash",short:"SSDEEP hash.",type:"keyword"},"process.hash.tlsh":{dashed_name:"process-hash-tlsh",description:"TLSH hash.",flat_name:"process.hash.tlsh",ignore_above:1024,level:"extended",name:"tlsh",normalize:[],original_fieldset:"hash",short:"TLSH hash.",type:"keyword"},"process.interactive":{dashed_name:"process-interactive",description:"Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.",example:!0,flat_name:"process.interactive",level:"extended",name:"interactive",normalize:[],short:"Whether the process is connected to an interactive shell.",type:"boolean"},"process.io":{beta:"This field is beta and subject to change.",dashed_name:"process-io",description:"A chunk of input or output (IO) from a single process.\nThis field only appears on the top level process object, which is the process that wrote the output or read the input.",flat_name:"process.io",level:"extended",name:"io",normalize:[],short:"A chunk of input or output (IO) from a single process.",type:"object"},"process.io.bytes_skipped":{beta:"This field is beta and subject to change.",dashed_name:"process-io-bytes-skipped",description:"An array of byte offsets and lengths denoting where IO data has been skipped.",flat_name:"process.io.bytes_skipped",level:"extended",name:"io.bytes_skipped",normalize:["array"],short:"An array of byte offsets and lengths denoting where IO data has been skipped.",type:"object"},"process.io.bytes_skipped.length":{beta:"This field is beta and subject to change.",dashed_name:"process-io-bytes-skipped-length",description:"The length of bytes skipped.",flat_name:"process.io.bytes_skipped.length",level:"extended",name:"io.bytes_skipped.length",normalize:[],short:"The length of bytes skipped.",type:"long"},"process.io.bytes_skipped.offset":{beta:"This field is beta and subject to change.",dashed_name:"process-io-bytes-skipped-offset",description:"The byte offset into this event's io.text (or io.bytes in the future) where length bytes were skipped.",flat_name:"process.io.bytes_skipped.offset",level:"extended",name:"io.bytes_skipped.offset",normalize:[],short:"The byte offset into this event's io.text (or io.bytes in the future) where length bytes were skipped.",type:"long"},"process.io.max_bytes_per_process_exceeded":{beta:"This field is beta and subject to change.",dashed_name:"process-io-max-bytes-per-process-exceeded",description:"If true, the process producing the output has exceeded the max_kilobytes_per_process configuration setting.",flat_name:"process.io.max_bytes_per_process_exceeded",level:"extended",name:"io.max_bytes_per_process_exceeded",normalize:[],short:"If true, the process producing the output has exceeded the max_kilobytes_per_process configuration setting.",type:"boolean"},"process.io.text":{beta:"This field is beta and subject to change.",dashed_name:"process-io-text",description:"A chunk of output or input sanitized to UTF-8.\nBest efforts are made to ensure complete lines are captured in these events. Assumptions should NOT be made that multiple lines will appear in the same event. TTY output may contain terminal control codes such as for cursor movement, so some string queries may not match due to terminal codes inserted between characters of a word.",flat_name:"process.io.text",level:"extended",name:"io.text",normalize:[],short:"A chunk of output or input sanitized to UTF-8.",type:"wildcard"},"process.io.total_bytes_captured":{beta:"This field is beta and subject to change.",dashed_name:"process-io-total-bytes-captured",description:"The total number of bytes captured in this event.",flat_name:"process.io.total_bytes_captured",level:"extended",name:"io.total_bytes_captured",normalize:[],short:"The total number of bytes captured in this event.",type:"long"},"process.io.total_bytes_skipped":{beta:"This field is beta and subject to change.",dashed_name:"process-io-total-bytes-skipped",description:"The total number of bytes that were not captured due to implementation restrictions such as buffer size limits. Implementors should strive to ensure this value is always zero",flat_name:"process.io.total_bytes_skipped",level:"extended",name:"io.total_bytes_skipped",normalize:[],short:"The total number of bytes that were not captured due to implementation restrictions such as buffer size limits.",type:"long"},"process.io.type":{beta:"This field is beta and subject to change.",dashed_name:"process-io-type",description:"The type of object on which the IO action (read or write) was taken.\nCurrently only 'tty' is supported. Other types may be added in the future for 'file' and 'socket' support.",flat_name:"process.io.type",ignore_above:1024,level:"extended",name:"io.type",normalize:[],short:"The type of object on which the IO action (read or write) was taken.",type:"keyword"},"process.macho.go_import_hash":{dashed_name:"process-macho-go-import-hash",description:"A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"process.macho.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"macho",short:"A hash of the Go language imports in a Mach-O file.",type:"keyword"},"process.macho.go_imports":{dashed_name:"process-macho-go-imports",description:"List of imported Go language element names and types.",flat_name:"process.macho.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"macho",short:"List of imported Go language element names and types.",type:"flattened"},"process.macho.go_imports_names_entropy":{dashed_name:"process-macho-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"process.macho.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"macho",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"process.macho.go_imports_names_var_entropy":{dashed_name:"process-macho-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"process.macho.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"macho",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"process.macho.go_stripped":{dashed_name:"process-macho-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"process.macho.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"macho",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"process.macho.import_hash":{dashed_name:"process-macho-import-hash",description:"A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for symhash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"process.macho.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"macho",short:"A hash of the imports in a Mach-O file.",type:"keyword"},"process.macho.imports":{dashed_name:"process-macho-imports",description:"List of imported element names and types.",flat_name:"process.macho.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"macho",short:"List of imported element names and types.",type:"flattened"},"process.macho.imports_names_entropy":{dashed_name:"process-macho-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.macho.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"macho",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.macho.imports_names_var_entropy":{dashed_name:"process-macho-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.macho.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"macho",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.macho.sections":{dashed_name:"process-macho-sections",description:"An array containing an object for each section of the Mach-O file.\nThe keys that should be present in these objects are defined by sub-fields underneath `macho.sections.*`.",flat_name:"process.macho.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"macho",short:"Section information of the Mach-O file.",type:"nested"},"process.macho.sections.entropy":{dashed_name:"process-macho-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"process.macho.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"macho",short:"Shannon entropy calculation from the section.",type:"long"},"process.macho.sections.name":{dashed_name:"process-macho-sections-name",description:"Mach-O Section List name.",flat_name:"process.macho.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"macho",short:"Mach-O Section List name.",type:"keyword"},"process.macho.sections.physical_size":{dashed_name:"process-macho-sections-physical-size",description:"Mach-O Section List physical size.",flat_name:"process.macho.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"macho",short:"Mach-O Section List physical size.",type:"long"},"process.macho.sections.var_entropy":{dashed_name:"process-macho-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"process.macho.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"macho",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"process.macho.sections.virtual_size":{dashed_name:"process-macho-sections-virtual-size",description:"Mach-O Section List virtual size. This is always the same as `physical_size`.",flat_name:"process.macho.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"macho",short:"Mach-O Section List virtual size. This is always the same as `physical_size`.",type:"long"},"process.macho.symhash":{dashed_name:"process-macho-symhash",description:"A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a Mach-O implementation of the Windows PE imphash",example:"d3ccf195b62a9279c3c19af1080497ec",flat_name:"process.macho.symhash",ignore_above:1024,level:"extended",name:"symhash",normalize:[],original_fieldset:"macho",short:"A hash of the imports in a Mach-O file.",type:"keyword"},"process.name":{dashed_name:"process-name",description:"Process name.\nSometimes called program name or similar.",example:"ssh",flat_name:"process.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],short:"Process name.",type:"keyword"},"process.parent.args":{dashed_name:"process-parent-args",description:"Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.",example:'["/usr/bin/ssh", "-l", "user", "10.0.0.16"]',flat_name:"process.parent.args",ignore_above:1024,level:"extended",name:"args",normalize:["array"],original_fieldset:"process",short:"Array of process arguments.",type:"keyword"},"process.parent.args_count":{dashed_name:"process-parent-args-count",description:"Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.",example:4,flat_name:"process.parent.args_count",level:"extended",name:"args_count",normalize:[],original_fieldset:"process",short:"Length of the process.args array.",type:"long"},"process.parent.code_signature.digest_algorithm":{dashed_name:"process-parent-code-signature-digest-algorithm",description:"The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",example:"sha256",flat_name:"process.parent.code_signature.digest_algorithm",ignore_above:1024,level:"extended",name:"digest_algorithm",normalize:[],original_fieldset:"code_signature",short:"Hashing algorithm used to sign the process.",type:"keyword"},"process.parent.code_signature.exists":{dashed_name:"process-parent-code-signature-exists",description:"Boolean to capture if a signature is present.",example:"true",flat_name:"process.parent.code_signature.exists",level:"core",name:"exists",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if a signature is present.",type:"boolean"},"process.parent.code_signature.signing_id":{dashed_name:"process-parent-code-signature-signing-id",description:"The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",example:"com.apple.xpc.proxy",flat_name:"process.parent.code_signature.signing_id",ignore_above:1024,level:"extended",name:"signing_id",normalize:[],original_fieldset:"code_signature",short:"The identifier used to sign the process.",type:"keyword"},"process.parent.code_signature.status":{dashed_name:"process-parent-code-signature-status",description:"Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",example:"ERROR_UNTRUSTED_ROOT",flat_name:"process.parent.code_signature.status",ignore_above:1024,level:"extended",name:"status",normalize:[],original_fieldset:"code_signature",short:"Additional information about the certificate status.",type:"keyword"},"process.parent.code_signature.subject_name":{dashed_name:"process-parent-code-signature-subject-name",description:"Subject name of the code signer",example:"Microsoft Corporation",flat_name:"process.parent.code_signature.subject_name",ignore_above:1024,level:"core",name:"subject_name",normalize:[],original_fieldset:"code_signature",short:"Subject name of the code signer",type:"keyword"},"process.parent.code_signature.team_id":{dashed_name:"process-parent-code-signature-team-id",description:"The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",example:"EQHXZ8M8AV",flat_name:"process.parent.code_signature.team_id",ignore_above:1024,level:"extended",name:"team_id",normalize:[],original_fieldset:"code_signature",short:"The team identifier used to sign the process.",type:"keyword"},"process.parent.code_signature.timestamp":{dashed_name:"process-parent-code-signature-timestamp",description:"Date and time when the code signature was generated and signed.",example:"2021-01-01T12:10:30Z",flat_name:"process.parent.code_signature.timestamp",level:"extended",name:"timestamp",normalize:[],original_fieldset:"code_signature",short:"When the signature was generated and signed.",type:"date"},"process.parent.code_signature.trusted":{dashed_name:"process-parent-code-signature-trusted",description:"Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",example:"true",flat_name:"process.parent.code_signature.trusted",level:"extended",name:"trusted",normalize:[],original_fieldset:"code_signature",short:"Stores the trust status of the certificate chain.",type:"boolean"},"process.parent.code_signature.valid":{dashed_name:"process-parent-code-signature-valid",description:"Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",example:"true",flat_name:"process.parent.code_signature.valid",level:"extended",name:"valid",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if the digital signature is verified against the binary content.",type:"boolean"},"process.parent.command_line":{dashed_name:"process-parent-command-line",description:"Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information.",example:"/usr/bin/ssh -l user 10.0.0.16",flat_name:"process.parent.command_line",level:"extended",multi_fields:[{flat_name:"process.parent.command_line.text",name:"text",type:"match_only_text"}],name:"command_line",normalize:[],original_fieldset:"process",short:"Full command line that started the process.",type:"wildcard"},"process.parent.elf.architecture":{dashed_name:"process-parent-elf-architecture",description:"Machine architecture of the ELF file.",example:"x86-64",flat_name:"process.parent.elf.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"elf",short:"Machine architecture of the ELF file.",type:"keyword"},"process.parent.elf.byte_order":{dashed_name:"process-parent-elf-byte-order",description:"Byte sequence of ELF file.",example:"Little Endian",flat_name:"process.parent.elf.byte_order",ignore_above:1024,level:"extended",name:"byte_order",normalize:[],original_fieldset:"elf",short:"Byte sequence of ELF file.",type:"keyword"},"process.parent.elf.cpu_type":{dashed_name:"process-parent-elf-cpu-type",description:"CPU type of the ELF file.",example:"Intel",flat_name:"process.parent.elf.cpu_type",ignore_above:1024,level:"extended",name:"cpu_type",normalize:[],original_fieldset:"elf",short:"CPU type of the ELF file.",type:"keyword"},"process.parent.elf.creation_date":{dashed_name:"process-parent-elf-creation-date",description:"Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",flat_name:"process.parent.elf.creation_date",level:"extended",name:"creation_date",normalize:[],original_fieldset:"elf",short:"Build or compile date.",type:"date"},"process.parent.elf.exports":{dashed_name:"process-parent-elf-exports",description:"List of exported element names and types.",flat_name:"process.parent.elf.exports",level:"extended",name:"exports",normalize:["array"],original_fieldset:"elf",short:"List of exported element names and types.",type:"flattened"},"process.parent.elf.go_import_hash":{dashed_name:"process-parent-elf-go-import-hash",description:"A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"process.parent.elf.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the Go language imports in an ELF file.",type:"keyword"},"process.parent.elf.go_imports":{dashed_name:"process-parent-elf-go-imports",description:"List of imported Go language element names and types.",flat_name:"process.parent.elf.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"elf",short:"List of imported Go language element names and types.",type:"flattened"},"process.parent.elf.go_imports_names_entropy":{dashed_name:"process-parent-elf-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"process.parent.elf.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"process.parent.elf.go_imports_names_var_entropy":{dashed_name:"process-parent-elf-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"process.parent.elf.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"process.parent.elf.go_stripped":{dashed_name:"process-parent-elf-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"process.parent.elf.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"elf",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"process.parent.elf.header.abi_version":{dashed_name:"process-parent-elf-header-abi-version",description:"Version of the ELF Application Binary Interface (ABI).",flat_name:"process.parent.elf.header.abi_version",ignore_above:1024,level:"extended",name:"header.abi_version",normalize:[],original_fieldset:"elf",short:"Version of the ELF Application Binary Interface (ABI).",type:"keyword"},"process.parent.elf.header.class":{dashed_name:"process-parent-elf-header-class",description:"Header class of the ELF file.",flat_name:"process.parent.elf.header.class",ignore_above:1024,level:"extended",name:"header.class",normalize:[],original_fieldset:"elf",short:"Header class of the ELF file.",type:"keyword"},"process.parent.elf.header.data":{dashed_name:"process-parent-elf-header-data",description:"Data table of the ELF header.",flat_name:"process.parent.elf.header.data",ignore_above:1024,level:"extended",name:"header.data",normalize:[],original_fieldset:"elf",short:"Data table of the ELF header.",type:"keyword"},"process.parent.elf.header.entrypoint":{dashed_name:"process-parent-elf-header-entrypoint",description:"Header entrypoint of the ELF file.",flat_name:"process.parent.elf.header.entrypoint",format:"string",level:"extended",name:"header.entrypoint",normalize:[],original_fieldset:"elf",short:"Header entrypoint of the ELF file.",type:"long"},"process.parent.elf.header.object_version":{dashed_name:"process-parent-elf-header-object-version",description:'"0x1" for original ELF files.',flat_name:"process.parent.elf.header.object_version",ignore_above:1024,level:"extended",name:"header.object_version",normalize:[],original_fieldset:"elf",short:'"0x1" for original ELF files.',type:"keyword"},"process.parent.elf.header.os_abi":{dashed_name:"process-parent-elf-header-os-abi",description:"Application Binary Interface (ABI) of the Linux OS.",flat_name:"process.parent.elf.header.os_abi",ignore_above:1024,level:"extended",name:"header.os_abi",normalize:[],original_fieldset:"elf",short:"Application Binary Interface (ABI) of the Linux OS.",type:"keyword"},"process.parent.elf.header.type":{dashed_name:"process-parent-elf-header-type",description:"Header type of the ELF file.",flat_name:"process.parent.elf.header.type",ignore_above:1024,level:"extended",name:"header.type",normalize:[],original_fieldset:"elf",short:"Header type of the ELF file.",type:"keyword"},"process.parent.elf.header.version":{dashed_name:"process-parent-elf-header-version",description:"Version of the ELF header.",flat_name:"process.parent.elf.header.version",ignore_above:1024,level:"extended",name:"header.version",normalize:[],original_fieldset:"elf",short:"Version of the ELF header.",type:"keyword"},"process.parent.elf.import_hash":{dashed_name:"process-parent-elf-import-hash",description:"A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"process.parent.elf.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the imports in an ELF file.",type:"keyword"},"process.parent.elf.imports":{dashed_name:"process-parent-elf-imports",description:"List of imported element names and types.",flat_name:"process.parent.elf.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"elf",short:"List of imported element names and types.",type:"flattened"},"process.parent.elf.imports_names_entropy":{dashed_name:"process-parent-elf-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.parent.elf.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.parent.elf.imports_names_var_entropy":{dashed_name:"process-parent-elf-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.parent.elf.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.parent.elf.sections":{dashed_name:"process-parent-elf-sections",description:"An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",flat_name:"process.parent.elf.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"elf",short:"Section information of the ELF file.",type:"nested"},"process.parent.elf.sections.chi2":{dashed_name:"process-parent-elf-sections-chi2",description:"Chi-square probability distribution of the section.",flat_name:"process.parent.elf.sections.chi2",format:"number",level:"extended",name:"sections.chi2",normalize:[],original_fieldset:"elf",short:"Chi-square probability distribution of the section.",type:"long"},"process.parent.elf.sections.entropy":{dashed_name:"process-parent-elf-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"process.parent.elf.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the section.",type:"long"},"process.parent.elf.sections.flags":{dashed_name:"process-parent-elf-sections-flags",description:"ELF Section List flags.",flat_name:"process.parent.elf.sections.flags",ignore_above:1024,level:"extended",name:"sections.flags",normalize:[],original_fieldset:"elf",short:"ELF Section List flags.",type:"keyword"},"process.parent.elf.sections.name":{dashed_name:"process-parent-elf-sections-name",description:"ELF Section List name.",flat_name:"process.parent.elf.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"elf",short:"ELF Section List name.",type:"keyword"},"process.parent.elf.sections.physical_offset":{dashed_name:"process-parent-elf-sections-physical-offset",description:"ELF Section List offset.",flat_name:"process.parent.elf.sections.physical_offset",ignore_above:1024,level:"extended",name:"sections.physical_offset",normalize:[],original_fieldset:"elf",short:"ELF Section List offset.",type:"keyword"},"process.parent.elf.sections.physical_size":{dashed_name:"process-parent-elf-sections-physical-size",description:"ELF Section List physical size.",flat_name:"process.parent.elf.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"elf",short:"ELF Section List physical size.",type:"long"},"process.parent.elf.sections.type":{dashed_name:"process-parent-elf-sections-type",description:"ELF Section List type.",flat_name:"process.parent.elf.sections.type",ignore_above:1024,level:"extended",name:"sections.type",normalize:[],original_fieldset:"elf",short:"ELF Section List type.",type:"keyword"},"process.parent.elf.sections.var_entropy":{dashed_name:"process-parent-elf-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"process.parent.elf.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"process.parent.elf.sections.virtual_address":{dashed_name:"process-parent-elf-sections-virtual-address",description:"ELF Section List virtual address.",flat_name:"process.parent.elf.sections.virtual_address",format:"string",level:"extended",name:"sections.virtual_address",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual address.",type:"long"},"process.parent.elf.sections.virtual_size":{dashed_name:"process-parent-elf-sections-virtual-size",description:"ELF Section List virtual size.",flat_name:"process.parent.elf.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual size.",type:"long"},"process.parent.elf.segments":{dashed_name:"process-parent-elf-segments",description:"An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",flat_name:"process.parent.elf.segments",level:"extended",name:"segments",normalize:["array"],original_fieldset:"elf",short:"ELF object segment list.",type:"nested"},"process.parent.elf.segments.sections":{dashed_name:"process-parent-elf-segments-sections",description:"ELF object segment sections.",flat_name:"process.parent.elf.segments.sections",ignore_above:1024,level:"extended",name:"segments.sections",normalize:[],original_fieldset:"elf",short:"ELF object segment sections.",type:"keyword"},"process.parent.elf.segments.type":{dashed_name:"process-parent-elf-segments-type",description:"ELF object segment type.",flat_name:"process.parent.elf.segments.type",ignore_above:1024,level:"extended",name:"segments.type",normalize:[],original_fieldset:"elf",short:"ELF object segment type.",type:"keyword"},"process.parent.elf.shared_libraries":{dashed_name:"process-parent-elf-shared-libraries",description:"List of shared libraries used by this ELF object.",flat_name:"process.parent.elf.shared_libraries",ignore_above:1024,level:"extended",name:"shared_libraries",normalize:["array"],original_fieldset:"elf",short:"List of shared libraries used by this ELF object.",type:"keyword"},"process.parent.elf.telfhash":{dashed_name:"process-parent-elf-telfhash",description:"telfhash symbol hash for ELF file.",flat_name:"process.parent.elf.telfhash",ignore_above:1024,level:"extended",name:"telfhash",normalize:[],original_fieldset:"elf",short:"telfhash hash for ELF file.",type:"keyword"},"process.parent.end":{dashed_name:"process-parent-end",description:"The time the process ended.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.parent.end",level:"extended",name:"end",normalize:[],original_fieldset:"process",short:"The time the process ended.",type:"date"},"process.parent.entity_id":{dashed_name:"process-parent-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.parent.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],original_fieldset:"process",short:"Unique identifier for the process.",type:"keyword"},"process.parent.executable":{dashed_name:"process-parent-executable",description:"Absolute path to the process executable.",example:"/usr/bin/ssh",flat_name:"process.parent.executable",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.parent.executable.text",name:"text",type:"match_only_text"}],name:"executable",normalize:[],original_fieldset:"process",short:"Absolute path to the process executable.",type:"keyword"},"process.parent.exit_code":{dashed_name:"process-parent-exit-code",description:"The exit code of the process, if this is a termination event.\nThe field should be absent if there is no exit code for the event (e.g. process start).",example:137,flat_name:"process.parent.exit_code",level:"extended",name:"exit_code",normalize:[],original_fieldset:"process",short:"The exit code of the process.",type:"long"},"process.parent.group.id":{dashed_name:"process-parent-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.parent.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.parent.group.name":{dashed_name:"process-parent-group-name",description:"Name of the group.",flat_name:"process.parent.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.parent.group_leader.entity_id":{dashed_name:"process-parent-group-leader-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.parent.group_leader.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],original_fieldset:"process",short:"Unique identifier for the process.",type:"keyword"},"process.parent.group_leader.pid":{dashed_name:"process-parent-group-leader-pid",description:"Process id.",example:4242,flat_name:"process.parent.group_leader.pid",format:"string",level:"core",name:"pid",normalize:[],original_fieldset:"process",short:"Process id.",type:"long"},"process.parent.group_leader.start":{dashed_name:"process-parent-group-leader-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.parent.group_leader.start",level:"extended",name:"start",normalize:[],original_fieldset:"process",short:"The time the process started.",type:"date"},"process.parent.group_leader.vpid":{dashed_name:"process-parent-group-leader-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.parent.group_leader.vpid",format:"string",level:"core",name:"vpid",normalize:[],original_fieldset:"process",short:"Virtual process id.",type:"long"},"process.parent.hash.md5":{dashed_name:"process-parent-hash-md5",description:"MD5 hash.",flat_name:"process.parent.hash.md5",ignore_above:1024,level:"extended",name:"md5",normalize:[],original_fieldset:"hash",short:"MD5 hash.",type:"keyword"},"process.parent.hash.sha1":{dashed_name:"process-parent-hash-sha1",description:"SHA1 hash.",flat_name:"process.parent.hash.sha1",ignore_above:1024,level:"extended",name:"sha1",normalize:[],original_fieldset:"hash",short:"SHA1 hash.",type:"keyword"},"process.parent.hash.sha256":{dashed_name:"process-parent-hash-sha256",description:"SHA256 hash.",flat_name:"process.parent.hash.sha256",ignore_above:1024,level:"extended",name:"sha256",normalize:[],original_fieldset:"hash",short:"SHA256 hash.",type:"keyword"},"process.parent.hash.sha384":{dashed_name:"process-parent-hash-sha384",description:"SHA384 hash.",flat_name:"process.parent.hash.sha384",ignore_above:1024,level:"extended",name:"sha384",normalize:[],original_fieldset:"hash",short:"SHA384 hash.",type:"keyword"},"process.parent.hash.sha512":{dashed_name:"process-parent-hash-sha512",description:"SHA512 hash.",flat_name:"process.parent.hash.sha512",ignore_above:1024,level:"extended",name:"sha512",normalize:[],original_fieldset:"hash",short:"SHA512 hash.",type:"keyword"},"process.parent.hash.ssdeep":{dashed_name:"process-parent-hash-ssdeep",description:"SSDEEP hash.",flat_name:"process.parent.hash.ssdeep",ignore_above:1024,level:"extended",name:"ssdeep",normalize:[],original_fieldset:"hash",short:"SSDEEP hash.",type:"keyword"},"process.parent.hash.tlsh":{dashed_name:"process-parent-hash-tlsh",description:"TLSH hash.",flat_name:"process.parent.hash.tlsh",ignore_above:1024,level:"extended",name:"tlsh",normalize:[],original_fieldset:"hash",short:"TLSH hash.",type:"keyword"},"process.parent.interactive":{dashed_name:"process-parent-interactive",description:"Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.",example:!0,flat_name:"process.parent.interactive",level:"extended",name:"interactive",normalize:[],original_fieldset:"process",short:"Whether the process is connected to an interactive shell.",type:"boolean"},"process.parent.macho.go_import_hash":{dashed_name:"process-parent-macho-go-import-hash",description:"A hash of the Go language imports in a Mach-O file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"process.parent.macho.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"macho",short:"A hash of the Go language imports in a Mach-O file.",type:"keyword"},"process.parent.macho.go_imports":{dashed_name:"process-parent-macho-go-imports",description:"List of imported Go language element names and types.",flat_name:"process.parent.macho.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"macho",short:"List of imported Go language element names and types.",type:"flattened"},"process.parent.macho.go_imports_names_entropy":{dashed_name:"process-parent-macho-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"process.parent.macho.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"macho",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"process.parent.macho.go_imports_names_var_entropy":{dashed_name:"process-parent-macho-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"process.parent.macho.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"macho",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"process.parent.macho.go_stripped":{dashed_name:"process-parent-macho-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"process.parent.macho.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"macho",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"process.parent.macho.import_hash":{dashed_name:"process-parent-macho-import-hash",description:"A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for symhash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"process.parent.macho.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"macho",short:"A hash of the imports in a Mach-O file.",type:"keyword"},"process.parent.macho.imports":{dashed_name:"process-parent-macho-imports",description:"List of imported element names and types.",flat_name:"process.parent.macho.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"macho",short:"List of imported element names and types.",type:"flattened"},"process.parent.macho.imports_names_entropy":{dashed_name:"process-parent-macho-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.parent.macho.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"macho",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.parent.macho.imports_names_var_entropy":{dashed_name:"process-parent-macho-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.parent.macho.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"macho",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.parent.macho.sections":{dashed_name:"process-parent-macho-sections",description:"An array containing an object for each section of the Mach-O file.\nThe keys that should be present in these objects are defined by sub-fields underneath `macho.sections.*`.",flat_name:"process.parent.macho.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"macho",short:"Section information of the Mach-O file.",type:"nested"},"process.parent.macho.sections.entropy":{dashed_name:"process-parent-macho-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"process.parent.macho.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"macho",short:"Shannon entropy calculation from the section.",type:"long"},"process.parent.macho.sections.name":{dashed_name:"process-parent-macho-sections-name",description:"Mach-O Section List name.",flat_name:"process.parent.macho.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"macho",short:"Mach-O Section List name.",type:"keyword"},"process.parent.macho.sections.physical_size":{dashed_name:"process-parent-macho-sections-physical-size",description:"Mach-O Section List physical size.",flat_name:"process.parent.macho.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"macho",short:"Mach-O Section List physical size.",type:"long"},"process.parent.macho.sections.var_entropy":{dashed_name:"process-parent-macho-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"process.parent.macho.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"macho",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"process.parent.macho.sections.virtual_size":{dashed_name:"process-parent-macho-sections-virtual-size",description:"Mach-O Section List virtual size. This is always the same as `physical_size`.",flat_name:"process.parent.macho.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"macho",short:"Mach-O Section List virtual size. This is always the same as `physical_size`.",type:"long"},"process.parent.macho.symhash":{dashed_name:"process-parent-macho-symhash",description:"A hash of the imports in a Mach-O file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a Mach-O implementation of the Windows PE imphash",example:"d3ccf195b62a9279c3c19af1080497ec",flat_name:"process.parent.macho.symhash",ignore_above:1024,level:"extended",name:"symhash",normalize:[],original_fieldset:"macho",short:"A hash of the imports in a Mach-O file.",type:"keyword"},"process.parent.name":{dashed_name:"process-parent-name",description:"Process name.\nSometimes called program name or similar.",example:"ssh",flat_name:"process.parent.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.parent.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"process",short:"Process name.",type:"keyword"},"process.parent.pe.architecture":{dashed_name:"process-parent-pe-architecture",description:"CPU architecture target for the file.",example:"x64",flat_name:"process.parent.pe.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"pe",short:"CPU architecture target for the file.",type:"keyword"},"process.parent.pe.company":{dashed_name:"process-parent-pe-company",description:"Internal company name of the file, provided at compile-time.",example:"Microsoft Corporation",flat_name:"process.parent.pe.company",ignore_above:1024,level:"extended",name:"company",normalize:[],original_fieldset:"pe",short:"Internal company name of the file, provided at compile-time.",type:"keyword"},"process.parent.pe.description":{dashed_name:"process-parent-pe-description",description:"Internal description of the file, provided at compile-time.",example:"Paint",flat_name:"process.parent.pe.description",ignore_above:1024,level:"extended",name:"description",normalize:[],original_fieldset:"pe",short:"Internal description of the file, provided at compile-time.",type:"keyword"},"process.parent.pe.file_version":{dashed_name:"process-parent-pe-file-version",description:"Internal version of the file, provided at compile-time.",example:"6.3.9600.17415",flat_name:"process.parent.pe.file_version",ignore_above:1024,level:"extended",name:"file_version",normalize:[],original_fieldset:"pe",short:"Process name.",type:"keyword"},"process.parent.pe.go_import_hash":{dashed_name:"process-parent-pe-go-import-hash",description:"A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"process.parent.pe.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the Go language imports in a PE file.",type:"keyword"},"process.parent.pe.go_imports":{dashed_name:"process-parent-pe-go-imports",description:"List of imported Go language element names and types.",flat_name:"process.parent.pe.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"pe",short:"List of imported Go language element names and types.",type:"flattened"},"process.parent.pe.go_imports_names_entropy":{dashed_name:"process-parent-pe-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"process.parent.pe.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"process.parent.pe.go_imports_names_var_entropy":{dashed_name:"process-parent-pe-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"process.parent.pe.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"process.parent.pe.go_stripped":{dashed_name:"process-parent-pe-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"process.parent.pe.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"pe",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"process.parent.pe.imphash":{dashed_name:"process-parent-pe-imphash",description:"A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",example:"0c6803c4e922103c4dca5963aad36ddf",flat_name:"process.parent.pe.imphash",ignore_above:1024,level:"extended",name:"imphash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"process.parent.pe.import_hash":{dashed_name:"process-parent-pe-import-hash",description:"A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"process.parent.pe.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"process.parent.pe.imports":{dashed_name:"process-parent-pe-imports",description:"List of imported element names and types.",flat_name:"process.parent.pe.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"pe",short:"List of imported element names and types.",type:"flattened"},"process.parent.pe.imports_names_entropy":{dashed_name:"process-parent-pe-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.parent.pe.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.parent.pe.imports_names_var_entropy":{dashed_name:"process-parent-pe-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.parent.pe.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.parent.pe.original_file_name":{dashed_name:"process-parent-pe-original-file-name",description:"Internal name of the file, provided at compile-time.",example:"MSPAINT.EXE",flat_name:"process.parent.pe.original_file_name",ignore_above:1024,level:"extended",name:"original_file_name",normalize:[],original_fieldset:"pe",short:"Internal name of the file, provided at compile-time.",type:"keyword"},"process.parent.pe.pehash":{dashed_name:"process-parent-pe-pehash",description:"A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.",example:"73ff189b63cd6be375a7ff25179a38d347651975",flat_name:"process.parent.pe.pehash",ignore_above:1024,level:"extended",name:"pehash",normalize:[],original_fieldset:"pe",short:"A hash of the PE header and data from one or more PE sections.",type:"keyword"},"process.parent.pe.product":{dashed_name:"process-parent-pe-product",description:"Internal product name of the file, provided at compile-time.",example:"Microsoft® Windows® Operating System",flat_name:"process.parent.pe.product",ignore_above:1024,level:"extended",name:"product",normalize:[],original_fieldset:"pe",short:"Internal product name of the file, provided at compile-time.",type:"keyword"},"process.parent.pe.sections":{dashed_name:"process-parent-pe-sections",description:"An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.",flat_name:"process.parent.pe.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"pe",short:"Section information of the PE file.",type:"nested"},"process.parent.pe.sections.entropy":{dashed_name:"process-parent-pe-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"process.parent.pe.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the section.",type:"long"},"process.parent.pe.sections.name":{dashed_name:"process-parent-pe-sections-name",description:"PE Section List name.",flat_name:"process.parent.pe.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"pe",short:"PE Section List name.",type:"keyword"},"process.parent.pe.sections.physical_size":{dashed_name:"process-parent-pe-sections-physical-size",description:"PE Section List physical size.",flat_name:"process.parent.pe.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"pe",short:"PE Section List physical size.",type:"long"},"process.parent.pe.sections.var_entropy":{dashed_name:"process-parent-pe-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"process.parent.pe.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"process.parent.pe.sections.virtual_size":{dashed_name:"process-parent-pe-sections-virtual-size",description:"PE Section List virtual size. This is always the same as `physical_size`.",flat_name:"process.parent.pe.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"pe",short:"PE Section List virtual size. This is always the same as `physical_size`.",type:"long"},"process.parent.pgid":{dashed_name:"process-parent-pgid",description:"Deprecated for removal in next major version release. This field is superseded by `process.group_leader.pid`.\nIdentifier of the group of processes the process belongs to.",flat_name:"process.parent.pgid",format:"string",level:"extended",name:"pgid",normalize:[],original_fieldset:"process",short:"Deprecated identifier of the group of processes the process belongs to.",type:"long"},"process.parent.pid":{dashed_name:"process-parent-pid",description:"Process id.",example:4242,flat_name:"process.parent.pid",format:"string",level:"core",name:"pid",normalize:[],original_fieldset:"process",short:"Process id.",type:"long"},"process.parent.real_group.id":{dashed_name:"process-parent-real-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.parent.real_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.parent.real_group.name":{dashed_name:"process-parent-real-group-name",description:"Name of the group.",flat_name:"process.parent.real_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.parent.real_user.id":{dashed_name:"process-parent-real-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.parent.real_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.parent.real_user.name":{dashed_name:"process-parent-real-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.parent.real_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.parent.real_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.parent.saved_group.id":{dashed_name:"process-parent-saved-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.parent.saved_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.parent.saved_group.name":{dashed_name:"process-parent-saved-group-name",description:"Name of the group.",flat_name:"process.parent.saved_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.parent.saved_user.id":{dashed_name:"process-parent-saved-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.parent.saved_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.parent.saved_user.name":{dashed_name:"process-parent-saved-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.parent.saved_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.parent.saved_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.parent.start":{dashed_name:"process-parent-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.parent.start",level:"extended",name:"start",normalize:[],original_fieldset:"process",short:"The time the process started.",type:"date"},"process.parent.supplemental_groups.id":{dashed_name:"process-parent-supplemental-groups-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.parent.supplemental_groups.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.parent.supplemental_groups.name":{dashed_name:"process-parent-supplemental-groups-name",description:"Name of the group.",flat_name:"process.parent.supplemental_groups.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.parent.thread.capabilities.effective":{dashed_name:"process-parent-thread-capabilities-effective",description:"This is the set of capabilities used by the kernel to perform permission checks for the thread.",example:'["CAP_BPF", "CAP_SYS_ADMIN"]',flat_name:"process.parent.thread.capabilities.effective",ignore_above:1024,level:"extended",name:"thread.capabilities.effective",normalize:["array"],original_fieldset:"process",pattern:"^(CAP_[A-Z_]+|\\d+)$",short:"Array of capabilities used for permission checks.",type:"keyword"},"process.parent.thread.capabilities.permitted":{dashed_name:"process-parent-thread-capabilities-permitted",description:"This is a limiting superset for the effective capabilities that the thread may assume.",example:'["CAP_BPF", "CAP_SYS_ADMIN"]',flat_name:"process.parent.thread.capabilities.permitted",ignore_above:1024,level:"extended",name:"thread.capabilities.permitted",normalize:["array"],original_fieldset:"process",pattern:"^(CAP_[A-Z_]+|\\d+)$",short:"Array of capabilities a thread could assume.",type:"keyword"},"process.parent.thread.id":{dashed_name:"process-parent-thread-id",description:"Thread ID.",example:4242,flat_name:"process.parent.thread.id",format:"string",level:"extended",name:"thread.id",normalize:[],original_fieldset:"process",short:"Thread ID.",type:"long"},"process.parent.thread.name":{dashed_name:"process-parent-thread-name",description:"Thread name.",example:"thread-0",flat_name:"process.parent.thread.name",ignore_above:1024,level:"extended",name:"thread.name",normalize:[],original_fieldset:"process",short:"Thread name.",type:"keyword"},"process.parent.title":{dashed_name:"process-parent-title",description:"Process title.\nThe proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.",flat_name:"process.parent.title",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.parent.title.text",name:"text",type:"match_only_text"}],name:"title",normalize:[],original_fieldset:"process",short:"Process title.",type:"keyword"},"process.parent.tty":{dashed_name:"process-parent-tty",description:"Information about the controlling TTY device. If set, the process belongs to an interactive session.",flat_name:"process.parent.tty",level:"extended",name:"tty",normalize:[],original_fieldset:"process",short:"Information about the controlling TTY device.",type:"object"},"process.parent.tty.char_device.major":{dashed_name:"process-parent-tty-char-device-major",description:'The major number identifies the driver associated with the device. The character device\'s major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0". For more details, please refer to the Linux kernel documentation.',example:4,flat_name:"process.parent.tty.char_device.major",level:"extended",name:"tty.char_device.major",normalize:[],original_fieldset:"process",short:"The TTY character device's major number.",type:"long"},"process.parent.tty.char_device.minor":{dashed_name:"process-parent-tty-char-device-minor",description:"The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them.",example:1,flat_name:"process.parent.tty.char_device.minor",level:"extended",name:"tty.char_device.minor",normalize:[],original_fieldset:"process",short:"The TTY character device's minor number.",type:"long"},"process.parent.uptime":{dashed_name:"process-parent-uptime",description:"Seconds the process has been up.",example:1325,flat_name:"process.parent.uptime",level:"extended",name:"uptime",normalize:[],original_fieldset:"process",short:"Seconds the process has been up.",type:"long"},"process.parent.user.id":{dashed_name:"process-parent-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.parent.user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.parent.user.name":{dashed_name:"process-parent-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.parent.user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.parent.user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.parent.vpid":{dashed_name:"process-parent-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.parent.vpid",format:"string",level:"core",name:"vpid",normalize:[],original_fieldset:"process",short:"Virtual process id.",type:"long"},"process.parent.working_directory":{dashed_name:"process-parent-working-directory",description:"The working directory of the process.",example:"/home/alice",flat_name:"process.parent.working_directory",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.parent.working_directory.text",name:"text",type:"match_only_text"}],name:"working_directory",normalize:[],original_fieldset:"process",short:"The working directory of the process.",type:"keyword"},"process.pe.architecture":{dashed_name:"process-pe-architecture",description:"CPU architecture target for the file.",example:"x64",flat_name:"process.pe.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"pe",short:"CPU architecture target for the file.",type:"keyword"},"process.pe.company":{dashed_name:"process-pe-company",description:"Internal company name of the file, provided at compile-time.",example:"Microsoft Corporation",flat_name:"process.pe.company",ignore_above:1024,level:"extended",name:"company",normalize:[],original_fieldset:"pe",short:"Internal company name of the file, provided at compile-time.",type:"keyword"},"process.pe.description":{dashed_name:"process-pe-description",description:"Internal description of the file, provided at compile-time.",example:"Paint",flat_name:"process.pe.description",ignore_above:1024,level:"extended",name:"description",normalize:[],original_fieldset:"pe",short:"Internal description of the file, provided at compile-time.",type:"keyword"},"process.pe.file_version":{dashed_name:"process-pe-file-version",description:"Internal version of the file, provided at compile-time.",example:"6.3.9600.17415",flat_name:"process.pe.file_version",ignore_above:1024,level:"extended",name:"file_version",normalize:[],original_fieldset:"pe",short:"Process name.",type:"keyword"},"process.pe.go_import_hash":{dashed_name:"process-pe-go-import-hash",description:"A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"process.pe.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the Go language imports in a PE file.",type:"keyword"},"process.pe.go_imports":{dashed_name:"process-pe-go-imports",description:"List of imported Go language element names and types.",flat_name:"process.pe.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"pe",short:"List of imported Go language element names and types.",type:"flattened"},"process.pe.go_imports_names_entropy":{dashed_name:"process-pe-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"process.pe.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"process.pe.go_imports_names_var_entropy":{dashed_name:"process-pe-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"process.pe.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"process.pe.go_stripped":{dashed_name:"process-pe-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"process.pe.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"pe",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"process.pe.imphash":{dashed_name:"process-pe-imphash",description:"A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",example:"0c6803c4e922103c4dca5963aad36ddf",flat_name:"process.pe.imphash",ignore_above:1024,level:"extended",name:"imphash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"process.pe.import_hash":{dashed_name:"process-pe-import-hash",description:"A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"process.pe.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"process.pe.imports":{dashed_name:"process-pe-imports",description:"List of imported element names and types.",flat_name:"process.pe.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"pe",short:"List of imported element names and types.",type:"flattened"},"process.pe.imports_names_entropy":{dashed_name:"process-pe-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.pe.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.pe.imports_names_var_entropy":{dashed_name:"process-pe-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"process.pe.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"process.pe.original_file_name":{dashed_name:"process-pe-original-file-name",description:"Internal name of the file, provided at compile-time.",example:"MSPAINT.EXE",flat_name:"process.pe.original_file_name",ignore_above:1024,level:"extended",name:"original_file_name",normalize:[],original_fieldset:"pe",short:"Internal name of the file, provided at compile-time.",type:"keyword"},"process.pe.pehash":{dashed_name:"process-pe-pehash",description:"A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.",example:"73ff189b63cd6be375a7ff25179a38d347651975",flat_name:"process.pe.pehash",ignore_above:1024,level:"extended",name:"pehash",normalize:[],original_fieldset:"pe",short:"A hash of the PE header and data from one or more PE sections.",type:"keyword"},"process.pe.product":{dashed_name:"process-pe-product",description:"Internal product name of the file, provided at compile-time.",example:"Microsoft® Windows® Operating System",flat_name:"process.pe.product",ignore_above:1024,level:"extended",name:"product",normalize:[],original_fieldset:"pe",short:"Internal product name of the file, provided at compile-time.",type:"keyword"},"process.pe.sections":{dashed_name:"process-pe-sections",description:"An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.",flat_name:"process.pe.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"pe",short:"Section information of the PE file.",type:"nested"},"process.pe.sections.entropy":{dashed_name:"process-pe-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"process.pe.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the section.",type:"long"},"process.pe.sections.name":{dashed_name:"process-pe-sections-name",description:"PE Section List name.",flat_name:"process.pe.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"pe",short:"PE Section List name.",type:"keyword"},"process.pe.sections.physical_size":{dashed_name:"process-pe-sections-physical-size",description:"PE Section List physical size.",flat_name:"process.pe.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"pe",short:"PE Section List physical size.",type:"long"},"process.pe.sections.var_entropy":{dashed_name:"process-pe-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"process.pe.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"process.pe.sections.virtual_size":{dashed_name:"process-pe-sections-virtual-size",description:"PE Section List virtual size. This is always the same as `physical_size`.",flat_name:"process.pe.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"pe",short:"PE Section List virtual size. This is always the same as `physical_size`.",type:"long"},"process.pgid":{dashed_name:"process-pgid",description:"Deprecated for removal in next major version release. This field is superseded by `process.group_leader.pid`.\nIdentifier of the group of processes the process belongs to.",flat_name:"process.pgid",format:"string",level:"extended",name:"pgid",normalize:[],short:"Deprecated identifier of the group of processes the process belongs to.",type:"long"},"process.pid":{dashed_name:"process-pid",description:"Process id.",example:4242,flat_name:"process.pid",format:"string",level:"core",name:"pid",normalize:[],short:"Process id.",type:"long"},"process.previous.args":{dashed_name:"process-previous-args",description:"Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.",example:'["/usr/bin/ssh", "-l", "user", "10.0.0.16"]',flat_name:"process.previous.args",ignore_above:1024,level:"extended",name:"args",normalize:["array"],original_fieldset:"process",short:"Array of process arguments.",type:"keyword"},"process.previous.args_count":{dashed_name:"process-previous-args-count",description:"Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.",example:4,flat_name:"process.previous.args_count",level:"extended",name:"args_count",normalize:[],original_fieldset:"process",short:"Length of the process.args array.",type:"long"},"process.previous.executable":{dashed_name:"process-previous-executable",description:"Absolute path to the process executable.",example:"/usr/bin/ssh",flat_name:"process.previous.executable",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.previous.executable.text",name:"text",type:"match_only_text"}],name:"executable",normalize:[],original_fieldset:"process",short:"Absolute path to the process executable.",type:"keyword"},"process.real_group.id":{dashed_name:"process-real-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.real_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.real_group.name":{dashed_name:"process-real-group-name",description:"Name of the group.",flat_name:"process.real_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.real_user.id":{dashed_name:"process-real-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.real_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.real_user.name":{dashed_name:"process-real-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.real_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.real_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.saved_group.id":{dashed_name:"process-saved-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.saved_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.saved_group.name":{dashed_name:"process-saved-group-name",description:"Name of the group.",flat_name:"process.saved_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.saved_user.id":{dashed_name:"process-saved-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.saved_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.saved_user.name":{dashed_name:"process-saved-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.saved_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.saved_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.session_leader.args":{dashed_name:"process-session-leader-args",description:"Array of process arguments, starting with the absolute path to the executable.\nMay be filtered to protect sensitive information.",example:'["/usr/bin/ssh", "-l", "user", "10.0.0.16"]',flat_name:"process.session_leader.args",ignore_above:1024,level:"extended",name:"args",normalize:["array"],original_fieldset:"process",short:"Array of process arguments.",type:"keyword"},"process.session_leader.args_count":{dashed_name:"process-session-leader-args-count",description:"Length of the process.args array.\nThis field can be useful for querying or performing bucket analysis on how many arguments were provided to start a process. More arguments may be an indication of suspicious activity.",example:4,flat_name:"process.session_leader.args_count",level:"extended",name:"args_count",normalize:[],original_fieldset:"process",short:"Length of the process.args array.",type:"long"},"process.session_leader.command_line":{dashed_name:"process-session-leader-command-line",description:"Full command line that started the process, including the absolute path to the executable, and all arguments.\nSome arguments may be filtered to protect sensitive information.",example:"/usr/bin/ssh -l user 10.0.0.16",flat_name:"process.session_leader.command_line",level:"extended",multi_fields:[{flat_name:"process.session_leader.command_line.text",name:"text",type:"match_only_text"}],name:"command_line",normalize:[],original_fieldset:"process",short:"Full command line that started the process.",type:"wildcard"},"process.session_leader.entity_id":{dashed_name:"process-session-leader-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.session_leader.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],original_fieldset:"process",short:"Unique identifier for the process.",type:"keyword"},"process.session_leader.executable":{dashed_name:"process-session-leader-executable",description:"Absolute path to the process executable.",example:"/usr/bin/ssh",flat_name:"process.session_leader.executable",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.session_leader.executable.text",name:"text",type:"match_only_text"}],name:"executable",normalize:[],original_fieldset:"process",short:"Absolute path to the process executable.",type:"keyword"},"process.session_leader.group.id":{dashed_name:"process-session-leader-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.session_leader.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.session_leader.group.name":{dashed_name:"process-session-leader-group-name",description:"Name of the group.",flat_name:"process.session_leader.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.session_leader.interactive":{dashed_name:"process-session-leader-interactive",description:"Whether the process is connected to an interactive shell.\nProcess interactivity is inferred from the processes file descriptors. If the character device for the controlling tty is the same as stdin and stderr for the process, the process is considered interactive.\nNote: A non-interactive process can belong to an interactive session and is simply one that does not have open file descriptors reading the controlling TTY on FD 0 (stdin) or writing to the controlling TTY on FD 2 (stderr). A backgrounded process is still considered interactive if stdin and stderr are connected to the controlling TTY.",example:!0,flat_name:"process.session_leader.interactive",level:"extended",name:"interactive",normalize:[],original_fieldset:"process",short:"Whether the process is connected to an interactive shell.",type:"boolean"},"process.session_leader.name":{dashed_name:"process-session-leader-name",description:"Process name.\nSometimes called program name or similar.",example:"ssh",flat_name:"process.session_leader.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.session_leader.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"process",short:"Process name.",type:"keyword"},"process.session_leader.parent.entity_id":{dashed_name:"process-session-leader-parent-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.session_leader.parent.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],original_fieldset:"process",short:"Unique identifier for the process.",type:"keyword"},"process.session_leader.parent.pid":{dashed_name:"process-session-leader-parent-pid",description:"Process id.",example:4242,flat_name:"process.session_leader.parent.pid",format:"string",level:"core",name:"pid",normalize:[],original_fieldset:"process",short:"Process id.",type:"long"},"process.session_leader.parent.session_leader.entity_id":{dashed_name:"process-session-leader-parent-session-leader-entity-id",description:"Unique identifier for the process.\nThe implementation of this is specified by the data source, but some examples of what could be used here are a process-generated UUID, Sysmon Process GUIDs, or a hash of some uniquely identifying components of a process.\nConstructing a globally unique identifier is a common practice to mitigate PID reuse as well as to identify a specific process over time, across multiple monitored hosts.",example:"c2c455d9f99375d",flat_name:"process.session_leader.parent.session_leader.entity_id",ignore_above:1024,level:"extended",name:"entity_id",normalize:[],original_fieldset:"process",short:"Unique identifier for the process.",type:"keyword"},"process.session_leader.parent.session_leader.pid":{dashed_name:"process-session-leader-parent-session-leader-pid",description:"Process id.",example:4242,flat_name:"process.session_leader.parent.session_leader.pid",format:"string",level:"core",name:"pid",normalize:[],original_fieldset:"process",short:"Process id.",type:"long"},"process.session_leader.parent.session_leader.start":{dashed_name:"process-session-leader-parent-session-leader-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.session_leader.parent.session_leader.start",level:"extended",name:"start",normalize:[],original_fieldset:"process",short:"The time the process started.",type:"date"},"process.session_leader.parent.session_leader.vpid":{dashed_name:"process-session-leader-parent-session-leader-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.session_leader.parent.session_leader.vpid",format:"string",level:"core",name:"vpid",normalize:[],original_fieldset:"process",short:"Virtual process id.",type:"long"},"process.session_leader.parent.start":{dashed_name:"process-session-leader-parent-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.session_leader.parent.start",level:"extended",name:"start",normalize:[],original_fieldset:"process",short:"The time the process started.",type:"date"},"process.session_leader.parent.vpid":{dashed_name:"process-session-leader-parent-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.session_leader.parent.vpid",format:"string",level:"core",name:"vpid",normalize:[],original_fieldset:"process",short:"Virtual process id.",type:"long"},"process.session_leader.pid":{dashed_name:"process-session-leader-pid",description:"Process id.",example:4242,flat_name:"process.session_leader.pid",format:"string",level:"core",name:"pid",normalize:[],original_fieldset:"process",short:"Process id.",type:"long"},"process.session_leader.real_group.id":{dashed_name:"process-session-leader-real-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.session_leader.real_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.session_leader.real_group.name":{dashed_name:"process-session-leader-real-group-name",description:"Name of the group.",flat_name:"process.session_leader.real_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.session_leader.real_user.id":{dashed_name:"process-session-leader-real-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.session_leader.real_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.session_leader.real_user.name":{dashed_name:"process-session-leader-real-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.session_leader.real_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.session_leader.real_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.session_leader.same_as_process":{dashed_name:"process-session-leader-same-as-process",description:"This boolean is used to identify if a leader process is the same as the top level process.\nFor example, if `process.group_leader.same_as_process = true`, it means the process event in question is the leader of its process group. Details under `process.*` like `pid` would be the same under `process.group_leader.*` The same applies for both `process.session_leader` and `process.entry_leader`.\nThis field exists to the benefit of EQL and other rule engines since it's not possible to compare equality between two fields in a single document. e.g `process.entity_id` = `process.group_leader.entity_id` (top level process is the process group leader) OR `process.entity_id` = `process.entry_leader.entity_id` (top level process is the entry session leader)\nInstead these rules could be written like: `process.group_leader.same_as_process: true` OR `process.entry_leader.same_as_process: true`\nNote: This field is only set on `process.entry_leader`, `process.session_leader` and `process.group_leader`.",example:!0,flat_name:"process.session_leader.same_as_process",level:"extended",name:"same_as_process",normalize:[],original_fieldset:"process",short:"This boolean is used to identify if a leader process is the same as the top level process.",type:"boolean"},"process.session_leader.saved_group.id":{dashed_name:"process-session-leader-saved-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.session_leader.saved_group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.session_leader.saved_group.name":{dashed_name:"process-session-leader-saved-group-name",description:"Name of the group.",flat_name:"process.session_leader.saved_group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.session_leader.saved_user.id":{dashed_name:"process-session-leader-saved-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.session_leader.saved_user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.session_leader.saved_user.name":{dashed_name:"process-session-leader-saved-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.session_leader.saved_user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.session_leader.saved_user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.session_leader.start":{dashed_name:"process-session-leader-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.session_leader.start",level:"extended",name:"start",normalize:[],original_fieldset:"process",short:"The time the process started.",type:"date"},"process.session_leader.supplemental_groups.id":{dashed_name:"process-session-leader-supplemental-groups-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.session_leader.supplemental_groups.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.session_leader.supplemental_groups.name":{dashed_name:"process-session-leader-supplemental-groups-name",description:"Name of the group.",flat_name:"process.session_leader.supplemental_groups.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.session_leader.tty":{dashed_name:"process-session-leader-tty",description:"Information about the controlling TTY device. If set, the process belongs to an interactive session.",flat_name:"process.session_leader.tty",level:"extended",name:"tty",normalize:[],original_fieldset:"process",short:"Information about the controlling TTY device.",type:"object"},"process.session_leader.tty.char_device.major":{dashed_name:"process-session-leader-tty-char-device-major",description:'The major number identifies the driver associated with the device. The character device\'s major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0". For more details, please refer to the Linux kernel documentation.',example:4,flat_name:"process.session_leader.tty.char_device.major",level:"extended",name:"tty.char_device.major",normalize:[],original_fieldset:"process",short:"The TTY character device's major number.",type:"long"},"process.session_leader.tty.char_device.minor":{dashed_name:"process-session-leader-tty-char-device-minor",description:"The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them.",example:1,flat_name:"process.session_leader.tty.char_device.minor",level:"extended",name:"tty.char_device.minor",normalize:[],original_fieldset:"process",short:"The TTY character device's minor number.",type:"long"},"process.session_leader.user.id":{dashed_name:"process-session-leader-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.session_leader.user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.session_leader.user.name":{dashed_name:"process-session-leader-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.session_leader.user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.session_leader.user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.session_leader.vpid":{dashed_name:"process-session-leader-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.session_leader.vpid",format:"string",level:"core",name:"vpid",normalize:[],original_fieldset:"process",short:"Virtual process id.",type:"long"},"process.session_leader.working_directory":{dashed_name:"process-session-leader-working-directory",description:"The working directory of the process.",example:"/home/alice",flat_name:"process.session_leader.working_directory",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.session_leader.working_directory.text",name:"text",type:"match_only_text"}],name:"working_directory",normalize:[],original_fieldset:"process",short:"The working directory of the process.",type:"keyword"},"process.start":{dashed_name:"process-start",description:"The time the process started.",example:"2016-05-23T08:05:34.853Z",flat_name:"process.start",level:"extended",name:"start",normalize:[],short:"The time the process started.",type:"date"},"process.supplemental_groups.id":{dashed_name:"process-supplemental-groups-id",description:"Unique identifier for the group on the system/platform.",flat_name:"process.supplemental_groups.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"process.supplemental_groups.name":{dashed_name:"process-supplemental-groups-name",description:"Name of the group.",flat_name:"process.supplemental_groups.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"process.thread.capabilities.effective":{dashed_name:"process-thread-capabilities-effective",description:"This is the set of capabilities used by the kernel to perform permission checks for the thread.",example:'["CAP_BPF", "CAP_SYS_ADMIN"]',flat_name:"process.thread.capabilities.effective",ignore_above:1024,level:"extended",name:"thread.capabilities.effective",normalize:["array"],pattern:"^(CAP_[A-Z_]+|\\d+)$",short:"Array of capabilities used for permission checks.",type:"keyword"},"process.thread.capabilities.permitted":{dashed_name:"process-thread-capabilities-permitted",description:"This is a limiting superset for the effective capabilities that the thread may assume.",example:'["CAP_BPF", "CAP_SYS_ADMIN"]',flat_name:"process.thread.capabilities.permitted",ignore_above:1024,level:"extended",name:"thread.capabilities.permitted",normalize:["array"],pattern:"^(CAP_[A-Z_]+|\\d+)$",short:"Array of capabilities a thread could assume.",type:"keyword"},"process.thread.id":{dashed_name:"process-thread-id",description:"Thread ID.",example:4242,flat_name:"process.thread.id",format:"string",level:"extended",name:"thread.id",normalize:[],short:"Thread ID.",type:"long"},"process.thread.name":{dashed_name:"process-thread-name",description:"Thread name.",example:"thread-0",flat_name:"process.thread.name",ignore_above:1024,level:"extended",name:"thread.name",normalize:[],short:"Thread name.",type:"keyword"},"process.title":{dashed_name:"process-title",description:"Process title.\nThe proctitle, some times the same as process name. Can also be different: for example a browser setting its title to the web page currently opened.",flat_name:"process.title",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.title.text",name:"text",type:"match_only_text"}],name:"title",normalize:[],short:"Process title.",type:"keyword"},"process.tty":{dashed_name:"process-tty",description:"Information about the controlling TTY device. If set, the process belongs to an interactive session.",flat_name:"process.tty",level:"extended",name:"tty",normalize:[],short:"Information about the controlling TTY device.",type:"object"},"process.tty.char_device.major":{dashed_name:"process-tty-char-device-major",description:'The major number identifies the driver associated with the device. The character device\'s major and minor numbers can be algorithmically combined to produce the more familiar terminal identifiers such as "ttyS0" and "pts/0". For more details, please refer to the Linux kernel documentation.',example:4,flat_name:"process.tty.char_device.major",level:"extended",name:"tty.char_device.major",normalize:[],short:"The TTY character device's major number.",type:"long"},"process.tty.char_device.minor":{dashed_name:"process-tty-char-device-minor",description:"The minor number is used only by the driver specified by the major number; other parts of the kernel don’t use it, and merely pass it along to the driver. It is common for a driver to control several devices; the minor number provides a way for the driver to differentiate among them.",example:1,flat_name:"process.tty.char_device.minor",level:"extended",name:"tty.char_device.minor",normalize:[],short:"The TTY character device's minor number.",type:"long"},"process.tty.columns":{beta:"This field is beta and subject to change.",dashed_name:"process-tty-columns",description:"The number of character columns per line. e.g terminal width\nTerminal sizes can change, so this value reflects the maximum value for a given IO event. i.e. where event.action = 'text_output'",example:80,flat_name:"process.tty.columns",level:"extended",name:"tty.columns",normalize:[],short:"The number of character columns per line. e.g terminal width",type:"long"},"process.tty.rows":{beta:"This field is beta and subject to change.",dashed_name:"process-tty-rows",description:"The number of character rows in the terminal. e.g terminal height\nTerminal sizes can change, so this value reflects the maximum value for a given IO event. i.e. where event.action = 'text_output'",example:24,flat_name:"process.tty.rows",level:"extended",name:"tty.rows",normalize:[],short:"The number of character rows in the terminal. e.g terminal height",type:"long"},"process.uptime":{dashed_name:"process-uptime",description:"Seconds the process has been up.",example:1325,flat_name:"process.uptime",level:"extended",name:"uptime",normalize:[],short:"Seconds the process has been up.",type:"long"},"process.user.id":{dashed_name:"process-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"process.user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"process.user.name":{dashed_name:"process-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"process.user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"process.user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"process.vpid":{dashed_name:"process-vpid",description:"Virtual process id.\nThe process id within a pid namespace. This is not necessarily unique across all processes on the host but it is unique within the process namespace that the process exists within.",example:4242,flat_name:"process.vpid",format:"string",level:"core",name:"vpid",normalize:[],short:"Virtual process id.",type:"long"},"process.working_directory":{dashed_name:"process-working-directory",description:"The working directory of the process.",example:"/home/alice",flat_name:"process.working_directory",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"process.working_directory.text",name:"text",type:"match_only_text"}],name:"working_directory",normalize:[],short:"The working directory of the process.",type:"keyword"},"registry.data.bytes":{dashed_name:"registry-data-bytes",description:"Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.",example:"ZQBuAC0AVQBTAAAAZQBuAAAAAAA=",flat_name:"registry.data.bytes",ignore_above:1024,level:"extended",name:"data.bytes",normalize:[],short:"Original bytes written with base64 encoding.",type:"keyword"},"registry.data.strings":{dashed_name:"registry-data-strings",description:'Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).',example:'["C:\\rta\\red_ttp\\bin\\myapp.exe"]',flat_name:"registry.data.strings",level:"core",name:"data.strings",normalize:["array"],short:"List of strings representing what was written to the registry.",type:"wildcard"},"registry.data.type":{dashed_name:"registry-data-type",description:"Standard registry type for encoding contents",example:"REG_SZ",flat_name:"registry.data.type",ignore_above:1024,level:"core",name:"data.type",normalize:[],short:"Standard registry type for encoding contents",type:"keyword"},"registry.hive":{dashed_name:"registry-hive",description:"Abbreviated name for the hive.",example:"HKLM",flat_name:"registry.hive",ignore_above:1024,level:"core",name:"hive",normalize:[],short:"Abbreviated name for the hive.",type:"keyword"},"registry.key":{dashed_name:"registry-key",description:"Hive-relative path of keys.",example:"SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\winword.exe",flat_name:"registry.key",ignore_above:1024,level:"core",name:"key",normalize:[],short:"Hive-relative path of keys.",type:"keyword"},"registry.path":{dashed_name:"registry-path",description:"Full path, including hive, key and value",example:"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\winword.exe\\Debugger",flat_name:"registry.path",ignore_above:1024,level:"core",name:"path",normalize:[],short:"Full path, including hive, key and value",type:"keyword"},"registry.value":{dashed_name:"registry-value",description:"Name of the value written.",example:"Debugger",flat_name:"registry.value",ignore_above:1024,level:"core",name:"value",normalize:[],short:"Name of the value written.",type:"keyword"},"related.hash":{dashed_name:"related-hash",description:"All the hashes seen on your event. Populating this field, then using it to search for hashes can help in situations where you're unsure what the hash algorithm is (and therefore which key name to search).",flat_name:"related.hash",ignore_above:1024,level:"extended",name:"hash",normalize:["array"],short:"All the hashes seen on your event.",type:"keyword"},"related.hosts":{dashed_name:"related-hosts",description:"All hostnames or other host identifiers seen on your event. Example identifiers include FQDNs, domain names, workstation names, or aliases.",flat_name:"related.hosts",ignore_above:1024,level:"extended",name:"hosts",normalize:["array"],short:"All the host identifiers seen on your event.",type:"keyword"},"related.ip":{dashed_name:"related-ip",description:"All of the IPs seen on your event.",flat_name:"related.ip",level:"extended",name:"ip",normalize:["array"],short:"All of the IPs seen on your event.",type:"ip"},"related.user":{dashed_name:"related-user",description:"All the user names or other user identifiers seen on the event.",flat_name:"related.user",ignore_above:1024,level:"extended",name:"user",normalize:["array"],short:"All the user names or other user identifiers seen on the event.",type:"keyword"},"rule.author":{dashed_name:"rule-author",description:"Name, organization, or pseudonym of the author or authors who created the rule used to generate this event.",example:'["Star-Lord"]',flat_name:"rule.author",ignore_above:1024,level:"extended",name:"author",normalize:["array"],short:"Rule author",type:"keyword"},"rule.category":{dashed_name:"rule-category",description:"A categorization value keyword used by the entity using the rule for detection of this event.",example:"Attempted Information Leak",flat_name:"rule.category",ignore_above:1024,level:"extended",name:"category",normalize:[],short:"Rule category",type:"keyword"},"rule.description":{dashed_name:"rule-description",description:"The description of the rule generating the event.",example:"Block requests to public DNS over HTTPS / TLS protocols",flat_name:"rule.description",ignore_above:1024,level:"extended",name:"description",normalize:[],short:"Rule description",type:"keyword"},"rule.id":{dashed_name:"rule-id",description:"A rule ID that is unique within the scope of an agent, observer, or other entity using the rule for detection of this event.",example:101,flat_name:"rule.id",ignore_above:1024,level:"extended",name:"id",normalize:[],short:"Rule ID",type:"keyword"},"rule.license":{dashed_name:"rule-license",description:"Name of the license under which the rule used to generate this event is made available.",example:"Apache 2.0",flat_name:"rule.license",ignore_above:1024,level:"extended",name:"license",normalize:[],short:"Rule license",type:"keyword"},"rule.name":{dashed_name:"rule-name",description:"The name of the rule or signature generating the event.",example:"BLOCK_DNS_over_TLS",flat_name:"rule.name",ignore_above:1024,level:"extended",name:"name",normalize:[],short:"Rule name",type:"keyword"},"rule.reference":{dashed_name:"rule-reference",description:"Reference URL to additional information about the rule used to generate this event.\nThe URL can point to the vendor's documentation about the rule. If that's not available, it can also be a link to a more general page describing this type of alert.",example:"https://en.wikipedia.org/wiki/DNS_over_TLS",flat_name:"rule.reference",ignore_above:1024,level:"extended",name:"reference",normalize:[],short:"Rule reference URL",type:"keyword"},"rule.ruleset":{dashed_name:"rule-ruleset",description:"Name of the ruleset, policy, group, or parent category in which the rule used to generate this event is a member.",example:"Standard_Protocol_Filters",flat_name:"rule.ruleset",ignore_above:1024,level:"extended",name:"ruleset",normalize:[],short:"Rule ruleset",type:"keyword"},"rule.uuid":{dashed_name:"rule-uuid",description:"A rule ID that is unique within the scope of a set or group of agents, observers, or other entities using the rule for detection of this event.",example:1100110011,flat_name:"rule.uuid",ignore_above:1024,level:"extended",name:"uuid",normalize:[],short:"Rule UUID",type:"keyword"},"rule.version":{dashed_name:"rule-version",description:"The version / revision of the rule being used for analysis.",example:1.1,flat_name:"rule.version",ignore_above:1024,level:"extended",name:"version",normalize:[],short:"Rule version",type:"keyword"},"server.address":{dashed_name:"server-address",description:"Some event server addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.",flat_name:"server.address",ignore_above:1024,level:"extended",name:"address",normalize:[],short:"Server network address.",type:"keyword"},"server.as.number":{dashed_name:"server-as-number",description:"Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",example:15169,flat_name:"server.as.number",level:"extended",name:"number",normalize:[],original_fieldset:"as",short:"Unique number allocated to the autonomous system.",type:"long"},"server.as.organization.name":{dashed_name:"server-as-organization-name",description:"Organization name.",example:"Google LLC",flat_name:"server.as.organization.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"server.as.organization.name.text",name:"text",type:"match_only_text"}],name:"organization.name",normalize:[],original_fieldset:"as",short:"Organization name.",type:"keyword"},"server.bytes":{dashed_name:"server-bytes",description:"Bytes sent from the server to the client.",example:184,flat_name:"server.bytes",format:"bytes",level:"core",name:"bytes",normalize:[],short:"Bytes sent from the server to the client.",type:"long"},"server.domain":{dashed_name:"server-domain",description:"The domain name of the server system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.",example:"foo.example.com",flat_name:"server.domain",ignore_above:1024,level:"core",name:"domain",normalize:[],short:"The domain name of the server.",type:"keyword"},"server.geo.city_name":{dashed_name:"server-geo-city-name",description:"City name.",example:"Montreal",flat_name:"server.geo.city_name",ignore_above:1024,level:"core",name:"city_name",normalize:[],original_fieldset:"geo",short:"City name.",type:"keyword"},"server.geo.continent_code":{dashed_name:"server-geo-continent-code",description:"Two-letter code representing continent's name.",example:"NA",flat_name:"server.geo.continent_code",ignore_above:1024,level:"core",name:"continent_code",normalize:[],original_fieldset:"geo",short:"Continent code.",type:"keyword"},"server.geo.continent_name":{dashed_name:"server-geo-continent-name",description:"Name of the continent.",example:"North America",flat_name:"server.geo.continent_name",ignore_above:1024,level:"core",name:"continent_name",normalize:[],original_fieldset:"geo",short:"Name of the continent.",type:"keyword"},"server.geo.country_iso_code":{dashed_name:"server-geo-country-iso-code",description:"Country ISO code.",example:"CA",flat_name:"server.geo.country_iso_code",ignore_above:1024,level:"core",name:"country_iso_code",normalize:[],original_fieldset:"geo",short:"Country ISO code.",type:"keyword"},"server.geo.country_name":{dashed_name:"server-geo-country-name",description:"Country name.",example:"Canada",flat_name:"server.geo.country_name",ignore_above:1024,level:"core",name:"country_name",normalize:[],original_fieldset:"geo",short:"Country name.",type:"keyword"},"server.geo.location":{dashed_name:"server-geo-location",description:"Longitude and latitude.",example:'{ "lon": -73.614830, "lat": 45.505918 }',flat_name:"server.geo.location",level:"core",name:"location",normalize:[],original_fieldset:"geo",short:"Longitude and latitude.",type:"geo_point"},"server.geo.name":{dashed_name:"server-geo-name",description:"User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",example:"boston-dc",flat_name:"server.geo.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"geo",short:"User-defined description of a location.",type:"keyword"},"server.geo.postal_code":{dashed_name:"server-geo-postal-code",description:"Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",example:94040,flat_name:"server.geo.postal_code",ignore_above:1024,level:"core",name:"postal_code",normalize:[],original_fieldset:"geo",short:"Postal code.",type:"keyword"},"server.geo.region_iso_code":{dashed_name:"server-geo-region-iso-code",description:"Region ISO code.",example:"CA-QC",flat_name:"server.geo.region_iso_code",ignore_above:1024,level:"core",name:"region_iso_code",normalize:[],original_fieldset:"geo",short:"Region ISO code.",type:"keyword"},"server.geo.region_name":{dashed_name:"server-geo-region-name",description:"Region name.",example:"Quebec",flat_name:"server.geo.region_name",ignore_above:1024,level:"core",name:"region_name",normalize:[],original_fieldset:"geo",short:"Region name.",type:"keyword"},"server.geo.timezone":{dashed_name:"server-geo-timezone",description:"The time zone of the location, such as IANA time zone name.",example:"America/Argentina/Buenos_Aires",flat_name:"server.geo.timezone",ignore_above:1024,level:"core",name:"timezone",normalize:[],original_fieldset:"geo",short:"Time zone.",type:"keyword"},"server.ip":{dashed_name:"server-ip",description:"IP address of the server (IPv4 or IPv6).",flat_name:"server.ip",level:"core",name:"ip",normalize:[],short:"IP address of the server.",type:"ip"},"server.mac":{dashed_name:"server-mac",description:"MAC address of the server.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",example:"00-00-5E-00-53-23",flat_name:"server.mac",ignore_above:1024,level:"core",name:"mac",normalize:[],pattern:"^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$",short:"MAC address of the server.",type:"keyword"},"server.nat.ip":{dashed_name:"server-nat-ip",description:"Translated ip of destination based NAT sessions (e.g. internet to private DMZ)\nTypically used with load balancers, firewalls, or routers.",flat_name:"server.nat.ip",level:"extended",name:"nat.ip",normalize:[],short:"Server NAT ip",type:"ip"},"server.nat.port":{dashed_name:"server-nat-port",description:"Translated port of destination based NAT sessions (e.g. internet to private DMZ)\nTypically used with load balancers, firewalls, or routers.",flat_name:"server.nat.port",format:"string",level:"extended",name:"nat.port",normalize:[],short:"Server NAT port",type:"long"},"server.packets":{dashed_name:"server-packets",description:"Packets sent from the server to the client.",example:12,flat_name:"server.packets",level:"core",name:"packets",normalize:[],short:"Packets sent from the server to the client.",type:"long"},"server.port":{dashed_name:"server-port",description:"Port of the server.",flat_name:"server.port",format:"string",level:"core",name:"port",normalize:[],short:"Port of the server.",type:"long"},"server.registered_domain":{dashed_name:"server-registered-domain",description:'The highest registered server domain, stripped of the subdomain.\nFor example, the registered domain for "foo.example.com" is "example.com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".',example:"example.com",flat_name:"server.registered_domain",ignore_above:1024,level:"extended",name:"registered_domain",normalize:[],short:"The highest registered server domain, stripped of the subdomain.",type:"keyword"},"server.subdomain":{dashed_name:"server-subdomain",description:'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.',example:"east",flat_name:"server.subdomain",ignore_above:1024,level:"extended",name:"subdomain",normalize:[],short:"The subdomain of the domain.",type:"keyword"},"server.top_level_domain":{dashed_name:"server-top-level-domain",description:'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".',example:"co.uk",flat_name:"server.top_level_domain",ignore_above:1024,level:"extended",name:"top_level_domain",normalize:[],short:"The effective top level domain (com, org, net, co.uk).",type:"keyword"},"server.user.domain":{dashed_name:"server-user-domain",description:"Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"server.user.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"user",short:"Name of the directory the user is a member of.",type:"keyword"},"server.user.email":{dashed_name:"server-user-email",description:"User email address.",flat_name:"server.user.email",ignore_above:1024,level:"extended",name:"email",normalize:[],original_fieldset:"user",short:"User email address.",type:"keyword"},"server.user.full_name":{dashed_name:"server-user-full-name",description:"User's full name, if available.",example:"Albert Einstein",flat_name:"server.user.full_name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"server.user.full_name.text",name:"text",type:"match_only_text"}],name:"full_name",normalize:[],original_fieldset:"user",short:"User's full name, if available.",type:"keyword"},"server.user.group.domain":{dashed_name:"server-user-group-domain",description:"Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"server.user.group.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"group",short:"Name of the directory the group is a member of.",type:"keyword"},"server.user.group.id":{dashed_name:"server-user-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"server.user.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"server.user.group.name":{dashed_name:"server-user-group-name",description:"Name of the group.",flat_name:"server.user.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"server.user.hash":{dashed_name:"server-user-hash",description:"Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",flat_name:"server.user.hash",ignore_above:1024,level:"extended",name:"hash",normalize:[],original_fieldset:"user",short:"Unique user hash to correlate information for a user in anonymized form.",type:"keyword"},"server.user.id":{dashed_name:"server-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"server.user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"server.user.name":{dashed_name:"server-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"server.user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"server.user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"server.user.roles":{dashed_name:"server-user-roles",description:"Array of user roles at the time of the event.",example:'["kibana_admin", "reporting_user"]',flat_name:"server.user.roles",ignore_above:1024,level:"extended",name:"roles",normalize:["array"],original_fieldset:"user",short:"Array of user roles at the time of the event.",type:"keyword"},"service.address":{dashed_name:"service-address",description:"Address where data about this service was collected from.\nThis should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets).",example:"172.26.0.2:5432",flat_name:"service.address",ignore_above:1024,level:"extended",name:"address",normalize:[],short:"Address of this service.",type:"keyword"},"service.environment":{beta:"This field is beta and subject to change.",dashed_name:"service-environment",description:"Identifies the environment where the service is running.\nIf the same service runs in different environments (production, staging, QA, development, etc.), the environment can identify other instances of the same service. Can also group services and applications from the same environment.",example:"production",flat_name:"service.environment",ignore_above:1024,level:"extended",name:"environment",normalize:[],short:"Environment of the service.",type:"keyword"},"service.ephemeral_id":{dashed_name:"service-ephemeral-id",description:"Ephemeral identifier of this service (if one exists).\nThis id normally changes across restarts, but `service.id` does not.",example:"8a4f500f",flat_name:"service.ephemeral_id",ignore_above:1024,level:"extended",name:"ephemeral_id",normalize:[],short:"Ephemeral identifier of this service.",type:"keyword"},"service.id":{dashed_name:"service-id",description:"Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.\nThis id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.\nNote that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead.",example:"d37e5ebfe0ae6c4972dbe9f0174a1637bb8247f6",flat_name:"service.id",ignore_above:1024,level:"core",name:"id",normalize:[],short:"Unique identifier of the running service.",type:"keyword"},"service.name":{dashed_name:"service-name",description:"Name of the service data is collected from.\nThe name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.",example:"elasticsearch-metrics",flat_name:"service.name",ignore_above:1024,level:"core",name:"name",normalize:[],short:"Name of the service.",type:"keyword"},"service.node.name":{dashed_name:"service-node-name",description:"Name of a service node.\nThis allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.\nIn the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.",example:"instance-0000000016",flat_name:"service.node.name",ignore_above:1024,level:"extended",name:"node.name",normalize:[],short:"Name of the service node.",type:"keyword"},"service.node.role":{dashed_name:"service-node-role",description:"Deprecated for removal in next major version release. This field will be superseded by `node.roles`.\nRole of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service.",example:"background_tasks",flat_name:"service.node.role",ignore_above:1024,level:"extended",name:"node.role",normalize:[],short:"Deprecated role (singular) of the service node.",type:"keyword"},"service.node.roles":{dashed_name:"service-node-roles",description:"Roles of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks` or both.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data` or both.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service.",example:'["ui", "background_tasks"]',flat_name:"service.node.roles",ignore_above:1024,level:"extended",name:"node.roles",normalize:["array"],short:"Roles of the service node.",type:"keyword"},"service.origin.address":{dashed_name:"service-origin-address",description:"Address where data about this service was collected from.\nThis should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets).",example:"172.26.0.2:5432",flat_name:"service.origin.address",ignore_above:1024,level:"extended",name:"address",normalize:[],original_fieldset:"service",short:"Address of this service.",type:"keyword"},"service.origin.environment":{beta:"This field is beta and subject to change.",dashed_name:"service-origin-environment",description:"Identifies the environment where the service is running.\nIf the same service runs in different environments (production, staging, QA, development, etc.), the environment can identify other instances of the same service. Can also group services and applications from the same environment.",example:"production",flat_name:"service.origin.environment",ignore_above:1024,level:"extended",name:"environment",normalize:[],original_fieldset:"service",short:"Environment of the service.",type:"keyword"},"service.origin.ephemeral_id":{dashed_name:"service-origin-ephemeral-id",description:"Ephemeral identifier of this service (if one exists).\nThis id normally changes across restarts, but `service.id` does not.",example:"8a4f500f",flat_name:"service.origin.ephemeral_id",ignore_above:1024,level:"extended",name:"ephemeral_id",normalize:[],original_fieldset:"service",short:"Ephemeral identifier of this service.",type:"keyword"},"service.origin.id":{dashed_name:"service-origin-id",description:"Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.\nThis id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.\nNote that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead.",example:"d37e5ebfe0ae6c4972dbe9f0174a1637bb8247f6",flat_name:"service.origin.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"service",short:"Unique identifier of the running service.",type:"keyword"},"service.origin.name":{dashed_name:"service-origin-name",description:"Name of the service data is collected from.\nThe name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.",example:"elasticsearch-metrics",flat_name:"service.origin.name",ignore_above:1024,level:"core",name:"name",normalize:[],original_fieldset:"service",short:"Name of the service.",type:"keyword"},"service.origin.node.name":{dashed_name:"service-origin-node-name",description:"Name of a service node.\nThis allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.\nIn the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.",example:"instance-0000000016",flat_name:"service.origin.node.name",ignore_above:1024,level:"extended",name:"node.name",normalize:[],original_fieldset:"service",short:"Name of the service node.",type:"keyword"},"service.origin.node.role":{dashed_name:"service-origin-node-role",description:"Deprecated for removal in next major version release. This field will be superseded by `node.roles`.\nRole of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service.",example:"background_tasks",flat_name:"service.origin.node.role",ignore_above:1024,level:"extended",name:"node.role",normalize:[],original_fieldset:"service",short:"Deprecated role (singular) of the service node.",type:"keyword"},"service.origin.node.roles":{dashed_name:"service-origin-node-roles",description:"Roles of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks` or both.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data` or both.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service.",example:'["ui", "background_tasks"]',flat_name:"service.origin.node.roles",ignore_above:1024,level:"extended",name:"node.roles",normalize:["array"],original_fieldset:"service",short:"Roles of the service node.",type:"keyword"},"service.origin.state":{dashed_name:"service-origin-state",description:"Current state of the service.",flat_name:"service.origin.state",ignore_above:1024,level:"core",name:"state",normalize:[],original_fieldset:"service",short:"Current state of the service.",type:"keyword"},"service.origin.type":{dashed_name:"service-origin-type",description:"The type of the service data is collected from.\nThe type can be used to group and correlate logs and metrics from one service type.\nExample: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.",example:"elasticsearch",flat_name:"service.origin.type",ignore_above:1024,level:"core",name:"type",normalize:[],original_fieldset:"service",short:"The type of the service.",type:"keyword"},"service.origin.version":{dashed_name:"service-origin-version",description:"Version of the service the data was collected from.\nThis allows to look at a data set only for a specific version of a service.",example:"3.2.4",flat_name:"service.origin.version",ignore_above:1024,level:"core",name:"version",normalize:[],original_fieldset:"service",short:"Version of the service.",type:"keyword"},"service.state":{dashed_name:"service-state",description:"Current state of the service.",flat_name:"service.state",ignore_above:1024,level:"core",name:"state",normalize:[],short:"Current state of the service.",type:"keyword"},"service.target.address":{dashed_name:"service-target-address",description:"Address where data about this service was collected from.\nThis should be a URI, network address (ipv4:port or [ipv6]:port) or a resource path (sockets).",example:"172.26.0.2:5432",flat_name:"service.target.address",ignore_above:1024,level:"extended",name:"address",normalize:[],original_fieldset:"service",short:"Address of this service.",type:"keyword"},"service.target.environment":{beta:"This field is beta and subject to change.",dashed_name:"service-target-environment",description:"Identifies the environment where the service is running.\nIf the same service runs in different environments (production, staging, QA, development, etc.), the environment can identify other instances of the same service. Can also group services and applications from the same environment.",example:"production",flat_name:"service.target.environment",ignore_above:1024,level:"extended",name:"environment",normalize:[],original_fieldset:"service",short:"Environment of the service.",type:"keyword"},"service.target.ephemeral_id":{dashed_name:"service-target-ephemeral-id",description:"Ephemeral identifier of this service (if one exists).\nThis id normally changes across restarts, but `service.id` does not.",example:"8a4f500f",flat_name:"service.target.ephemeral_id",ignore_above:1024,level:"extended",name:"ephemeral_id",normalize:[],original_fieldset:"service",short:"Ephemeral identifier of this service.",type:"keyword"},"service.target.id":{dashed_name:"service-target-id",description:"Unique identifier of the running service. If the service is comprised of many nodes, the `service.id` should be the same for all nodes.\nThis id should uniquely identify the service. This makes it possible to correlate logs and metrics for one specific service, no matter which particular node emitted the event.\nNote that if you need to see the events from one specific host of the service, you should filter on that `host.name` or `host.id` instead.",example:"d37e5ebfe0ae6c4972dbe9f0174a1637bb8247f6",flat_name:"service.target.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"service",short:"Unique identifier of the running service.",type:"keyword"},"service.target.name":{dashed_name:"service-target-name",description:"Name of the service data is collected from.\nThe name of the service is normally user given. This allows for distributed services that run on multiple hosts to correlate the related instances based on the name.\nIn the case of Elasticsearch the `service.name` could contain the cluster name. For Beats the `service.name` is by default a copy of the `service.type` field if no name is specified.",example:"elasticsearch-metrics",flat_name:"service.target.name",ignore_above:1024,level:"core",name:"name",normalize:[],original_fieldset:"service",short:"Name of the service.",type:"keyword"},"service.target.node.name":{dashed_name:"service-target-node-name",description:"Name of a service node.\nThis allows for two nodes of the same service running on the same host to be differentiated. Therefore, `service.node.name` should typically be unique across nodes of a given service.\nIn the case of Elasticsearch, the `service.node.name` could contain the unique node name within the Elasticsearch cluster. In cases where the service doesn't have the concept of a node name, the host name or container name can be used to distinguish running instances that make up this service. If those do not provide uniqueness (e.g. multiple instances of the service running on the same host) - the node name can be manually set.",example:"instance-0000000016",flat_name:"service.target.node.name",ignore_above:1024,level:"extended",name:"node.name",normalize:[],original_fieldset:"service",short:"Name of the service node.",type:"keyword"},"service.target.node.role":{dashed_name:"service-target-node-role",description:"Deprecated for removal in next major version release. This field will be superseded by `node.roles`.\nRole of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks`.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data`.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service.",example:"background_tasks",flat_name:"service.target.node.role",ignore_above:1024,level:"extended",name:"node.role",normalize:[],original_fieldset:"service",short:"Deprecated role (singular) of the service node.",type:"keyword"},"service.target.node.roles":{dashed_name:"service-target-node-roles",description:"Roles of a service node.\nThis allows for distinction between different running roles of the same service.\nIn the case of Kibana, the `service.node.role` could be `ui` or `background_tasks` or both.\nIn the case of Elasticsearch, the `service.node.role` could be `master` or `data` or both.\nOther services could use this to distinguish between a `web` and `worker` role running as part of the service.",example:'["ui", "background_tasks"]',flat_name:"service.target.node.roles",ignore_above:1024,level:"extended",name:"node.roles",normalize:["array"],original_fieldset:"service",short:"Roles of the service node.",type:"keyword"},"service.target.state":{dashed_name:"service-target-state",description:"Current state of the service.",flat_name:"service.target.state",ignore_above:1024,level:"core",name:"state",normalize:[],original_fieldset:"service",short:"Current state of the service.",type:"keyword"},"service.target.type":{dashed_name:"service-target-type",description:"The type of the service data is collected from.\nThe type can be used to group and correlate logs and metrics from one service type.\nExample: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.",example:"elasticsearch",flat_name:"service.target.type",ignore_above:1024,level:"core",name:"type",normalize:[],original_fieldset:"service",short:"The type of the service.",type:"keyword"},"service.target.version":{dashed_name:"service-target-version",description:"Version of the service the data was collected from.\nThis allows to look at a data set only for a specific version of a service.",example:"3.2.4",flat_name:"service.target.version",ignore_above:1024,level:"core",name:"version",normalize:[],original_fieldset:"service",short:"Version of the service.",type:"keyword"},"service.type":{dashed_name:"service-type",description:"The type of the service data is collected from.\nThe type can be used to group and correlate logs and metrics from one service type.\nExample: If logs or metrics are collected from Elasticsearch, `service.type` would be `elasticsearch`.",example:"elasticsearch",flat_name:"service.type",ignore_above:1024,level:"core",name:"type",normalize:[],short:"The type of the service.",type:"keyword"},"service.version":{dashed_name:"service-version",description:"Version of the service the data was collected from.\nThis allows to look at a data set only for a specific version of a service.",example:"3.2.4",flat_name:"service.version",ignore_above:1024,level:"core",name:"version",normalize:[],short:"Version of the service.",type:"keyword"},"source.address":{dashed_name:"source-address",description:"Some event source addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the `.address` field.\nThen it should be duplicated to `.ip` or `.domain`, depending on which one it is.",flat_name:"source.address",ignore_above:1024,level:"extended",name:"address",normalize:[],short:"Source network address.",type:"keyword"},"source.as.number":{dashed_name:"source-as-number",description:"Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",example:15169,flat_name:"source.as.number",level:"extended",name:"number",normalize:[],original_fieldset:"as",short:"Unique number allocated to the autonomous system.",type:"long"},"source.as.organization.name":{dashed_name:"source-as-organization-name",description:"Organization name.",example:"Google LLC",flat_name:"source.as.organization.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"source.as.organization.name.text",name:"text",type:"match_only_text"}],name:"organization.name",normalize:[],original_fieldset:"as",short:"Organization name.",type:"keyword"},"source.bytes":{dashed_name:"source-bytes",description:"Bytes sent from the source to the destination.",example:184,flat_name:"source.bytes",format:"bytes",level:"core",name:"bytes",normalize:[],short:"Bytes sent from the source to the destination.",type:"long"},"source.domain":{dashed_name:"source-domain",description:"The domain name of the source system.\nThis value may be a host name, a fully qualified domain name, or another host naming format. The value may derive from the original event or be added from enrichment.",example:"foo.example.com",flat_name:"source.domain",ignore_above:1024,level:"core",name:"domain",normalize:[],short:"The domain name of the source.",type:"keyword"},"source.geo.city_name":{dashed_name:"source-geo-city-name",description:"City name.",example:"Montreal",flat_name:"source.geo.city_name",ignore_above:1024,level:"core",name:"city_name",normalize:[],original_fieldset:"geo",short:"City name.",type:"keyword"},"source.geo.continent_code":{dashed_name:"source-geo-continent-code",description:"Two-letter code representing continent's name.",example:"NA",flat_name:"source.geo.continent_code",ignore_above:1024,level:"core",name:"continent_code",normalize:[],original_fieldset:"geo",short:"Continent code.",type:"keyword"},"source.geo.continent_name":{dashed_name:"source-geo-continent-name",description:"Name of the continent.",example:"North America",flat_name:"source.geo.continent_name",ignore_above:1024,level:"core",name:"continent_name",normalize:[],original_fieldset:"geo",short:"Name of the continent.",type:"keyword"},"source.geo.country_iso_code":{dashed_name:"source-geo-country-iso-code",description:"Country ISO code.",example:"CA",flat_name:"source.geo.country_iso_code",ignore_above:1024,level:"core",name:"country_iso_code",normalize:[],original_fieldset:"geo",short:"Country ISO code.",type:"keyword"},"source.geo.country_name":{dashed_name:"source-geo-country-name",description:"Country name.",example:"Canada",flat_name:"source.geo.country_name",ignore_above:1024,level:"core",name:"country_name",normalize:[],original_fieldset:"geo",short:"Country name.",type:"keyword"},"source.geo.location":{dashed_name:"source-geo-location",description:"Longitude and latitude.",example:'{ "lon": -73.614830, "lat": 45.505918 }',flat_name:"source.geo.location",level:"core",name:"location",normalize:[],original_fieldset:"geo",short:"Longitude and latitude.",type:"geo_point"},"source.geo.name":{dashed_name:"source-geo-name",description:"User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",example:"boston-dc",flat_name:"source.geo.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"geo",short:"User-defined description of a location.",type:"keyword"},"source.geo.postal_code":{dashed_name:"source-geo-postal-code",description:"Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",example:94040,flat_name:"source.geo.postal_code",ignore_above:1024,level:"core",name:"postal_code",normalize:[],original_fieldset:"geo",short:"Postal code.",type:"keyword"},"source.geo.region_iso_code":{dashed_name:"source-geo-region-iso-code",description:"Region ISO code.",example:"CA-QC",flat_name:"source.geo.region_iso_code",ignore_above:1024,level:"core",name:"region_iso_code",normalize:[],original_fieldset:"geo",short:"Region ISO code.",type:"keyword"},"source.geo.region_name":{dashed_name:"source-geo-region-name",description:"Region name.",example:"Quebec",flat_name:"source.geo.region_name",ignore_above:1024,level:"core",name:"region_name",normalize:[],original_fieldset:"geo",short:"Region name.",type:"keyword"},"source.geo.timezone":{dashed_name:"source-geo-timezone",description:"The time zone of the location, such as IANA time zone name.",example:"America/Argentina/Buenos_Aires",flat_name:"source.geo.timezone",ignore_above:1024,level:"core",name:"timezone",normalize:[],original_fieldset:"geo",short:"Time zone.",type:"keyword"},"source.ip":{dashed_name:"source-ip",description:"IP address of the source (IPv4 or IPv6).",flat_name:"source.ip",level:"core",name:"ip",normalize:[],short:"IP address of the source.",type:"ip"},"source.mac":{dashed_name:"source-mac",description:"MAC address of the source.\nThe notation format from RFC 7042 is suggested: Each octet (that is, 8-bit byte) is represented by two [uppercase] hexadecimal digits giving the value of the octet as an unsigned integer. Successive octets are separated by a hyphen.",example:"00-00-5E-00-53-23",flat_name:"source.mac",ignore_above:1024,level:"core",name:"mac",normalize:[],pattern:"^[A-F0-9]{2}(-[A-F0-9]{2}){5,}$",short:"MAC address of the source.",type:"keyword"},"source.nat.ip":{dashed_name:"source-nat-ip",description:"Translated ip of source based NAT sessions (e.g. internal client to internet)\nTypically connections traversing load balancers, firewalls, or routers.",flat_name:"source.nat.ip",level:"extended",name:"nat.ip",normalize:[],short:"Source NAT ip",type:"ip"},"source.nat.port":{dashed_name:"source-nat-port",description:"Translated port of source based NAT sessions. (e.g. internal client to internet)\nTypically used with load balancers, firewalls, or routers.",flat_name:"source.nat.port",format:"string",level:"extended",name:"nat.port",normalize:[],short:"Source NAT port",type:"long"},"source.packets":{dashed_name:"source-packets",description:"Packets sent from the source to the destination.",example:12,flat_name:"source.packets",level:"core",name:"packets",normalize:[],short:"Packets sent from the source to the destination.",type:"long"},"source.port":{dashed_name:"source-port",description:"Port of the source.",flat_name:"source.port",format:"string",level:"core",name:"port",normalize:[],short:"Port of the source.",type:"long"},"source.registered_domain":{dashed_name:"source-registered-domain",description:'The highest registered source domain, stripped of the subdomain.\nFor example, the registered domain for "foo.example.com" is "example.com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".',example:"example.com",flat_name:"source.registered_domain",ignore_above:1024,level:"extended",name:"registered_domain",normalize:[],short:"The highest registered source domain, stripped of the subdomain.",type:"keyword"},"source.subdomain":{dashed_name:"source-subdomain",description:'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.',example:"east",flat_name:"source.subdomain",ignore_above:1024,level:"extended",name:"subdomain",normalize:[],short:"The subdomain of the domain.",type:"keyword"},"source.top_level_domain":{dashed_name:"source-top-level-domain",description:'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".',example:"co.uk",flat_name:"source.top_level_domain",ignore_above:1024,level:"extended",name:"top_level_domain",normalize:[],short:"The effective top level domain (com, org, net, co.uk).",type:"keyword"},"source.user.domain":{dashed_name:"source-user-domain",description:"Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"source.user.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"user",short:"Name of the directory the user is a member of.",type:"keyword"},"source.user.email":{dashed_name:"source-user-email",description:"User email address.",flat_name:"source.user.email",ignore_above:1024,level:"extended",name:"email",normalize:[],original_fieldset:"user",short:"User email address.",type:"keyword"},"source.user.full_name":{dashed_name:"source-user-full-name",description:"User's full name, if available.",example:"Albert Einstein",flat_name:"source.user.full_name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"source.user.full_name.text",name:"text",type:"match_only_text"}],name:"full_name",normalize:[],original_fieldset:"user",short:"User's full name, if available.",type:"keyword"},"source.user.group.domain":{dashed_name:"source-user-group-domain",description:"Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"source.user.group.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"group",short:"Name of the directory the group is a member of.",type:"keyword"},"source.user.group.id":{dashed_name:"source-user-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"source.user.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"source.user.group.name":{dashed_name:"source-user-group-name",description:"Name of the group.",flat_name:"source.user.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"source.user.hash":{dashed_name:"source-user-hash",description:"Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",flat_name:"source.user.hash",ignore_above:1024,level:"extended",name:"hash",normalize:[],original_fieldset:"user",short:"Unique user hash to correlate information for a user in anonymized form.",type:"keyword"},"source.user.id":{dashed_name:"source-user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"source.user.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"source.user.name":{dashed_name:"source-user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"source.user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"source.user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"source.user.roles":{dashed_name:"source-user-roles",description:"Array of user roles at the time of the event.",example:'["kibana_admin", "reporting_user"]',flat_name:"source.user.roles",ignore_above:1024,level:"extended",name:"roles",normalize:["array"],original_fieldset:"user",short:"Array of user roles at the time of the event.",type:"keyword"},"span.id":{dashed_name:"span-id",description:"Unique identifier of the span within the scope of its trace.\nA span represents an operation within a transaction, such as a request to another service, or a database query.",example:"3ff9a8981b7ccd5a",flat_name:"span.id",ignore_above:1024,level:"extended",name:"span.id",normalize:[],short:"Unique identifier of the span within the scope of its trace.",type:"keyword"},tags:{dashed_name:"tags",description:"List of keywords used to tag each event.",example:'["production", "env2"]',flat_name:"tags",ignore_above:1024,level:"core",name:"tags",normalize:["array"],short:"List of keywords used to tag each event.",type:"keyword"},"threat.enrichments":{dashed_name:"threat-enrichments",description:"A list of associated indicators objects enriching the event, and the context of that association/enrichment.",flat_name:"threat.enrichments",level:"extended",name:"enrichments",normalize:["array"],short:"List of objects containing indicators enriching the event.",type:"nested"},"threat.enrichments.indicator":{dashed_name:"threat-enrichments-indicator",description:"Object containing associated indicators enriching the event.",flat_name:"threat.enrichments.indicator",level:"extended",name:"enrichments.indicator",normalize:[],short:"Object containing indicators enriching the event.",type:"object"},"threat.enrichments.indicator.as.number":{dashed_name:"threat-enrichments-indicator-as-number",description:"Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",example:15169,flat_name:"threat.enrichments.indicator.as.number",level:"extended",name:"number",normalize:[],original_fieldset:"as",short:"Unique number allocated to the autonomous system.",type:"long"},"threat.enrichments.indicator.as.organization.name":{dashed_name:"threat-enrichments-indicator-as-organization-name",description:"Organization name.",example:"Google LLC",flat_name:"threat.enrichments.indicator.as.organization.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"threat.enrichments.indicator.as.organization.name.text",name:"text",type:"match_only_text"}],name:"organization.name",normalize:[],original_fieldset:"as",short:"Organization name.",type:"keyword"},"threat.enrichments.indicator.confidence":{dashed_name:"threat-enrichments-indicator-confidence",description:"Identifies the vendor-neutral confidence rating using the None/Low/Medium/High scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields.",example:"Medium",expected_values:["Not Specified","None","Low","Medium","High"],flat_name:"threat.enrichments.indicator.confidence",ignore_above:1024,level:"extended",name:"enrichments.indicator.confidence",normalize:[],short:"Indicator confidence rating",type:"keyword"},"threat.enrichments.indicator.description":{dashed_name:"threat-enrichments-indicator-description",description:"Describes the type of action conducted by the threat.",example:"IP x.x.x.x was observed delivering the Angler EK.",flat_name:"threat.enrichments.indicator.description",ignore_above:1024,level:"extended",name:"enrichments.indicator.description",normalize:[],short:"Indicator description",type:"keyword"},"threat.enrichments.indicator.email.address":{dashed_name:"threat-enrichments-indicator-email-address",description:"Identifies a threat indicator as an email address (irrespective of direction).",example:"phish@example.com",flat_name:"threat.enrichments.indicator.email.address",ignore_above:1024,level:"extended",name:"enrichments.indicator.email.address",normalize:[],short:"Indicator email address",type:"keyword"},"threat.enrichments.indicator.file.accessed":{dashed_name:"threat-enrichments-indicator-file-accessed",description:"Last time the file was accessed.\nNote that not all filesystems keep track of access time.",flat_name:"threat.enrichments.indicator.file.accessed",level:"extended",name:"accessed",normalize:[],original_fieldset:"file",short:"Last time the file was accessed.",type:"date"},"threat.enrichments.indicator.file.attributes":{dashed_name:"threat-enrichments-indicator-file-attributes",description:"Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.",example:'["readonly", "system"]',flat_name:"threat.enrichments.indicator.file.attributes",ignore_above:1024,level:"extended",name:"attributes",normalize:["array"],original_fieldset:"file",short:"Array of file attributes.",type:"keyword"},"threat.enrichments.indicator.file.code_signature.digest_algorithm":{dashed_name:"threat-enrichments-indicator-file-code-signature-digest-algorithm",description:"The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",example:"sha256",flat_name:"threat.enrichments.indicator.file.code_signature.digest_algorithm",ignore_above:1024,level:"extended",name:"digest_algorithm",normalize:[],original_fieldset:"code_signature",short:"Hashing algorithm used to sign the process.",type:"keyword"},"threat.enrichments.indicator.file.code_signature.exists":{dashed_name:"threat-enrichments-indicator-file-code-signature-exists",description:"Boolean to capture if a signature is present.",example:"true",flat_name:"threat.enrichments.indicator.file.code_signature.exists",level:"core",name:"exists",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if a signature is present.",type:"boolean"},"threat.enrichments.indicator.file.code_signature.signing_id":{dashed_name:"threat-enrichments-indicator-file-code-signature-signing-id",description:"The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",example:"com.apple.xpc.proxy",flat_name:"threat.enrichments.indicator.file.code_signature.signing_id",ignore_above:1024,level:"extended",name:"signing_id",normalize:[],original_fieldset:"code_signature",short:"The identifier used to sign the process.",type:"keyword"},"threat.enrichments.indicator.file.code_signature.status":{dashed_name:"threat-enrichments-indicator-file-code-signature-status",description:"Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",example:"ERROR_UNTRUSTED_ROOT",flat_name:"threat.enrichments.indicator.file.code_signature.status",ignore_above:1024,level:"extended",name:"status",normalize:[],original_fieldset:"code_signature",short:"Additional information about the certificate status.",type:"keyword"},"threat.enrichments.indicator.file.code_signature.subject_name":{dashed_name:"threat-enrichments-indicator-file-code-signature-subject-name",description:"Subject name of the code signer",example:"Microsoft Corporation",flat_name:"threat.enrichments.indicator.file.code_signature.subject_name",ignore_above:1024,level:"core",name:"subject_name",normalize:[],original_fieldset:"code_signature",short:"Subject name of the code signer",type:"keyword"},"threat.enrichments.indicator.file.code_signature.team_id":{dashed_name:"threat-enrichments-indicator-file-code-signature-team-id",description:"The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",example:"EQHXZ8M8AV",flat_name:"threat.enrichments.indicator.file.code_signature.team_id",ignore_above:1024,level:"extended",name:"team_id",normalize:[],original_fieldset:"code_signature",short:"The team identifier used to sign the process.",type:"keyword"},"threat.enrichments.indicator.file.code_signature.timestamp":{dashed_name:"threat-enrichments-indicator-file-code-signature-timestamp",description:"Date and time when the code signature was generated and signed.",example:"2021-01-01T12:10:30Z",flat_name:"threat.enrichments.indicator.file.code_signature.timestamp",level:"extended",name:"timestamp",normalize:[],original_fieldset:"code_signature",short:"When the signature was generated and signed.",type:"date"},"threat.enrichments.indicator.file.code_signature.trusted":{dashed_name:"threat-enrichments-indicator-file-code-signature-trusted",description:"Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",example:"true",flat_name:"threat.enrichments.indicator.file.code_signature.trusted",level:"extended",name:"trusted",normalize:[],original_fieldset:"code_signature",short:"Stores the trust status of the certificate chain.",type:"boolean"},"threat.enrichments.indicator.file.code_signature.valid":{dashed_name:"threat-enrichments-indicator-file-code-signature-valid",description:"Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",example:"true",flat_name:"threat.enrichments.indicator.file.code_signature.valid",level:"extended",name:"valid",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if the digital signature is verified against the binary content.",type:"boolean"},"threat.enrichments.indicator.file.created":{dashed_name:"threat-enrichments-indicator-file-created",description:"File creation time.\nNote that not all filesystems store the creation time.",flat_name:"threat.enrichments.indicator.file.created",level:"extended",name:"created",normalize:[],original_fieldset:"file",short:"File creation time.",type:"date"},"threat.enrichments.indicator.file.ctime":{dashed_name:"threat-enrichments-indicator-file-ctime",description:"Last time the file attributes or metadata changed.\nNote that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.",flat_name:"threat.enrichments.indicator.file.ctime",level:"extended",name:"ctime",normalize:[],original_fieldset:"file",short:"Last time the file attributes or metadata changed.",type:"date"},"threat.enrichments.indicator.file.device":{dashed_name:"threat-enrichments-indicator-file-device",description:"Device that is the source of the file.",example:"sda",flat_name:"threat.enrichments.indicator.file.device",ignore_above:1024,level:"extended",name:"device",normalize:[],original_fieldset:"file",short:"Device that is the source of the file.",type:"keyword"},"threat.enrichments.indicator.file.directory":{dashed_name:"threat-enrichments-indicator-file-directory",description:"Directory where the file is located. It should include the drive letter, when appropriate.",example:"/home/alice",flat_name:"threat.enrichments.indicator.file.directory",ignore_above:1024,level:"extended",name:"directory",normalize:[],original_fieldset:"file",short:"Directory where the file is located.",type:"keyword"},"threat.enrichments.indicator.file.drive_letter":{dashed_name:"threat-enrichments-indicator-file-drive-letter",description:"Drive letter where the file is located. This field is only relevant on Windows.\nThe value should be uppercase, and not include the colon.",example:"C",flat_name:"threat.enrichments.indicator.file.drive_letter",ignore_above:1,level:"extended",name:"drive_letter",normalize:[],original_fieldset:"file",short:"Drive letter where the file is located.",type:"keyword"},"threat.enrichments.indicator.file.elf.architecture":{dashed_name:"threat-enrichments-indicator-file-elf-architecture",description:"Machine architecture of the ELF file.",example:"x86-64",flat_name:"threat.enrichments.indicator.file.elf.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"elf",short:"Machine architecture of the ELF file.",type:"keyword"},"threat.enrichments.indicator.file.elf.byte_order":{dashed_name:"threat-enrichments-indicator-file-elf-byte-order",description:"Byte sequence of ELF file.",example:"Little Endian",flat_name:"threat.enrichments.indicator.file.elf.byte_order",ignore_above:1024,level:"extended",name:"byte_order",normalize:[],original_fieldset:"elf",short:"Byte sequence of ELF file.",type:"keyword"},"threat.enrichments.indicator.file.elf.cpu_type":{dashed_name:"threat-enrichments-indicator-file-elf-cpu-type",description:"CPU type of the ELF file.",example:"Intel",flat_name:"threat.enrichments.indicator.file.elf.cpu_type",ignore_above:1024,level:"extended",name:"cpu_type",normalize:[],original_fieldset:"elf",short:"CPU type of the ELF file.",type:"keyword"},"threat.enrichments.indicator.file.elf.creation_date":{dashed_name:"threat-enrichments-indicator-file-elf-creation-date",description:"Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",flat_name:"threat.enrichments.indicator.file.elf.creation_date",level:"extended",name:"creation_date",normalize:[],original_fieldset:"elf",short:"Build or compile date.",type:"date"},"threat.enrichments.indicator.file.elf.exports":{dashed_name:"threat-enrichments-indicator-file-elf-exports",description:"List of exported element names and types.",flat_name:"threat.enrichments.indicator.file.elf.exports",level:"extended",name:"exports",normalize:["array"],original_fieldset:"elf",short:"List of exported element names and types.",type:"flattened"},"threat.enrichments.indicator.file.elf.go_import_hash":{dashed_name:"threat-enrichments-indicator-file-elf-go-import-hash",description:"A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"threat.enrichments.indicator.file.elf.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the Go language imports in an ELF file.",type:"keyword"},"threat.enrichments.indicator.file.elf.go_imports":{dashed_name:"threat-enrichments-indicator-file-elf-go-imports",description:"List of imported Go language element names and types.",flat_name:"threat.enrichments.indicator.file.elf.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"elf",short:"List of imported Go language element names and types.",type:"flattened"},"threat.enrichments.indicator.file.elf.go_imports_names_entropy":{dashed_name:"threat-enrichments-indicator-file-elf-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"threat.enrichments.indicator.file.elf.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"threat.enrichments.indicator.file.elf.go_imports_names_var_entropy":{dashed_name:"threat-enrichments-indicator-file-elf-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"threat.enrichments.indicator.file.elf.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"threat.enrichments.indicator.file.elf.go_stripped":{dashed_name:"threat-enrichments-indicator-file-elf-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"threat.enrichments.indicator.file.elf.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"elf",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"threat.enrichments.indicator.file.elf.header.abi_version":{dashed_name:"threat-enrichments-indicator-file-elf-header-abi-version",description:"Version of the ELF Application Binary Interface (ABI).",flat_name:"threat.enrichments.indicator.file.elf.header.abi_version",ignore_above:1024,level:"extended",name:"header.abi_version",normalize:[],original_fieldset:"elf",short:"Version of the ELF Application Binary Interface (ABI).",type:"keyword"},"threat.enrichments.indicator.file.elf.header.class":{dashed_name:"threat-enrichments-indicator-file-elf-header-class",description:"Header class of the ELF file.",flat_name:"threat.enrichments.indicator.file.elf.header.class",ignore_above:1024,level:"extended",name:"header.class",normalize:[],original_fieldset:"elf",short:"Header class of the ELF file.",type:"keyword"},"threat.enrichments.indicator.file.elf.header.data":{dashed_name:"threat-enrichments-indicator-file-elf-header-data",description:"Data table of the ELF header.",flat_name:"threat.enrichments.indicator.file.elf.header.data",ignore_above:1024,level:"extended",name:"header.data",normalize:[],original_fieldset:"elf",short:"Data table of the ELF header.",type:"keyword"},"threat.enrichments.indicator.file.elf.header.entrypoint":{dashed_name:"threat-enrichments-indicator-file-elf-header-entrypoint",description:"Header entrypoint of the ELF file.",flat_name:"threat.enrichments.indicator.file.elf.header.entrypoint",format:"string",level:"extended",name:"header.entrypoint",normalize:[],original_fieldset:"elf",short:"Header entrypoint of the ELF file.",type:"long"},"threat.enrichments.indicator.file.elf.header.object_version":{dashed_name:"threat-enrichments-indicator-file-elf-header-object-version",description:'"0x1" for original ELF files.',flat_name:"threat.enrichments.indicator.file.elf.header.object_version",ignore_above:1024,level:"extended",name:"header.object_version",normalize:[],original_fieldset:"elf",short:'"0x1" for original ELF files.',type:"keyword"},"threat.enrichments.indicator.file.elf.header.os_abi":{dashed_name:"threat-enrichments-indicator-file-elf-header-os-abi",description:"Application Binary Interface (ABI) of the Linux OS.",flat_name:"threat.enrichments.indicator.file.elf.header.os_abi",ignore_above:1024,level:"extended",name:"header.os_abi",normalize:[],original_fieldset:"elf",short:"Application Binary Interface (ABI) of the Linux OS.",type:"keyword"},"threat.enrichments.indicator.file.elf.header.type":{dashed_name:"threat-enrichments-indicator-file-elf-header-type",description:"Header type of the ELF file.",flat_name:"threat.enrichments.indicator.file.elf.header.type",ignore_above:1024,level:"extended",name:"header.type",normalize:[],original_fieldset:"elf",short:"Header type of the ELF file.",type:"keyword"},"threat.enrichments.indicator.file.elf.header.version":{dashed_name:"threat-enrichments-indicator-file-elf-header-version",description:"Version of the ELF header.",flat_name:"threat.enrichments.indicator.file.elf.header.version",ignore_above:1024,level:"extended",name:"header.version",normalize:[],original_fieldset:"elf",short:"Version of the ELF header.",type:"keyword"},"threat.enrichments.indicator.file.elf.import_hash":{dashed_name:"threat-enrichments-indicator-file-elf-import-hash",description:"A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"threat.enrichments.indicator.file.elf.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the imports in an ELF file.",type:"keyword"},"threat.enrichments.indicator.file.elf.imports":{dashed_name:"threat-enrichments-indicator-file-elf-imports",description:"List of imported element names and types.",flat_name:"threat.enrichments.indicator.file.elf.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"elf",short:"List of imported element names and types.",type:"flattened"},"threat.enrichments.indicator.file.elf.imports_names_entropy":{dashed_name:"threat-enrichments-indicator-file-elf-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"threat.enrichments.indicator.file.elf.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"threat.enrichments.indicator.file.elf.imports_names_var_entropy":{dashed_name:"threat-enrichments-indicator-file-elf-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"threat.enrichments.indicator.file.elf.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"threat.enrichments.indicator.file.elf.sections":{dashed_name:"threat-enrichments-indicator-file-elf-sections",description:"An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",flat_name:"threat.enrichments.indicator.file.elf.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"elf",short:"Section information of the ELF file.",type:"nested"},"threat.enrichments.indicator.file.elf.sections.chi2":{dashed_name:"threat-enrichments-indicator-file-elf-sections-chi2",description:"Chi-square probability distribution of the section.",flat_name:"threat.enrichments.indicator.file.elf.sections.chi2",format:"number",level:"extended",name:"sections.chi2",normalize:[],original_fieldset:"elf",short:"Chi-square probability distribution of the section.",type:"long"},"threat.enrichments.indicator.file.elf.sections.entropy":{dashed_name:"threat-enrichments-indicator-file-elf-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"threat.enrichments.indicator.file.elf.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the section.",type:"long"},"threat.enrichments.indicator.file.elf.sections.flags":{dashed_name:"threat-enrichments-indicator-file-elf-sections-flags",description:"ELF Section List flags.",flat_name:"threat.enrichments.indicator.file.elf.sections.flags",ignore_above:1024,level:"extended",name:"sections.flags",normalize:[],original_fieldset:"elf",short:"ELF Section List flags.",type:"keyword"},"threat.enrichments.indicator.file.elf.sections.name":{dashed_name:"threat-enrichments-indicator-file-elf-sections-name",description:"ELF Section List name.",flat_name:"threat.enrichments.indicator.file.elf.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"elf",short:"ELF Section List name.",type:"keyword"},"threat.enrichments.indicator.file.elf.sections.physical_offset":{dashed_name:"threat-enrichments-indicator-file-elf-sections-physical-offset",description:"ELF Section List offset.",flat_name:"threat.enrichments.indicator.file.elf.sections.physical_offset",ignore_above:1024,level:"extended",name:"sections.physical_offset",normalize:[],original_fieldset:"elf",short:"ELF Section List offset.",type:"keyword"},"threat.enrichments.indicator.file.elf.sections.physical_size":{dashed_name:"threat-enrichments-indicator-file-elf-sections-physical-size",description:"ELF Section List physical size.",flat_name:"threat.enrichments.indicator.file.elf.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"elf",short:"ELF Section List physical size.",type:"long"},"threat.enrichments.indicator.file.elf.sections.type":{dashed_name:"threat-enrichments-indicator-file-elf-sections-type",description:"ELF Section List type.",flat_name:"threat.enrichments.indicator.file.elf.sections.type",ignore_above:1024,level:"extended",name:"sections.type",normalize:[],original_fieldset:"elf",short:"ELF Section List type.",type:"keyword"},"threat.enrichments.indicator.file.elf.sections.var_entropy":{dashed_name:"threat-enrichments-indicator-file-elf-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"threat.enrichments.indicator.file.elf.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"threat.enrichments.indicator.file.elf.sections.virtual_address":{dashed_name:"threat-enrichments-indicator-file-elf-sections-virtual-address",description:"ELF Section List virtual address.",flat_name:"threat.enrichments.indicator.file.elf.sections.virtual_address",format:"string",level:"extended",name:"sections.virtual_address",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual address.",type:"long"},"threat.enrichments.indicator.file.elf.sections.virtual_size":{dashed_name:"threat-enrichments-indicator-file-elf-sections-virtual-size",description:"ELF Section List virtual size.",flat_name:"threat.enrichments.indicator.file.elf.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual size.",type:"long"},"threat.enrichments.indicator.file.elf.segments":{dashed_name:"threat-enrichments-indicator-file-elf-segments",description:"An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",flat_name:"threat.enrichments.indicator.file.elf.segments",level:"extended",name:"segments",normalize:["array"],original_fieldset:"elf",short:"ELF object segment list.",type:"nested"},"threat.enrichments.indicator.file.elf.segments.sections":{dashed_name:"threat-enrichments-indicator-file-elf-segments-sections",description:"ELF object segment sections.",flat_name:"threat.enrichments.indicator.file.elf.segments.sections",ignore_above:1024,level:"extended",name:"segments.sections",normalize:[],original_fieldset:"elf",short:"ELF object segment sections.",type:"keyword"},"threat.enrichments.indicator.file.elf.segments.type":{dashed_name:"threat-enrichments-indicator-file-elf-segments-type",description:"ELF object segment type.",flat_name:"threat.enrichments.indicator.file.elf.segments.type",ignore_above:1024,level:"extended",name:"segments.type",normalize:[],original_fieldset:"elf",short:"ELF object segment type.",type:"keyword"},"threat.enrichments.indicator.file.elf.shared_libraries":{dashed_name:"threat-enrichments-indicator-file-elf-shared-libraries",description:"List of shared libraries used by this ELF object.",flat_name:"threat.enrichments.indicator.file.elf.shared_libraries",ignore_above:1024,level:"extended",name:"shared_libraries",normalize:["array"],original_fieldset:"elf",short:"List of shared libraries used by this ELF object.",type:"keyword"},"threat.enrichments.indicator.file.elf.telfhash":{dashed_name:"threat-enrichments-indicator-file-elf-telfhash",description:"telfhash symbol hash for ELF file.",flat_name:"threat.enrichments.indicator.file.elf.telfhash",ignore_above:1024,level:"extended",name:"telfhash",normalize:[],original_fieldset:"elf",short:"telfhash hash for ELF file.",type:"keyword"},"threat.enrichments.indicator.file.extension":{dashed_name:"threat-enrichments-indicator-file-extension",description:'File extension, excluding the leading dot.\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").',example:"png",flat_name:"threat.enrichments.indicator.file.extension",ignore_above:1024,level:"extended",name:"extension",normalize:[],original_fieldset:"file",short:"File extension, excluding the leading dot.",type:"keyword"},"threat.enrichments.indicator.file.fork_name":{dashed_name:"threat-enrichments-indicator-file-fork-name",description:"A fork is additional data associated with a filesystem object.\nOn Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\nOn NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: `C:\\path\\to\\filename.extension:some_fork_name`, and `some_fork_name` is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name.",example:"Zone.Identifer",flat_name:"threat.enrichments.indicator.file.fork_name",ignore_above:1024,level:"extended",name:"fork_name",normalize:[],original_fieldset:"file",short:"A fork is additional data associated with a filesystem object.",type:"keyword"},"threat.enrichments.indicator.file.gid":{dashed_name:"threat-enrichments-indicator-file-gid",description:"Primary group ID (GID) of the file.",example:"1001",flat_name:"threat.enrichments.indicator.file.gid",ignore_above:1024,level:"extended",name:"gid",normalize:[],original_fieldset:"file",short:"Primary group ID (GID) of the file.",type:"keyword"},"threat.enrichments.indicator.file.group":{dashed_name:"threat-enrichments-indicator-file-group",description:"Primary group name of the file.",example:"alice",flat_name:"threat.enrichments.indicator.file.group",ignore_above:1024,level:"extended",name:"group",normalize:[],original_fieldset:"file",short:"Primary group name of the file.",type:"keyword"},"threat.enrichments.indicator.file.hash.md5":{dashed_name:"threat-enrichments-indicator-file-hash-md5",description:"MD5 hash.",flat_name:"threat.enrichments.indicator.file.hash.md5",ignore_above:1024,level:"extended",name:"md5",normalize:[],original_fieldset:"hash",short:"MD5 hash.",type:"keyword"},"threat.enrichments.indicator.file.hash.sha1":{dashed_name:"threat-enrichments-indicator-file-hash-sha1",description:"SHA1 hash.",flat_name:"threat.enrichments.indicator.file.hash.sha1",ignore_above:1024,level:"extended",name:"sha1",normalize:[],original_fieldset:"hash",short:"SHA1 hash.",type:"keyword"},"threat.enrichments.indicator.file.hash.sha256":{dashed_name:"threat-enrichments-indicator-file-hash-sha256",description:"SHA256 hash.",flat_name:"threat.enrichments.indicator.file.hash.sha256",ignore_above:1024,level:"extended",name:"sha256",normalize:[],original_fieldset:"hash",short:"SHA256 hash.",type:"keyword"},"threat.enrichments.indicator.file.hash.sha384":{dashed_name:"threat-enrichments-indicator-file-hash-sha384",description:"SHA384 hash.",flat_name:"threat.enrichments.indicator.file.hash.sha384",ignore_above:1024,level:"extended",name:"sha384",normalize:[],original_fieldset:"hash",short:"SHA384 hash.",type:"keyword"},"threat.enrichments.indicator.file.hash.sha512":{dashed_name:"threat-enrichments-indicator-file-hash-sha512",description:"SHA512 hash.",flat_name:"threat.enrichments.indicator.file.hash.sha512",ignore_above:1024,level:"extended",name:"sha512",normalize:[],original_fieldset:"hash",short:"SHA512 hash.",type:"keyword"},"threat.enrichments.indicator.file.hash.ssdeep":{dashed_name:"threat-enrichments-indicator-file-hash-ssdeep",description:"SSDEEP hash.",flat_name:"threat.enrichments.indicator.file.hash.ssdeep",ignore_above:1024,level:"extended",name:"ssdeep",normalize:[],original_fieldset:"hash",short:"SSDEEP hash.",type:"keyword"},"threat.enrichments.indicator.file.hash.tlsh":{dashed_name:"threat-enrichments-indicator-file-hash-tlsh",description:"TLSH hash.",flat_name:"threat.enrichments.indicator.file.hash.tlsh",ignore_above:1024,level:"extended",name:"tlsh",normalize:[],original_fieldset:"hash",short:"TLSH hash.",type:"keyword"},"threat.enrichments.indicator.file.inode":{dashed_name:"threat-enrichments-indicator-file-inode",description:"Inode representing the file in the filesystem.",example:"256383",flat_name:"threat.enrichments.indicator.file.inode",ignore_above:1024,level:"extended",name:"inode",normalize:[],original_fieldset:"file",short:"Inode representing the file in the filesystem.",type:"keyword"},"threat.enrichments.indicator.file.mime_type":{dashed_name:"threat-enrichments-indicator-file-mime-type",description:"MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.",flat_name:"threat.enrichments.indicator.file.mime_type",ignore_above:1024,level:"extended",name:"mime_type",normalize:[],original_fieldset:"file",short:"Media type of file, document, or arrangement of bytes.",type:"keyword"},"threat.enrichments.indicator.file.mode":{dashed_name:"threat-enrichments-indicator-file-mode",description:"Mode of the file in octal representation.",example:"0640",flat_name:"threat.enrichments.indicator.file.mode",ignore_above:1024,level:"extended",name:"mode",normalize:[],original_fieldset:"file",short:"Mode of the file in octal representation.",type:"keyword"},"threat.enrichments.indicator.file.mtime":{dashed_name:"threat-enrichments-indicator-file-mtime",description:"Last time the file content was modified.",flat_name:"threat.enrichments.indicator.file.mtime",level:"extended",name:"mtime",normalize:[],original_fieldset:"file",short:"Last time the file content was modified.",type:"date"},"threat.enrichments.indicator.file.name":{dashed_name:"threat-enrichments-indicator-file-name",description:"Name of the file including the extension, without the directory.",example:"example.png",flat_name:"threat.enrichments.indicator.file.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"file",short:"Name of the file including the extension, without the directory.",type:"keyword"},"threat.enrichments.indicator.file.owner":{dashed_name:"threat-enrichments-indicator-file-owner",description:"File owner's username.",example:"alice",flat_name:"threat.enrichments.indicator.file.owner",ignore_above:1024,level:"extended",name:"owner",normalize:[],original_fieldset:"file",short:"File owner's username.",type:"keyword"},"threat.enrichments.indicator.file.path":{dashed_name:"threat-enrichments-indicator-file-path",description:"Full path to the file, including the file name. It should include the drive letter, when appropriate.",example:"/home/alice/example.png",flat_name:"threat.enrichments.indicator.file.path",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"threat.enrichments.indicator.file.path.text",name:"text",type:"match_only_text"}],name:"path",normalize:[],original_fieldset:"file",short:"Full path to the file, including the file name.",type:"keyword"},"threat.enrichments.indicator.file.pe.architecture":{dashed_name:"threat-enrichments-indicator-file-pe-architecture",description:"CPU architecture target for the file.",example:"x64",flat_name:"threat.enrichments.indicator.file.pe.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"pe",short:"CPU architecture target for the file.",type:"keyword"},"threat.enrichments.indicator.file.pe.company":{dashed_name:"threat-enrichments-indicator-file-pe-company",description:"Internal company name of the file, provided at compile-time.",example:"Microsoft Corporation",flat_name:"threat.enrichments.indicator.file.pe.company",ignore_above:1024,level:"extended",name:"company",normalize:[],original_fieldset:"pe",short:"Internal company name of the file, provided at compile-time.",type:"keyword"},"threat.enrichments.indicator.file.pe.description":{dashed_name:"threat-enrichments-indicator-file-pe-description",description:"Internal description of the file, provided at compile-time.",example:"Paint",flat_name:"threat.enrichments.indicator.file.pe.description",ignore_above:1024,level:"extended",name:"description",normalize:[],original_fieldset:"pe",short:"Internal description of the file, provided at compile-time.",type:"keyword"},"threat.enrichments.indicator.file.pe.file_version":{dashed_name:"threat-enrichments-indicator-file-pe-file-version",description:"Internal version of the file, provided at compile-time.",example:"6.3.9600.17415",flat_name:"threat.enrichments.indicator.file.pe.file_version",ignore_above:1024,level:"extended",name:"file_version",normalize:[],original_fieldset:"pe",short:"Process name.",type:"keyword"},"threat.enrichments.indicator.file.pe.go_import_hash":{dashed_name:"threat-enrichments-indicator-file-pe-go-import-hash",description:"A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"threat.enrichments.indicator.file.pe.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the Go language imports in a PE file.",type:"keyword"},"threat.enrichments.indicator.file.pe.go_imports":{dashed_name:"threat-enrichments-indicator-file-pe-go-imports",description:"List of imported Go language element names and types.",flat_name:"threat.enrichments.indicator.file.pe.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"pe",short:"List of imported Go language element names and types.",type:"flattened"},"threat.enrichments.indicator.file.pe.go_imports_names_entropy":{dashed_name:"threat-enrichments-indicator-file-pe-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"threat.enrichments.indicator.file.pe.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"threat.enrichments.indicator.file.pe.go_imports_names_var_entropy":{dashed_name:"threat-enrichments-indicator-file-pe-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"threat.enrichments.indicator.file.pe.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"threat.enrichments.indicator.file.pe.go_stripped":{dashed_name:"threat-enrichments-indicator-file-pe-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"threat.enrichments.indicator.file.pe.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"pe",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"threat.enrichments.indicator.file.pe.imphash":{dashed_name:"threat-enrichments-indicator-file-pe-imphash",description:"A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",example:"0c6803c4e922103c4dca5963aad36ddf",flat_name:"threat.enrichments.indicator.file.pe.imphash",ignore_above:1024,level:"extended",name:"imphash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"threat.enrichments.indicator.file.pe.import_hash":{dashed_name:"threat-enrichments-indicator-file-pe-import-hash",description:"A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"threat.enrichments.indicator.file.pe.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"threat.enrichments.indicator.file.pe.imports":{dashed_name:"threat-enrichments-indicator-file-pe-imports",description:"List of imported element names and types.",flat_name:"threat.enrichments.indicator.file.pe.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"pe",short:"List of imported element names and types.",type:"flattened"},"threat.enrichments.indicator.file.pe.imports_names_entropy":{dashed_name:"threat-enrichments-indicator-file-pe-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"threat.enrichments.indicator.file.pe.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"threat.enrichments.indicator.file.pe.imports_names_var_entropy":{dashed_name:"threat-enrichments-indicator-file-pe-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"threat.enrichments.indicator.file.pe.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"threat.enrichments.indicator.file.pe.original_file_name":{dashed_name:"threat-enrichments-indicator-file-pe-original-file-name",description:"Internal name of the file, provided at compile-time.",example:"MSPAINT.EXE",flat_name:"threat.enrichments.indicator.file.pe.original_file_name",ignore_above:1024,level:"extended",name:"original_file_name",normalize:[],original_fieldset:"pe",short:"Internal name of the file, provided at compile-time.",type:"keyword"},"threat.enrichments.indicator.file.pe.pehash":{dashed_name:"threat-enrichments-indicator-file-pe-pehash",description:"A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.",example:"73ff189b63cd6be375a7ff25179a38d347651975",flat_name:"threat.enrichments.indicator.file.pe.pehash",ignore_above:1024,level:"extended",name:"pehash",normalize:[],original_fieldset:"pe",short:"A hash of the PE header and data from one or more PE sections.",type:"keyword"},"threat.enrichments.indicator.file.pe.product":{dashed_name:"threat-enrichments-indicator-file-pe-product",description:"Internal product name of the file, provided at compile-time.",example:"Microsoft® Windows® Operating System",flat_name:"threat.enrichments.indicator.file.pe.product",ignore_above:1024,level:"extended",name:"product",normalize:[],original_fieldset:"pe",short:"Internal product name of the file, provided at compile-time.",type:"keyword"},"threat.enrichments.indicator.file.pe.sections":{dashed_name:"threat-enrichments-indicator-file-pe-sections",description:"An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.",flat_name:"threat.enrichments.indicator.file.pe.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"pe",short:"Section information of the PE file.",type:"nested"},"threat.enrichments.indicator.file.pe.sections.entropy":{dashed_name:"threat-enrichments-indicator-file-pe-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"threat.enrichments.indicator.file.pe.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the section.",type:"long"},"threat.enrichments.indicator.file.pe.sections.name":{dashed_name:"threat-enrichments-indicator-file-pe-sections-name",description:"PE Section List name.",flat_name:"threat.enrichments.indicator.file.pe.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"pe",short:"PE Section List name.",type:"keyword"},"threat.enrichments.indicator.file.pe.sections.physical_size":{dashed_name:"threat-enrichments-indicator-file-pe-sections-physical-size",description:"PE Section List physical size.",flat_name:"threat.enrichments.indicator.file.pe.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"pe",short:"PE Section List physical size.",type:"long"},"threat.enrichments.indicator.file.pe.sections.var_entropy":{dashed_name:"threat-enrichments-indicator-file-pe-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"threat.enrichments.indicator.file.pe.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"threat.enrichments.indicator.file.pe.sections.virtual_size":{dashed_name:"threat-enrichments-indicator-file-pe-sections-virtual-size",description:"PE Section List virtual size. This is always the same as `physical_size`.",flat_name:"threat.enrichments.indicator.file.pe.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"pe",short:"PE Section List virtual size. This is always the same as `physical_size`.",type:"long"},"threat.enrichments.indicator.file.size":{dashed_name:"threat-enrichments-indicator-file-size",description:'File size in bytes.\nOnly relevant when `file.type` is "file".',example:16384,flat_name:"threat.enrichments.indicator.file.size",level:"extended",name:"size",normalize:[],original_fieldset:"file",short:"File size in bytes.",type:"long"},"threat.enrichments.indicator.file.target_path":{dashed_name:"threat-enrichments-indicator-file-target-path",description:"Target path for symlinks.",flat_name:"threat.enrichments.indicator.file.target_path",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"threat.enrichments.indicator.file.target_path.text",name:"text",type:"match_only_text"}],name:"target_path",normalize:[],original_fieldset:"file",short:"Target path for symlinks.",type:"keyword"},"threat.enrichments.indicator.file.type":{dashed_name:"threat-enrichments-indicator-file-type",description:"File type (file, dir, or symlink).",example:"file",flat_name:"threat.enrichments.indicator.file.type",ignore_above:1024,level:"extended",name:"type",normalize:[],original_fieldset:"file",short:"File type (file, dir, or symlink).",type:"keyword"},"threat.enrichments.indicator.file.uid":{dashed_name:"threat-enrichments-indicator-file-uid",description:"The user ID (UID) or security identifier (SID) of the file owner.",example:"1001",flat_name:"threat.enrichments.indicator.file.uid",ignore_above:1024,level:"extended",name:"uid",normalize:[],original_fieldset:"file",short:"The user ID (UID) or security identifier (SID) of the file owner.",type:"keyword"},"threat.enrichments.indicator.file.x509.alternative_names":{dashed_name:"threat-enrichments-indicator-file-x509-alternative-names",description:"List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",example:"*.elastic.co",flat_name:"threat.enrichments.indicator.file.x509.alternative_names",ignore_above:1024,level:"extended",name:"alternative_names",normalize:["array"],original_fieldset:"x509",short:"List of subject alternative names (SAN).",type:"keyword"},"threat.enrichments.indicator.file.x509.issuer.common_name":{dashed_name:"threat-enrichments-indicator-file-x509-issuer-common-name",description:"List of common name (CN) of issuing certificate authority.",example:"Example SHA2 High Assurance Server CA",flat_name:"threat.enrichments.indicator.file.x509.issuer.common_name",ignore_above:1024,level:"extended",name:"issuer.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common name (CN) of issuing certificate authority.",type:"keyword"},"threat.enrichments.indicator.file.x509.issuer.country":{dashed_name:"threat-enrichments-indicator-file-x509-issuer-country",description:"List of country \\(C) codes",example:"US",flat_name:"threat.enrichments.indicator.file.x509.issuer.country",ignore_above:1024,level:"extended",name:"issuer.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) codes",type:"keyword"},"threat.enrichments.indicator.file.x509.issuer.distinguished_name":{dashed_name:"threat-enrichments-indicator-file-x509-issuer-distinguished-name",description:"Distinguished name (DN) of issuing certificate authority.",example:"C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA",flat_name:"threat.enrichments.indicator.file.x509.issuer.distinguished_name",ignore_above:1024,level:"extended",name:"issuer.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of issuing certificate authority.",type:"keyword"},"threat.enrichments.indicator.file.x509.issuer.locality":{dashed_name:"threat-enrichments-indicator-file-x509-issuer-locality",description:"List of locality names (L)",example:"Mountain View",flat_name:"threat.enrichments.indicator.file.x509.issuer.locality",ignore_above:1024,level:"extended",name:"issuer.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"threat.enrichments.indicator.file.x509.issuer.organization":{dashed_name:"threat-enrichments-indicator-file-x509-issuer-organization",description:"List of organizations (O) of issuing certificate authority.",example:"Example Inc",flat_name:"threat.enrichments.indicator.file.x509.issuer.organization",ignore_above:1024,level:"extended",name:"issuer.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of issuing certificate authority.",type:"keyword"},"threat.enrichments.indicator.file.x509.issuer.organizational_unit":{dashed_name:"threat-enrichments-indicator-file-x509-issuer-organizational-unit",description:"List of organizational units (OU) of issuing certificate authority.",example:"www.example.com",flat_name:"threat.enrichments.indicator.file.x509.issuer.organizational_unit",ignore_above:1024,level:"extended",name:"issuer.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of issuing certificate authority.",type:"keyword"},"threat.enrichments.indicator.file.x509.issuer.state_or_province":{dashed_name:"threat-enrichments-indicator-file-x509-issuer-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"threat.enrichments.indicator.file.x509.issuer.state_or_province",ignore_above:1024,level:"extended",name:"issuer.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"threat.enrichments.indicator.file.x509.not_after":{dashed_name:"threat-enrichments-indicator-file-x509-not-after",description:"Time at which the certificate is no longer considered valid.",example:"2020-07-16T03:15:39Z",flat_name:"threat.enrichments.indicator.file.x509.not_after",level:"extended",name:"not_after",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is no longer considered valid.",type:"date"},"threat.enrichments.indicator.file.x509.not_before":{dashed_name:"threat-enrichments-indicator-file-x509-not-before",description:"Time at which the certificate is first considered valid.",example:"2019-08-16T01:40:25Z",flat_name:"threat.enrichments.indicator.file.x509.not_before",level:"extended",name:"not_before",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is first considered valid.",type:"date"},"threat.enrichments.indicator.file.x509.public_key_algorithm":{dashed_name:"threat-enrichments-indicator-file-x509-public-key-algorithm",description:"Algorithm used to generate the public key.",example:"RSA",flat_name:"threat.enrichments.indicator.file.x509.public_key_algorithm",ignore_above:1024,level:"extended",name:"public_key_algorithm",normalize:[],original_fieldset:"x509",short:"Algorithm used to generate the public key.",type:"keyword"},"threat.enrichments.indicator.file.x509.public_key_curve":{dashed_name:"threat-enrichments-indicator-file-x509-public-key-curve",description:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",example:"nistp521",flat_name:"threat.enrichments.indicator.file.x509.public_key_curve",ignore_above:1024,level:"extended",name:"public_key_curve",normalize:[],original_fieldset:"x509",short:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",type:"keyword"},"threat.enrichments.indicator.file.x509.public_key_exponent":{dashed_name:"threat-enrichments-indicator-file-x509-public-key-exponent",description:"Exponent used to derive the public key. This is algorithm specific.",doc_values:!1,example:65537,flat_name:"threat.enrichments.indicator.file.x509.public_key_exponent",index:!1,level:"extended",name:"public_key_exponent",normalize:[],original_fieldset:"x509",short:"Exponent used to derive the public key. This is algorithm specific.",type:"long"},"threat.enrichments.indicator.file.x509.public_key_size":{dashed_name:"threat-enrichments-indicator-file-x509-public-key-size",description:"The size of the public key space in bits.",example:2048,flat_name:"threat.enrichments.indicator.file.x509.public_key_size",level:"extended",name:"public_key_size",normalize:[],original_fieldset:"x509",short:"The size of the public key space in bits.",type:"long"},"threat.enrichments.indicator.file.x509.serial_number":{dashed_name:"threat-enrichments-indicator-file-x509-serial-number",description:"Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",example:"55FBB9C7DEBF09809D12CCAA",flat_name:"threat.enrichments.indicator.file.x509.serial_number",ignore_above:1024,level:"extended",name:"serial_number",normalize:[],original_fieldset:"x509",short:"Unique serial number issued by the certificate authority.",type:"keyword"},"threat.enrichments.indicator.file.x509.signature_algorithm":{dashed_name:"threat-enrichments-indicator-file-x509-signature-algorithm",description:"Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",example:"SHA256-RSA",flat_name:"threat.enrichments.indicator.file.x509.signature_algorithm",ignore_above:1024,level:"extended",name:"signature_algorithm",normalize:[],original_fieldset:"x509",short:"Identifier for certificate signature algorithm.",type:"keyword"},"threat.enrichments.indicator.file.x509.subject.common_name":{dashed_name:"threat-enrichments-indicator-file-x509-subject-common-name",description:"List of common names (CN) of subject.",example:"shared.global.example.net",flat_name:"threat.enrichments.indicator.file.x509.subject.common_name",ignore_above:1024,level:"extended",name:"subject.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common names (CN) of subject.",type:"keyword"},"threat.enrichments.indicator.file.x509.subject.country":{dashed_name:"threat-enrichments-indicator-file-x509-subject-country",description:"List of country \\(C) code",example:"US",flat_name:"threat.enrichments.indicator.file.x509.subject.country",ignore_above:1024,level:"extended",name:"subject.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) code",type:"keyword"},"threat.enrichments.indicator.file.x509.subject.distinguished_name":{dashed_name:"threat-enrichments-indicator-file-x509-subject-distinguished-name",description:"Distinguished name (DN) of the certificate subject entity.",example:"C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net",flat_name:"threat.enrichments.indicator.file.x509.subject.distinguished_name",ignore_above:1024,level:"extended",name:"subject.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of the certificate subject entity.",type:"keyword"},"threat.enrichments.indicator.file.x509.subject.locality":{dashed_name:"threat-enrichments-indicator-file-x509-subject-locality",description:"List of locality names (L)",example:"San Francisco",flat_name:"threat.enrichments.indicator.file.x509.subject.locality",ignore_above:1024,level:"extended",name:"subject.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"threat.enrichments.indicator.file.x509.subject.organization":{dashed_name:"threat-enrichments-indicator-file-x509-subject-organization",description:"List of organizations (O) of subject.",example:"Example, Inc.",flat_name:"threat.enrichments.indicator.file.x509.subject.organization",ignore_above:1024,level:"extended",name:"subject.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of subject.",type:"keyword"},"threat.enrichments.indicator.file.x509.subject.organizational_unit":{dashed_name:"threat-enrichments-indicator-file-x509-subject-organizational-unit",description:"List of organizational units (OU) of subject.",flat_name:"threat.enrichments.indicator.file.x509.subject.organizational_unit",ignore_above:1024,level:"extended",name:"subject.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of subject.",type:"keyword"},"threat.enrichments.indicator.file.x509.subject.state_or_province":{dashed_name:"threat-enrichments-indicator-file-x509-subject-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"threat.enrichments.indicator.file.x509.subject.state_or_province",ignore_above:1024,level:"extended",name:"subject.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"threat.enrichments.indicator.file.x509.version_number":{dashed_name:"threat-enrichments-indicator-file-x509-version-number",description:"Version of x509 format.",example:3,flat_name:"threat.enrichments.indicator.file.x509.version_number",ignore_above:1024,level:"extended",name:"version_number",normalize:[],original_fieldset:"x509",short:"Version of x509 format.",type:"keyword"},"threat.enrichments.indicator.first_seen":{dashed_name:"threat-enrichments-indicator-first-seen",description:"The date and time when intelligence source first reported sighting this indicator.",example:"2020-11-05T17:25:47.000Z",flat_name:"threat.enrichments.indicator.first_seen",level:"extended",name:"enrichments.indicator.first_seen",normalize:[],short:"Date/time indicator was first reported.",type:"date"},"threat.enrichments.indicator.geo.city_name":{dashed_name:"threat-enrichments-indicator-geo-city-name",description:"City name.",example:"Montreal",flat_name:"threat.enrichments.indicator.geo.city_name",ignore_above:1024,level:"core",name:"city_name",normalize:[],original_fieldset:"geo",short:"City name.",type:"keyword"},"threat.enrichments.indicator.geo.continent_code":{dashed_name:"threat-enrichments-indicator-geo-continent-code",description:"Two-letter code representing continent's name.",example:"NA",flat_name:"threat.enrichments.indicator.geo.continent_code",ignore_above:1024,level:"core",name:"continent_code",normalize:[],original_fieldset:"geo",short:"Continent code.",type:"keyword"},"threat.enrichments.indicator.geo.continent_name":{dashed_name:"threat-enrichments-indicator-geo-continent-name",description:"Name of the continent.",example:"North America",flat_name:"threat.enrichments.indicator.geo.continent_name",ignore_above:1024,level:"core",name:"continent_name",normalize:[],original_fieldset:"geo",short:"Name of the continent.",type:"keyword"},"threat.enrichments.indicator.geo.country_iso_code":{dashed_name:"threat-enrichments-indicator-geo-country-iso-code",description:"Country ISO code.",example:"CA",flat_name:"threat.enrichments.indicator.geo.country_iso_code",ignore_above:1024,level:"core",name:"country_iso_code",normalize:[],original_fieldset:"geo",short:"Country ISO code.",type:"keyword"},"threat.enrichments.indicator.geo.country_name":{dashed_name:"threat-enrichments-indicator-geo-country-name",description:"Country name.",example:"Canada",flat_name:"threat.enrichments.indicator.geo.country_name",ignore_above:1024,level:"core",name:"country_name",normalize:[],original_fieldset:"geo",short:"Country name.",type:"keyword"},"threat.enrichments.indicator.geo.location":{dashed_name:"threat-enrichments-indicator-geo-location",description:"Longitude and latitude.",example:'{ "lon": -73.614830, "lat": 45.505918 }',flat_name:"threat.enrichments.indicator.geo.location",level:"core",name:"location",normalize:[],original_fieldset:"geo",short:"Longitude and latitude.",type:"geo_point"},"threat.enrichments.indicator.geo.name":{dashed_name:"threat-enrichments-indicator-geo-name",description:"User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",example:"boston-dc",flat_name:"threat.enrichments.indicator.geo.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"geo",short:"User-defined description of a location.",type:"keyword"},"threat.enrichments.indicator.geo.postal_code":{dashed_name:"threat-enrichments-indicator-geo-postal-code",description:"Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",example:94040,flat_name:"threat.enrichments.indicator.geo.postal_code",ignore_above:1024,level:"core",name:"postal_code",normalize:[],original_fieldset:"geo",short:"Postal code.",type:"keyword"},"threat.enrichments.indicator.geo.region_iso_code":{dashed_name:"threat-enrichments-indicator-geo-region-iso-code",description:"Region ISO code.",example:"CA-QC",flat_name:"threat.enrichments.indicator.geo.region_iso_code",ignore_above:1024,level:"core",name:"region_iso_code",normalize:[],original_fieldset:"geo",short:"Region ISO code.",type:"keyword"},"threat.enrichments.indicator.geo.region_name":{dashed_name:"threat-enrichments-indicator-geo-region-name",description:"Region name.",example:"Quebec",flat_name:"threat.enrichments.indicator.geo.region_name",ignore_above:1024,level:"core",name:"region_name",normalize:[],original_fieldset:"geo",short:"Region name.",type:"keyword"},"threat.enrichments.indicator.geo.timezone":{dashed_name:"threat-enrichments-indicator-geo-timezone",description:"The time zone of the location, such as IANA time zone name.",example:"America/Argentina/Buenos_Aires",flat_name:"threat.enrichments.indicator.geo.timezone",ignore_above:1024,level:"core",name:"timezone",normalize:[],original_fieldset:"geo",short:"Time zone.",type:"keyword"},"threat.enrichments.indicator.ip":{dashed_name:"threat-enrichments-indicator-ip",description:"Identifies a threat indicator as an IP address (irrespective of direction).",example:"1.2.3.4",flat_name:"threat.enrichments.indicator.ip",level:"extended",name:"enrichments.indicator.ip",normalize:[],short:"Indicator IP address",type:"ip"},"threat.enrichments.indicator.last_seen":{dashed_name:"threat-enrichments-indicator-last-seen",description:"The date and time when intelligence source last reported sighting this indicator.",example:"2020-11-05T17:25:47.000Z",flat_name:"threat.enrichments.indicator.last_seen",level:"extended",name:"enrichments.indicator.last_seen",normalize:[],short:"Date/time indicator was last reported.",type:"date"},"threat.enrichments.indicator.marking.tlp":{dashed_name:"threat-enrichments-indicator-marking-tlp",description:"Traffic Light Protocol sharing markings.",example:"CLEAR",expected_values:["WHITE","CLEAR","GREEN","AMBER","AMBER+STRICT","RED"],flat_name:"threat.enrichments.indicator.marking.tlp",ignore_above:1024,level:"extended",name:"enrichments.indicator.marking.tlp",normalize:[],short:"Indicator TLP marking",type:"keyword"},"threat.enrichments.indicator.marking.tlp_version":{dashed_name:"threat-enrichments-indicator-marking-tlp-version",description:"Traffic Light Protocol version.",example:2,flat_name:"threat.enrichments.indicator.marking.tlp_version",ignore_above:1024,level:"extended",name:"enrichments.indicator.marking.tlp_version",normalize:[],short:"Indicator TLP version",type:"keyword"},"threat.enrichments.indicator.modified_at":{dashed_name:"threat-enrichments-indicator-modified-at",description:"The date and time when intelligence source last modified information for this indicator.",example:"2020-11-05T17:25:47.000Z",flat_name:"threat.enrichments.indicator.modified_at",level:"extended",name:"enrichments.indicator.modified_at",normalize:[],short:"Date/time indicator was last updated.",type:"date"},"threat.enrichments.indicator.name":{dashed_name:"threat-enrichments-indicator-name",description:"The display name indicator in an UI friendly format\nURL, IP address, email address, registry key, port number, hash value, or other relevant name can serve as the display name.",example:"5.2.75.227",flat_name:"threat.enrichments.indicator.name",ignore_above:1024,level:"extended",name:"enrichments.indicator.name",normalize:[],short:"Indicator display name",type:"keyword"},"threat.enrichments.indicator.port":{dashed_name:"threat-enrichments-indicator-port",description:"Identifies a threat indicator as a port number (irrespective of direction).",example:443,flat_name:"threat.enrichments.indicator.port",level:"extended",name:"enrichments.indicator.port",normalize:[],short:"Indicator port",type:"long"},"threat.enrichments.indicator.provider":{dashed_name:"threat-enrichments-indicator-provider",description:"The name of the indicator's provider.",example:"lrz_urlhaus",flat_name:"threat.enrichments.indicator.provider",ignore_above:1024,level:"extended",name:"enrichments.indicator.provider",normalize:[],short:"Indicator provider",type:"keyword"},"threat.enrichments.indicator.reference":{dashed_name:"threat-enrichments-indicator-reference",description:"Reference URL linking to additional information about this indicator.",example:"https://system.example.com/indicator/0001234",flat_name:"threat.enrichments.indicator.reference",ignore_above:1024,level:"extended",name:"enrichments.indicator.reference",normalize:[],short:"Indicator reference URL",type:"keyword"},"threat.enrichments.indicator.registry.data.bytes":{dashed_name:"threat-enrichments-indicator-registry-data-bytes",description:"Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.",example:"ZQBuAC0AVQBTAAAAZQBuAAAAAAA=",flat_name:"threat.enrichments.indicator.registry.data.bytes",ignore_above:1024,level:"extended",name:"data.bytes",normalize:[],original_fieldset:"registry",short:"Original bytes written with base64 encoding.",type:"keyword"},"threat.enrichments.indicator.registry.data.strings":{dashed_name:"threat-enrichments-indicator-registry-data-strings",description:'Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).',example:'["C:\\rta\\red_ttp\\bin\\myapp.exe"]',flat_name:"threat.enrichments.indicator.registry.data.strings",level:"core",name:"data.strings",normalize:["array"],original_fieldset:"registry",short:"List of strings representing what was written to the registry.",type:"wildcard"},"threat.enrichments.indicator.registry.data.type":{dashed_name:"threat-enrichments-indicator-registry-data-type",description:"Standard registry type for encoding contents",example:"REG_SZ",flat_name:"threat.enrichments.indicator.registry.data.type",ignore_above:1024,level:"core",name:"data.type",normalize:[],original_fieldset:"registry",short:"Standard registry type for encoding contents",type:"keyword"},"threat.enrichments.indicator.registry.hive":{dashed_name:"threat-enrichments-indicator-registry-hive",description:"Abbreviated name for the hive.",example:"HKLM",flat_name:"threat.enrichments.indicator.registry.hive",ignore_above:1024,level:"core",name:"hive",normalize:[],original_fieldset:"registry",short:"Abbreviated name for the hive.",type:"keyword"},"threat.enrichments.indicator.registry.key":{dashed_name:"threat-enrichments-indicator-registry-key",description:"Hive-relative path of keys.",example:"SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\winword.exe",flat_name:"threat.enrichments.indicator.registry.key",ignore_above:1024,level:"core",name:"key",normalize:[],original_fieldset:"registry",short:"Hive-relative path of keys.",type:"keyword"},"threat.enrichments.indicator.registry.path":{dashed_name:"threat-enrichments-indicator-registry-path",description:"Full path, including hive, key and value",example:"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\winword.exe\\Debugger",flat_name:"threat.enrichments.indicator.registry.path",ignore_above:1024,level:"core",name:"path",normalize:[],original_fieldset:"registry",short:"Full path, including hive, key and value",type:"keyword"},"threat.enrichments.indicator.registry.value":{dashed_name:"threat-enrichments-indicator-registry-value",description:"Name of the value written.",example:"Debugger",flat_name:"threat.enrichments.indicator.registry.value",ignore_above:1024,level:"core",name:"value",normalize:[],original_fieldset:"registry",short:"Name of the value written.",type:"keyword"},"threat.enrichments.indicator.scanner_stats":{dashed_name:"threat-enrichments-indicator-scanner-stats",description:"Count of AV/EDR vendors that successfully detected malicious file or URL.",example:4,flat_name:"threat.enrichments.indicator.scanner_stats",level:"extended",name:"enrichments.indicator.scanner_stats",normalize:[],short:"Scanner statistics",type:"long"},"threat.enrichments.indicator.sightings":{dashed_name:"threat-enrichments-indicator-sightings",description:"Number of times this indicator was observed conducting threat activity.",example:20,flat_name:"threat.enrichments.indicator.sightings",level:"extended",name:"enrichments.indicator.sightings",normalize:[],short:"Number of times indicator observed",type:"long"},"threat.enrichments.indicator.type":{dashed_name:"threat-enrichments-indicator-type",description:"Type of indicator as represented by Cyber Observable in STIX 2.0.",example:"ipv4-addr",expected_values:["autonomous-system","artifact","directory","domain-name","email-addr","file","ipv4-addr","ipv6-addr","mac-addr","mutex","port","process","software","url","user-account","windows-registry-key","x509-certificate"],flat_name:"threat.enrichments.indicator.type",ignore_above:1024,level:"extended",name:"enrichments.indicator.type",normalize:[],short:"Type of indicator",type:"keyword"},"threat.enrichments.indicator.url.domain":{dashed_name:"threat-enrichments-indicator-url-domain",description:'Domain of the url, such as "www.elastic.co".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.\nIf the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.',example:"www.elastic.co",flat_name:"threat.enrichments.indicator.url.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"url",short:"Domain of the url.",type:"keyword"},"threat.enrichments.indicator.url.extension":{dashed_name:"threat-enrichments-indicator-url-extension",description:'The field contains the file extension from the original request url, excluding the leading dot.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be "png", not ".png".\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").',example:"png",flat_name:"threat.enrichments.indicator.url.extension",ignore_above:1024,level:"extended",name:"extension",normalize:[],original_fieldset:"url",short:"File extension from the request url, excluding the leading dot.",type:"keyword"},"threat.enrichments.indicator.url.fragment":{dashed_name:"threat-enrichments-indicator-url-fragment",description:'Portion of the url after the `#`, such as "top".\nThe `#` is not part of the fragment.',flat_name:"threat.enrichments.indicator.url.fragment",ignore_above:1024,level:"extended",name:"fragment",normalize:[],original_fieldset:"url",short:"Portion of the url after the `#`.",type:"keyword"},"threat.enrichments.indicator.url.full":{dashed_name:"threat-enrichments-indicator-url-full",description:"If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.",example:"https://www.elastic.co:443/search?q=elasticsearch#top",flat_name:"threat.enrichments.indicator.url.full",level:"extended",multi_fields:[{flat_name:"threat.enrichments.indicator.url.full.text",name:"text",type:"match_only_text"}],name:"full",normalize:[],original_fieldset:"url",short:"Full unparsed URL.",type:"wildcard"},"threat.enrichments.indicator.url.original":{dashed_name:"threat-enrichments-indicator-url-original",description:"Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not.",example:"https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch",flat_name:"threat.enrichments.indicator.url.original",level:"extended",multi_fields:[{flat_name:"threat.enrichments.indicator.url.original.text",name:"text",type:"match_only_text"}],name:"original",normalize:[],original_fieldset:"url",short:"Unmodified original url as seen in the event source.",type:"wildcard"},"threat.enrichments.indicator.url.password":{dashed_name:"threat-enrichments-indicator-url-password",description:"Password of the request.",flat_name:"threat.enrichments.indicator.url.password",ignore_above:1024,level:"extended",name:"password",normalize:[],original_fieldset:"url",short:"Password of the request.",type:"keyword"},"threat.enrichments.indicator.url.path":{dashed_name:"threat-enrichments-indicator-url-path",description:'Path of the request, such as "/search".',flat_name:"threat.enrichments.indicator.url.path",level:"extended",name:"path",normalize:[],original_fieldset:"url",short:'Path of the request, such as "/search".',type:"wildcard"},"threat.enrichments.indicator.url.port":{dashed_name:"threat-enrichments-indicator-url-port",description:"Port of the request, such as 443.",example:443,flat_name:"threat.enrichments.indicator.url.port",format:"string",level:"extended",name:"port",normalize:[],original_fieldset:"url",short:"Port of the request, such as 443.",type:"long"},"threat.enrichments.indicator.url.query":{dashed_name:"threat-enrichments-indicator-url-query",description:'The query field describes the query string of the request, such as "q=elasticsearch".\nThe `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.',flat_name:"threat.enrichments.indicator.url.query",ignore_above:1024,level:"extended",name:"query",normalize:[],original_fieldset:"url",short:"Query string of the request.",type:"keyword"},"threat.enrichments.indicator.url.registered_domain":{dashed_name:"threat-enrichments-indicator-url-registered-domain",description:'The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for "foo.example.com" is "example.com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".',example:"example.com",flat_name:"threat.enrichments.indicator.url.registered_domain",ignore_above:1024,level:"extended",name:"registered_domain",normalize:[],original_fieldset:"url",short:"The highest registered url domain, stripped of the subdomain.",type:"keyword"},"threat.enrichments.indicator.url.scheme":{dashed_name:"threat-enrichments-indicator-url-scheme",description:'Scheme of the request, such as "https".\nNote: The `:` is not part of the scheme.',example:"https",flat_name:"threat.enrichments.indicator.url.scheme",ignore_above:1024,level:"extended",name:"scheme",normalize:[],original_fieldset:"url",short:"Scheme of the url.",type:"keyword"},"threat.enrichments.indicator.url.subdomain":{dashed_name:"threat-enrichments-indicator-url-subdomain",description:'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.',example:"east",flat_name:"threat.enrichments.indicator.url.subdomain",ignore_above:1024,level:"extended",name:"subdomain",normalize:[],original_fieldset:"url",short:"The subdomain of the domain.",type:"keyword"},"threat.enrichments.indicator.url.top_level_domain":{dashed_name:"threat-enrichments-indicator-url-top-level-domain",description:'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".',example:"co.uk",flat_name:"threat.enrichments.indicator.url.top_level_domain",ignore_above:1024,level:"extended",name:"top_level_domain",normalize:[],original_fieldset:"url",short:"The effective top level domain (com, org, net, co.uk).",type:"keyword"},"threat.enrichments.indicator.url.username":{dashed_name:"threat-enrichments-indicator-url-username",description:"Username of the request.",flat_name:"threat.enrichments.indicator.url.username",ignore_above:1024,level:"extended",name:"username",normalize:[],original_fieldset:"url",short:"Username of the request.",type:"keyword"},"threat.enrichments.indicator.x509.alternative_names":{dashed_name:"threat-enrichments-indicator-x509-alternative-names",description:"List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",example:"*.elastic.co",flat_name:"threat.enrichments.indicator.x509.alternative_names",ignore_above:1024,level:"extended",name:"alternative_names",normalize:["array"],original_fieldset:"x509",short:"List of subject alternative names (SAN).",type:"keyword"},"threat.enrichments.indicator.x509.issuer.common_name":{dashed_name:"threat-enrichments-indicator-x509-issuer-common-name",description:"List of common name (CN) of issuing certificate authority.",example:"Example SHA2 High Assurance Server CA",flat_name:"threat.enrichments.indicator.x509.issuer.common_name",ignore_above:1024,level:"extended",name:"issuer.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common name (CN) of issuing certificate authority.",type:"keyword"},"threat.enrichments.indicator.x509.issuer.country":{dashed_name:"threat-enrichments-indicator-x509-issuer-country",description:"List of country \\(C) codes",example:"US",flat_name:"threat.enrichments.indicator.x509.issuer.country",ignore_above:1024,level:"extended",name:"issuer.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) codes",type:"keyword"},"threat.enrichments.indicator.x509.issuer.distinguished_name":{dashed_name:"threat-enrichments-indicator-x509-issuer-distinguished-name",description:"Distinguished name (DN) of issuing certificate authority.",example:"C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA",flat_name:"threat.enrichments.indicator.x509.issuer.distinguished_name",ignore_above:1024,level:"extended",name:"issuer.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of issuing certificate authority.",type:"keyword"},"threat.enrichments.indicator.x509.issuer.locality":{dashed_name:"threat-enrichments-indicator-x509-issuer-locality",description:"List of locality names (L)",example:"Mountain View",flat_name:"threat.enrichments.indicator.x509.issuer.locality",ignore_above:1024,level:"extended",name:"issuer.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"threat.enrichments.indicator.x509.issuer.organization":{dashed_name:"threat-enrichments-indicator-x509-issuer-organization",description:"List of organizations (O) of issuing certificate authority.",example:"Example Inc",flat_name:"threat.enrichments.indicator.x509.issuer.organization",ignore_above:1024,level:"extended",name:"issuer.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of issuing certificate authority.",type:"keyword"},"threat.enrichments.indicator.x509.issuer.organizational_unit":{dashed_name:"threat-enrichments-indicator-x509-issuer-organizational-unit",description:"List of organizational units (OU) of issuing certificate authority.",example:"www.example.com",flat_name:"threat.enrichments.indicator.x509.issuer.organizational_unit",ignore_above:1024,level:"extended",name:"issuer.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of issuing certificate authority.",type:"keyword"},"threat.enrichments.indicator.x509.issuer.state_or_province":{dashed_name:"threat-enrichments-indicator-x509-issuer-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"threat.enrichments.indicator.x509.issuer.state_or_province",ignore_above:1024,level:"extended",name:"issuer.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"threat.enrichments.indicator.x509.not_after":{dashed_name:"threat-enrichments-indicator-x509-not-after",description:"Time at which the certificate is no longer considered valid.",example:"2020-07-16T03:15:39Z",flat_name:"threat.enrichments.indicator.x509.not_after",level:"extended",name:"not_after",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is no longer considered valid.",type:"date"},"threat.enrichments.indicator.x509.not_before":{dashed_name:"threat-enrichments-indicator-x509-not-before",description:"Time at which the certificate is first considered valid.",example:"2019-08-16T01:40:25Z",flat_name:"threat.enrichments.indicator.x509.not_before",level:"extended",name:"not_before",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is first considered valid.",type:"date"},"threat.enrichments.indicator.x509.public_key_algorithm":{dashed_name:"threat-enrichments-indicator-x509-public-key-algorithm",description:"Algorithm used to generate the public key.",example:"RSA",flat_name:"threat.enrichments.indicator.x509.public_key_algorithm",ignore_above:1024,level:"extended",name:"public_key_algorithm",normalize:[],original_fieldset:"x509",short:"Algorithm used to generate the public key.",type:"keyword"},"threat.enrichments.indicator.x509.public_key_curve":{dashed_name:"threat-enrichments-indicator-x509-public-key-curve",description:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",example:"nistp521",flat_name:"threat.enrichments.indicator.x509.public_key_curve",ignore_above:1024,level:"extended",name:"public_key_curve",normalize:[],original_fieldset:"x509",short:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",type:"keyword"},"threat.enrichments.indicator.x509.public_key_exponent":{dashed_name:"threat-enrichments-indicator-x509-public-key-exponent",description:"Exponent used to derive the public key. This is algorithm specific.",doc_values:!1,example:65537,flat_name:"threat.enrichments.indicator.x509.public_key_exponent",index:!1,level:"extended",name:"public_key_exponent",normalize:[],original_fieldset:"x509",short:"Exponent used to derive the public key. This is algorithm specific.",type:"long"},"threat.enrichments.indicator.x509.public_key_size":{dashed_name:"threat-enrichments-indicator-x509-public-key-size",description:"The size of the public key space in bits.",example:2048,flat_name:"threat.enrichments.indicator.x509.public_key_size",level:"extended",name:"public_key_size",normalize:[],original_fieldset:"x509",short:"The size of the public key space in bits.",type:"long"},"threat.enrichments.indicator.x509.serial_number":{dashed_name:"threat-enrichments-indicator-x509-serial-number",description:"Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",example:"55FBB9C7DEBF09809D12CCAA",flat_name:"threat.enrichments.indicator.x509.serial_number",ignore_above:1024,level:"extended",name:"serial_number",normalize:[],original_fieldset:"x509",short:"Unique serial number issued by the certificate authority.",type:"keyword"},"threat.enrichments.indicator.x509.signature_algorithm":{dashed_name:"threat-enrichments-indicator-x509-signature-algorithm",description:"Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",example:"SHA256-RSA",flat_name:"threat.enrichments.indicator.x509.signature_algorithm",ignore_above:1024,level:"extended",name:"signature_algorithm",normalize:[],original_fieldset:"x509",short:"Identifier for certificate signature algorithm.",type:"keyword"},"threat.enrichments.indicator.x509.subject.common_name":{dashed_name:"threat-enrichments-indicator-x509-subject-common-name",description:"List of common names (CN) of subject.",example:"shared.global.example.net",flat_name:"threat.enrichments.indicator.x509.subject.common_name",ignore_above:1024,level:"extended",name:"subject.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common names (CN) of subject.",type:"keyword"},"threat.enrichments.indicator.x509.subject.country":{dashed_name:"threat-enrichments-indicator-x509-subject-country",description:"List of country \\(C) code",example:"US",flat_name:"threat.enrichments.indicator.x509.subject.country",ignore_above:1024,level:"extended",name:"subject.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) code",type:"keyword"},"threat.enrichments.indicator.x509.subject.distinguished_name":{dashed_name:"threat-enrichments-indicator-x509-subject-distinguished-name",description:"Distinguished name (DN) of the certificate subject entity.",example:"C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net",flat_name:"threat.enrichments.indicator.x509.subject.distinguished_name",ignore_above:1024,level:"extended",name:"subject.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of the certificate subject entity.",type:"keyword"},"threat.enrichments.indicator.x509.subject.locality":{dashed_name:"threat-enrichments-indicator-x509-subject-locality",description:"List of locality names (L)",example:"San Francisco",flat_name:"threat.enrichments.indicator.x509.subject.locality",ignore_above:1024,level:"extended",name:"subject.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"threat.enrichments.indicator.x509.subject.organization":{dashed_name:"threat-enrichments-indicator-x509-subject-organization",description:"List of organizations (O) of subject.",example:"Example, Inc.",flat_name:"threat.enrichments.indicator.x509.subject.organization",ignore_above:1024,level:"extended",name:"subject.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of subject.",type:"keyword"},"threat.enrichments.indicator.x509.subject.organizational_unit":{dashed_name:"threat-enrichments-indicator-x509-subject-organizational-unit",description:"List of organizational units (OU) of subject.",flat_name:"threat.enrichments.indicator.x509.subject.organizational_unit",ignore_above:1024,level:"extended",name:"subject.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of subject.",type:"keyword"},"threat.enrichments.indicator.x509.subject.state_or_province":{dashed_name:"threat-enrichments-indicator-x509-subject-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"threat.enrichments.indicator.x509.subject.state_or_province",ignore_above:1024,level:"extended",name:"subject.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"threat.enrichments.indicator.x509.version_number":{dashed_name:"threat-enrichments-indicator-x509-version-number",description:"Version of x509 format.",example:3,flat_name:"threat.enrichments.indicator.x509.version_number",ignore_above:1024,level:"extended",name:"version_number",normalize:[],original_fieldset:"x509",short:"Version of x509 format.",type:"keyword"},"threat.enrichments.matched.atomic":{dashed_name:"threat-enrichments-matched-atomic",description:"Identifies the atomic indicator value that matched a local environment endpoint or network event.",example:"bad-domain.com",flat_name:"threat.enrichments.matched.atomic",ignore_above:1024,level:"extended",name:"enrichments.matched.atomic",normalize:[],short:"Matched indicator value",type:"keyword"},"threat.enrichments.matched.field":{dashed_name:"threat-enrichments-matched-field",description:"Identifies the field of the atomic indicator that matched a local environment endpoint or network event.",example:"file.hash.sha256",flat_name:"threat.enrichments.matched.field",ignore_above:1024,level:"extended",name:"enrichments.matched.field",normalize:[],short:"Matched indicator field",type:"keyword"},"threat.enrichments.matched.id":{dashed_name:"threat-enrichments-matched-id",description:"Identifies the _id of the indicator document enriching the event.",example:"ff93aee5-86a1-4a61-b0e6-0cdc313d01b5",flat_name:"threat.enrichments.matched.id",ignore_above:1024,level:"extended",name:"enrichments.matched.id",normalize:[],short:"Matched indicator identifier",type:"keyword"},"threat.enrichments.matched.index":{dashed_name:"threat-enrichments-matched-index",description:"Identifies the _index of the indicator document enriching the event.",example:"filebeat-8.0.0-2021.05.23-000011",flat_name:"threat.enrichments.matched.index",ignore_above:1024,level:"extended",name:"enrichments.matched.index",normalize:[],short:"Matched indicator index",type:"keyword"},"threat.enrichments.matched.occurred":{dashed_name:"threat-enrichments-matched-occurred",description:"Indicates when the indicator match was generated",example:"2021-10-05T17:00:58.326Z",flat_name:"threat.enrichments.matched.occurred",level:"extended",name:"enrichments.matched.occurred",normalize:[],short:"Date of match",type:"date"},"threat.enrichments.matched.type":{dashed_name:"threat-enrichments-matched-type",description:"Identifies the type of match that caused the event to be enriched with the given indicator",example:"indicator_match_rule",flat_name:"threat.enrichments.matched.type",ignore_above:1024,level:"extended",name:"enrichments.matched.type",normalize:[],short:"Type of indicator match",type:"keyword"},"threat.feed.dashboard_id":{dashed_name:"threat-feed-dashboard-id",description:"The saved object ID of the dashboard belonging to the threat feed for displaying dashboard links to threat feeds in Kibana.",example:"5ba16340-72e6-11eb-a3e3-b3cc7c78a70f",flat_name:"threat.feed.dashboard_id",ignore_above:1024,level:"extended",name:"feed.dashboard_id",normalize:[],short:"Feed dashboard ID.",type:"keyword"},"threat.feed.description":{dashed_name:"threat-feed-description",description:"Description of the threat feed in a UI friendly format.",example:"Threat feed from the AlienVault Open Threat eXchange network.",flat_name:"threat.feed.description",ignore_above:1024,level:"extended",name:"feed.description",normalize:[],short:"Description of the threat feed.",type:"keyword"},"threat.feed.name":{dashed_name:"threat-feed-name",description:"The name of the threat feed in UI friendly format.",example:"AlienVault OTX",flat_name:"threat.feed.name",ignore_above:1024,level:"extended",name:"feed.name",normalize:[],short:"Name of the threat feed.",type:"keyword"},"threat.feed.reference":{dashed_name:"threat-feed-reference",description:"Reference information for the threat feed in a UI friendly format.",example:"https://otx.alienvault.com",flat_name:"threat.feed.reference",ignore_above:1024,level:"extended",name:"feed.reference",normalize:[],short:"Reference for the threat feed.",type:"keyword"},"threat.framework":{dashed_name:"threat-framework",description:"Name of the threat framework used to further categorize and classify the tactic and technique of the reported threat. Framework classification can be provided by detecting systems, evaluated at ingest time, or retrospectively tagged to events.",example:"MITRE ATT&CK",flat_name:"threat.framework",ignore_above:1024,level:"extended",name:"framework",normalize:[],short:"Threat classification framework.",type:"keyword"},"threat.group.alias":{dashed_name:"threat-group-alias",description:"The alias(es) of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® group alias(es).",example:'[ "Magecart Group 6" ]',flat_name:"threat.group.alias",ignore_above:1024,level:"extended",name:"group.alias",normalize:["array"],short:"Alias of the group.",type:"keyword"},"threat.group.id":{dashed_name:"threat-group-id",description:"The id of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® group id.",example:"G0037",flat_name:"threat.group.id",ignore_above:1024,level:"extended",name:"group.id",normalize:[],short:"ID of the group.",type:"keyword"},"threat.group.name":{dashed_name:"threat-group-name",description:"The name of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® group name.",example:"FIN6",flat_name:"threat.group.name",ignore_above:1024,level:"extended",name:"group.name",normalize:[],short:"Name of the group.",type:"keyword"},"threat.group.reference":{dashed_name:"threat-group-reference",description:"The reference URL of the group for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® group reference URL.",example:"https://attack.mitre.org/groups/G0037/",flat_name:"threat.group.reference",ignore_above:1024,level:"extended",name:"group.reference",normalize:[],short:"Reference URL of the group.",type:"keyword"},"threat.indicator.as.number":{dashed_name:"threat-indicator-as-number",description:"Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",example:15169,flat_name:"threat.indicator.as.number",level:"extended",name:"number",normalize:[],original_fieldset:"as",short:"Unique number allocated to the autonomous system.",type:"long"},"threat.indicator.as.organization.name":{dashed_name:"threat-indicator-as-organization-name",description:"Organization name.",example:"Google LLC",flat_name:"threat.indicator.as.organization.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"threat.indicator.as.organization.name.text",name:"text",type:"match_only_text"}],name:"organization.name",normalize:[],original_fieldset:"as",short:"Organization name.",type:"keyword"},"threat.indicator.confidence":{dashed_name:"threat-indicator-confidence",description:"Identifies the vendor-neutral confidence rating using the None/Low/Medium/High scale defined in Appendix A of the STIX 2.1 framework. Vendor-specific confidence scales may be added as custom fields.",example:"Medium",expected_values:["Not Specified","None","Low","Medium","High"],flat_name:"threat.indicator.confidence",ignore_above:1024,level:"extended",name:"indicator.confidence",normalize:[],short:"Indicator confidence rating",type:"keyword"},"threat.indicator.description":{dashed_name:"threat-indicator-description",description:"Describes the type of action conducted by the threat.",example:"IP x.x.x.x was observed delivering the Angler EK.",flat_name:"threat.indicator.description",ignore_above:1024,level:"extended",name:"indicator.description",normalize:[],short:"Indicator description",type:"keyword"},"threat.indicator.email.address":{dashed_name:"threat-indicator-email-address",description:"Identifies a threat indicator as an email address (irrespective of direction).",example:"phish@example.com",flat_name:"threat.indicator.email.address",ignore_above:1024,level:"extended",name:"indicator.email.address",normalize:[],short:"Indicator email address",type:"keyword"},"threat.indicator.file.accessed":{dashed_name:"threat-indicator-file-accessed",description:"Last time the file was accessed.\nNote that not all filesystems keep track of access time.",flat_name:"threat.indicator.file.accessed",level:"extended",name:"accessed",normalize:[],original_fieldset:"file",short:"Last time the file was accessed.",type:"date"},"threat.indicator.file.attributes":{dashed_name:"threat-indicator-file-attributes",description:"Array of file attributes.\nAttributes names will vary by platform. Here's a non-exhaustive list of values that are expected in this field: archive, compressed, directory, encrypted, execute, hidden, read, readonly, system, write.",example:'["readonly", "system"]',flat_name:"threat.indicator.file.attributes",ignore_above:1024,level:"extended",name:"attributes",normalize:["array"],original_fieldset:"file",short:"Array of file attributes.",type:"keyword"},"threat.indicator.file.code_signature.digest_algorithm":{dashed_name:"threat-indicator-file-code-signature-digest-algorithm",description:"The hashing algorithm used to sign the process.\nThis value can distinguish signatures when a file is signed multiple times by the same signer but with a different digest algorithm.",example:"sha256",flat_name:"threat.indicator.file.code_signature.digest_algorithm",ignore_above:1024,level:"extended",name:"digest_algorithm",normalize:[],original_fieldset:"code_signature",short:"Hashing algorithm used to sign the process.",type:"keyword"},"threat.indicator.file.code_signature.exists":{dashed_name:"threat-indicator-file-code-signature-exists",description:"Boolean to capture if a signature is present.",example:"true",flat_name:"threat.indicator.file.code_signature.exists",level:"core",name:"exists",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if a signature is present.",type:"boolean"},"threat.indicator.file.code_signature.signing_id":{dashed_name:"threat-indicator-file-code-signature-signing-id",description:"The identifier used to sign the process.\nThis is used to identify the application manufactured by a software vendor. The field is relevant to Apple *OS only.",example:"com.apple.xpc.proxy",flat_name:"threat.indicator.file.code_signature.signing_id",ignore_above:1024,level:"extended",name:"signing_id",normalize:[],original_fieldset:"code_signature",short:"The identifier used to sign the process.",type:"keyword"},"threat.indicator.file.code_signature.status":{dashed_name:"threat-indicator-file-code-signature-status",description:"Additional information about the certificate status.\nThis is useful for logging cryptographic errors with the certificate validity or trust status. Leave unpopulated if the validity or trust of the certificate was unchecked.",example:"ERROR_UNTRUSTED_ROOT",flat_name:"threat.indicator.file.code_signature.status",ignore_above:1024,level:"extended",name:"status",normalize:[],original_fieldset:"code_signature",short:"Additional information about the certificate status.",type:"keyword"},"threat.indicator.file.code_signature.subject_name":{dashed_name:"threat-indicator-file-code-signature-subject-name",description:"Subject name of the code signer",example:"Microsoft Corporation",flat_name:"threat.indicator.file.code_signature.subject_name",ignore_above:1024,level:"core",name:"subject_name",normalize:[],original_fieldset:"code_signature",short:"Subject name of the code signer",type:"keyword"},"threat.indicator.file.code_signature.team_id":{dashed_name:"threat-indicator-file-code-signature-team-id",description:"The team identifier used to sign the process.\nThis is used to identify the team or vendor of a software product. The field is relevant to Apple *OS only.",example:"EQHXZ8M8AV",flat_name:"threat.indicator.file.code_signature.team_id",ignore_above:1024,level:"extended",name:"team_id",normalize:[],original_fieldset:"code_signature",short:"The team identifier used to sign the process.",type:"keyword"},"threat.indicator.file.code_signature.timestamp":{dashed_name:"threat-indicator-file-code-signature-timestamp",description:"Date and time when the code signature was generated and signed.",example:"2021-01-01T12:10:30Z",flat_name:"threat.indicator.file.code_signature.timestamp",level:"extended",name:"timestamp",normalize:[],original_fieldset:"code_signature",short:"When the signature was generated and signed.",type:"date"},"threat.indicator.file.code_signature.trusted":{dashed_name:"threat-indicator-file-code-signature-trusted",description:"Stores the trust status of the certificate chain.\nValidating the trust of the certificate chain may be complicated, and this field should only be populated by tools that actively check the status.",example:"true",flat_name:"threat.indicator.file.code_signature.trusted",level:"extended",name:"trusted",normalize:[],original_fieldset:"code_signature",short:"Stores the trust status of the certificate chain.",type:"boolean"},"threat.indicator.file.code_signature.valid":{dashed_name:"threat-indicator-file-code-signature-valid",description:"Boolean to capture if the digital signature is verified against the binary content.\nLeave unpopulated if a certificate was unchecked.",example:"true",flat_name:"threat.indicator.file.code_signature.valid",level:"extended",name:"valid",normalize:[],original_fieldset:"code_signature",short:"Boolean to capture if the digital signature is verified against the binary content.",type:"boolean"},"threat.indicator.file.created":{dashed_name:"threat-indicator-file-created",description:"File creation time.\nNote that not all filesystems store the creation time.",flat_name:"threat.indicator.file.created",level:"extended",name:"created",normalize:[],original_fieldset:"file",short:"File creation time.",type:"date"},"threat.indicator.file.ctime":{dashed_name:"threat-indicator-file-ctime",description:"Last time the file attributes or metadata changed.\nNote that changes to the file content will update `mtime`. This implies `ctime` will be adjusted at the same time, since `mtime` is an attribute of the file.",flat_name:"threat.indicator.file.ctime",level:"extended",name:"ctime",normalize:[],original_fieldset:"file",short:"Last time the file attributes or metadata changed.",type:"date"},"threat.indicator.file.device":{dashed_name:"threat-indicator-file-device",description:"Device that is the source of the file.",example:"sda",flat_name:"threat.indicator.file.device",ignore_above:1024,level:"extended",name:"device",normalize:[],original_fieldset:"file",short:"Device that is the source of the file.",type:"keyword"},"threat.indicator.file.directory":{dashed_name:"threat-indicator-file-directory",description:"Directory where the file is located. It should include the drive letter, when appropriate.",example:"/home/alice",flat_name:"threat.indicator.file.directory",ignore_above:1024,level:"extended",name:"directory",normalize:[],original_fieldset:"file",short:"Directory where the file is located.",type:"keyword"},"threat.indicator.file.drive_letter":{dashed_name:"threat-indicator-file-drive-letter",description:"Drive letter where the file is located. This field is only relevant on Windows.\nThe value should be uppercase, and not include the colon.",example:"C",flat_name:"threat.indicator.file.drive_letter",ignore_above:1,level:"extended",name:"drive_letter",normalize:[],original_fieldset:"file",short:"Drive letter where the file is located.",type:"keyword"},"threat.indicator.file.elf.architecture":{dashed_name:"threat-indicator-file-elf-architecture",description:"Machine architecture of the ELF file.",example:"x86-64",flat_name:"threat.indicator.file.elf.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"elf",short:"Machine architecture of the ELF file.",type:"keyword"},"threat.indicator.file.elf.byte_order":{dashed_name:"threat-indicator-file-elf-byte-order",description:"Byte sequence of ELF file.",example:"Little Endian",flat_name:"threat.indicator.file.elf.byte_order",ignore_above:1024,level:"extended",name:"byte_order",normalize:[],original_fieldset:"elf",short:"Byte sequence of ELF file.",type:"keyword"},"threat.indicator.file.elf.cpu_type":{dashed_name:"threat-indicator-file-elf-cpu-type",description:"CPU type of the ELF file.",example:"Intel",flat_name:"threat.indicator.file.elf.cpu_type",ignore_above:1024,level:"extended",name:"cpu_type",normalize:[],original_fieldset:"elf",short:"CPU type of the ELF file.",type:"keyword"},"threat.indicator.file.elf.creation_date":{dashed_name:"threat-indicator-file-elf-creation-date",description:"Extracted when possible from the file's metadata. Indicates when it was built or compiled. It can also be faked by malware creators.",flat_name:"threat.indicator.file.elf.creation_date",level:"extended",name:"creation_date",normalize:[],original_fieldset:"elf",short:"Build or compile date.",type:"date"},"threat.indicator.file.elf.exports":{dashed_name:"threat-indicator-file-elf-exports",description:"List of exported element names and types.",flat_name:"threat.indicator.file.elf.exports",level:"extended",name:"exports",normalize:["array"],original_fieldset:"elf",short:"List of exported element names and types.",type:"flattened"},"threat.indicator.file.elf.go_import_hash":{dashed_name:"threat-indicator-file-elf-go-import-hash",description:"A hash of the Go language imports in an ELF file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"threat.indicator.file.elf.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the Go language imports in an ELF file.",type:"keyword"},"threat.indicator.file.elf.go_imports":{dashed_name:"threat-indicator-file-elf-go-imports",description:"List of imported Go language element names and types.",flat_name:"threat.indicator.file.elf.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"elf",short:"List of imported Go language element names and types.",type:"flattened"},"threat.indicator.file.elf.go_imports_names_entropy":{dashed_name:"threat-indicator-file-elf-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"threat.indicator.file.elf.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"threat.indicator.file.elf.go_imports_names_var_entropy":{dashed_name:"threat-indicator-file-elf-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"threat.indicator.file.elf.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"threat.indicator.file.elf.go_stripped":{dashed_name:"threat-indicator-file-elf-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"threat.indicator.file.elf.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"elf",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"threat.indicator.file.elf.header.abi_version":{dashed_name:"threat-indicator-file-elf-header-abi-version",description:"Version of the ELF Application Binary Interface (ABI).",flat_name:"threat.indicator.file.elf.header.abi_version",ignore_above:1024,level:"extended",name:"header.abi_version",normalize:[],original_fieldset:"elf",short:"Version of the ELF Application Binary Interface (ABI).",type:"keyword"},"threat.indicator.file.elf.header.class":{dashed_name:"threat-indicator-file-elf-header-class",description:"Header class of the ELF file.",flat_name:"threat.indicator.file.elf.header.class",ignore_above:1024,level:"extended",name:"header.class",normalize:[],original_fieldset:"elf",short:"Header class of the ELF file.",type:"keyword"},"threat.indicator.file.elf.header.data":{dashed_name:"threat-indicator-file-elf-header-data",description:"Data table of the ELF header.",flat_name:"threat.indicator.file.elf.header.data",ignore_above:1024,level:"extended",name:"header.data",normalize:[],original_fieldset:"elf",short:"Data table of the ELF header.",type:"keyword"},"threat.indicator.file.elf.header.entrypoint":{dashed_name:"threat-indicator-file-elf-header-entrypoint",description:"Header entrypoint of the ELF file.",flat_name:"threat.indicator.file.elf.header.entrypoint",format:"string",level:"extended",name:"header.entrypoint",normalize:[],original_fieldset:"elf",short:"Header entrypoint of the ELF file.",type:"long"},"threat.indicator.file.elf.header.object_version":{dashed_name:"threat-indicator-file-elf-header-object-version",description:'"0x1" for original ELF files.',flat_name:"threat.indicator.file.elf.header.object_version",ignore_above:1024,level:"extended",name:"header.object_version",normalize:[],original_fieldset:"elf",short:'"0x1" for original ELF files.',type:"keyword"},"threat.indicator.file.elf.header.os_abi":{dashed_name:"threat-indicator-file-elf-header-os-abi",description:"Application Binary Interface (ABI) of the Linux OS.",flat_name:"threat.indicator.file.elf.header.os_abi",ignore_above:1024,level:"extended",name:"header.os_abi",normalize:[],original_fieldset:"elf",short:"Application Binary Interface (ABI) of the Linux OS.",type:"keyword"},"threat.indicator.file.elf.header.type":{dashed_name:"threat-indicator-file-elf-header-type",description:"Header type of the ELF file.",flat_name:"threat.indicator.file.elf.header.type",ignore_above:1024,level:"extended",name:"header.type",normalize:[],original_fieldset:"elf",short:"Header type of the ELF file.",type:"keyword"},"threat.indicator.file.elf.header.version":{dashed_name:"threat-indicator-file-elf-header-version",description:"Version of the ELF header.",flat_name:"threat.indicator.file.elf.header.version",ignore_above:1024,level:"extended",name:"header.version",normalize:[],original_fieldset:"elf",short:"Version of the ELF header.",type:"keyword"},"threat.indicator.file.elf.import_hash":{dashed_name:"threat-indicator-file-elf-import-hash",description:"A hash of the imports in an ELF file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is an ELF implementation of the Windows PE imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"threat.indicator.file.elf.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"elf",short:"A hash of the imports in an ELF file.",type:"keyword"},"threat.indicator.file.elf.imports":{dashed_name:"threat-indicator-file-elf-imports",description:"List of imported element names and types.",flat_name:"threat.indicator.file.elf.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"elf",short:"List of imported element names and types.",type:"flattened"},"threat.indicator.file.elf.imports_names_entropy":{dashed_name:"threat-indicator-file-elf-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"threat.indicator.file.elf.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"threat.indicator.file.elf.imports_names_var_entropy":{dashed_name:"threat-indicator-file-elf-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"threat.indicator.file.elf.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"threat.indicator.file.elf.sections":{dashed_name:"threat-indicator-file-elf-sections",description:"An array containing an object for each section of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.sections.*`.",flat_name:"threat.indicator.file.elf.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"elf",short:"Section information of the ELF file.",type:"nested"},"threat.indicator.file.elf.sections.chi2":{dashed_name:"threat-indicator-file-elf-sections-chi2",description:"Chi-square probability distribution of the section.",flat_name:"threat.indicator.file.elf.sections.chi2",format:"number",level:"extended",name:"sections.chi2",normalize:[],original_fieldset:"elf",short:"Chi-square probability distribution of the section.",type:"long"},"threat.indicator.file.elf.sections.entropy":{dashed_name:"threat-indicator-file-elf-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"threat.indicator.file.elf.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"elf",short:"Shannon entropy calculation from the section.",type:"long"},"threat.indicator.file.elf.sections.flags":{dashed_name:"threat-indicator-file-elf-sections-flags",description:"ELF Section List flags.",flat_name:"threat.indicator.file.elf.sections.flags",ignore_above:1024,level:"extended",name:"sections.flags",normalize:[],original_fieldset:"elf",short:"ELF Section List flags.",type:"keyword"},"threat.indicator.file.elf.sections.name":{dashed_name:"threat-indicator-file-elf-sections-name",description:"ELF Section List name.",flat_name:"threat.indicator.file.elf.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"elf",short:"ELF Section List name.",type:"keyword"},"threat.indicator.file.elf.sections.physical_offset":{dashed_name:"threat-indicator-file-elf-sections-physical-offset",description:"ELF Section List offset.",flat_name:"threat.indicator.file.elf.sections.physical_offset",ignore_above:1024,level:"extended",name:"sections.physical_offset",normalize:[],original_fieldset:"elf",short:"ELF Section List offset.",type:"keyword"},"threat.indicator.file.elf.sections.physical_size":{dashed_name:"threat-indicator-file-elf-sections-physical-size",description:"ELF Section List physical size.",flat_name:"threat.indicator.file.elf.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"elf",short:"ELF Section List physical size.",type:"long"},"threat.indicator.file.elf.sections.type":{dashed_name:"threat-indicator-file-elf-sections-type",description:"ELF Section List type.",flat_name:"threat.indicator.file.elf.sections.type",ignore_above:1024,level:"extended",name:"sections.type",normalize:[],original_fieldset:"elf",short:"ELF Section List type.",type:"keyword"},"threat.indicator.file.elf.sections.var_entropy":{dashed_name:"threat-indicator-file-elf-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"threat.indicator.file.elf.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"elf",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"threat.indicator.file.elf.sections.virtual_address":{dashed_name:"threat-indicator-file-elf-sections-virtual-address",description:"ELF Section List virtual address.",flat_name:"threat.indicator.file.elf.sections.virtual_address",format:"string",level:"extended",name:"sections.virtual_address",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual address.",type:"long"},"threat.indicator.file.elf.sections.virtual_size":{dashed_name:"threat-indicator-file-elf-sections-virtual-size",description:"ELF Section List virtual size.",flat_name:"threat.indicator.file.elf.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"elf",short:"ELF Section List virtual size.",type:"long"},"threat.indicator.file.elf.segments":{dashed_name:"threat-indicator-file-elf-segments",description:"An array containing an object for each segment of the ELF file.\nThe keys that should be present in these objects are defined by sub-fields underneath `elf.segments.*`.",flat_name:"threat.indicator.file.elf.segments",level:"extended",name:"segments",normalize:["array"],original_fieldset:"elf",short:"ELF object segment list.",type:"nested"},"threat.indicator.file.elf.segments.sections":{dashed_name:"threat-indicator-file-elf-segments-sections",description:"ELF object segment sections.",flat_name:"threat.indicator.file.elf.segments.sections",ignore_above:1024,level:"extended",name:"segments.sections",normalize:[],original_fieldset:"elf",short:"ELF object segment sections.",type:"keyword"},"threat.indicator.file.elf.segments.type":{dashed_name:"threat-indicator-file-elf-segments-type",description:"ELF object segment type.",flat_name:"threat.indicator.file.elf.segments.type",ignore_above:1024,level:"extended",name:"segments.type",normalize:[],original_fieldset:"elf",short:"ELF object segment type.",type:"keyword"},"threat.indicator.file.elf.shared_libraries":{dashed_name:"threat-indicator-file-elf-shared-libraries",description:"List of shared libraries used by this ELF object.",flat_name:"threat.indicator.file.elf.shared_libraries",ignore_above:1024,level:"extended",name:"shared_libraries",normalize:["array"],original_fieldset:"elf",short:"List of shared libraries used by this ELF object.",type:"keyword"},"threat.indicator.file.elf.telfhash":{dashed_name:"threat-indicator-file-elf-telfhash",description:"telfhash symbol hash for ELF file.",flat_name:"threat.indicator.file.elf.telfhash",ignore_above:1024,level:"extended",name:"telfhash",normalize:[],original_fieldset:"elf",short:"telfhash hash for ELF file.",type:"keyword"},"threat.indicator.file.extension":{dashed_name:"threat-indicator-file-extension",description:'File extension, excluding the leading dot.\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").',example:"png",flat_name:"threat.indicator.file.extension",ignore_above:1024,level:"extended",name:"extension",normalize:[],original_fieldset:"file",short:"File extension, excluding the leading dot.",type:"keyword"},"threat.indicator.file.fork_name":{dashed_name:"threat-indicator-file-fork-name",description:"A fork is additional data associated with a filesystem object.\nOn Linux, a resource fork is used to store additional data with a filesystem object. A file always has at least one fork for the data portion, and additional forks may exist.\nOn NTFS, this is analogous to an Alternate Data Stream (ADS), and the default data stream for a file is just called $DATA. Zone.Identifier is commonly used by Windows to track contents downloaded from the Internet. An ADS is typically of the form: `C:\\path\\to\\filename.extension:some_fork_name`, and `some_fork_name` is the value that should populate `fork_name`. `filename.extension` should populate `file.name`, and `extension` should populate `file.extension`. The full path, `file.path`, will include the fork name.",example:"Zone.Identifer",flat_name:"threat.indicator.file.fork_name",ignore_above:1024,level:"extended",name:"fork_name",normalize:[],original_fieldset:"file",short:"A fork is additional data associated with a filesystem object.",type:"keyword"},"threat.indicator.file.gid":{dashed_name:"threat-indicator-file-gid",description:"Primary group ID (GID) of the file.",example:"1001",flat_name:"threat.indicator.file.gid",ignore_above:1024,level:"extended",name:"gid",normalize:[],original_fieldset:"file",short:"Primary group ID (GID) of the file.",type:"keyword"},"threat.indicator.file.group":{dashed_name:"threat-indicator-file-group",description:"Primary group name of the file.",example:"alice",flat_name:"threat.indicator.file.group",ignore_above:1024,level:"extended",name:"group",normalize:[],original_fieldset:"file",short:"Primary group name of the file.",type:"keyword"},"threat.indicator.file.hash.md5":{dashed_name:"threat-indicator-file-hash-md5",description:"MD5 hash.",flat_name:"threat.indicator.file.hash.md5",ignore_above:1024,level:"extended",name:"md5",normalize:[],original_fieldset:"hash",short:"MD5 hash.",type:"keyword"},"threat.indicator.file.hash.sha1":{dashed_name:"threat-indicator-file-hash-sha1",description:"SHA1 hash.",flat_name:"threat.indicator.file.hash.sha1",ignore_above:1024,level:"extended",name:"sha1",normalize:[],original_fieldset:"hash",short:"SHA1 hash.",type:"keyword"},"threat.indicator.file.hash.sha256":{dashed_name:"threat-indicator-file-hash-sha256",description:"SHA256 hash.",flat_name:"threat.indicator.file.hash.sha256",ignore_above:1024,level:"extended",name:"sha256",normalize:[],original_fieldset:"hash",short:"SHA256 hash.",type:"keyword"},"threat.indicator.file.hash.sha384":{dashed_name:"threat-indicator-file-hash-sha384",description:"SHA384 hash.",flat_name:"threat.indicator.file.hash.sha384",ignore_above:1024,level:"extended",name:"sha384",normalize:[],original_fieldset:"hash",short:"SHA384 hash.",type:"keyword"},"threat.indicator.file.hash.sha512":{dashed_name:"threat-indicator-file-hash-sha512",description:"SHA512 hash.",flat_name:"threat.indicator.file.hash.sha512",ignore_above:1024,level:"extended",name:"sha512",normalize:[],original_fieldset:"hash",short:"SHA512 hash.",type:"keyword"},"threat.indicator.file.hash.ssdeep":{dashed_name:"threat-indicator-file-hash-ssdeep",description:"SSDEEP hash.",flat_name:"threat.indicator.file.hash.ssdeep",ignore_above:1024,level:"extended",name:"ssdeep",normalize:[],original_fieldset:"hash",short:"SSDEEP hash.",type:"keyword"},"threat.indicator.file.hash.tlsh":{dashed_name:"threat-indicator-file-hash-tlsh",description:"TLSH hash.",flat_name:"threat.indicator.file.hash.tlsh",ignore_above:1024,level:"extended",name:"tlsh",normalize:[],original_fieldset:"hash",short:"TLSH hash.",type:"keyword"},"threat.indicator.file.inode":{dashed_name:"threat-indicator-file-inode",description:"Inode representing the file in the filesystem.",example:"256383",flat_name:"threat.indicator.file.inode",ignore_above:1024,level:"extended",name:"inode",normalize:[],original_fieldset:"file",short:"Inode representing the file in the filesystem.",type:"keyword"},"threat.indicator.file.mime_type":{dashed_name:"threat-indicator-file-mime-type",description:"MIME type should identify the format of the file or stream of bytes using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA official types], where possible. When more than one type is applicable, the most specific type should be used.",flat_name:"threat.indicator.file.mime_type",ignore_above:1024,level:"extended",name:"mime_type",normalize:[],original_fieldset:"file",short:"Media type of file, document, or arrangement of bytes.",type:"keyword"},"threat.indicator.file.mode":{dashed_name:"threat-indicator-file-mode",description:"Mode of the file in octal representation.",example:"0640",flat_name:"threat.indicator.file.mode",ignore_above:1024,level:"extended",name:"mode",normalize:[],original_fieldset:"file",short:"Mode of the file in octal representation.",type:"keyword"},"threat.indicator.file.mtime":{dashed_name:"threat-indicator-file-mtime",description:"Last time the file content was modified.",flat_name:"threat.indicator.file.mtime",level:"extended",name:"mtime",normalize:[],original_fieldset:"file",short:"Last time the file content was modified.",type:"date"},"threat.indicator.file.name":{dashed_name:"threat-indicator-file-name",description:"Name of the file including the extension, without the directory.",example:"example.png",flat_name:"threat.indicator.file.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"file",short:"Name of the file including the extension, without the directory.",type:"keyword"},"threat.indicator.file.owner":{dashed_name:"threat-indicator-file-owner",description:"File owner's username.",example:"alice",flat_name:"threat.indicator.file.owner",ignore_above:1024,level:"extended",name:"owner",normalize:[],original_fieldset:"file",short:"File owner's username.",type:"keyword"},"threat.indicator.file.path":{dashed_name:"threat-indicator-file-path",description:"Full path to the file, including the file name. It should include the drive letter, when appropriate.",example:"/home/alice/example.png",flat_name:"threat.indicator.file.path",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"threat.indicator.file.path.text",name:"text",type:"match_only_text"}],name:"path",normalize:[],original_fieldset:"file",short:"Full path to the file, including the file name.",type:"keyword"},"threat.indicator.file.pe.architecture":{dashed_name:"threat-indicator-file-pe-architecture",description:"CPU architecture target for the file.",example:"x64",flat_name:"threat.indicator.file.pe.architecture",ignore_above:1024,level:"extended",name:"architecture",normalize:[],original_fieldset:"pe",short:"CPU architecture target for the file.",type:"keyword"},"threat.indicator.file.pe.company":{dashed_name:"threat-indicator-file-pe-company",description:"Internal company name of the file, provided at compile-time.",example:"Microsoft Corporation",flat_name:"threat.indicator.file.pe.company",ignore_above:1024,level:"extended",name:"company",normalize:[],original_fieldset:"pe",short:"Internal company name of the file, provided at compile-time.",type:"keyword"},"threat.indicator.file.pe.description":{dashed_name:"threat-indicator-file-pe-description",description:"Internal description of the file, provided at compile-time.",example:"Paint",flat_name:"threat.indicator.file.pe.description",ignore_above:1024,level:"extended",name:"description",normalize:[],original_fieldset:"pe",short:"Internal description of the file, provided at compile-time.",type:"keyword"},"threat.indicator.file.pe.file_version":{dashed_name:"threat-indicator-file-pe-file-version",description:"Internal version of the file, provided at compile-time.",example:"6.3.9600.17415",flat_name:"threat.indicator.file.pe.file_version",ignore_above:1024,level:"extended",name:"file_version",normalize:[],original_fieldset:"pe",short:"Process name.",type:"keyword"},"threat.indicator.file.pe.go_import_hash":{dashed_name:"threat-indicator-file-pe-go-import-hash",description:"A hash of the Go language imports in a PE file excluding standard library imports. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThe algorithm used to calculate the Go symbol hash and a reference implementation are available [here](https://github.com/elastic/toutoumomoma).",example:"10bddcb4cee42080f76c88d9ff964491",flat_name:"threat.indicator.file.pe.go_import_hash",ignore_above:1024,level:"extended",name:"go_import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the Go language imports in a PE file.",type:"keyword"},"threat.indicator.file.pe.go_imports":{dashed_name:"threat-indicator-file-pe-go-imports",description:"List of imported Go language element names and types.",flat_name:"threat.indicator.file.pe.go_imports",level:"extended",name:"go_imports",normalize:[],original_fieldset:"pe",short:"List of imported Go language element names and types.",type:"flattened"},"threat.indicator.file.pe.go_imports_names_entropy":{dashed_name:"threat-indicator-file-pe-go-imports-names-entropy",description:"Shannon entropy calculation from the list of Go imports.",flat_name:"threat.indicator.file.pe.go_imports_names_entropy",format:"number",level:"extended",name:"go_imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of Go imports.",type:"long"},"threat.indicator.file.pe.go_imports_names_var_entropy":{dashed_name:"threat-indicator-file-pe-go-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of Go imports.",flat_name:"threat.indicator.file.pe.go_imports_names_var_entropy",format:"number",level:"extended",name:"go_imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of Go imports.",type:"long"},"threat.indicator.file.pe.go_stripped":{dashed_name:"threat-indicator-file-pe-go-stripped",description:"Set to true if the file is a Go executable that has had its symbols stripped or obfuscated and false if an unobfuscated Go executable.",flat_name:"threat.indicator.file.pe.go_stripped",level:"extended",name:"go_stripped",normalize:[],original_fieldset:"pe",short:"Whether the file is a stripped or obfuscated Go executable.",type:"boolean"},"threat.indicator.file.pe.imphash":{dashed_name:"threat-indicator-file-pe-imphash",description:"A hash of the imports in a PE file. An imphash -- or import hash -- can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nLearn more at https://www.fireeye.com/blog/threat-research/2014/01/tracking-malware-import-hashing.html.",example:"0c6803c4e922103c4dca5963aad36ddf",flat_name:"threat.indicator.file.pe.imphash",ignore_above:1024,level:"extended",name:"imphash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"threat.indicator.file.pe.import_hash":{dashed_name:"threat-indicator-file-pe-import-hash",description:"A hash of the imports in a PE file. An import hash can be used to fingerprint binaries even after recompilation or other code-level transformations have occurred, which would change more traditional hash values.\nThis is a synonym for imphash.",example:"d41d8cd98f00b204e9800998ecf8427e",flat_name:"threat.indicator.file.pe.import_hash",ignore_above:1024,level:"extended",name:"import_hash",normalize:[],original_fieldset:"pe",short:"A hash of the imports in a PE file.",type:"keyword"},"threat.indicator.file.pe.imports":{dashed_name:"threat-indicator-file-pe-imports",description:"List of imported element names and types.",flat_name:"threat.indicator.file.pe.imports",level:"extended",name:"imports",normalize:["array"],original_fieldset:"pe",short:"List of imported element names and types.",type:"flattened"},"threat.indicator.file.pe.imports_names_entropy":{dashed_name:"threat-indicator-file-pe-imports-names-entropy",description:"Shannon entropy calculation from the list of imported element names and types.",flat_name:"threat.indicator.file.pe.imports_names_entropy",format:"number",level:"extended",name:"imports_names_entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the list of imported element names and types.",type:"long"},"threat.indicator.file.pe.imports_names_var_entropy":{dashed_name:"threat-indicator-file-pe-imports-names-var-entropy",description:"Variance for Shannon entropy calculation from the list of imported element names and types.",flat_name:"threat.indicator.file.pe.imports_names_var_entropy",format:"number",level:"extended",name:"imports_names_var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the list of imported element names and types.",type:"long"},"threat.indicator.file.pe.original_file_name":{dashed_name:"threat-indicator-file-pe-original-file-name",description:"Internal name of the file, provided at compile-time.",example:"MSPAINT.EXE",flat_name:"threat.indicator.file.pe.original_file_name",ignore_above:1024,level:"extended",name:"original_file_name",normalize:[],original_fieldset:"pe",short:"Internal name of the file, provided at compile-time.",type:"keyword"},"threat.indicator.file.pe.pehash":{dashed_name:"threat-indicator-file-pe-pehash",description:"A hash of the PE header and data from one or more PE sections. An pehash can be used to cluster files by transforming structural information about a file into a hash value.\nLearn more at https://www.usenix.org/legacy/events/leet09/tech/full_papers/wicherski/wicherski_html/index.html.",example:"73ff189b63cd6be375a7ff25179a38d347651975",flat_name:"threat.indicator.file.pe.pehash",ignore_above:1024,level:"extended",name:"pehash",normalize:[],original_fieldset:"pe",short:"A hash of the PE header and data from one or more PE sections.",type:"keyword"},"threat.indicator.file.pe.product":{dashed_name:"threat-indicator-file-pe-product",description:"Internal product name of the file, provided at compile-time.",example:"Microsoft® Windows® Operating System",flat_name:"threat.indicator.file.pe.product",ignore_above:1024,level:"extended",name:"product",normalize:[],original_fieldset:"pe",short:"Internal product name of the file, provided at compile-time.",type:"keyword"},"threat.indicator.file.pe.sections":{dashed_name:"threat-indicator-file-pe-sections",description:"An array containing an object for each section of the PE file.\nThe keys that should be present in these objects are defined by sub-fields underneath `pe.sections.*`.",flat_name:"threat.indicator.file.pe.sections",level:"extended",name:"sections",normalize:["array"],original_fieldset:"pe",short:"Section information of the PE file.",type:"nested"},"threat.indicator.file.pe.sections.entropy":{dashed_name:"threat-indicator-file-pe-sections-entropy",description:"Shannon entropy calculation from the section.",flat_name:"threat.indicator.file.pe.sections.entropy",format:"number",level:"extended",name:"sections.entropy",normalize:[],original_fieldset:"pe",short:"Shannon entropy calculation from the section.",type:"long"},"threat.indicator.file.pe.sections.name":{dashed_name:"threat-indicator-file-pe-sections-name",description:"PE Section List name.",flat_name:"threat.indicator.file.pe.sections.name",ignore_above:1024,level:"extended",name:"sections.name",normalize:[],original_fieldset:"pe",short:"PE Section List name.",type:"keyword"},"threat.indicator.file.pe.sections.physical_size":{dashed_name:"threat-indicator-file-pe-sections-physical-size",description:"PE Section List physical size.",flat_name:"threat.indicator.file.pe.sections.physical_size",format:"bytes",level:"extended",name:"sections.physical_size",normalize:[],original_fieldset:"pe",short:"PE Section List physical size.",type:"long"},"threat.indicator.file.pe.sections.var_entropy":{dashed_name:"threat-indicator-file-pe-sections-var-entropy",description:"Variance for Shannon entropy calculation from the section.",flat_name:"threat.indicator.file.pe.sections.var_entropy",format:"number",level:"extended",name:"sections.var_entropy",normalize:[],original_fieldset:"pe",short:"Variance for Shannon entropy calculation from the section.",type:"long"},"threat.indicator.file.pe.sections.virtual_size":{dashed_name:"threat-indicator-file-pe-sections-virtual-size",description:"PE Section List virtual size. This is always the same as `physical_size`.",flat_name:"threat.indicator.file.pe.sections.virtual_size",format:"string",level:"extended",name:"sections.virtual_size",normalize:[],original_fieldset:"pe",short:"PE Section List virtual size. This is always the same as `physical_size`.",type:"long"},"threat.indicator.file.size":{dashed_name:"threat-indicator-file-size",description:'File size in bytes.\nOnly relevant when `file.type` is "file".',example:16384,flat_name:"threat.indicator.file.size",level:"extended",name:"size",normalize:[],original_fieldset:"file",short:"File size in bytes.",type:"long"},"threat.indicator.file.target_path":{dashed_name:"threat-indicator-file-target-path",description:"Target path for symlinks.",flat_name:"threat.indicator.file.target_path",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"threat.indicator.file.target_path.text",name:"text",type:"match_only_text"}],name:"target_path",normalize:[],original_fieldset:"file",short:"Target path for symlinks.",type:"keyword"},"threat.indicator.file.type":{dashed_name:"threat-indicator-file-type",description:"File type (file, dir, or symlink).",example:"file",flat_name:"threat.indicator.file.type",ignore_above:1024,level:"extended",name:"type",normalize:[],original_fieldset:"file",short:"File type (file, dir, or symlink).",type:"keyword"},"threat.indicator.file.uid":{dashed_name:"threat-indicator-file-uid",description:"The user ID (UID) or security identifier (SID) of the file owner.",example:"1001",flat_name:"threat.indicator.file.uid",ignore_above:1024,level:"extended",name:"uid",normalize:[],original_fieldset:"file",short:"The user ID (UID) or security identifier (SID) of the file owner.",type:"keyword"},"threat.indicator.file.x509.alternative_names":{dashed_name:"threat-indicator-file-x509-alternative-names",description:"List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",example:"*.elastic.co",flat_name:"threat.indicator.file.x509.alternative_names",ignore_above:1024,level:"extended",name:"alternative_names",normalize:["array"],original_fieldset:"x509",short:"List of subject alternative names (SAN).",type:"keyword"},"threat.indicator.file.x509.issuer.common_name":{dashed_name:"threat-indicator-file-x509-issuer-common-name",description:"List of common name (CN) of issuing certificate authority.",example:"Example SHA2 High Assurance Server CA",flat_name:"threat.indicator.file.x509.issuer.common_name",ignore_above:1024,level:"extended",name:"issuer.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common name (CN) of issuing certificate authority.",type:"keyword"},"threat.indicator.file.x509.issuer.country":{dashed_name:"threat-indicator-file-x509-issuer-country",description:"List of country \\(C) codes",example:"US",flat_name:"threat.indicator.file.x509.issuer.country",ignore_above:1024,level:"extended",name:"issuer.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) codes",type:"keyword"},"threat.indicator.file.x509.issuer.distinguished_name":{dashed_name:"threat-indicator-file-x509-issuer-distinguished-name",description:"Distinguished name (DN) of issuing certificate authority.",example:"C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA",flat_name:"threat.indicator.file.x509.issuer.distinguished_name",ignore_above:1024,level:"extended",name:"issuer.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of issuing certificate authority.",type:"keyword"},"threat.indicator.file.x509.issuer.locality":{dashed_name:"threat-indicator-file-x509-issuer-locality",description:"List of locality names (L)",example:"Mountain View",flat_name:"threat.indicator.file.x509.issuer.locality",ignore_above:1024,level:"extended",name:"issuer.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"threat.indicator.file.x509.issuer.organization":{dashed_name:"threat-indicator-file-x509-issuer-organization",description:"List of organizations (O) of issuing certificate authority.",example:"Example Inc",flat_name:"threat.indicator.file.x509.issuer.organization",ignore_above:1024,level:"extended",name:"issuer.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of issuing certificate authority.",type:"keyword"},"threat.indicator.file.x509.issuer.organizational_unit":{dashed_name:"threat-indicator-file-x509-issuer-organizational-unit",description:"List of organizational units (OU) of issuing certificate authority.",example:"www.example.com",flat_name:"threat.indicator.file.x509.issuer.organizational_unit",ignore_above:1024,level:"extended",name:"issuer.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of issuing certificate authority.",type:"keyword"},"threat.indicator.file.x509.issuer.state_or_province":{dashed_name:"threat-indicator-file-x509-issuer-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"threat.indicator.file.x509.issuer.state_or_province",ignore_above:1024,level:"extended",name:"issuer.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"threat.indicator.file.x509.not_after":{dashed_name:"threat-indicator-file-x509-not-after",description:"Time at which the certificate is no longer considered valid.",example:"2020-07-16T03:15:39Z",flat_name:"threat.indicator.file.x509.not_after",level:"extended",name:"not_after",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is no longer considered valid.",type:"date"},"threat.indicator.file.x509.not_before":{dashed_name:"threat-indicator-file-x509-not-before",description:"Time at which the certificate is first considered valid.",example:"2019-08-16T01:40:25Z",flat_name:"threat.indicator.file.x509.not_before",level:"extended",name:"not_before",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is first considered valid.",type:"date"},"threat.indicator.file.x509.public_key_algorithm":{dashed_name:"threat-indicator-file-x509-public-key-algorithm",description:"Algorithm used to generate the public key.",example:"RSA",flat_name:"threat.indicator.file.x509.public_key_algorithm",ignore_above:1024,level:"extended",name:"public_key_algorithm",normalize:[],original_fieldset:"x509",short:"Algorithm used to generate the public key.",type:"keyword"},"threat.indicator.file.x509.public_key_curve":{dashed_name:"threat-indicator-file-x509-public-key-curve",description:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",example:"nistp521",flat_name:"threat.indicator.file.x509.public_key_curve",ignore_above:1024,level:"extended",name:"public_key_curve",normalize:[],original_fieldset:"x509",short:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",type:"keyword"},"threat.indicator.file.x509.public_key_exponent":{dashed_name:"threat-indicator-file-x509-public-key-exponent",description:"Exponent used to derive the public key. This is algorithm specific.",doc_values:!1,example:65537,flat_name:"threat.indicator.file.x509.public_key_exponent",index:!1,level:"extended",name:"public_key_exponent",normalize:[],original_fieldset:"x509",short:"Exponent used to derive the public key. This is algorithm specific.",type:"long"},"threat.indicator.file.x509.public_key_size":{dashed_name:"threat-indicator-file-x509-public-key-size",description:"The size of the public key space in bits.",example:2048,flat_name:"threat.indicator.file.x509.public_key_size",level:"extended",name:"public_key_size",normalize:[],original_fieldset:"x509",short:"The size of the public key space in bits.",type:"long"},"threat.indicator.file.x509.serial_number":{dashed_name:"threat-indicator-file-x509-serial-number",description:"Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",example:"55FBB9C7DEBF09809D12CCAA",flat_name:"threat.indicator.file.x509.serial_number",ignore_above:1024,level:"extended",name:"serial_number",normalize:[],original_fieldset:"x509",short:"Unique serial number issued by the certificate authority.",type:"keyword"},"threat.indicator.file.x509.signature_algorithm":{dashed_name:"threat-indicator-file-x509-signature-algorithm",description:"Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",example:"SHA256-RSA",flat_name:"threat.indicator.file.x509.signature_algorithm",ignore_above:1024,level:"extended",name:"signature_algorithm",normalize:[],original_fieldset:"x509",short:"Identifier for certificate signature algorithm.",type:"keyword"},"threat.indicator.file.x509.subject.common_name":{dashed_name:"threat-indicator-file-x509-subject-common-name",description:"List of common names (CN) of subject.",example:"shared.global.example.net",flat_name:"threat.indicator.file.x509.subject.common_name",ignore_above:1024,level:"extended",name:"subject.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common names (CN) of subject.",type:"keyword"},"threat.indicator.file.x509.subject.country":{dashed_name:"threat-indicator-file-x509-subject-country",description:"List of country \\(C) code",example:"US",flat_name:"threat.indicator.file.x509.subject.country",ignore_above:1024,level:"extended",name:"subject.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) code",type:"keyword"},"threat.indicator.file.x509.subject.distinguished_name":{dashed_name:"threat-indicator-file-x509-subject-distinguished-name",description:"Distinguished name (DN) of the certificate subject entity.",example:"C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net",flat_name:"threat.indicator.file.x509.subject.distinguished_name",ignore_above:1024,level:"extended",name:"subject.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of the certificate subject entity.",type:"keyword"},"threat.indicator.file.x509.subject.locality":{dashed_name:"threat-indicator-file-x509-subject-locality",description:"List of locality names (L)",example:"San Francisco",flat_name:"threat.indicator.file.x509.subject.locality",ignore_above:1024,level:"extended",name:"subject.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"threat.indicator.file.x509.subject.organization":{dashed_name:"threat-indicator-file-x509-subject-organization",description:"List of organizations (O) of subject.",example:"Example, Inc.",flat_name:"threat.indicator.file.x509.subject.organization",ignore_above:1024,level:"extended",name:"subject.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of subject.",type:"keyword"},"threat.indicator.file.x509.subject.organizational_unit":{dashed_name:"threat-indicator-file-x509-subject-organizational-unit",description:"List of organizational units (OU) of subject.",flat_name:"threat.indicator.file.x509.subject.organizational_unit",ignore_above:1024,level:"extended",name:"subject.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of subject.",type:"keyword"},"threat.indicator.file.x509.subject.state_or_province":{dashed_name:"threat-indicator-file-x509-subject-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"threat.indicator.file.x509.subject.state_or_province",ignore_above:1024,level:"extended",name:"subject.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"threat.indicator.file.x509.version_number":{dashed_name:"threat-indicator-file-x509-version-number",description:"Version of x509 format.",example:3,flat_name:"threat.indicator.file.x509.version_number",ignore_above:1024,level:"extended",name:"version_number",normalize:[],original_fieldset:"x509",short:"Version of x509 format.",type:"keyword"},"threat.indicator.first_seen":{dashed_name:"threat-indicator-first-seen",description:"The date and time when intelligence source first reported sighting this indicator.",example:"2020-11-05T17:25:47.000Z",flat_name:"threat.indicator.first_seen",level:"extended",name:"indicator.first_seen",normalize:[],short:"Date/time indicator was first reported.",type:"date"},"threat.indicator.geo.city_name":{dashed_name:"threat-indicator-geo-city-name",description:"City name.",example:"Montreal",flat_name:"threat.indicator.geo.city_name",ignore_above:1024,level:"core",name:"city_name",normalize:[],original_fieldset:"geo",short:"City name.",type:"keyword"},"threat.indicator.geo.continent_code":{dashed_name:"threat-indicator-geo-continent-code",description:"Two-letter code representing continent's name.",example:"NA",flat_name:"threat.indicator.geo.continent_code",ignore_above:1024,level:"core",name:"continent_code",normalize:[],original_fieldset:"geo",short:"Continent code.",type:"keyword"},"threat.indicator.geo.continent_name":{dashed_name:"threat-indicator-geo-continent-name",description:"Name of the continent.",example:"North America",flat_name:"threat.indicator.geo.continent_name",ignore_above:1024,level:"core",name:"continent_name",normalize:[],original_fieldset:"geo",short:"Name of the continent.",type:"keyword"},"threat.indicator.geo.country_iso_code":{dashed_name:"threat-indicator-geo-country-iso-code",description:"Country ISO code.",example:"CA",flat_name:"threat.indicator.geo.country_iso_code",ignore_above:1024,level:"core",name:"country_iso_code",normalize:[],original_fieldset:"geo",short:"Country ISO code.",type:"keyword"},"threat.indicator.geo.country_name":{dashed_name:"threat-indicator-geo-country-name",description:"Country name.",example:"Canada",flat_name:"threat.indicator.geo.country_name",ignore_above:1024,level:"core",name:"country_name",normalize:[],original_fieldset:"geo",short:"Country name.",type:"keyword"},"threat.indicator.geo.location":{dashed_name:"threat-indicator-geo-location",description:"Longitude and latitude.",example:'{ "lon": -73.614830, "lat": 45.505918 }',flat_name:"threat.indicator.geo.location",level:"core",name:"location",normalize:[],original_fieldset:"geo",short:"Longitude and latitude.",type:"geo_point"},"threat.indicator.geo.name":{dashed_name:"threat-indicator-geo-name",description:"User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation.",example:"boston-dc",flat_name:"threat.indicator.geo.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"geo",short:"User-defined description of a location.",type:"keyword"},"threat.indicator.geo.postal_code":{dashed_name:"threat-indicator-geo-postal-code",description:"Postal code associated with the location.\nValues appropriate for this field may also be known as a postcode or ZIP code and will vary widely from country to country.",example:94040,flat_name:"threat.indicator.geo.postal_code",ignore_above:1024,level:"core",name:"postal_code",normalize:[],original_fieldset:"geo",short:"Postal code.",type:"keyword"},"threat.indicator.geo.region_iso_code":{dashed_name:"threat-indicator-geo-region-iso-code",description:"Region ISO code.",example:"CA-QC",flat_name:"threat.indicator.geo.region_iso_code",ignore_above:1024,level:"core",name:"region_iso_code",normalize:[],original_fieldset:"geo",short:"Region ISO code.",type:"keyword"},"threat.indicator.geo.region_name":{dashed_name:"threat-indicator-geo-region-name",description:"Region name.",example:"Quebec",flat_name:"threat.indicator.geo.region_name",ignore_above:1024,level:"core",name:"region_name",normalize:[],original_fieldset:"geo",short:"Region name.",type:"keyword"},"threat.indicator.geo.timezone":{dashed_name:"threat-indicator-geo-timezone",description:"The time zone of the location, such as IANA time zone name.",example:"America/Argentina/Buenos_Aires",flat_name:"threat.indicator.geo.timezone",ignore_above:1024,level:"core",name:"timezone",normalize:[],original_fieldset:"geo",short:"Time zone.",type:"keyword"},"threat.indicator.ip":{dashed_name:"threat-indicator-ip",description:"Identifies a threat indicator as an IP address (irrespective of direction).",example:"1.2.3.4",flat_name:"threat.indicator.ip",level:"extended",name:"indicator.ip",normalize:[],short:"Indicator IP address",type:"ip"},"threat.indicator.last_seen":{dashed_name:"threat-indicator-last-seen",description:"The date and time when intelligence source last reported sighting this indicator.",example:"2020-11-05T17:25:47.000Z",flat_name:"threat.indicator.last_seen",level:"extended",name:"indicator.last_seen",normalize:[],short:"Date/time indicator was last reported.",type:"date"},"threat.indicator.marking.tlp":{dashed_name:"threat-indicator-marking-tlp",description:"Traffic Light Protocol sharing markings.",example:"CLEAR",expected_values:["WHITE","CLEAR","GREEN","AMBER","AMBER+STRICT","RED"],flat_name:"threat.indicator.marking.tlp",ignore_above:1024,level:"extended",name:"indicator.marking.tlp",normalize:[],short:"Indicator TLP marking",type:"keyword"},"threat.indicator.marking.tlp_version":{dashed_name:"threat-indicator-marking-tlp-version",description:"Traffic Light Protocol version.",example:2,flat_name:"threat.indicator.marking.tlp_version",ignore_above:1024,level:"extended",name:"indicator.marking.tlp_version",normalize:[],short:"Indicator TLP version",type:"keyword"},"threat.indicator.modified_at":{dashed_name:"threat-indicator-modified-at",description:"The date and time when intelligence source last modified information for this indicator.",example:"2020-11-05T17:25:47.000Z",flat_name:"threat.indicator.modified_at",level:"extended",name:"indicator.modified_at",normalize:[],short:"Date/time indicator was last updated.",type:"date"},"threat.indicator.name":{dashed_name:"threat-indicator-name",description:"The display name indicator in an UI friendly format\nURL, IP address, email address, registry key, port number, hash value, or other relevant name can serve as the display name.",example:"5.2.75.227",flat_name:"threat.indicator.name",ignore_above:1024,level:"extended",name:"indicator.name",normalize:[],short:"Indicator display name",type:"keyword"},"threat.indicator.port":{dashed_name:"threat-indicator-port",description:"Identifies a threat indicator as a port number (irrespective of direction).",example:443,flat_name:"threat.indicator.port",level:"extended",name:"indicator.port",normalize:[],short:"Indicator port",type:"long"},"threat.indicator.provider":{dashed_name:"threat-indicator-provider",description:"The name of the indicator's provider.",example:"lrz_urlhaus",flat_name:"threat.indicator.provider",ignore_above:1024,level:"extended",name:"indicator.provider",normalize:[],short:"Indicator provider",type:"keyword"},"threat.indicator.reference":{dashed_name:"threat-indicator-reference",description:"Reference URL linking to additional information about this indicator.",example:"https://system.example.com/indicator/0001234",flat_name:"threat.indicator.reference",ignore_above:1024,level:"extended",name:"indicator.reference",normalize:[],short:"Indicator reference URL",type:"keyword"},"threat.indicator.registry.data.bytes":{dashed_name:"threat-indicator-registry-data-bytes",description:"Original bytes written with base64 encoding.\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this corresponds to the data pointed by `lp_data`. This is optional but provides better recoverability and should be populated for REG_BINARY encoded values.",example:"ZQBuAC0AVQBTAAAAZQBuAAAAAAA=",flat_name:"threat.indicator.registry.data.bytes",ignore_above:1024,level:"extended",name:"data.bytes",normalize:[],original_fieldset:"registry",short:"Original bytes written with base64 encoding.",type:"keyword"},"threat.indicator.registry.data.strings":{dashed_name:"threat-indicator-registry-data-strings",description:'Content when writing string types.\nPopulated as an array when writing string data to the registry. For single string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with one string. For sequences of string with REG_MULTI_SZ, this array will be variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should be populated with the decimal representation (e.g `"1"`).',example:'["C:\\rta\\red_ttp\\bin\\myapp.exe"]',flat_name:"threat.indicator.registry.data.strings",level:"core",name:"data.strings",normalize:["array"],original_fieldset:"registry",short:"List of strings representing what was written to the registry.",type:"wildcard"},"threat.indicator.registry.data.type":{dashed_name:"threat-indicator-registry-data-type",description:"Standard registry type for encoding contents",example:"REG_SZ",flat_name:"threat.indicator.registry.data.type",ignore_above:1024,level:"core",name:"data.type",normalize:[],original_fieldset:"registry",short:"Standard registry type for encoding contents",type:"keyword"},"threat.indicator.registry.hive":{dashed_name:"threat-indicator-registry-hive",description:"Abbreviated name for the hive.",example:"HKLM",flat_name:"threat.indicator.registry.hive",ignore_above:1024,level:"core",name:"hive",normalize:[],original_fieldset:"registry",short:"Abbreviated name for the hive.",type:"keyword"},"threat.indicator.registry.key":{dashed_name:"threat-indicator-registry-key",description:"Hive-relative path of keys.",example:"SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\winword.exe",flat_name:"threat.indicator.registry.key",ignore_above:1024,level:"core",name:"key",normalize:[],original_fieldset:"registry",short:"Hive-relative path of keys.",type:"keyword"},"threat.indicator.registry.path":{dashed_name:"threat-indicator-registry-path",description:"Full path, including hive, key and value",example:"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\winword.exe\\Debugger",flat_name:"threat.indicator.registry.path",ignore_above:1024,level:"core",name:"path",normalize:[],original_fieldset:"registry",short:"Full path, including hive, key and value",type:"keyword"},"threat.indicator.registry.value":{dashed_name:"threat-indicator-registry-value",description:"Name of the value written.",example:"Debugger",flat_name:"threat.indicator.registry.value",ignore_above:1024,level:"core",name:"value",normalize:[],original_fieldset:"registry",short:"Name of the value written.",type:"keyword"},"threat.indicator.scanner_stats":{dashed_name:"threat-indicator-scanner-stats",description:"Count of AV/EDR vendors that successfully detected malicious file or URL.",example:4,flat_name:"threat.indicator.scanner_stats",level:"extended",name:"indicator.scanner_stats",normalize:[],short:"Scanner statistics",type:"long"},"threat.indicator.sightings":{dashed_name:"threat-indicator-sightings",description:"Number of times this indicator was observed conducting threat activity.",example:20,flat_name:"threat.indicator.sightings",level:"extended",name:"indicator.sightings",normalize:[],short:"Number of times indicator observed",type:"long"},"threat.indicator.type":{dashed_name:"threat-indicator-type",description:"Type of indicator as represented by Cyber Observable in STIX 2.0.",example:"ipv4-addr",expected_values:["autonomous-system","artifact","directory","domain-name","email-addr","file","ipv4-addr","ipv6-addr","mac-addr","mutex","port","process","software","url","user-account","windows-registry-key","x509-certificate"],flat_name:"threat.indicator.type",ignore_above:1024,level:"extended",name:"indicator.type",normalize:[],short:"Type of indicator",type:"keyword"},"threat.indicator.url.domain":{dashed_name:"threat-indicator-url-domain",description:'Domain of the url, such as "www.elastic.co".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.\nIf the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.',example:"www.elastic.co",flat_name:"threat.indicator.url.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"url",short:"Domain of the url.",type:"keyword"},"threat.indicator.url.extension":{dashed_name:"threat-indicator-url-extension",description:'The field contains the file extension from the original request url, excluding the leading dot.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be "png", not ".png".\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").',example:"png",flat_name:"threat.indicator.url.extension",ignore_above:1024,level:"extended",name:"extension",normalize:[],original_fieldset:"url",short:"File extension from the request url, excluding the leading dot.",type:"keyword"},"threat.indicator.url.fragment":{dashed_name:"threat-indicator-url-fragment",description:'Portion of the url after the `#`, such as "top".\nThe `#` is not part of the fragment.',flat_name:"threat.indicator.url.fragment",ignore_above:1024,level:"extended",name:"fragment",normalize:[],original_fieldset:"url",short:"Portion of the url after the `#`.",type:"keyword"},"threat.indicator.url.full":{dashed_name:"threat-indicator-url-full",description:"If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.",example:"https://www.elastic.co:443/search?q=elasticsearch#top",flat_name:"threat.indicator.url.full",level:"extended",multi_fields:[{flat_name:"threat.indicator.url.full.text",name:"text",type:"match_only_text"}],name:"full",normalize:[],original_fieldset:"url",short:"Full unparsed URL.",type:"wildcard"},"threat.indicator.url.original":{dashed_name:"threat-indicator-url-original",description:"Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not.",example:"https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch",flat_name:"threat.indicator.url.original",level:"extended",multi_fields:[{flat_name:"threat.indicator.url.original.text",name:"text",type:"match_only_text"}],name:"original",normalize:[],original_fieldset:"url",short:"Unmodified original url as seen in the event source.",type:"wildcard"},"threat.indicator.url.password":{dashed_name:"threat-indicator-url-password",description:"Password of the request.",flat_name:"threat.indicator.url.password",ignore_above:1024,level:"extended",name:"password",normalize:[],original_fieldset:"url",short:"Password of the request.",type:"keyword"},"threat.indicator.url.path":{dashed_name:"threat-indicator-url-path",description:'Path of the request, such as "/search".',flat_name:"threat.indicator.url.path",level:"extended",name:"path",normalize:[],original_fieldset:"url",short:'Path of the request, such as "/search".',type:"wildcard"},"threat.indicator.url.port":{dashed_name:"threat-indicator-url-port",description:"Port of the request, such as 443.",example:443,flat_name:"threat.indicator.url.port",format:"string",level:"extended",name:"port",normalize:[],original_fieldset:"url",short:"Port of the request, such as 443.",type:"long"},"threat.indicator.url.query":{dashed_name:"threat-indicator-url-query",description:'The query field describes the query string of the request, such as "q=elasticsearch".\nThe `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.',flat_name:"threat.indicator.url.query",ignore_above:1024,level:"extended",name:"query",normalize:[],original_fieldset:"url",short:"Query string of the request.",type:"keyword"},"threat.indicator.url.registered_domain":{dashed_name:"threat-indicator-url-registered-domain",description:'The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for "foo.example.com" is "example.com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".',example:"example.com",flat_name:"threat.indicator.url.registered_domain",ignore_above:1024,level:"extended",name:"registered_domain",normalize:[],original_fieldset:"url",short:"The highest registered url domain, stripped of the subdomain.",type:"keyword"},"threat.indicator.url.scheme":{dashed_name:"threat-indicator-url-scheme",description:'Scheme of the request, such as "https".\nNote: The `:` is not part of the scheme.',example:"https",flat_name:"threat.indicator.url.scheme",ignore_above:1024,level:"extended",name:"scheme",normalize:[],original_fieldset:"url",short:"Scheme of the url.",type:"keyword"},"threat.indicator.url.subdomain":{dashed_name:"threat-indicator-url-subdomain",description:'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.',example:"east",flat_name:"threat.indicator.url.subdomain",ignore_above:1024,level:"extended",name:"subdomain",normalize:[],original_fieldset:"url",short:"The subdomain of the domain.",type:"keyword"},"threat.indicator.url.top_level_domain":{dashed_name:"threat-indicator-url-top-level-domain",description:'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".',example:"co.uk",flat_name:"threat.indicator.url.top_level_domain",ignore_above:1024,level:"extended",name:"top_level_domain",normalize:[],original_fieldset:"url",short:"The effective top level domain (com, org, net, co.uk).",type:"keyword"},"threat.indicator.url.username":{dashed_name:"threat-indicator-url-username",description:"Username of the request.",flat_name:"threat.indicator.url.username",ignore_above:1024,level:"extended",name:"username",normalize:[],original_fieldset:"url",short:"Username of the request.",type:"keyword"},"threat.indicator.x509.alternative_names":{dashed_name:"threat-indicator-x509-alternative-names",description:"List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",example:"*.elastic.co",flat_name:"threat.indicator.x509.alternative_names",ignore_above:1024,level:"extended",name:"alternative_names",normalize:["array"],original_fieldset:"x509",short:"List of subject alternative names (SAN).",type:"keyword"},"threat.indicator.x509.issuer.common_name":{dashed_name:"threat-indicator-x509-issuer-common-name",description:"List of common name (CN) of issuing certificate authority.",example:"Example SHA2 High Assurance Server CA",flat_name:"threat.indicator.x509.issuer.common_name",ignore_above:1024,level:"extended",name:"issuer.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common name (CN) of issuing certificate authority.",type:"keyword"},"threat.indicator.x509.issuer.country":{dashed_name:"threat-indicator-x509-issuer-country",description:"List of country \\(C) codes",example:"US",flat_name:"threat.indicator.x509.issuer.country",ignore_above:1024,level:"extended",name:"issuer.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) codes",type:"keyword"},"threat.indicator.x509.issuer.distinguished_name":{dashed_name:"threat-indicator-x509-issuer-distinguished-name",description:"Distinguished name (DN) of issuing certificate authority.",example:"C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA",flat_name:"threat.indicator.x509.issuer.distinguished_name",ignore_above:1024,level:"extended",name:"issuer.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of issuing certificate authority.",type:"keyword"},"threat.indicator.x509.issuer.locality":{dashed_name:"threat-indicator-x509-issuer-locality",description:"List of locality names (L)",example:"Mountain View",flat_name:"threat.indicator.x509.issuer.locality",ignore_above:1024,level:"extended",name:"issuer.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"threat.indicator.x509.issuer.organization":{dashed_name:"threat-indicator-x509-issuer-organization",description:"List of organizations (O) of issuing certificate authority.",example:"Example Inc",flat_name:"threat.indicator.x509.issuer.organization",ignore_above:1024,level:"extended",name:"issuer.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of issuing certificate authority.",type:"keyword"},"threat.indicator.x509.issuer.organizational_unit":{dashed_name:"threat-indicator-x509-issuer-organizational-unit",description:"List of organizational units (OU) of issuing certificate authority.",example:"www.example.com",flat_name:"threat.indicator.x509.issuer.organizational_unit",ignore_above:1024,level:"extended",name:"issuer.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of issuing certificate authority.",type:"keyword"},"threat.indicator.x509.issuer.state_or_province":{dashed_name:"threat-indicator-x509-issuer-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"threat.indicator.x509.issuer.state_or_province",ignore_above:1024,level:"extended",name:"issuer.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"threat.indicator.x509.not_after":{dashed_name:"threat-indicator-x509-not-after",description:"Time at which the certificate is no longer considered valid.",example:"2020-07-16T03:15:39Z",flat_name:"threat.indicator.x509.not_after",level:"extended",name:"not_after",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is no longer considered valid.",type:"date"},"threat.indicator.x509.not_before":{dashed_name:"threat-indicator-x509-not-before",description:"Time at which the certificate is first considered valid.",example:"2019-08-16T01:40:25Z",flat_name:"threat.indicator.x509.not_before",level:"extended",name:"not_before",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is first considered valid.",type:"date"},"threat.indicator.x509.public_key_algorithm":{dashed_name:"threat-indicator-x509-public-key-algorithm",description:"Algorithm used to generate the public key.",example:"RSA",flat_name:"threat.indicator.x509.public_key_algorithm",ignore_above:1024,level:"extended",name:"public_key_algorithm",normalize:[],original_fieldset:"x509",short:"Algorithm used to generate the public key.",type:"keyword"},"threat.indicator.x509.public_key_curve":{dashed_name:"threat-indicator-x509-public-key-curve",description:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",example:"nistp521",flat_name:"threat.indicator.x509.public_key_curve",ignore_above:1024,level:"extended",name:"public_key_curve",normalize:[],original_fieldset:"x509",short:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",type:"keyword"},"threat.indicator.x509.public_key_exponent":{dashed_name:"threat-indicator-x509-public-key-exponent",description:"Exponent used to derive the public key. This is algorithm specific.",doc_values:!1,example:65537,flat_name:"threat.indicator.x509.public_key_exponent",index:!1,level:"extended",name:"public_key_exponent",normalize:[],original_fieldset:"x509",short:"Exponent used to derive the public key. This is algorithm specific.",type:"long"},"threat.indicator.x509.public_key_size":{dashed_name:"threat-indicator-x509-public-key-size",description:"The size of the public key space in bits.",example:2048,flat_name:"threat.indicator.x509.public_key_size",level:"extended",name:"public_key_size",normalize:[],original_fieldset:"x509",short:"The size of the public key space in bits.",type:"long"},"threat.indicator.x509.serial_number":{dashed_name:"threat-indicator-x509-serial-number",description:"Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",example:"55FBB9C7DEBF09809D12CCAA",flat_name:"threat.indicator.x509.serial_number",ignore_above:1024,level:"extended",name:"serial_number",normalize:[],original_fieldset:"x509",short:"Unique serial number issued by the certificate authority.",type:"keyword"},"threat.indicator.x509.signature_algorithm":{dashed_name:"threat-indicator-x509-signature-algorithm",description:"Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",example:"SHA256-RSA",flat_name:"threat.indicator.x509.signature_algorithm",ignore_above:1024,level:"extended",name:"signature_algorithm",normalize:[],original_fieldset:"x509",short:"Identifier for certificate signature algorithm.",type:"keyword"},"threat.indicator.x509.subject.common_name":{dashed_name:"threat-indicator-x509-subject-common-name",description:"List of common names (CN) of subject.",example:"shared.global.example.net",flat_name:"threat.indicator.x509.subject.common_name",ignore_above:1024,level:"extended",name:"subject.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common names (CN) of subject.",type:"keyword"},"threat.indicator.x509.subject.country":{dashed_name:"threat-indicator-x509-subject-country",description:"List of country \\(C) code",example:"US",flat_name:"threat.indicator.x509.subject.country",ignore_above:1024,level:"extended",name:"subject.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) code",type:"keyword"},"threat.indicator.x509.subject.distinguished_name":{dashed_name:"threat-indicator-x509-subject-distinguished-name",description:"Distinguished name (DN) of the certificate subject entity.",example:"C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net",flat_name:"threat.indicator.x509.subject.distinguished_name",ignore_above:1024,level:"extended",name:"subject.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of the certificate subject entity.",type:"keyword"},"threat.indicator.x509.subject.locality":{dashed_name:"threat-indicator-x509-subject-locality",description:"List of locality names (L)",example:"San Francisco",flat_name:"threat.indicator.x509.subject.locality",ignore_above:1024,level:"extended",name:"subject.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"threat.indicator.x509.subject.organization":{dashed_name:"threat-indicator-x509-subject-organization",description:"List of organizations (O) of subject.",example:"Example, Inc.",flat_name:"threat.indicator.x509.subject.organization",ignore_above:1024,level:"extended",name:"subject.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of subject.",type:"keyword"},"threat.indicator.x509.subject.organizational_unit":{dashed_name:"threat-indicator-x509-subject-organizational-unit",description:"List of organizational units (OU) of subject.",flat_name:"threat.indicator.x509.subject.organizational_unit",ignore_above:1024,level:"extended",name:"subject.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of subject.",type:"keyword"},"threat.indicator.x509.subject.state_or_province":{dashed_name:"threat-indicator-x509-subject-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"threat.indicator.x509.subject.state_or_province",ignore_above:1024,level:"extended",name:"subject.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"threat.indicator.x509.version_number":{dashed_name:"threat-indicator-x509-version-number",description:"Version of x509 format.",example:3,flat_name:"threat.indicator.x509.version_number",ignore_above:1024,level:"extended",name:"version_number",normalize:[],original_fieldset:"x509",short:"Version of x509 format.",type:"keyword"},"threat.software.alias":{dashed_name:"threat-software-alias",description:"The alias(es) of the software for a set of related intrusion activity that are tracked by a common name in the security community.\nWhile not required, you can use a MITRE ATT&CK® associated software description.",example:'[ "X-Agent" ]',flat_name:"threat.software.alias",ignore_above:1024,level:"extended",name:"software.alias",normalize:["array"],short:"Alias of the software",type:"keyword"},"threat.software.id":{dashed_name:"threat-software-id",description:"The id of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use a MITRE ATT&CK® software id.",example:"S0552",flat_name:"threat.software.id",ignore_above:1024,level:"extended",name:"software.id",normalize:[],short:"ID of the software",type:"keyword"},"threat.software.name":{dashed_name:"threat-software-name",description:"The name of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use a MITRE ATT&CK® software name.",example:"AdFind",flat_name:"threat.software.name",ignore_above:1024,level:"extended",name:"software.name",normalize:[],short:"Name of the software.",type:"keyword"},"threat.software.platforms":{dashed_name:"threat-software-platforms",description:"The platforms of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use MITRE ATT&CK® software platform values.",example:'[ "Windows" ]',expected_values:["AWS","Azure","Azure AD","GCP","Linux","macOS","Network","Office 365","SaaS","Windows"],flat_name:"threat.software.platforms",ignore_above:1024,level:"extended",name:"software.platforms",normalize:["array"],short:"Platforms of the software.",type:"keyword"},"threat.software.reference":{dashed_name:"threat-software-reference",description:"The reference URL of the software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use a MITRE ATT&CK® software reference URL.",example:"https://attack.mitre.org/software/S0552/",flat_name:"threat.software.reference",ignore_above:1024,level:"extended",name:"software.reference",normalize:[],short:"Software reference URL.",type:"keyword"},"threat.software.type":{dashed_name:"threat-software-type",description:"The type of software used by this threat to conduct behavior commonly modeled using MITRE ATT&CK®.\nWhile not required, you can use a MITRE ATT&CK® software type.",example:"Tool",expected_values:["Malware","Tool"],flat_name:"threat.software.type",ignore_above:1024,level:"extended",name:"software.type",normalize:[],short:"Software type.",type:"keyword"},"threat.tactic.id":{dashed_name:"threat-tactic-id",description:"The id of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )",example:"TA0002",flat_name:"threat.tactic.id",ignore_above:1024,level:"extended",name:"tactic.id",normalize:["array"],short:"Threat tactic id.",type:"keyword"},"threat.tactic.name":{dashed_name:"threat-tactic-name",description:"Name of the type of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/)",example:"Execution",flat_name:"threat.tactic.name",ignore_above:1024,level:"extended",name:"tactic.name",normalize:["array"],short:"Threat tactic.",type:"keyword"},"threat.tactic.reference":{dashed_name:"threat-tactic-reference",description:"The reference url of tactic used by this threat. You can use a MITRE ATT&CK® tactic, for example. (ex. https://attack.mitre.org/tactics/TA0002/ )",example:"https://attack.mitre.org/tactics/TA0002/",flat_name:"threat.tactic.reference",ignore_above:1024,level:"extended",name:"tactic.reference",normalize:["array"],short:"Threat tactic URL reference.",type:"keyword"},"threat.technique.id":{dashed_name:"threat-technique-id",description:"The id of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)",example:"T1059",flat_name:"threat.technique.id",ignore_above:1024,level:"extended",name:"technique.id",normalize:["array"],short:"Threat technique id.",type:"keyword"},"threat.technique.name":{dashed_name:"threat-technique-name",description:"The name of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)",example:"Command and Scripting Interpreter",flat_name:"threat.technique.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"threat.technique.name.text",name:"text",type:"match_only_text"}],name:"technique.name",normalize:["array"],short:"Threat technique name.",type:"keyword"},"threat.technique.reference":{dashed_name:"threat-technique-reference",description:"The reference url of technique used by this threat. You can use a MITRE ATT&CK® technique, for example. (ex. https://attack.mitre.org/techniques/T1059/)",example:"https://attack.mitre.org/techniques/T1059/",flat_name:"threat.technique.reference",ignore_above:1024,level:"extended",name:"technique.reference",normalize:["array"],short:"Threat technique URL reference.",type:"keyword"},"threat.technique.subtechnique.id":{dashed_name:"threat-technique-subtechnique-id",description:"The full id of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)",example:"T1059.001",flat_name:"threat.technique.subtechnique.id",ignore_above:1024,level:"extended",name:"technique.subtechnique.id",normalize:["array"],short:"Threat subtechnique id.",type:"keyword"},"threat.technique.subtechnique.name":{dashed_name:"threat-technique-subtechnique-name",description:"The name of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)",example:"PowerShell",flat_name:"threat.technique.subtechnique.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"threat.technique.subtechnique.name.text",name:"text",type:"match_only_text"}],name:"technique.subtechnique.name",normalize:["array"],short:"Threat subtechnique name.",type:"keyword"},"threat.technique.subtechnique.reference":{dashed_name:"threat-technique-subtechnique-reference",description:"The reference url of subtechnique used by this threat. You can use a MITRE ATT&CK® subtechnique, for example. (ex. https://attack.mitre.org/techniques/T1059/001/)",example:"https://attack.mitre.org/techniques/T1059/001/",flat_name:"threat.technique.subtechnique.reference",ignore_above:1024,level:"extended",name:"technique.subtechnique.reference",normalize:["array"],short:"Threat subtechnique URL reference.",type:"keyword"},"tls.cipher":{dashed_name:"tls-cipher",description:"String indicating the cipher used during the current connection.",example:"TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256",flat_name:"tls.cipher",ignore_above:1024,level:"extended",name:"cipher",normalize:[],short:"String indicating the cipher used during the current connection.",type:"keyword"},"tls.client.certificate":{dashed_name:"tls-client-certificate",description:"PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.",example:"MII...",flat_name:"tls.client.certificate",ignore_above:1024,level:"extended",name:"client.certificate",normalize:[],short:"PEM-encoded stand-alone certificate offered by the client.",type:"keyword"},"tls.client.certificate_chain":{dashed_name:"tls-client-certificate-chain",description:"Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.",example:'["MII...", "MII..."]',flat_name:"tls.client.certificate_chain",ignore_above:1024,level:"extended",name:"client.certificate_chain",normalize:["array"],short:"Array of PEM-encoded certificates that make up the certificate chain offered by the client.",type:"keyword"},"tls.client.hash.md5":{dashed_name:"tls-client-hash-md5",description:"Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.",example:"0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC",flat_name:"tls.client.hash.md5",ignore_above:1024,level:"extended",name:"client.hash.md5",normalize:[],short:"Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client.",type:"keyword"},"tls.client.hash.sha1":{dashed_name:"tls-client-hash-sha1",description:"Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.",example:"9E393D93138888D288266C2D915214D1D1CCEB2A",flat_name:"tls.client.hash.sha1",ignore_above:1024,level:"extended",name:"client.hash.sha1",normalize:[],short:"Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client.",type:"keyword"},"tls.client.hash.sha256":{dashed_name:"tls-client-hash-sha256",description:"Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.",example:"0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0",flat_name:"tls.client.hash.sha256",ignore_above:1024,level:"extended",name:"client.hash.sha256",normalize:[],short:"Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client.",type:"keyword"},"tls.client.issuer":{dashed_name:"tls-client-issuer",description:"Distinguished name of subject of the issuer of the x.509 certificate presented by the client.",example:"CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com",flat_name:"tls.client.issuer",ignore_above:1024,level:"extended",name:"client.issuer",normalize:[],short:"Distinguished name of subject of the issuer of the x.509 certificate presented by the client.",type:"keyword"},"tls.client.ja3":{dashed_name:"tls-client-ja3",description:"A hash that identifies clients based on how they perform an SSL/TLS handshake.",example:"d4e5b18d6b55c71272893221c96ba240",flat_name:"tls.client.ja3",ignore_above:1024,level:"extended",name:"client.ja3",normalize:[],short:"A hash that identifies clients based on how they perform an SSL/TLS handshake.",type:"keyword"},"tls.client.not_after":{dashed_name:"tls-client-not-after",description:"Date/Time indicating when client certificate is no longer considered valid.",example:"2021-01-01T00:00:00.000Z",flat_name:"tls.client.not_after",level:"extended",name:"client.not_after",normalize:[],short:"Date/Time indicating when client certificate is no longer considered valid.",type:"date"},"tls.client.not_before":{dashed_name:"tls-client-not-before",description:"Date/Time indicating when client certificate is first considered valid.",example:"1970-01-01T00:00:00.000Z",flat_name:"tls.client.not_before",level:"extended",name:"client.not_before",normalize:[],short:"Date/Time indicating when client certificate is first considered valid.",type:"date"},"tls.client.server_name":{dashed_name:"tls-client-server-name",description:"Also called an SNI, this tells the server which hostname to which the client is attempting to connect to. When this value is available, it should get copied to `destination.domain`.",example:"www.elastic.co",flat_name:"tls.client.server_name",ignore_above:1024,level:"extended",name:"client.server_name",normalize:[],short:"Hostname the client is trying to connect to. Also called the SNI.",type:"keyword"},"tls.client.subject":{dashed_name:"tls-client-subject",description:"Distinguished name of subject of the x.509 certificate presented by the client.",example:"CN=myclient, OU=Documentation Team, DC=example, DC=com",flat_name:"tls.client.subject",ignore_above:1024,level:"extended",name:"client.subject",normalize:[],short:"Distinguished name of subject of the x.509 certificate presented by the client.",type:"keyword"},"tls.client.supported_ciphers":{dashed_name:"tls-client-supported-ciphers",description:"Array of ciphers offered by the client during the client hello.",example:'["TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384", "..."]',flat_name:"tls.client.supported_ciphers",ignore_above:1024,level:"extended",name:"client.supported_ciphers",normalize:["array"],short:"Array of ciphers offered by the client during the client hello.",type:"keyword"},"tls.client.x509.alternative_names":{dashed_name:"tls-client-x509-alternative-names",description:"List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",example:"*.elastic.co",flat_name:"tls.client.x509.alternative_names",ignore_above:1024,level:"extended",name:"alternative_names",normalize:["array"],original_fieldset:"x509",short:"List of subject alternative names (SAN).",type:"keyword"},"tls.client.x509.issuer.common_name":{dashed_name:"tls-client-x509-issuer-common-name",description:"List of common name (CN) of issuing certificate authority.",example:"Example SHA2 High Assurance Server CA",flat_name:"tls.client.x509.issuer.common_name",ignore_above:1024,level:"extended",name:"issuer.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common name (CN) of issuing certificate authority.",type:"keyword"},"tls.client.x509.issuer.country":{dashed_name:"tls-client-x509-issuer-country",description:"List of country \\(C) codes",example:"US",flat_name:"tls.client.x509.issuer.country",ignore_above:1024,level:"extended",name:"issuer.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) codes",type:"keyword"},"tls.client.x509.issuer.distinguished_name":{dashed_name:"tls-client-x509-issuer-distinguished-name",description:"Distinguished name (DN) of issuing certificate authority.",example:"C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA",flat_name:"tls.client.x509.issuer.distinguished_name",ignore_above:1024,level:"extended",name:"issuer.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of issuing certificate authority.",type:"keyword"},"tls.client.x509.issuer.locality":{dashed_name:"tls-client-x509-issuer-locality",description:"List of locality names (L)",example:"Mountain View",flat_name:"tls.client.x509.issuer.locality",ignore_above:1024,level:"extended",name:"issuer.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"tls.client.x509.issuer.organization":{dashed_name:"tls-client-x509-issuer-organization",description:"List of organizations (O) of issuing certificate authority.",example:"Example Inc",flat_name:"tls.client.x509.issuer.organization",ignore_above:1024,level:"extended",name:"issuer.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of issuing certificate authority.",type:"keyword"},"tls.client.x509.issuer.organizational_unit":{dashed_name:"tls-client-x509-issuer-organizational-unit",description:"List of organizational units (OU) of issuing certificate authority.",example:"www.example.com",flat_name:"tls.client.x509.issuer.organizational_unit",ignore_above:1024,level:"extended",name:"issuer.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of issuing certificate authority.",type:"keyword"},"tls.client.x509.issuer.state_or_province":{dashed_name:"tls-client-x509-issuer-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"tls.client.x509.issuer.state_or_province",ignore_above:1024,level:"extended",name:"issuer.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"tls.client.x509.not_after":{dashed_name:"tls-client-x509-not-after",description:"Time at which the certificate is no longer considered valid.",example:"2020-07-16T03:15:39Z",flat_name:"tls.client.x509.not_after",level:"extended",name:"not_after",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is no longer considered valid.",type:"date"},"tls.client.x509.not_before":{dashed_name:"tls-client-x509-not-before",description:"Time at which the certificate is first considered valid.",example:"2019-08-16T01:40:25Z",flat_name:"tls.client.x509.not_before",level:"extended",name:"not_before",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is first considered valid.",type:"date"},"tls.client.x509.public_key_algorithm":{dashed_name:"tls-client-x509-public-key-algorithm",description:"Algorithm used to generate the public key.",example:"RSA",flat_name:"tls.client.x509.public_key_algorithm",ignore_above:1024,level:"extended",name:"public_key_algorithm",normalize:[],original_fieldset:"x509",short:"Algorithm used to generate the public key.",type:"keyword"},"tls.client.x509.public_key_curve":{dashed_name:"tls-client-x509-public-key-curve",description:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",example:"nistp521",flat_name:"tls.client.x509.public_key_curve",ignore_above:1024,level:"extended",name:"public_key_curve",normalize:[],original_fieldset:"x509",short:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",type:"keyword"},"tls.client.x509.public_key_exponent":{dashed_name:"tls-client-x509-public-key-exponent",description:"Exponent used to derive the public key. This is algorithm specific.",doc_values:!1,example:65537,flat_name:"tls.client.x509.public_key_exponent",index:!1,level:"extended",name:"public_key_exponent",normalize:[],original_fieldset:"x509",short:"Exponent used to derive the public key. This is algorithm specific.",type:"long"},"tls.client.x509.public_key_size":{dashed_name:"tls-client-x509-public-key-size",description:"The size of the public key space in bits.",example:2048,flat_name:"tls.client.x509.public_key_size",level:"extended",name:"public_key_size",normalize:[],original_fieldset:"x509",short:"The size of the public key space in bits.",type:"long"},"tls.client.x509.serial_number":{dashed_name:"tls-client-x509-serial-number",description:"Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",example:"55FBB9C7DEBF09809D12CCAA",flat_name:"tls.client.x509.serial_number",ignore_above:1024,level:"extended",name:"serial_number",normalize:[],original_fieldset:"x509",short:"Unique serial number issued by the certificate authority.",type:"keyword"},"tls.client.x509.signature_algorithm":{dashed_name:"tls-client-x509-signature-algorithm",description:"Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",example:"SHA256-RSA",flat_name:"tls.client.x509.signature_algorithm",ignore_above:1024,level:"extended",name:"signature_algorithm",normalize:[],original_fieldset:"x509",short:"Identifier for certificate signature algorithm.",type:"keyword"},"tls.client.x509.subject.common_name":{dashed_name:"tls-client-x509-subject-common-name",description:"List of common names (CN) of subject.",example:"shared.global.example.net",flat_name:"tls.client.x509.subject.common_name",ignore_above:1024,level:"extended",name:"subject.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common names (CN) of subject.",type:"keyword"},"tls.client.x509.subject.country":{dashed_name:"tls-client-x509-subject-country",description:"List of country \\(C) code",example:"US",flat_name:"tls.client.x509.subject.country",ignore_above:1024,level:"extended",name:"subject.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) code",type:"keyword"},"tls.client.x509.subject.distinguished_name":{dashed_name:"tls-client-x509-subject-distinguished-name",description:"Distinguished name (DN) of the certificate subject entity.",example:"C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net",flat_name:"tls.client.x509.subject.distinguished_name",ignore_above:1024,level:"extended",name:"subject.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of the certificate subject entity.",type:"keyword"},"tls.client.x509.subject.locality":{dashed_name:"tls-client-x509-subject-locality",description:"List of locality names (L)",example:"San Francisco",flat_name:"tls.client.x509.subject.locality",ignore_above:1024,level:"extended",name:"subject.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"tls.client.x509.subject.organization":{dashed_name:"tls-client-x509-subject-organization",description:"List of organizations (O) of subject.",example:"Example, Inc.",flat_name:"tls.client.x509.subject.organization",ignore_above:1024,level:"extended",name:"subject.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of subject.",type:"keyword"},"tls.client.x509.subject.organizational_unit":{dashed_name:"tls-client-x509-subject-organizational-unit",description:"List of organizational units (OU) of subject.",flat_name:"tls.client.x509.subject.organizational_unit",ignore_above:1024,level:"extended",name:"subject.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of subject.",type:"keyword"},"tls.client.x509.subject.state_or_province":{dashed_name:"tls-client-x509-subject-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"tls.client.x509.subject.state_or_province",ignore_above:1024,level:"extended",name:"subject.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"tls.client.x509.version_number":{dashed_name:"tls-client-x509-version-number",description:"Version of x509 format.",example:3,flat_name:"tls.client.x509.version_number",ignore_above:1024,level:"extended",name:"version_number",normalize:[],original_fieldset:"x509",short:"Version of x509 format.",type:"keyword"},"tls.curve":{dashed_name:"tls-curve",description:"String indicating the curve used for the given cipher, when applicable.",example:"secp256r1",flat_name:"tls.curve",ignore_above:1024,level:"extended",name:"curve",normalize:[],short:"String indicating the curve used for the given cipher, when applicable.",type:"keyword"},"tls.established":{dashed_name:"tls-established",description:"Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.",flat_name:"tls.established",level:"extended",name:"established",normalize:[],short:"Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.",type:"boolean"},"tls.next_protocol":{dashed_name:"tls-next-protocol",description:"String indicating the protocol being tunneled. Per the values in the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.",example:"http/1.1",flat_name:"tls.next_protocol",ignore_above:1024,level:"extended",name:"next_protocol",normalize:[],short:"String indicating the protocol being tunneled.",type:"keyword"},"tls.resumed":{dashed_name:"tls-resumed",description:"Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.",flat_name:"tls.resumed",level:"extended",name:"resumed",normalize:[],short:"Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.",type:"boolean"},"tls.server.certificate":{dashed_name:"tls-server-certificate",description:"PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.",example:"MII...",flat_name:"tls.server.certificate",ignore_above:1024,level:"extended",name:"server.certificate",normalize:[],short:"PEM-encoded stand-alone certificate offered by the server.",type:"keyword"},"tls.server.certificate_chain":{dashed_name:"tls-server-certificate-chain",description:"Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.",example:'["MII...", "MII..."]',flat_name:"tls.server.certificate_chain",ignore_above:1024,level:"extended",name:"server.certificate_chain",normalize:["array"],short:"Array of PEM-encoded certificates that make up the certificate chain offered by the server.",type:"keyword"},"tls.server.hash.md5":{dashed_name:"tls-server-hash-md5",description:"Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.",example:"0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC",flat_name:"tls.server.hash.md5",ignore_above:1024,level:"extended",name:"server.hash.md5",normalize:[],short:"Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server.",type:"keyword"},"tls.server.hash.sha1":{dashed_name:"tls-server-hash-sha1",description:"Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.",example:"9E393D93138888D288266C2D915214D1D1CCEB2A",flat_name:"tls.server.hash.sha1",ignore_above:1024,level:"extended",name:"server.hash.sha1",normalize:[],short:"Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server.",type:"keyword"},"tls.server.hash.sha256":{dashed_name:"tls-server-hash-sha256",description:"Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.",example:"0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0",flat_name:"tls.server.hash.sha256",ignore_above:1024,level:"extended",name:"server.hash.sha256",normalize:[],short:"Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server.",type:"keyword"},"tls.server.issuer":{dashed_name:"tls-server-issuer",description:"Subject of the issuer of the x.509 certificate presented by the server.",example:"CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com",flat_name:"tls.server.issuer",ignore_above:1024,level:"extended",name:"server.issuer",normalize:[],short:"Subject of the issuer of the x.509 certificate presented by the server.",type:"keyword"},"tls.server.ja3s":{dashed_name:"tls-server-ja3s",description:"A hash that identifies servers based on how they perform an SSL/TLS handshake.",example:"394441ab65754e2207b1e1b457b3641d",flat_name:"tls.server.ja3s",ignore_above:1024,level:"extended",name:"server.ja3s",normalize:[],short:"A hash that identifies servers based on how they perform an SSL/TLS handshake.",type:"keyword"},"tls.server.not_after":{dashed_name:"tls-server-not-after",description:"Timestamp indicating when server certificate is no longer considered valid.",example:"2021-01-01T00:00:00.000Z",flat_name:"tls.server.not_after",level:"extended",name:"server.not_after",normalize:[],short:"Timestamp indicating when server certificate is no longer considered valid.",type:"date"},"tls.server.not_before":{dashed_name:"tls-server-not-before",description:"Timestamp indicating when server certificate is first considered valid.",example:"1970-01-01T00:00:00.000Z",flat_name:"tls.server.not_before",level:"extended",name:"server.not_before",normalize:[],short:"Timestamp indicating when server certificate is first considered valid.",type:"date"},"tls.server.subject":{dashed_name:"tls-server-subject",description:"Subject of the x.509 certificate presented by the server.",example:"CN=www.example.com, OU=Infrastructure Team, DC=example, DC=com",flat_name:"tls.server.subject",ignore_above:1024,level:"extended",name:"server.subject",normalize:[],short:"Subject of the x.509 certificate presented by the server.",type:"keyword"},"tls.server.x509.alternative_names":{dashed_name:"tls-server-x509-alternative-names",description:"List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.",example:"*.elastic.co",flat_name:"tls.server.x509.alternative_names",ignore_above:1024,level:"extended",name:"alternative_names",normalize:["array"],original_fieldset:"x509",short:"List of subject alternative names (SAN).",type:"keyword"},"tls.server.x509.issuer.common_name":{dashed_name:"tls-server-x509-issuer-common-name",description:"List of common name (CN) of issuing certificate authority.",example:"Example SHA2 High Assurance Server CA",flat_name:"tls.server.x509.issuer.common_name",ignore_above:1024,level:"extended",name:"issuer.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common name (CN) of issuing certificate authority.",type:"keyword"},"tls.server.x509.issuer.country":{dashed_name:"tls-server-x509-issuer-country",description:"List of country \\(C) codes",example:"US",flat_name:"tls.server.x509.issuer.country",ignore_above:1024,level:"extended",name:"issuer.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) codes",type:"keyword"},"tls.server.x509.issuer.distinguished_name":{dashed_name:"tls-server-x509-issuer-distinguished-name",description:"Distinguished name (DN) of issuing certificate authority.",example:"C=US, O=Example Inc, OU=www.example.com, CN=Example SHA2 High Assurance Server CA",flat_name:"tls.server.x509.issuer.distinguished_name",ignore_above:1024,level:"extended",name:"issuer.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of issuing certificate authority.",type:"keyword"},"tls.server.x509.issuer.locality":{dashed_name:"tls-server-x509-issuer-locality",description:"List of locality names (L)",example:"Mountain View",flat_name:"tls.server.x509.issuer.locality",ignore_above:1024,level:"extended",name:"issuer.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"tls.server.x509.issuer.organization":{dashed_name:"tls-server-x509-issuer-organization",description:"List of organizations (O) of issuing certificate authority.",example:"Example Inc",flat_name:"tls.server.x509.issuer.organization",ignore_above:1024,level:"extended",name:"issuer.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of issuing certificate authority.",type:"keyword"},"tls.server.x509.issuer.organizational_unit":{dashed_name:"tls-server-x509-issuer-organizational-unit",description:"List of organizational units (OU) of issuing certificate authority.",example:"www.example.com",flat_name:"tls.server.x509.issuer.organizational_unit",ignore_above:1024,level:"extended",name:"issuer.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of issuing certificate authority.",type:"keyword"},"tls.server.x509.issuer.state_or_province":{dashed_name:"tls-server-x509-issuer-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"tls.server.x509.issuer.state_or_province",ignore_above:1024,level:"extended",name:"issuer.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"tls.server.x509.not_after":{dashed_name:"tls-server-x509-not-after",description:"Time at which the certificate is no longer considered valid.",example:"2020-07-16T03:15:39Z",flat_name:"tls.server.x509.not_after",level:"extended",name:"not_after",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is no longer considered valid.",type:"date"},"tls.server.x509.not_before":{dashed_name:"tls-server-x509-not-before",description:"Time at which the certificate is first considered valid.",example:"2019-08-16T01:40:25Z",flat_name:"tls.server.x509.not_before",level:"extended",name:"not_before",normalize:[],original_fieldset:"x509",short:"Time at which the certificate is first considered valid.",type:"date"},"tls.server.x509.public_key_algorithm":{dashed_name:"tls-server-x509-public-key-algorithm",description:"Algorithm used to generate the public key.",example:"RSA",flat_name:"tls.server.x509.public_key_algorithm",ignore_above:1024,level:"extended",name:"public_key_algorithm",normalize:[],original_fieldset:"x509",short:"Algorithm used to generate the public key.",type:"keyword"},"tls.server.x509.public_key_curve":{dashed_name:"tls-server-x509-public-key-curve",description:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",example:"nistp521",flat_name:"tls.server.x509.public_key_curve",ignore_above:1024,level:"extended",name:"public_key_curve",normalize:[],original_fieldset:"x509",short:"The curve used by the elliptic curve public key algorithm. This is algorithm specific.",type:"keyword"},"tls.server.x509.public_key_exponent":{dashed_name:"tls-server-x509-public-key-exponent",description:"Exponent used to derive the public key. This is algorithm specific.",doc_values:!1,example:65537,flat_name:"tls.server.x509.public_key_exponent",index:!1,level:"extended",name:"public_key_exponent",normalize:[],original_fieldset:"x509",short:"Exponent used to derive the public key. This is algorithm specific.",type:"long"},"tls.server.x509.public_key_size":{dashed_name:"tls-server-x509-public-key-size",description:"The size of the public key space in bits.",example:2048,flat_name:"tls.server.x509.public_key_size",level:"extended",name:"public_key_size",normalize:[],original_fieldset:"x509",short:"The size of the public key space in bits.",type:"long"},"tls.server.x509.serial_number":{dashed_name:"tls-server-x509-serial-number",description:"Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.",example:"55FBB9C7DEBF09809D12CCAA",flat_name:"tls.server.x509.serial_number",ignore_above:1024,level:"extended",name:"serial_number",normalize:[],original_fieldset:"x509",short:"Unique serial number issued by the certificate authority.",type:"keyword"},"tls.server.x509.signature_algorithm":{dashed_name:"tls-server-x509-signature-algorithm",description:"Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.",example:"SHA256-RSA",flat_name:"tls.server.x509.signature_algorithm",ignore_above:1024,level:"extended",name:"signature_algorithm",normalize:[],original_fieldset:"x509",short:"Identifier for certificate signature algorithm.",type:"keyword"},"tls.server.x509.subject.common_name":{dashed_name:"tls-server-x509-subject-common-name",description:"List of common names (CN) of subject.",example:"shared.global.example.net",flat_name:"tls.server.x509.subject.common_name",ignore_above:1024,level:"extended",name:"subject.common_name",normalize:["array"],original_fieldset:"x509",short:"List of common names (CN) of subject.",type:"keyword"},"tls.server.x509.subject.country":{dashed_name:"tls-server-x509-subject-country",description:"List of country \\(C) code",example:"US",flat_name:"tls.server.x509.subject.country",ignore_above:1024,level:"extended",name:"subject.country",normalize:["array"],original_fieldset:"x509",short:"List of country \\(C) code",type:"keyword"},"tls.server.x509.subject.distinguished_name":{dashed_name:"tls-server-x509-subject-distinguished-name",description:"Distinguished name (DN) of the certificate subject entity.",example:"C=US, ST=California, L=San Francisco, O=Example, Inc., CN=shared.global.example.net",flat_name:"tls.server.x509.subject.distinguished_name",ignore_above:1024,level:"extended",name:"subject.distinguished_name",normalize:[],original_fieldset:"x509",short:"Distinguished name (DN) of the certificate subject entity.",type:"keyword"},"tls.server.x509.subject.locality":{dashed_name:"tls-server-x509-subject-locality",description:"List of locality names (L)",example:"San Francisco",flat_name:"tls.server.x509.subject.locality",ignore_above:1024,level:"extended",name:"subject.locality",normalize:["array"],original_fieldset:"x509",short:"List of locality names (L)",type:"keyword"},"tls.server.x509.subject.organization":{dashed_name:"tls-server-x509-subject-organization",description:"List of organizations (O) of subject.",example:"Example, Inc.",flat_name:"tls.server.x509.subject.organization",ignore_above:1024,level:"extended",name:"subject.organization",normalize:["array"],original_fieldset:"x509",short:"List of organizations (O) of subject.",type:"keyword"},"tls.server.x509.subject.organizational_unit":{dashed_name:"tls-server-x509-subject-organizational-unit",description:"List of organizational units (OU) of subject.",flat_name:"tls.server.x509.subject.organizational_unit",ignore_above:1024,level:"extended",name:"subject.organizational_unit",normalize:["array"],original_fieldset:"x509",short:"List of organizational units (OU) of subject.",type:"keyword"},"tls.server.x509.subject.state_or_province":{dashed_name:"tls-server-x509-subject-state-or-province",description:"List of state or province names (ST, S, or P)",example:"California",flat_name:"tls.server.x509.subject.state_or_province",ignore_above:1024,level:"extended",name:"subject.state_or_province",normalize:["array"],original_fieldset:"x509",short:"List of state or province names (ST, S, or P)",type:"keyword"},"tls.server.x509.version_number":{dashed_name:"tls-server-x509-version-number",description:"Version of x509 format.",example:3,flat_name:"tls.server.x509.version_number",ignore_above:1024,level:"extended",name:"version_number",normalize:[],original_fieldset:"x509",short:"Version of x509 format.",type:"keyword"},"tls.version":{dashed_name:"tls-version",description:"Numeric part of the version parsed from the original string.",example:"1.2",flat_name:"tls.version",ignore_above:1024,level:"extended",name:"version",normalize:[],short:"Numeric part of the version parsed from the original string.",type:"keyword"},"tls.version_protocol":{dashed_name:"tls-version-protocol",description:"Normalized lowercase protocol name parsed from original string.",example:"tls",flat_name:"tls.version_protocol",ignore_above:1024,level:"extended",name:"version_protocol",normalize:[],short:"Normalized lowercase protocol name parsed from original string.",type:"keyword"},"trace.id":{dashed_name:"trace-id",description:"Unique identifier of the trace.\nA trace groups multiple events like transactions that belong together. For example, a user request handled by multiple inter-connected services.",example:"4bf92f3577b34da6a3ce929d0e0e4736",flat_name:"trace.id",ignore_above:1024,level:"extended",name:"trace.id",normalize:[],short:"Unique identifier of the trace.",type:"keyword"},"transaction.id":{dashed_name:"transaction-id",description:"Unique identifier of the transaction within the scope of its trace.\nA transaction is the highest level of work measured within a service, such as a request to a server.",example:"00f067aa0ba902b7",flat_name:"transaction.id",ignore_above:1024,level:"extended",name:"transaction.id",normalize:[],short:"Unique identifier of the transaction within the scope of its trace.",type:"keyword"},"url.domain":{dashed_name:"url-domain",description:'Domain of the url, such as "www.elastic.co".\nIn some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.\nIf the URL contains a literal IPv6 address enclosed by `[` and `]` (IETF RFC 2732), the `[` and `]` characters should also be captured in the `domain` field.',example:"www.elastic.co",flat_name:"url.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],short:"Domain of the url.",type:"keyword"},"url.extension":{dashed_name:"url-extension",description:'The field contains the file extension from the original request url, excluding the leading dot.\nThe file extension is only set if it exists, as not every url has a file extension.\nThe leading period must not be included. For example, the value must be "png", not ".png".\nNote that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").',example:"png",flat_name:"url.extension",ignore_above:1024,level:"extended",name:"extension",normalize:[],short:"File extension from the request url, excluding the leading dot.",type:"keyword"},"url.fragment":{dashed_name:"url-fragment",description:'Portion of the url after the `#`, such as "top".\nThe `#` is not part of the fragment.',flat_name:"url.fragment",ignore_above:1024,level:"extended",name:"fragment",normalize:[],short:"Portion of the url after the `#`.",type:"keyword"},"url.full":{dashed_name:"url-full",description:"If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.",example:"https://www.elastic.co:443/search?q=elasticsearch#top",flat_name:"url.full",level:"extended",multi_fields:[{flat_name:"url.full.text",name:"text",type:"match_only_text"}],name:"full",normalize:[],short:"Full unparsed URL.",type:"wildcard"},"url.original":{dashed_name:"url-original",description:"Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not.",example:"https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch",flat_name:"url.original",level:"extended",multi_fields:[{flat_name:"url.original.text",name:"text",type:"match_only_text"}],name:"original",normalize:[],short:"Unmodified original url as seen in the event source.",type:"wildcard"},"url.password":{dashed_name:"url-password",description:"Password of the request.",flat_name:"url.password",ignore_above:1024,level:"extended",name:"password",normalize:[],short:"Password of the request.",type:"keyword"},"url.path":{dashed_name:"url-path",description:'Path of the request, such as "/search".',flat_name:"url.path",level:"extended",name:"path",normalize:[],short:'Path of the request, such as "/search".',type:"wildcard"},"url.port":{dashed_name:"url-port",description:"Port of the request, such as 443.",example:443,flat_name:"url.port",format:"string",level:"extended",name:"port",normalize:[],short:"Port of the request, such as 443.",type:"long"},"url.query":{dashed_name:"url-query",description:'The query field describes the query string of the request, such as "q=elasticsearch".\nThe `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.',flat_name:"url.query",ignore_above:1024,level:"extended",name:"query",normalize:[],short:"Query string of the request.",type:"keyword"},"url.registered_domain":{dashed_name:"url-registered-domain",description:'The highest registered url domain, stripped of the subdomain.\nFor example, the registered domain for "foo.example.com" is "example.com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".',example:"example.com",flat_name:"url.registered_domain",ignore_above:1024,level:"extended",name:"registered_domain",normalize:[],short:"The highest registered url domain, stripped of the subdomain.",type:"keyword"},"url.scheme":{dashed_name:"url-scheme",description:'Scheme of the request, such as "https".\nNote: The `:` is not part of the scheme.',example:"https",flat_name:"url.scheme",ignore_above:1024,level:"extended",name:"scheme",normalize:[],short:"Scheme of the url.",type:"keyword"},"url.subdomain":{dashed_name:"url-subdomain",description:'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.\nFor example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.',example:"east",flat_name:"url.subdomain",ignore_above:1024,level:"extended",name:"subdomain",normalize:[],short:"The subdomain of the domain.",type:"keyword"},"url.top_level_domain":{dashed_name:"url-top-level-domain",description:'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".\nThis value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".',example:"co.uk",flat_name:"url.top_level_domain",ignore_above:1024,level:"extended",name:"top_level_domain",normalize:[],short:"The effective top level domain (com, org, net, co.uk).",type:"keyword"},"url.username":{dashed_name:"url-username",description:"Username of the request.",flat_name:"url.username",ignore_above:1024,level:"extended",name:"username",normalize:[],short:"Username of the request.",type:"keyword"},"user.changes.domain":{dashed_name:"user-changes-domain",description:"Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"user.changes.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"user",short:"Name of the directory the user is a member of.",type:"keyword"},"user.changes.email":{dashed_name:"user-changes-email",description:"User email address.",flat_name:"user.changes.email",ignore_above:1024,level:"extended",name:"email",normalize:[],original_fieldset:"user",short:"User email address.",type:"keyword"},"user.changes.full_name":{dashed_name:"user-changes-full-name",description:"User's full name, if available.",example:"Albert Einstein",flat_name:"user.changes.full_name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"user.changes.full_name.text",name:"text",type:"match_only_text"}],name:"full_name",normalize:[],original_fieldset:"user",short:"User's full name, if available.",type:"keyword"},"user.changes.group.domain":{dashed_name:"user-changes-group-domain",description:"Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"user.changes.group.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"group",short:"Name of the directory the group is a member of.",type:"keyword"},"user.changes.group.id":{dashed_name:"user-changes-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"user.changes.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"user.changes.group.name":{dashed_name:"user-changes-group-name",description:"Name of the group.",flat_name:"user.changes.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"user.changes.hash":{dashed_name:"user-changes-hash",description:"Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",flat_name:"user.changes.hash",ignore_above:1024,level:"extended",name:"hash",normalize:[],original_fieldset:"user",short:"Unique user hash to correlate information for a user in anonymized form.",type:"keyword"},"user.changes.id":{dashed_name:"user-changes-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"user.changes.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"user.changes.name":{dashed_name:"user-changes-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"user.changes.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"user.changes.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"user.changes.roles":{dashed_name:"user-changes-roles",description:"Array of user roles at the time of the event.",example:'["kibana_admin", "reporting_user"]',flat_name:"user.changes.roles",ignore_above:1024,level:"extended",name:"roles",normalize:["array"],original_fieldset:"user",short:"Array of user roles at the time of the event.",type:"keyword"},"user.domain":{dashed_name:"user-domain",description:"Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"user.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],short:"Name of the directory the user is a member of.",type:"keyword"},"user.effective.domain":{dashed_name:"user-effective-domain",description:"Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"user.effective.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"user",short:"Name of the directory the user is a member of.",type:"keyword"},"user.effective.email":{dashed_name:"user-effective-email",description:"User email address.",flat_name:"user.effective.email",ignore_above:1024,level:"extended",name:"email",normalize:[],original_fieldset:"user",short:"User email address.",type:"keyword"},"user.effective.full_name":{dashed_name:"user-effective-full-name",description:"User's full name, if available.",example:"Albert Einstein",flat_name:"user.effective.full_name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"user.effective.full_name.text",name:"text",type:"match_only_text"}],name:"full_name",normalize:[],original_fieldset:"user",short:"User's full name, if available.",type:"keyword"},"user.effective.group.domain":{dashed_name:"user-effective-group-domain",description:"Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"user.effective.group.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"group",short:"Name of the directory the group is a member of.",type:"keyword"},"user.effective.group.id":{dashed_name:"user-effective-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"user.effective.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"user.effective.group.name":{dashed_name:"user-effective-group-name",description:"Name of the group.",flat_name:"user.effective.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"user.effective.hash":{dashed_name:"user-effective-hash",description:"Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",flat_name:"user.effective.hash",ignore_above:1024,level:"extended",name:"hash",normalize:[],original_fieldset:"user",short:"Unique user hash to correlate information for a user in anonymized form.",type:"keyword"},"user.effective.id":{dashed_name:"user-effective-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"user.effective.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"user.effective.name":{dashed_name:"user-effective-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"user.effective.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"user.effective.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"user.effective.roles":{dashed_name:"user-effective-roles",description:"Array of user roles at the time of the event.",example:'["kibana_admin", "reporting_user"]',flat_name:"user.effective.roles",ignore_above:1024,level:"extended",name:"roles",normalize:["array"],original_fieldset:"user",short:"Array of user roles at the time of the event.",type:"keyword"},"user.email":{dashed_name:"user-email",description:"User email address.",flat_name:"user.email",ignore_above:1024,level:"extended",name:"email",normalize:[],short:"User email address.",type:"keyword"},"user.full_name":{dashed_name:"user-full-name",description:"User's full name, if available.",example:"Albert Einstein",flat_name:"user.full_name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"user.full_name.text",name:"text",type:"match_only_text"}],name:"full_name",normalize:[],short:"User's full name, if available.",type:"keyword"},"user.group.domain":{dashed_name:"user-group-domain",description:"Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"user.group.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"group",short:"Name of the directory the group is a member of.",type:"keyword"},"user.group.id":{dashed_name:"user-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"user.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"user.group.name":{dashed_name:"user-group-name",description:"Name of the group.",flat_name:"user.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"user.hash":{dashed_name:"user-hash",description:"Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",flat_name:"user.hash",ignore_above:1024,level:"extended",name:"hash",normalize:[],short:"Unique user hash to correlate information for a user in anonymized form.",type:"keyword"},"user.id":{dashed_name:"user-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"user.id",ignore_above:1024,level:"core",name:"id",normalize:[],short:"Unique identifier of the user.",type:"keyword"},"user.name":{dashed_name:"user-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"user.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"user.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],short:"Short name or login of the user.",type:"keyword"},"user.risk.calculated_level":{dashed_name:"user-risk-calculated-level",description:"A risk classification level calculated by an internal system as part of entity analytics and entity risk scoring.",example:"High",flat_name:"user.risk.calculated_level",ignore_above:1024,level:"extended",name:"calculated_level",normalize:[],original_fieldset:"risk",short:"A risk classification level calculated by an internal system as part of entity analytics and entity risk scoring.",type:"keyword"},"user.risk.calculated_score":{dashed_name:"user-risk-calculated-score",description:"A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring.",example:880.73,flat_name:"user.risk.calculated_score",level:"extended",name:"calculated_score",normalize:[],original_fieldset:"risk",short:"A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring.",type:"float"},"user.risk.calculated_score_norm":{dashed_name:"user-risk-calculated-score-norm",description:"A risk classification score calculated by an internal system as part of entity analytics and entity risk scoring, and normalized to a range of 0 to 100.",example:88.73,flat_name:"user.risk.calculated_score_norm",level:"extended",name:"calculated_score_norm",normalize:[],original_fieldset:"risk",short:"A normalized risk score calculated by an internal system.",type:"float"},"user.risk.static_level":{dashed_name:"user-risk-static-level",description:"A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform.",example:"High",flat_name:"user.risk.static_level",ignore_above:1024,level:"extended",name:"static_level",normalize:[],original_fieldset:"risk",short:"A risk classification level obtained from outside the system, such as from some external Threat Intelligence Platform.",type:"keyword"},"user.risk.static_score":{dashed_name:"user-risk-static-score",description:"A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform.",example:830,flat_name:"user.risk.static_score",level:"extended",name:"static_score",normalize:[],original_fieldset:"risk",short:"A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform.",type:"float"},"user.risk.static_score_norm":{dashed_name:"user-risk-static-score-norm",description:"A risk classification score obtained from outside the system, such as from some external Threat Intelligence Platform, and normalized to a range of 0 to 100.",example:83,flat_name:"user.risk.static_score_norm",level:"extended",name:"static_score_norm",normalize:[],original_fieldset:"risk",short:"A normalized risk score calculated by an external system.",type:"float"},"user.roles":{dashed_name:"user-roles",description:"Array of user roles at the time of the event.",example:'["kibana_admin", "reporting_user"]',flat_name:"user.roles",ignore_above:1024,level:"extended",name:"roles",normalize:["array"],short:"Array of user roles at the time of the event.",type:"keyword"},"user.target.domain":{dashed_name:"user-target-domain",description:"Name of the directory the user is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"user.target.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"user",short:"Name of the directory the user is a member of.",type:"keyword"},"user.target.email":{dashed_name:"user-target-email",description:"User email address.",flat_name:"user.target.email",ignore_above:1024,level:"extended",name:"email",normalize:[],original_fieldset:"user",short:"User email address.",type:"keyword"},"user.target.full_name":{dashed_name:"user-target-full-name",description:"User's full name, if available.",example:"Albert Einstein",flat_name:"user.target.full_name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"user.target.full_name.text",name:"text",type:"match_only_text"}],name:"full_name",normalize:[],original_fieldset:"user",short:"User's full name, if available.",type:"keyword"},"user.target.group.domain":{dashed_name:"user-target-group-domain",description:"Name of the directory the group is a member of.\nFor example, an LDAP or Active Directory domain name.",flat_name:"user.target.group.domain",ignore_above:1024,level:"extended",name:"domain",normalize:[],original_fieldset:"group",short:"Name of the directory the group is a member of.",type:"keyword"},"user.target.group.id":{dashed_name:"user-target-group-id",description:"Unique identifier for the group on the system/platform.",flat_name:"user.target.group.id",ignore_above:1024,level:"extended",name:"id",normalize:[],original_fieldset:"group",short:"Unique identifier for the group on the system/platform.",type:"keyword"},"user.target.group.name":{dashed_name:"user-target-group-name",description:"Name of the group.",flat_name:"user.target.group.name",ignore_above:1024,level:"extended",name:"name",normalize:[],original_fieldset:"group",short:"Name of the group.",type:"keyword"},"user.target.hash":{dashed_name:"user-target-hash",description:"Unique user hash to correlate information for a user in anonymized form.\nUseful if `user.id` or `user.name` contain confidential information and cannot be used.",flat_name:"user.target.hash",ignore_above:1024,level:"extended",name:"hash",normalize:[],original_fieldset:"user",short:"Unique user hash to correlate information for a user in anonymized form.",type:"keyword"},"user.target.id":{dashed_name:"user-target-id",description:"Unique identifier of the user.",example:"S-1-5-21-202424912787-2692429404-2351956786-1000",flat_name:"user.target.id",ignore_above:1024,level:"core",name:"id",normalize:[],original_fieldset:"user",short:"Unique identifier of the user.",type:"keyword"},"user.target.name":{dashed_name:"user-target-name",description:"Short name or login of the user.",example:"a.einstein",flat_name:"user.target.name",ignore_above:1024,level:"core",multi_fields:[{flat_name:"user.target.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"user",short:"Short name or login of the user.",type:"keyword"},"user.target.roles":{dashed_name:"user-target-roles",description:"Array of user roles at the time of the event.",example:'["kibana_admin", "reporting_user"]',flat_name:"user.target.roles",ignore_above:1024,level:"extended",name:"roles",normalize:["array"],original_fieldset:"user",short:"Array of user roles at the time of the event.",type:"keyword"},"user_agent.device.name":{dashed_name:"user-agent-device-name",description:"Name of the device.",example:"iPhone",flat_name:"user_agent.device.name",ignore_above:1024,level:"extended",name:"device.name",normalize:[],short:"Name of the device.",type:"keyword"},"user_agent.name":{dashed_name:"user-agent-name",description:"Name of the user agent.",example:"Safari",flat_name:"user_agent.name",ignore_above:1024,level:"extended",name:"name",normalize:[],short:"Name of the user agent.",type:"keyword"},"user_agent.original":{dashed_name:"user-agent-original",description:"Unparsed user_agent string.",example:"Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1",flat_name:"user_agent.original",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"user_agent.original.text",name:"text",type:"match_only_text"}],name:"original",normalize:[],short:"Unparsed user_agent string.",type:"keyword"},"user_agent.os.family":{dashed_name:"user-agent-os-family",description:"OS family (such as redhat, debian, freebsd, windows).",example:"debian",flat_name:"user_agent.os.family",ignore_above:1024,level:"extended",name:"family",normalize:[],original_fieldset:"os",short:"OS family (such as redhat, debian, freebsd, windows).",type:"keyword"},"user_agent.os.full":{dashed_name:"user-agent-os-full",description:"Operating system name, including the version or code name.",example:"Mac OS Mojave",flat_name:"user_agent.os.full",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"user_agent.os.full.text",name:"text",type:"match_only_text"}],name:"full",normalize:[],original_fieldset:"os",short:"Operating system name, including the version or code name.",type:"keyword"},"user_agent.os.kernel":{dashed_name:"user-agent-os-kernel",description:"Operating system kernel version as a raw string.",example:"4.4.0-112-generic",flat_name:"user_agent.os.kernel",ignore_above:1024,level:"extended",name:"kernel",normalize:[],original_fieldset:"os",short:"Operating system kernel version as a raw string.",type:"keyword"},"user_agent.os.name":{dashed_name:"user-agent-os-name",description:"Operating system name, without the version.",example:"Mac OS X",flat_name:"user_agent.os.name",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"user_agent.os.name.text",name:"text",type:"match_only_text"}],name:"name",normalize:[],original_fieldset:"os",short:"Operating system name, without the version.",type:"keyword"},"user_agent.os.platform":{dashed_name:"user-agent-os-platform",description:"Operating system platform (such centos, ubuntu, windows).",example:"darwin",flat_name:"user_agent.os.platform",ignore_above:1024,level:"extended",name:"platform",normalize:[],original_fieldset:"os",short:"Operating system platform (such centos, ubuntu, windows).",type:"keyword"},"user_agent.os.type":{dashed_name:"user-agent-os-type",description:"Use the `os.type` field to categorize the operating system into one of the broad commercial families.\nIf the OS you're dealing with is not listed as an expected value, the field should not be populated. Please let us know by opening an issue with ECS, to propose its addition.",example:"macos",expected_values:["linux","macos","unix","windows","ios","android"],flat_name:"user_agent.os.type",ignore_above:1024,level:"extended",name:"type",normalize:[],original_fieldset:"os",short:"Which commercial OS family (one of: linux, macos, unix, windows, ios or android).",type:"keyword"},"user_agent.os.version":{dashed_name:"user-agent-os-version",description:"Operating system version as a raw string.",example:"10.14.1",flat_name:"user_agent.os.version",ignore_above:1024,level:"extended",name:"version",normalize:[],original_fieldset:"os",short:"Operating system version as a raw string.",type:"keyword"},"user_agent.version":{dashed_name:"user-agent-version",description:"Version of the user agent.",example:12,flat_name:"user_agent.version",ignore_above:1024,level:"extended",name:"version",normalize:[],short:"Version of the user agent.",type:"keyword"},"vulnerability.category":{dashed_name:"vulnerability-category",description:"The type of system or architecture that the vulnerability affects. These may be platform-specific (for example, Debian or SUSE) or general (for example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys vulnerability categories])\nThis field must be an array.",example:'["Firewall"]',flat_name:"vulnerability.category",ignore_above:1024,level:"extended",name:"category",normalize:["array"],short:"Category of a vulnerability.",type:"keyword"},"vulnerability.classification":{dashed_name:"vulnerability-classification",description:"The classification of the vulnerability scoring system. For example (https://www.first.org/cvss/)",example:"CVSS",flat_name:"vulnerability.classification",ignore_above:1024,level:"extended",name:"classification",normalize:[],short:"Classification of the vulnerability.",type:"keyword"},"vulnerability.description":{dashed_name:"vulnerability-description",description:"The description of the vulnerability that provides additional context of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common Vulnerabilities and Exposure CVE description])",example:"In macOS before 2.12.6, there is a vulnerability in the RPC...",flat_name:"vulnerability.description",ignore_above:1024,level:"extended",multi_fields:[{flat_name:"vulnerability.description.text",name:"text",type:"match_only_text"}],name:"description",normalize:[],short:"Description of the vulnerability.",type:"keyword"},"vulnerability.enumeration":{dashed_name:"vulnerability-enumeration",description:"The type of identifier used for this vulnerability. For example (https://cve.mitre.org/about/)",example:"CVE",flat_name:"vulnerability.enumeration",ignore_above:1024,level:"extended",name:"enumeration",normalize:[],short:"Identifier of the vulnerability.",type:"keyword"},"vulnerability.id":{dashed_name:"vulnerability-id",description:"The identification (ID) is the number portion of a vulnerability entry. It includes a unique identification number for the vulnerability. For example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities and Exposure CVE ID]",example:"CVE-2019-00001",flat_name:"vulnerability.id",ignore_above:1024,level:"extended",name:"id",normalize:[],short:"ID of the vulnerability.",type:"keyword"},"vulnerability.reference":{dashed_name:"vulnerability-reference",description:"A resource that provides additional information, context, and mitigations for the identified vulnerability.",example:"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6111",flat_name:"vulnerability.reference",ignore_above:1024,level:"extended",name:"reference",normalize:[],short:"Reference of the vulnerability.",type:"keyword"},"vulnerability.report_id":{dashed_name:"vulnerability-report-id",description:"The report or scan identification number.",example:20191018.0001,flat_name:"vulnerability.report_id",ignore_above:1024,level:"extended",name:"report_id",normalize:[],short:"Scan identification number.",type:"keyword"},"vulnerability.scanner.vendor":{dashed_name:"vulnerability-scanner-vendor",description:"The name of the vulnerability scanner vendor.",example:"Tenable",flat_name:"vulnerability.scanner.vendor",ignore_above:1024,level:"extended",name:"scanner.vendor",normalize:[],short:"Name of the scanner vendor.",type:"keyword"},"vulnerability.score.base":{dashed_name:"vulnerability-score-base",description:"Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nBase scores cover an assessment for exploitability metrics (attack vector, complexity, privileges, and user interaction), impact metrics (confidentiality, integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)",example:5.5,flat_name:"vulnerability.score.base",level:"extended",name:"score.base",normalize:[],short:"Vulnerability Base score.",type:"float"},"vulnerability.score.environmental":{dashed_name:"vulnerability-score-environmental",description:"Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nEnvironmental scores cover an assessment for any modified Base metrics, confidentiality, integrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)",example:5.5,flat_name:"vulnerability.score.environmental",level:"extended",name:"score.environmental",normalize:[],short:"Vulnerability Environmental score.",type:"float"},"vulnerability.score.temporal":{dashed_name:"vulnerability-score-temporal",description:"Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\nTemporal scores cover an assessment for code maturity, remediation level, and confidence. For example (https://www.first.org/cvss/specification-document)",flat_name:"vulnerability.score.temporal",level:"extended",name:"score.temporal",normalize:[],short:"Vulnerability Temporal score.",type:"float"},"vulnerability.score.version":{dashed_name:"vulnerability-score-version",description:'The National Vulnerability Database (NVD) provides qualitative severity rankings of "Low", "Medium", and "High" for CVSS v2.0 base score ranges in addition to the severity ratings for CVSS v3.0 as they are defined in the CVSS v3.0 specification.\nCVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit organization, whose mission is to help computer security incident response teams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)',example:2,flat_name:"vulnerability.score.version",ignore_above:1024,level:"extended",name:"score.version",normalize:[],short:"CVSS version.",type:"keyword"},"vulnerability.severity":{dashed_name:"vulnerability-severity",description:"The severity of the vulnerability can help with metrics and internal prioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)",example:"Critical",flat_name:"vulnerability.severity",ignore_above:1024,level:"extended",name:"severity",normalize:[],short:"Severity of the vulnerability.",type:"keyword"}}},function(e,t,a){var n,i=i||function(e){"use strict";if("undefined"==typeof navigator||!/MSIE [1-9]\./.test(navigator.userAgent)){var t=e.document,a=function(){return e.URL||e.webkitURL||e},n=t.createElementNS("http://www.w3.org/1999/xhtml","a"),i="download"in n,r=e.webkitRequestFileSystem,o=e.requestFileSystem||r||e.mozRequestFileSystem,s=function(t){(e.setImmediate||e.setTimeout)((function(){throw t}),0)},l="application/octet-stream",d=0,c=function(t){var n=function(){"string"==typeof t?a().revokeObjectURL(t):t.remove()};e.chrome?n():setTimeout(n,500)},m=function(e,t,a){for(var n=(t=[].concat(t)).length;n--;){var i=e["on"+t[n]];if("function"==typeof i)try{i.call(e,a||e)}catch(e){s(e)}}},h=function(e){return/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type)?new Blob(["\ufeff",e],{type:e.type}):e},p=function(t,s,p){p||(t=h(t));var u,f,g,_=this,y=t.type,v=!1,b=function(){m(_,"writestart progress write writeend".split(" "))},x=function(){!v&&u||(u=a().createObjectURL(t)),f?f.location.href=u:null==e.open(u,"_blank")&&"undefined"!=typeof safari&&(e.location.href=u),_.readyState=_.DONE,b(),c(u)},w=function(e){return function(){if(_.readyState!==_.DONE)return e.apply(this,arguments)}},k={create:!0,exclusive:!1};if(_.readyState=_.INIT,s||(s="download"),i)return u=a().createObjectURL(t),n.href=u,n.download=s,void setTimeout((function(){var e,t;e=n,t=new MouseEvent("click"),e.dispatchEvent(t),b(),c(u),_.readyState=_.DONE}));e.chrome&&y&&y!==l&&(g=t.slice||t.webkitSlice,t=g.call(t,0,t.size,l),v=!0),r&&"download"!==s&&(s+=".download"),(y===l||r)&&(f=e),o?(d+=t.size,o(e.TEMPORARY,d,w((function(e){e.root.getDirectory("saved",k,w((function(e){var a=function(){e.getFile(s,k,w((function(e){e.createWriter(w((function(a){a.onwriteend=function(t){f.location.href=e.toURL(),_.readyState=_.DONE,m(_,"writeend",t),c(e)},a.onerror=function(){var e=a.error;e.code!==e.ABORT_ERR&&x()},"writestart progress write abort".split(" ").forEach((function(e){a["on"+e]=_["on"+e]})),a.write(t),_.abort=function(){a.abort(),_.readyState=_.DONE},_.readyState=_.WRITING})),x)})),x)};e.getFile(s,{create:!1},w((function(e){e.remove(),a()})),w((function(e){e.code===e.NOT_FOUND_ERR?a():x()})))})),x)})),x)):x()},u=p.prototype;return"undefined"!=typeof navigator&&navigator.msSaveOrOpenBlob?function(e,t,a){return a||(e=h(e)),navigator.msSaveOrOpenBlob(e,t||"download")}:(u.abort=function(){var e=this;e.readyState=e.DONE,m(e,"abort")},u.readyState=u.INIT=0,u.WRITING=1,u.DONE=2,u.error=u.onwritestart=u.onprogress=u.onwrite=u.onabort=u.onerror=u.onwriteend=null,function(e,t,a){return new p(e,t,a)})}}("undefined"!=typeof self&&self||"undefined"!=typeof window&&window||this.content);
/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */e.exports?e.exports.saveAs=i:null!==a(218)&&null!=a(219)&&(void 0===(n=function(){return i}.apply(t,[]))||(e.exports=n))},function(e,t,a){e.exports=a(6)(1784)},function(e,t){(function(t){e.exports=t}).call(this,{})},,,,,,,function(e,t,a){"use strict";a.r(t),a.d(t,"CreateIntegration",(function(){return qn}));var n=a(0),i=a.n(n),r=a(17),o=a(28),s=a.n(o);const l={services:{}},d=Object(n.createContext)(l);var c=a(56),m=a.n(c),h=a(1);const p=({children:e,component:t,render:a,...o})=>{const l=Object(n.useMemo)((()=>{if(t)return e=>Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(u,null),Object(h.jsx)(t,e))}),[t]);if(l)return Object(h.jsx)(r.Route,s()({},o,{component:l}));if(a||"function"==typeof e){const t="function"==typeof e?e:a;return Object(h.jsx)(r.Route,s()({},o,{render:e=>Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(u,null),t(e))}))}return Object(h.jsx)(r.Route,o,Object(h.jsx)(u,null),e)},u=()=>{const{executionContext:e}=Object(n.useContext)(d).services,t=Object(r.useRouteMatch)();return function(e,t){m()((()=>(null==e||e.set(t),()=>{null==e||e.clear()})),[t])}(e,{type:"application",page:t.path,id:Object.keys(t.params).length>0?JSON.stringify(t.params):void 0}),null};var f=a(12),g=a(20),_=a(21),y=a(2),v=a(27);const b={1:"Connector Step",2:"Integration Step",3:"DataStream Step",4:"Review Step",5:"Deploy Step"},x=i.a.createContext(null),w=()=>{const e=i.a.useContext(x);if(!e)throw new Error("useTelemetry must be used within a TelemetryContextProvider");return e},k=i.a.memo((({children:e})=>{const t=Object(n.useRef)({sessionId:Object(g.v4)(),startedAt:Date.now()}),a=Object(n.useRef)({startedAt:Date.now()}),{telemetry:i}=Object(v.a)().services,r=Object(n.useCallback)((({integrationName:e,error:t})=>{i.reportEvent(y.a.UploadIntegrationZipComplete,{integrationName:e,errorMessage:t})}),[i]),o=Object(n.useCallback)((()=>{const e=Object(g.v4)();t.current={sessionId:e,startedAt:Date.now()},a.current={startedAt:Date.now()},i.reportEvent(y.a.IntegrationAssistantOpen,{sessionId:e})}),[i]),s=Object(n.useCallback)((({step:e})=>{var n;i.reportEvent(y.a.IntegrationAssistantStepComplete,{sessionId:t.current.sessionId,step:e,stepName:null!==(n=b[e.toString()])&&void 0!==n?n:"Unknown Step",durationMs:Date.now()-a.current.startedAt,sessionElapsedTime:Date.now()-t.current.startedAt}),a.current={startedAt:Date.now()}}),[i]),l=Object(n.useCallback)((({connector:e,integrationSettings:a,durationMs:n,error:r})=>{var o,s,l;i.reportEvent(y.a.IntegrationAssistantGenerationComplete,{sessionId:t.current.sessionId,sampleRows:null!==(o=null==a||null===(s=a.logsSampleParsed)||void 0===s?void 0:s.length)&&void 0!==o?o:0,actionTypeId:e.actionTypeId,model:z(e),provider:null!==(l=e.apiProvider)&&void 0!==l?l:"unknown",durationMs:n,errorMessage:r})}),[i]),d=Object(n.useCallback)((({integrationName:e,integrationSettings:a,connector:n,error:r})=>{var o,s,l,d;i.reportEvent(y.a.IntegrationAssistantComplete,{sessionId:t.current.sessionId,integrationName:e,integrationDescription:null!==(o=null==a?void 0:a.description)&&void 0!==o?o:"unknown",dataStreamName:null!==(s=null==a?void 0:a.dataStreamName)&&void 0!==s?s:"unknown",inputTypes:null!==(l=null==a?void 0:a.inputTypes)&&void 0!==l?l:["unknown"],actionTypeId:n.actionTypeId,model:z(n),provider:null!==(d=n.apiProvider)&&void 0!==d?d:"unknown",durationMs:Date.now()-t.current.startedAt,errorMessage:r})}),[i]),c=Object(n.useMemo)((()=>({reportUploadZipIntegrationComplete:r,reportAssistantOpen:o,reportAssistantStepComplete:s,reportGenerationComplete:l,reportAssistantComplete:d})),[r,o,s,l,d]);return Object(h.jsx)(x.Provider,{value:c},e)}));k.displayName="TelemetryContextProvider";const z=e=>{let t="unknown";if(!e.isPreconfigured){var a;const{apiUrl:i,defaultModel:r}=null!==(a=e.config)&&void 0!==a?a:{};var n;t=e.apiProvider===_.OpenAiProviderType.AzureAi?null!==(n=T(null!=i?i:""))&&void 0!==n?n:"unknown":null!=r?r:"unknown"}return t},T=e=>{const t=new URLSearchParams(new URL(e).search);if(t.get("api-version"))return`OpenAI version ${t.get("api-version")}`};var j=a(4),S=a(13),E=a.n(S),A=(a(202),a(14)),O=a(11);a(185);const I=e=>{const{className:t,size:a,...n}=e,i={};return(e=>void 0===e.iconType)(e)&&(i.iconType=`logo${e.name.replace(/\s+/g,"")}`),Object(h.jsx)(j.EuiAvatar,s()({className:E()("kbnSolutionAvatar",{[`kbnSolutionAvatar--${a}`]:a},t),size:"xxl"===a?"xl":a,iconSize:a,color:"plain"},n,i))};a(207);const C=O.i18n.translate("sharedUXPackages.solutionNav.collapsibleLabel",{defaultMessage:"Collapse side navigation"}),L=O.i18n.translate("sharedUXPackages.solutionNav.openLabel",{defaultMessage:"Open side navigation"}),P=({className:e,isCollapsed:t,...a})=>{const n=E()("kbnSolutionNavCollapseButton",{"kbnSolutionNavCollapseButton-isCollapsed":t},e);return Object(h.jsx)(j.EuiButtonIcon,s()({className:n,size:"s",color:"text",iconType:t?"menuRight":"menuLeft","aria-label":t?L:C,title:t?L:C},a))},N="248px",D=(e,t)=>e.map((e=>(e.tabIndex=t?-1:void 0,e.items=e.items&&D(e.items,t),e))),F=Object(j.htmlIdGenerator)("SolutionNav"),M=({children:e,headingProps:t,icon:a,isOpenOnDesktop:r=!1,items:o,mobileBreakpoints:l=["xs","s"],closeFlyoutButtonPosition:d="outside",name:c,onCollapse:m,canBeCollapsed:p=!0,...u})=>{const f=Object(j.useIsWithinBreakpoints)(l),g=Object(j.useIsWithinBreakpoints)(["m"]),_=Object(j.useIsWithinMinBreakpoint)("l"),[y,v]=Object(n.useState)(!1),b=_&&!r&&p,x=!!e,w=E()("kbnSolutionNav",{"kbnSolutionNav--hidden":b}),k=(null==t?void 0:t.id)||F("heading"),z=(null==t?void 0:t.element)||"h2",T=Object(h.jsx)(j.EuiTitle,{size:"xs",id:k,"data-test-subj":null==t?void 0:t["data-test-subj"],className:"kbnSolutionNav__title"},Object(h.jsx)(z,null,a&&Object(h.jsx)(I,{className:"kbnSolutionNav__titleAvatar",iconType:a,name:c}),Object(h.jsx)("strong",null,Object(h.jsx)(A.FormattedMessage,{id:"sharedUXPackages.solutionNav.mobileTitleText",defaultMessage:"{solutionName} {menuText}",values:{solutionName:c||"Navigation",menuText:f?O.i18n.translate("sharedUXPackages.solutionNav.menuText",{defaultMessage:"menu"}):""}})))),S=Object(n.useMemo)((()=>x?e:o?Object(h.jsx)(j.EuiSideNav,s()({"aria-labelledby":k,"aria-hidden":b,items:D(o,b),mobileBreakpoints:[]},u)):null),[e,k,x,b,o,u]),{euiTheme:C}=Object(j.useEuiTheme)(),L=Object(n.useMemo)((()=>_?r?N:C.size.xxl:g?y||!p?N:C.size.xxl:"0"),[C,r,y,p,g,_]),{setGlobalCSSVariables:M}=Object(j.useEuiThemeCSSVariables)();return Object(n.useEffect)((()=>{M({"--kbnSolutionNavOffset":L})}),[L,M]),Object(h.jsx)(i.a.Fragment,null,f&&Object(h.jsx)(j.EuiCollapsibleNavGroup,{className:w,paddingSize:"none",background:"none",title:T,titleElement:"span",isCollapsible:p,initialIsOpen:!1},Object(h.jsx)(j.EuiPanel,{color:"transparent",paddingSize:"s"},S)),g&&Object(h.jsx)(i.a.Fragment,null,(y||!p)&&Object(h.jsx)(j.EuiFlyout,{ownFocus:!1,outsideClickCloses:!0,onClose:()=>v(!1),side:"left",size:248,closeButtonPosition:d,className:"kbnSolutionNav__flyout",hideCloseButton:!p},Object(h.jsx)(j.EuiPageSidebar,{className:w,hasEmbellish:!0},T,Object(h.jsx)(j.EuiSpacer,{size:"l"}),S)),p&&Object(h.jsx)(P,{isCollapsed:!0,onClick:()=>{v(!y)}})),_&&Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)("div",{className:w},T,Object(h.jsx)(j.EuiSpacer,{size:"l"}),S),p&&Object(h.jsx)(P,{isCollapsed:!r,onClick:m})))};var Z=a(191);const U="solutionNavIsCollapsed",q=e=>{const t=t=>{var a;const i=Object(j.useIsWithinBreakpoints)(["m"]),r=Object(j.useIsWithinMinBreakpoint)("l"),[o,l]=Object(n.useState)(!JSON.parse(String(localStorage.getItem(U)))),{solutionNav:d,children:c,...m}=t,{euiTheme:p}=Object(j.useEuiTheme)(),{canBeCollapsed:u=!0}=d,f=i||u&&r&&!o,g=(e=>Object(Z.css)("flex:0 1 0;overflow:hidden;",j.euiCanAnimate,"{transition:min-width ",e.animation.fast," ",e.animation.resistance,";}",""))(p),_=E()("kbnSolutionNav__sidebar",{"kbnSolutionNav__sidebar--shrink":f},null===(a=t.pageSideBarProps)||void 0===a?void 0:a.className,g),y=Object(h.jsx)(M,s()({isOpenOnDesktop:o,onCollapse:()=>{l(!o),localStorage.setItem(U,JSON.stringify(o))}},d)),v={paddingSize:"none",...t.pageSideBarProps,minWidth:f?p.size.xxl:void 0,className:_,hasEmbellish:!f};return Object(h.jsx)(e,s()({},m,{pageSideBar:y,pageSideBarProps:v}),c)};var a;return t.displayName=`WithSolutionNavBar(${a=e,a.displayName||a.name||"UnnamedComponent"})`,t};a(66);const R=i.a.createContext(null),B={name:"h42ud6",styles:"display:inherit;height:inherit;width:inherit;flex:1;flex-flow:column nowrap"},G=({children:e,navigateToUrl:t,currentAppId:a,...i})=>{const r=Object(n.useRef)(null),o=Object(n.useCallback)((e=>(({event:e,container:t,navigateToUrl:a,currentAppId:n})=>{if(!t||!n)return;const i=((e,t)=>{let a=e;do{var n,i;if("a"===(null===(n=a)||void 0===n?void 0:n.tagName.toLowerCase()))return a;const e=null===(i=a)||void 0===i?void 0:i.parentElement;if(!e||e===document.body||e===t)break;a=e}while(parent||parent!==document.body||parent!==t)})(e.target,t);if(!i)return;const r=i.href,o=""===i.target||"_self"===i.target,s=0===e.button;r&&o&&s&&!e.defaultPrevented&&!(e=>e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)(e)&&(e.preventDefault(),a(i.href))})({event:e,currentAppId:a,navigateToUrl:t,container:r.current})),[a,t]);return Object(h.jsx)("div",s()({onClick:o,ref:r,css:B,"data-test-subj":"kbnRedirectAppLink"},i),e)},V=({children:e,...t})=>Object(h.jsx)(G,s()({},function(){const e=Object(n.useContext)(R);if(!e)throw new Error("RedirectAppLinksContext is missing.  Ensure your component or React root is wrapped with RedirectAppLinksProvider.");return e}(),t),e);var H=a(190),W=a.n(H);const $=O.i18n.translate("sharedUXPackages.card.noData.noPermission.title",{defaultMessage:"Contact your administrator"}),K=O.i18n.translate("sharedUXPackages.card.noData.noPermission.description",{defaultMessage:"This integration is not yet enabled. Your administrator has the required permissions to turn it on."}),Y=O.i18n.translate("sharedUXPackages.card.noData.title",{defaultMessage:"Add Elastic Agent"}),Q=O.i18n.translate("sharedUXPackages.card.noData.description",{defaultMessage:"Use Elastic Agent for a simple, unified way to collect data from your machines."}),X=()=>Object(h.jsx)(j.EuiImage,{size:"fullWidth",style:{width:"max(100%, 360px)",height:240,objectFit:"cover",background:"aliceblue"},url:W.a,alt:""}),J=({title:e,description:t,canAccessFleet:a,button:n,href:i,...r})=>Object(h.jsx)(j.EuiCard,s()({css:{maxWidth:400,marginInline:"auto"},paddingSize:"l",title:a?Object(h.jsx)(j.EuiScreenReaderOnly,null,Object(h.jsx)("span",null,e||Y)):Object(h.jsx)(j.EuiTextColor,{color:"default"},$),description:a?t||Q:Object(h.jsx)(j.EuiTextColor,{color:"default"},K),footer:(()=>{if(a)return n&&"string"!=typeof n?n:Object(h.jsx)(j.EuiButton,{fill:!0,href:i,"data-test-subj":"noDataDefaultFooterAction"},n||e||Y)})(),isDisabled:!a,href:i,image:Object(h.jsx)(X,null)},r)),ee=i.a.createContext(null),te=({href:e,category:t,description:a,...i})=>{var r;const{canAccessFleet:o,addBasePath:l}=function(){const e=Object(n.useContext)(ee);if(!e)throw new Error("NoDataCard Context is missing.  Ensure your component or React root is wrapped with NoDataCardContext.");return e}(),d=Object(n.useMemo)((()=>{if(e)return e;const a="/app/integrations/browse";return l(t?`${a}/${t}`:a)}),[l,e,t]);return Object(h.jsx)(V,null,Object(h.jsx)(J,s()({},i,{href:d,canAccessFleet:null!==(r=i.canAccessFleet)&&void 0!==r?r:o,description:a})))},ae=({action:e})=>{const t=Object.keys(e);if(1!==t.length)return null;const a=t[0],n="elasticAgent"===a?"empty-page-agent-action":`empty-page-${a}-action`;return Object(h.jsx)(te,s()({key:n},e[a]))},ne=({solution:e,logo:t,action:a,docsLink:n,pageTitle:i,pageDescription:r,className:o})=>{const s=i||O.i18n.translate("sharedUXPackages.noDataPage.welcomeTitle",{defaultMessage:"Welcome to Elastic {solution}!",values:{solution:e}}),l=n?Object(h.jsx)(j.EuiLink,{href:n,target:"_blank"},Object(h.jsx)(A.FormattedMessage,{id:"sharedUXPackages.noDataPage.intro.link",defaultMessage:"learn more"})):null,d=null!=r?r:l?Object(h.jsx)(A.FormattedMessage,{id:"sharedUXPackages.noDataPage.intro",defaultMessage:"Add your data to get started, or {link} about {solution}.",values:{solution:e,link:l}}):Object(h.jsx)(A.FormattedMessage,{id:"sharedUXPackages.noDataPage.introNoDocLink",defaultMessage:"Add your data to get started."});return Object(h.jsx)(j.EuiPageTemplate.Section,{alignment:"center",grow:!0,className:E()("kbnNoDataPageContents",o),"data-test-subj":"kbnNoDataPage"},Object(h.jsx)(j.EuiText,{textAlign:"center"},Object(h.jsx)(I,{name:e,iconType:t||`logo${e}`,size:"xxl"}),Object(h.jsx)(j.EuiSpacer,{size:"l"}),Object(h.jsx)("h1",null,s),Object(h.jsx)(j.EuiTextColor,{color:"subdued"},Object(h.jsx)("p",null,d))),Object(h.jsx)(j.EuiSpacer,{size:"xxl"}),Object(h.jsx)(ae,{action:a}))},ie=e=>{const{className:t,noDataConfig:a,pageSideBar:n,pageSideBarProps:i,...r}=e;if(!a)return null;let o;n&&(o=Object(h.jsx)(j.EuiPageTemplate.Sidebar,i,n));const l=((e,t)=>E()("kbnPageTemplate","",t||""))(0,t);return Object(h.jsx)(j.EuiPageTemplate,s()({className:l,restrictWidth:950,panelled:!1,offset:0,minHeight:0},r),o,Object(h.jsx)(ne,a))},re=q(ie),oe=({className:e,pageHeader:t,children:a,isEmptyState:n,pageSideBar:i,pageSideBarProps:r,emptyPageBody:o,...l})=>{let d,c;if(n&&t&&!a){const{iconType:e,pageTitle:n,description:i,rightSideItems:r}=t,o=n?Object(h.jsx)("h1",null,n):void 0,s=i?Object(h.jsx)("p",null,i):void 0;a=Object(h.jsx)(j.EuiPageTemplate.EmptyPrompt,{iconType:e,iconColor:"",title:o,body:s,actions:r})}else t&&(d=Object(h.jsx)(j.EuiPageTemplate.Header,t));if(n&&o&&(a=o),i){const e={...r};e.sticky=!0,c=Object(h.jsx)(j.EuiPageTemplate.Sidebar,e,i)}const m=((e,t)=>E()("kbnPageTemplate","",t||""))(0,e);return Object(h.jsx)(j.EuiPageTemplate,s()({className:m,offset:0,minHeight:d?"calc(100vh - var(--kbnAppHeadersOffset, var(--euiFixedHeadersOffset, 0)))":0,grow:!d&&void 0},l),c,d,a)},se=q(oe),le=Object.assign((({className:e,children:t,solutionNav:a,noDataConfig:n,...i})=>n&&a?Object(h.jsx)(re,{"data-test-subj":i["data-test-subj"],className:e,noDataConfig:n,solutionNav:a}):n?Object(h.jsx)(ie,{"data-test-subj":i["data-test-subj"],className:e,noDataConfig:n}):a?Object(h.jsx)(se,s()({className:e,solutionNav:a,children:t},i)):Object(h.jsx)(oe,s()({className:e,children:t},i))),{Sidebar:j.EuiPageTemplate.Sidebar,Header:j.EuiPageTemplate.Header,Section:j.EuiPageTemplate.Section,BottomBar:j.EuiPageTemplate.BottomBar,EmptyPrompt:j.EuiPageTemplate.EmptyPrompt}),de=()=>{const{capabilities:e}=Object(v.a)().services.application,{fleet:t,fleetv2:a,actions:n}=e;return{canCreateIntegrations:Boolean((null==a?void 0:a.all)&&(null==t?void 0:t.all)),canExecuteConnectors:Boolean((null==n?void 0:n.show)&&(null==n?void 0:n.execute)),canCreateConnectors:Boolean(null==n?void 0:n.save)}},ce=O.i18n.translate("xpack.integrationAssistant.missingPrivileges.title",{defaultMessage:"Missing privileges"}),me=O.i18n.translate("xpack.integrationAssistant.missingPrivileges.privilegesNeededTitle",{defaultMessage:"The minimum Kibana privileges required to use this feature are:"}),he={FLEET_ALL:O.i18n.translate("xpack.integrationAssistant.missingPrivileges.requiredPrivileges.fleet",{defaultMessage:"Management > Fleet: All"}),INTEGRATIONS_ALL:O.i18n.translate("xpack.integrationAssistant.missingPrivileges.requiredPrivileges.integrations",{defaultMessage:"Management > Integrations: All"}),CONNECTORS_READ:O.i18n.translate("xpack.integrationAssistant.missingPrivileges.requiredPrivileges.connectorsRead",{defaultMessage:"Management > Connectors: Read"}),CONNECTORS_ALL:O.i18n.translate("xpack.integrationAssistant.missingPrivileges.requiredPrivileges.connectorsAll",{defaultMessage:"Management > Connectors: All"})},pe=O.i18n.translate("xpack.integrationAssistant.missingPrivileges.contactAdministrator",{defaultMessage:"Contact your administrator for assistance."}),ue=i.a.memo((({canCreateIntegrations:e,canCreateConnectors:t,canExecuteConnectors:a})=>Object(h.jsx)(j.EuiFlexGroup,{gutterSize:"m",direction:"column"},Object(h.jsx)(j.EuiFlexItem,null,me),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiCode,null,Object(h.jsx)("ul",null,e&&Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)("li",null,he.FLEET_ALL),Object(h.jsx)("li",null,he.INTEGRATIONS_ALL)),t?Object(h.jsx)("li",null,he.CONNECTORS_ALL):Object(h.jsx)(i.a.Fragment,null,a&&Object(h.jsx)("li",null,he.CONNECTORS_READ))))),Object(h.jsx)(j.EuiFlexItem,null,pe))));ue.displayName="MissingPrivilegesDescription";const fe=i.a.memo((({children:e,...t})=>{const a=de();return Object(n.useMemo)((()=>Object.entries(t).every((([e,t])=>!t||a[e]))),[a,t])?Object(h.jsx)(i.a.Fragment,null,e):Object(h.jsx)(j.EuiCallOut,{title:ce,iconType:"iInCircle","data-test-subj":"missingPrivilegesCallOut"},Object(h.jsx)(ue,t))}));fe.displayName="AuthorizationWrapper";const ge=i.a.memo((({children:e,...t})=>Object(h.jsx)(j.EuiToolTip,{title:ce,content:Object(h.jsx)(ue,t)},e)));ge.displayName="MissingPrivilegesTooltip";const _e=O.i18n.translate("xpack.integrationAssistant.license.enterprise.label",{defaultMessage:"Enterprise"}),ye=O.i18n.translate("xpack.integrationAssistant.license.enterprise.title",{defaultMessage:"Enterprise License Required"}),ve=O.i18n.translate("xpack.integrationAssistant.license.enterprise.upgradeTitle",{defaultMessage:"Upgrade to Elastic Enterprise"}),be=O.i18n.translate("xpack.integrationAssistant.license.enterprise.upgradeDescription",{defaultMessage:"To turn on this feature, you must upgrade your license to Enterprise or start a free 30-day trial"}),xe=O.i18n.translate("xpack.integrationAssistant.license.enterprise.upgradeButton",{defaultMessage:"Upgrade license"}),we=i.a.memo((()=>{const{getUrlForApp:e}=Object(v.a)().services.application;return Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(j.EuiSpacer,{size:"m"}),Object(h.jsx)(j.EuiCard,{"data-test-subj":"LicensePaywallCard",betaBadgeProps:{label:_e},isDisabled:!0,icon:Object(h.jsx)(j.EuiIcon,{size:"xl",type:"lock"}),title:Object(h.jsx)("h3",null,Object(h.jsx)("strong",null,ye)),description:!1},Object(h.jsx)(j.EuiFlexGroup,{className:"lockedCardDescription",direction:"column",justifyContent:"center"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiSpacer,{size:"s"}),Object(h.jsx)(j.EuiText,null,Object(h.jsx)("h4",null,Object(h.jsx)(j.EuiTextColor,{color:"subdued"},ve)))),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiText,null,be)),Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)("div",null,Object(h.jsx)(j.EuiButton,{href:e("management",{path:"stack/license_management"}),fill:!0},xe))))))}));we.displayName="LicensePaywallCard";var ke=a(79);const ze="/api/integration_assistant",Te=`${ze}/ecs`,je=`${ze}/categorization`,Se=`${ze}/related`,Ee=`${ze}/pipeline`,Ae=`${ze}/build`,Oe="/api/fleet/epm/packages",Ie=()=>{const{licensing:e,renderUpselling$:t}=Object(v.a)().services,a=Object(ke.useObservable)(e.license$),i=Object(ke.useObservable)(t);return{hasLicense:Object(n.useMemo)((()=>{var e;return null===(e=null==a?void 0:a.hasAtLeast("enterprise"))||void 0===e||e}),[a]),renderUpselling:i}},Ce=i.a.memo((({children:e})=>{const{hasLicense:t,renderUpselling:a}=Ie();return a?Object(h.jsx)(i.a.Fragment,null,a):t?Object(h.jsx)(i.a.Fragment,null,e):Object(h.jsx)(we,null)}));Ce.displayName="AvailabilityWrapper";var Le=a(46),Pe=a.n(Le);const Ne={name:"6hq1n3",styles:">div{padding-block:0;}"},De={name:"1l5mdb",styles:"width:318px;height:183px;object-fit:cover;object-position:center top"},Fe=i.a.memo((()=>Object(h.jsx)(le.Header,{css:Ne},Object(h.jsx)(j.EuiFlexGroup,{direction:"column",alignItems:"center"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiSpacer,{size:"xl"}),Object(h.jsx)(j.EuiImage,{alt:"create integration background",src:Pe.a,css:De}))))));Fe.displayName="IntegrationImageHeader";const Me={name:"qfmiz3",styles:"animation:none!important"},Ze={name:"1qblass",styles:"min-height:40px"},Ue={name:"1kgscy7",styles:"width:100%;max-width:730px"},qe=i.a.memo((({cancelButtonText:e,nextButtonText:t,backButtonText:a,onNext:n,onBack:i,hideCancel:r=!1,isNextDisabled:o=!1})=>{const s=Object(v.a)().services.application.getUrlForApp("integrations");return Object(h.jsx)(le.BottomBar,{paddingSize:"s",position:"sticky",css:Me},Object(h.jsx)(j.EuiFlexGroup,{direction:"column",alignItems:"center",css:Ze,"data-test-subj":"buttonsFooter"},Object(h.jsx)(j.EuiFlexItem,{css:Ue},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",justifyContent:"spaceBetween",alignItems:"center",gutterSize:"l"},Object(h.jsx)(j.EuiFlexItem,null,!r&&Object(h.jsx)(j.EuiLink,{href:s,color:"text","data-test-subj":"buttonsFooter-cancelButton"},e||Object(h.jsx)(A.FormattedMessage,{id:"xpack.integrationAssistant.footer.cancel",defaultMessage:"Cancel"}))),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"row",justifyContent:"flexEnd",alignItems:"center",gutterSize:"l"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},i&&Object(h.jsx)(j.EuiLink,{onClick:i,color:"text","data-test-subj":"buttonsFooter-backButton"},a||Object(h.jsx)(A.FormattedMessage,{id:"xpack.integrationAssistant.footer.back",defaultMessage:"Back"}))),Object(h.jsx)(j.EuiFlexItem,{grow:!1},n&&Object(h.jsx)(j.EuiButton,{fill:!0,color:"primary",onClick:n,isDisabled:o,"data-test-subj":"buttonsFooter-nextButton"},t||Object(h.jsx)(A.FormattedMessage,{id:"xpack.integrationAssistant.footer.next",defaultMessage:"Next"})))))))))}));qe.displayName="ButtonsFooter";const Re={name:"nxzhuj",styles:"width:100%;max-width:660px"},Be={name:"1azakc",styles:"text-align:center"},Ge=i.a.memo((({children:e,title:t,subtitle:a})=>Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(j.EuiSpacer,{size:"xxl"}),Object(h.jsx)(j.EuiFlexGroup,{direction:"column",alignItems:"center",justifyContent:"center"},Object(h.jsx)(j.EuiFlexItem,{css:Re},Object(h.jsx)(j.EuiFlexGroup,{direction:"column",alignItems:"center",justifyContent:"center",gutterSize:"s"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiTitle,{size:"l"},Object(h.jsx)("h1",{css:Be},t))),a&&Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiText,{size:"s",textAlign:"center",color:"subdued"},a))),Object(h.jsx)(j.EuiSpacer,{size:"l"}),e)))));Ge.displayName="SectionWrapper";let Ve=function(e){return e.landing="landing",e.upload="upload",e.assistant="assistant",e}({});const He={[Ve.landing]:"/create",[Ve.upload]:"/create/upload",[Ve.assistant]:"/create/assistant"},We=()=>{const{navigateToApp:e}=Object(v.a)().services.application;return Object(n.useCallback)((t=>{e("integrations",{path:He[t]})}),[e])},$e={xl:64,l:48,m:32,s:24,xs:16,xxs:12},Ke=({className:e,size:t="s"})=>Object(h.jsx)("svg",{className:e,xmlns:"http://www.w3.org/2000/svg",width:$e[t],height:$e[t],viewBox:"0 0 64 64",fill:"none"},Object(h.jsx)("path",{fill:"#F04E98",d:"M36 28h24v36H36V28Z"}),Object(h.jsx)("path",{fill:"#00BFB3",d:"M4 46c0-9.941 8.059-18 18-18h6v36h-6c-9.941 0-18-8.059-18-18Z"}),Object(h.jsx)("path",{fill:"#343741",d:"M60 12c0 6.627-5.373 12-12 12s-12-5.373-12-12S41.373 0 48 0s12 5.373 12 12Z"}),Object(h.jsx)("path",{fill:"#FA744E",d:"M6 23C6 10.85 15.85 1 28 1v22H6Z"})),Ye=O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.title",{defaultMessage:"Create new integration"}),Qe=O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.description",{defaultMessage:"Start an AI-driven process to build your integration step-by-step, or upload a .zip package of a previously created integration"}),Xe=(O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.packageUpload.title",{defaultMessage:"Package upload"}),O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.packageUpload.description",{defaultMessage:"Use this option if you have an existing integration package in a .zip file"}),O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.packageUpload.button",{defaultMessage:"Upload .zip"}),O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.assistant.title",{defaultMessage:"Create custom integration"})),Je=O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.assistant.description",{defaultMessage:"Use our AI-driven process to build your custom integration"}),et=O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.assistant.button",{defaultMessage:"Create Integration"}),tt=O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.assistant.techPreviewBadge",{defaultMessage:"Technical preview"}),at=O.i18n.translate("xpack.integrationAssistant.createIntegrationLanding.assistant.techPreviewTooltip",{defaultMessage:"This functionality is in technical preview and is subject to change. Please use with caution in production environments."}),nt=i.a.memo((()=>{const{canExecuteConnectors:e}=de(),t=We(),a=(()=>{const{euiTheme:e}=Object(j.useEuiTheme)();return Object(h.css)("margin-block-start:calc(",e.size.s," * -2);","")})();return Object(h.jsx)(j.EuiCard,{display:"plain",hasBorder:!0,paddingSize:"l",title:"",betaBadgeProps:{label:tt,tooltipContent:at}},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",gutterSize:"l",alignItems:"center",justifyContent:"center",css:a},Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(Ke,null)),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"column",gutterSize:"xs",alignItems:"flexStart",justifyContent:"flexStart"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiTitle,{size:"xs"},Object(h.jsx)("h3",null,Xe))),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiText,{size:"s",color:"subdued",textAlign:"left"},Je)))),Object(h.jsx)(j.EuiFlexItem,{grow:!1},e?Object(h.jsx)(j.EuiButton,{onClick:()=>t(Ve.assistant)},et):Object(h.jsx)(ge,{canExecuteConnectors:!0},Object(h.jsx)(j.EuiButton,{disabled:!0},et)))))}));nt.displayName="IntegrationAssistantCard";const it=i.a.memo((()=>{const e=We();return Object(h.jsx)(le,null,Object(h.jsx)(Fe,null),Object(h.jsx)(le.Section,{grow:!0},Object(h.jsx)(Ge,{title:Ye,subtitle:Qe},Object(h.jsx)(Ce,null,Object(h.jsx)(fe,{canCreateIntegrations:!0},Object(h.jsx)(j.EuiFlexGroup,{direction:"column",gutterSize:"l",alignItems:"center",justifyContent:"flexStart"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiSpacer,{size:"l"}),Object(h.jsx)(nt,null)),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"row",gutterSize:"s",alignItems:"center",justifyContent:"flexStart"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(j.EuiIcon,{type:"package",size:"l"})),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiText,{size:"s",color:"subdued"},Object(h.jsx)(A.FormattedMessage,{id:"xpack.integrationAssistant.createIntegrationLanding.uploadPackageDescription",defaultMessage:"If you have an existing integration package, {link}",values:{link:Object(h.jsx)(j.EuiLink,{onClick:()=>e(Ve.upload)},Object(h.jsx)(A.FormattedMessage,{id:"xpack.integrationAssistant.createIntegrationLanding.uploadPackageLink",defaultMessage:"upload it as a .zip"}))}})))))))))),Object(h.jsx)(qe,null))}));it.displayName="CreateIntegrationLanding";const rt=O.i18n.translate("xpack.integrationAssistant.createIntegrationSuccess.title",{defaultMessage:"Success"}),ot=O.i18n.translate("xpack.integrationAssistant.createIntegrationSuccess.description",{defaultMessage:"Your integration is successfully created."}),st=O.i18n.translate("xpack.integrationAssistant.createIntegrationSuccess.addToAgent.title",{defaultMessage:"Add to an agent"}),lt=O.i18n.translate("xpack.integrationAssistant.createIntegrationSuccess.addToAgent.description",{defaultMessage:"Add your new integration to an agent to start collecting data"}),dt=O.i18n.translate("xpack.integrationAssistant.createIntegrationSuccess.addToAgent.button",{defaultMessage:"Add to an agent"}),ct=O.i18n.translate("xpack.integrationAssistant.createIntegrationSuccess.viewIntegration.title",{defaultMessage:"View integration"}),mt=O.i18n.translate("xpack.integrationAssistant.createIntegrationSuccess.viewIntegration.description",{defaultMessage:"See detailed information about your new custom integration"}),ht=O.i18n.translate("xpack.integrationAssistant.createIntegrationSuccess.viewIntegration.button",{defaultMessage:"View Integration"}),pt=i.a.memo((({integrationName:e,children:t})=>{var a;const i=null===(a=Object(v.a)().services.application)||void 0===a?void 0:a.getUrlForApp,{installIntegrationUrl:r,viewIntegrationUrl:o}=Object(n.useMemo)((()=>i?{installIntegrationUrl:null==i?void 0:i("fleet",{path:`/integrations/${e}/add-integration`}),viewIntegrationUrl:null==i?void 0:i("integrations",{path:`/detail/${e}`})}:{installIntegrationUrl:"",viewIntegrationUrl:""}),[e,i]);return Object(h.jsx)(Ge,{title:rt,subtitle:ot},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",gutterSize:"l",alignItems:"center",justifyContent:"center"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiCard,{paddingSize:"l",titleSize:"xs",icon:Object(h.jsx)(j.EuiIcon,{type:"launch",size:"l"}),title:st,description:lt,footer:Object(h.jsx)(j.EuiButton,{href:r},dt)})),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiCard,{paddingSize:"l",titleSize:"xs",icon:Object(h.jsx)(j.EuiIcon,{type:"eye",size:"l"}),title:ct,description:mt,footer:Object(h.jsx)(j.EuiButton,{href:o},ht)}))),t)}));pt.displayName="SuccessSection";var ut=a(30);const ft=ut.z.object({}).catchall(ut.z.lazy((()=>gt))),gt=ut.z.object({on_failure:ut.z.array(ft).optional(),ignore_failure:ut.z.boolean().optional(),ignore_missing:ut.z.boolean().optional(),if:ut.z.string().optional(),tag:ut.z.string().optional()}).catchall(ut.z.unknown()),_t=ut.z.string().min(1),yt=ut.z.string().min(1),vt=ut.z.array(ut.z.string()),bt=ut.z.object({}).passthrough(),xt=ut.z.string(),wt=ut.z.array(ut.z.object({}).passthrough()),kt=ut.z.object({name:ut.z.string().optional(),description:ut.z.string().optional(),version:ut.z.number().int().optional(),processors:ut.z.array(ft),on_failure:ut.z.array(ft).optional()}),zt=ut.z.enum(["aws-cloudwatch","aws-s3","azure-blob-storage","azure-eventhub","cel","cloudfoundry","filestream","gcp-pubsub","gcs","http-endpoint","journald","kafka","tcp","udp"]),Tt=(zt.enum,ut.z.object({name:ut.z.string(),title:ut.z.string(),description:ut.z.string(),inputTypes:ut.z.array(zt),rawSamples:vt,pipeline:kt,docs:wt})),jt=ut.z.object({name:ut.z.string(),title:ut.z.string(),description:ut.z.string(),dataStreams:ut.z.array(Tt),logo:ut.z.string().optional()}),St=ut.z.object({projectName:ut.z.string(),apiKey:ut.z.string()}),Et=(ut.z.object({integration:jt}),ut.z.object({results:ut.z.object({mapping:bt,pipeline:kt})}),ut.z.object({results:ut.z.object({docs:wt,pipeline:kt})}),ut.z.object({results:ut.z.object({docs:wt,pipeline:kt})}),ut.z.object({results:ut.z.object({docs:wt})}),ut.z.object({packageName:_t,dataStreamName:yt,rawSamples:vt,currentPipeline:kt,connectorId:xt,langSmithOptions:St.optional()}),ut.z.object({rawSamples:vt,pipeline:kt}),ut.z.object({packageName:_t,dataStreamName:yt,rawSamples:vt,mapping:bt.optional(),connectorId:xt,langSmithOptions:St.optional()}),ut.z.object({packageName:_t,dataStreamName:yt,rawSamples:vt,currentPipeline:kt,connectorId:xt,langSmithOptions:St.optional()}),{"Elastic-Api-Version":"1"}),At={"Elastic-Api-Version":"2023-10-31"},Ot=async(e,{http:t,abortSignal:a})=>t.post(Oe,{headers:{...At,Accept:"application/zip","Content-Type":"application/zip"},body:e,signal:a}),It=e=>{var t,a;const n=null===(t=e.response)||void 0===t||null===(a=t[0])||void 0===a?void 0:a.id;if(n){const e=n.match(/^.*-([a-z\d_]+)\..*-([\d\.]+)$/),t=null==e?void 0:e.at(1),a=null==e?void 0:e.at(2);if(t&&a)return`${t}-${a}`}return""},Ct=i.a.memo((()=>{const{docLinks:e}=Object(f.useKibana)().services;return Object(h.jsx)(j.EuiText,{size:"s",color:"subdued"},Object(h.jsx)(A.FormattedMessage,{id:"xpack.integrationAssistant.createIntegrationUpload.uploadHelpText",defaultMessage:"For more information, refer to {link}",values:{link:Object(h.jsx)(j.EuiLink,{href:null==e?void 0:e.links.integrationDeveloper.upload,target:"_blank"},Object(h.jsx)(A.FormattedMessage,{id:"xpack.integrationAssistant.createIntegrationUpload.documentation",defaultMessage:"Upload an Integration"}))}}))}));Ct.displayName="DocsLinkSubtitle";const Lt=O.i18n.translate("xpack.integrationAssistant.createIntegrationUpload.title",{defaultMessage:"Upload integration package"}),Pt=O.i18n.translate("xpack.integrationAssistant.createIntegrationUpload.inputText",{defaultMessage:"Drag and drop a .zip file or Browse files"}),Nt=O.i18n.translate("xpack.integrationAssistant.createIntegrationUpload.install",{defaultMessage:"Add to Elastic"}),Dt=O.i18n.translate("xpack.integrationAssistant.createIntegrationUpload.close",{defaultMessage:"Close"}),Ft=O.i18n.translate("xpack.integrationAssistant.createIntegrationUpload.error",{defaultMessage:"Error installing package"}),Mt=i.a.memo((()=>{const e=w(),t=We(),{http:a}=Object(f.useKibana)().services,[r,o]=Object(n.useState)(),[s,l]=Object(n.useState)(!1),[d,c]=Object(n.useState)(),[m,p]=Object(n.useState)(),u=Object(n.useCallback)((()=>{t(Ve.landing)}),[t]),g=Object(n.useCallback)((e=>{o(null==e?void 0:e[0]),c(void 0)}),[]),_=Object(n.useCallback)((()=>{if(null==a||null==r)return;l(!0);const t=new AbortController;(async()=>{try{const n={http:a,abortSignal:t.signal},i=await Ot(r,n),o=It(i);if(!o)throw new Error("Integration name not found in response");e.reportUploadZipIntegrationComplete({integrationName:o}),p(o)}catch(a){if(!t.signal.aborted){var n,i;const t=null!==(n=null===(i=a.body)||void 0===i?void 0:i.message)&&void 0!==n?n:a.message;e.reportUploadZipIntegrationComplete({error:t}),c(`${Ft}: ${t}`)}}finally{l(!1)}})()}),[r,a,e,p,c]);return Object(h.jsx)(le,null,Object(h.jsx)(Fe,null),m?Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(le.Section,{grow:!0},Object(h.jsx)(pt,{integrationName:m})),Object(h.jsx)(qe,{cancelButtonText:Dt})):Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(le.Section,{grow:!0},Object(h.jsx)(Ge,{title:Lt,subtitle:Object(h.jsx)(Ct,null)},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",alignItems:"center",justifyContent:"center",gutterSize:"xl"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiFilePicker,{id:"logsSampleFilePicker",initialPromptText:Pt,onChange:g,display:"large","aria-label":"Upload .zip file",accept:"application/zip",isLoading:s,fullWidth:!0,isInvalid:null!=d}),Object(h.jsx)(j.EuiSpacer,{size:"xs"}),d&&Object(h.jsx)(j.EuiText,{color:"danger",size:"xs"},d))))),Object(h.jsx)(qe,{isNextDisabled:null==r,nextButtonText:Nt,onBack:u,onNext:_})))}));Mt.displayName="CreateIntegrationUpload";const Zt={step:1,connector:void 0,integrationSettings:void 0,isGenerating:!1,result:void 0},Ut=(e,t)=>{switch(t.type){case"SET_STEP":return{...e,step:t.payload,isGenerating:!1,...t.payload<e.step&&{result:void 0}};case"SET_CONNECTOR":return{...e,connector:t.payload};case"SET_INTEGRATION_SETTINGS":return{...e,integrationSettings:t.payload};case"SET_IS_GENERATING":return{...e,isGenerating:t.payload};case"SET_GENERATED_RESULT":return{...e,result:t.payload};default:return e}},qt=Object(n.createContext)(void 0),Rt=qt.Provider,Bt=()=>{const e=Object(n.useContext)(qt);if(!e)throw new Error("useActions must be used within a ActionsProvider");return e},Gt={name:"1kmilxk",styles:"margin-left:-66px;margin-right:-59px"},Vt=O.i18n.translate("xpack.integrationAssistant.step.connector",{defaultMessage:"Connector"}),Ht=O.i18n.translate("xpack.integrationAssistant.step.integration",{defaultMessage:"Integration"}),Wt=O.i18n.translate("xpack.integrationAssistant.step.dataStream",{defaultMessage:"Data stream"}),$t=O.i18n.translate("xpack.integrationAssistant.step.review",{defaultMessage:"Review"}),Kt=(e,t,a)=>e===t?a?"loading":"current":e<t?"complete":"disabled",Yt=(e,t,a)=>e<t?()=>a(e):()=>{},Qt=i.a.memo((({currentStep:e,setStep:t,isGenerating:a})=>{const i=Object(n.useMemo)((()=>[{title:Vt,status:Kt(1,e),onClick:Yt(1,e,t)},{title:Ht,status:Kt(2,e),onClick:Yt(2,e,t)},{title:Wt,status:Kt(3,e,a),onClick:Yt(3,e,t)},{title:$t,status:Kt(4,e,a),onClick:Yt(4,e,t)}]),[e,t,a]);return Object(h.jsx)(j.EuiStepsHorizontal,{steps:i,size:"s",css:Gt})}));Qt.displayName="Steps";const Xt=O.i18n.translate("xpack.integrationAssistant.pages.header.title",{defaultMessage:"New integration"}),Jt=O.i18n.translate("xpack.integrationAssistant.pages.header.avatarTitle",{defaultMessage:"Powered by generative AI"}),ea={name:"1kgscy7",styles:"width:100%;max-width:730px"},ta=i.a.memo((({currentStep:e,isGenerating:t})=>{const{setStep:a}=Bt(),{euiTheme:n}=Object(j.useEuiTheme)(),i=(()=>{const{euiTheme:e}=Object(j.useEuiTheme)();return Object(h.css)("border:1px solid ",e.colors.lightShade,";padding:",e.size.xs,";","")})();return Object(h.jsx)(le.Header,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"column",alignItems:"center"},Object(h.jsx)(j.EuiFlexItem,{css:ea},Object(h.jsx)(j.EuiFlexGroup,{direction:"column",gutterSize:"l"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiSpacer,{size:"s"}),Object(h.jsx)(j.EuiFlexGroup,{direction:"row",alignItems:"center",gutterSize:"s",justifyContent:"center"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(j.EuiAvatar,{name:Jt,size:"m",iconType:Ke,color:n.colors.emptyShade,css:i})),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiText,null,Object(h.jsx)("h1",null,Object(h.jsx)("span",null,Xt)))))),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(Qt,{currentStep:e,setStep:a,isGenerating:t}))))))}));ta.displayName="Header";const aa=O.i18n.translate("xpack.integrationAssistant.bottomBar.analyzeLogs",{defaultMessage:"Analyze logs"}),na=O.i18n.translate("xpack.integrationAssistant.bottomBar.loading",{defaultMessage:"Loading"}),ia=O.i18n.translate("xpack.integrationAssistant.bottomBar.addToElastic",{defaultMessage:"Add to Elastic"}),ra=O.i18n.translate("xpack.integrationAssistant.bottomBar.close",{defaultMessage:"Close"}),oa=i.a.memo((({isGenerating:e})=>e?Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(j.EuiLoadingSpinner,{size:"s","data-test-subj":"generatingLoader"}),na):Object(h.jsx)(i.a.Fragment,null,aa)));oa.displayName="AnalyzeButtonText";const sa=i.a.memo((({currentStep:e,isGenerating:t,isNextStepEnabled:a=!1})=>{const i=w(),{setStep:r,setIsGenerating:o}=Bt(),s=We(),l=Object(n.useCallback)((()=>{1===e?s(Ve.landing):r(e-1)}),[e,s,r]),d=Object(n.useCallback)((()=>{i.reportAssistantStepComplete({step:e}),3===e?o(!0):r(e+1)}),[e,o,r,i]),c=Object(n.useMemo)((()=>3===e?Object(h.jsx)(oa,{isGenerating:t}):4===e?ia:void 0),[e,t]);return 5===e?Object(h.jsx)(qe,{cancelButtonText:ra}):Object(h.jsx)(qe,{isNextDisabled:!a||t,onBack:l,onNext:d,nextButtonText:c})}));sa.displayName="Footer";var la=a(19),da=a(16);const ca=O.i18n.translate("xpack.elasticAssistant.connectors.useLoadActionTypes.errorMessage",{defaultMessage:"An error occurred loading the Kibana Actions. "}),ma=O.i18n.translate("xpack.elasticAssistant.connectors.useLoadConnectors.errorMessage",{defaultMessage:"An error occurred loading the Kibana Connectors. "}),ha=(O.i18n.translate("xpack.elasticAssistant.assistant.connectors.preconfiguredTitle",{defaultMessage:"Preconfigured"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.connectorSelector.ariaLabel",{defaultMessage:"Connector Selector"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.connectorSelector.newConnectorOptions",{defaultMessage:"Add new Connector..."}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.connectorSelector.addConnectorButtonLabel",{defaultMessage:"Add connector"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.connectorSelectorInline.connectorPlaceholder",{defaultMessage:"Select a Connector"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.addConnectorButton.title",{defaultMessage:"Add Generative AI Connector"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.addConnectorButton.description",{defaultMessage:"Configure a connector to continue the conversation"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.addConnectorButton.missingPrivilegesTitle",{defaultMessage:"Generative AI Connector Required"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.addConnectorButton.missingPrivilegesDescription",{defaultMessage:"Please contact your administrator to enable a Generative AI Connector."}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.setup.userYouTitle",{defaultMessage:"You"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.setup.userAssistantTitle",{defaultMessage:"Assistant"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.setup.timestampAtTitle",{defaultMessage:"at"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.setup.skipTitle",{defaultMessage:"Click to skip..."}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.connectorMissingCallout.calloutTitle",{defaultMessage:"The current conversation is missing a connector configuration"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.connectorMissingCallout.conversationSettingsLink",{defaultMessage:"Conversation Settings"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.createConnectorButton",{defaultMessage:"Connector"}),O.i18n.translate("xpack.elasticAssistant.assistant.connectors.refreshConnectorsButton",{defaultMessage:"Refresh"}),["elastic-assistant, load-connectors"]),pa={bedrock:".bedrock",openai:".gen-ai",gemini:".gemini"},ua={name:"1kgscy7",styles:"width:100%;max-width:730px"},fa=i.a.memo((({children:e,title:t,subtitle:a,right:n})=>Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"column",alignItems:"center"},Object(h.jsx)(j.EuiFlexItem,{css:ua},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",justifyContent:"spaceBetween",alignItems:"flexEnd"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"column",alignItems:"flexStart",justifyContent:"flexStart",gutterSize:"xs"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiTitle,{size:"xs"},Object(h.jsx)("h1",null,t))),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiText,{size:"s",color:"subdued"},a)))),n&&Object(h.jsx)(j.EuiFlexItem,{grow:!1},n)),Object(h.jsx)(j.EuiSpacer,{size:"m"}),e)))));fa.displayName="StepContentWrapper";var ga=a(15);const _a=i.a.memo((({connectors:e,selectedConnectorId:t})=>{const{triggersActionsUi:{actionTypeRegistry:a}}=Object(v.a)().services,{setConnector:n}=Bt(),i=(()=>{const{euiTheme:e}=Object(j.useEuiTheme)();return Object(h.css)("&.euiPanel:hover,&.euiPanel:focus{box-shadow:none;transform:none;}&.euiPanel:hover{background-color:",e.colors.lightestShade,";}.euiRadio{color:",e.colors.primaryText,";label.euiRadio__label{padding-left:",e.size.xl,"!important;}}","")})();return Object(h.jsx)(j.EuiFlexGroup,{alignItems:"stretch",direction:"column",gutterSize:"s","data-test-subj":"connectorSelector"},e.map((e=>Object(h.jsx)(j.EuiFlexItem,{key:e.id},Object(h.jsx)(j.EuiPanel,{key:e.id,onClick:()=>n(e),hasShadow:!1,hasBorder:!0,paddingSize:"l",css:i,"data-test-subj":`connectorSelector-${e.id}`},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",alignItems:"center",justifyContent:"spaceBetween"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiRadio,{label:e.name,id:e.id,checked:t===e.id,onChange:ga.noop,"data-test-subj":`connectorSelectorRadio-${e.id}${t===e.id?"-selected":""}`})),Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(j.EuiBadge,{color:"hollow"},a.get(e.actionTypeId).actionTypeTitle))))))))}));_a.displayName="ConnectorSelector";var ya=a(22);const va=["elastic-assistant, load-action-types"],ba=i.a.memo((({onConnectorSaved:e,onClose:t,actionTypeIds:a,compressed:r=!1})=>{const o=(()=>{const{euiTheme:e}=Object(j.useEuiTheme)();return Object(h.css)("&.euiPanel:hover{background-color:",e.colors.lightestShade,";}","")})(),{http:s,triggersActionsUi:{actionTypeRegistry:l},notifications:{toasts:d}}=Object(v.a)().services,[c,m]=Object(n.useState)(null),p=Object(n.useCallback)((()=>{m(null),null==t||t()}),[t]),{data:u}=(({http:e,toasts:t})=>Object(la.useQuery)(va,(async()=>(await Object(da.loadActionTypes)({http:e,featureId:ya.GenerativeAIForSecurityConnectorFeatureId})).sort(((e,t)=>e.name.localeCompare(t.name)))),{retry:!1,keepPreviousData:!0,staleTime:6e4,onError:e=>{"AbortError"!==e.name&&(null==t||t.addError(e.body&&e.body.message?new Error(e.body.message):e,{title:ca}))}}))({http:s,toasts:d}),f=Object(n.useMemo)((()=>a&&u?u.filter((e=>a.includes(e.id))):u),[u,a]);return f?Object(h.jsx)(i.a.Fragment,null,r?Object(h.jsx)(j.EuiListGroup,{flush:!0,"data-test-subj":"connectorSetupCompressed",listItems:f.map((e=>({id:e.id,label:e.name,size:"s",icon:Object(h.jsx)(j.EuiIcon,{size:"l",color:"text",type:l.get(e.id).iconClass}),isDisabled:!e.enabled,onClick:()=>m(e)})))}):Object(h.jsx)(j.EuiFlexGroup,{direction:"column",gutterSize:"s","data-test-subj":"connectorSetupPage"},null==f?void 0:f.map((e=>Object(h.jsx)(j.EuiFlexItem,{key:e.id},Object(h.jsx)(j.EuiLink,{onClick:()=>m(e),"data-test-subj":`actionType-${e.id}`},Object(h.jsx)(j.EuiPanel,{hasShadow:!1,hasBorder:!0,paddingSize:"l",css:o},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",alignItems:"center",gutterSize:"s"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(j.EuiIcon,{size:"xl",color:"text",type:l.get(e.id).iconClass})),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiText,{size:"s"},e.name))))))))),c&&Object(h.jsx)(da.ConnectorAddModal,{actionTypeRegistry:l,actionType:c,onClose:p,postSaveEventHandler:e})):Object(h.jsx)(j.EuiLoadingSpinner,null)}));ba.displayName="ConnectorSetup";const xa=O.i18n.translate("xpack.integrationAssistant.steps.connector.title",{defaultMessage:"Choose your AI connector"}),wa=O.i18n.translate("xpack.integrationAssistant.steps.connector.description",{defaultMessage:"Select an AI connector to help you create your custom integration"}),ka=O.i18n.translate("xpack.integrationAssistant.steps.connector.createConnectorLabel",{defaultMessage:"Create new connector"}),za=O.i18n.translate("xpack.integrationAssistant.steps.connector.supportedModelsInfo",{defaultMessage:"Automatic Import currently supports Anthropic models via Elastic's connector for Amazon Bedrock. Support for additional LLMs will be introduced soon"}),Ta=[".bedrock"],ja=i.a.memo((({connector:e})=>{const{euiTheme:t}=Object(j.useEuiTheme)(),{http:a,notifications:r}=Object(v.a)().services,{setConnector:o}=Bt(),[s,l]=Object(n.useState)(),{isLoading:d,data:c,refetch:m}=(({http:e,toasts:t})=>Object(la.useQuery)(ha,(async()=>(await Object(da.loadAllActions)({http:e})).reduce(((e,t)=>{var a,n;return[...e,...!t.isMissingSecrets&&[pa.bedrock,pa.openai,pa.gemini].includes(t.actionTypeId)?[{...t,apiProvider:t.isPreconfigured||t.isSystemAction||null==t||null===(a=t.config)||void 0===a||!a.apiProvider||null==t||null===(n=t.config)||void 0===n?void 0:n.apiProvider}]:[]]}),[])),{retry:!1,keepPreviousData:!0,onError:e=>{"AbortError"!==e.name&&(null==t||t.addError(e.body&&e.body.message?new Error(e.body.message):e,{title:ma}))}}))({http:a,toasts:r.toasts});Object(n.useEffect)((()=>{if(null!=c){const e=c.filter((({actionTypeId:e})=>Ta.includes(e)));l(e),e&&1===e.length&&o(e[0])}}),[c,o]);const p=Object(n.useCallback)((()=>m()),[m]),u=!d&&(null==s?void 0:s.length);return Object(h.jsx)(fa,{title:xa,subtitle:wa,right:u?Object(h.jsx)(Sa,{onConnectorSaved:p}):null},Object(h.jsx)(j.EuiFlexGroup,{direction:"column",alignItems:"stretch"},Object(h.jsx)(j.EuiFlexItem,null,d?Object(h.jsx)(j.EuiLoadingSpinner,null):Object(h.jsx)(i.a.Fragment,null,u?Object(h.jsx)(_a,{connectors:s,selectedConnectorId:null==e?void 0:e.id}):Object(h.jsx)(fe,{canCreateConnectors:!0},Object(h.jsx)(ba,{actionTypeIds:Ta,onConnectorSaved:p}))))),Object(h.jsx)(j.EuiSpacer,{size:"m"}),Object(h.jsx)(j.EuiText,{size:"s",color:"subdued"},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",gutterSize:"xs",alignItems:"flexStart"},Object(h.jsx)(j.EuiFlexItem,{grow:!1,css:Object(h.css)({margin:t.size.xxs},"","")},Object(h.jsx)(j.EuiIcon,{type:"iInCircle"})),Object(h.jsx)(j.EuiFlexItem,null,za))))}));ja.displayName="ConnectorStep";const Sa=i.a.memo((({onConnectorSaved:e})=>{const{canCreateConnectors:t}=de(),[a,i]=Object(n.useState)(!1),r=Object(n.useCallback)((()=>i(!0)),[]),o=Object(n.useCallback)((()=>i(!1)),[]),s=Object(n.useCallback)((()=>{e(),o()}),[e,o]);return t?Object(h.jsx)(j.EuiPopover,{button:Object(h.jsx)(j.EuiText,{size:"s"},Object(h.jsx)(j.EuiLink,{"data-test-subj":"createConnectorPopoverButton",onClick:r},ka)),isOpen:a,closePopover:o,"data-test-subj":"createConnectorPopover"},Object(h.jsx)(ba,{actionTypeIds:Ta,onConnectorSaved:s,onClose:o,compressed:!0})):Object(h.jsx)(ge,{canCreateConnectors:!0},Object(h.jsx)(j.EuiLink,{"data-test-subj":"createConnectorPopoverButtonDisabled",disabled:!0},ka))}));Sa.displayName="CreateConnectorPopover";const Ea=O.i18n.translate("xpack.integrationAssistant.step.integration.title",{defaultMessage:"Integration details"}),Aa=O.i18n.translate("xpack.integrationAssistant.step.integration.description",{defaultMessage:"Name your integration, give it a description, and (optional) add a logo"}),Oa=O.i18n.translate("xpack.integrationAssistant.step.integration.integrationTitle",{defaultMessage:"Title"}),Ia=O.i18n.translate("xpack.integrationAssistant.step.integration.integrationDescription",{defaultMessage:"Description"}),Ca=O.i18n.translate("xpack.integrationAssistant.step.integration.logo.label",{defaultMessage:"Logo (optional)"}),La=O.i18n.translate("xpack.integrationAssistant.step.integration.logo.description",{defaultMessage:"Drag and drop a .svg file or Browse files"}),Pa=O.i18n.translate("xpack.integrationAssistant.step.integration.preview",{defaultMessage:"Preview"}),Na=O.i18n.translate("xpack.integrationAssistant.step.integration.previewTooltip",{defaultMessage:"This is a preview of the integration card for the integrations catalog"}),Da=O.i18n.translate("xpack.integrationAssistant.step.integration.logo.error",{defaultMessage:"Error processing logo file"}),Fa=i.a.memo((({integrationSettings:e})=>{var t,a;const n=(()=>{const{euiTheme:e}=Object(j.useEuiTheme)();return Object(h.css)("margin-top:calc(\n      ",e.size.m," + 7px\n    );min-height:127px;[class*='euiCard__content']{display:flex;flex-direction:column;block-size:100%;}[class*='euiCard__description']{flex-grow:1;}","")})();return Object(h.jsx)(j.EuiCard,{css:n,"data-test-subj":"packageCardPreview",layout:"horizontal",title:null!==(t=null==e?void 0:e.title)&&void 0!==t?t:"",description:null!==(a=null==e?void 0:e.description)&&void 0!==a?a:"",titleSize:"xs",hasBorder:!0,icon:Object(h.jsx)(j.EuiIcon,{size:"xl","data-test-subj":"packageCardPreviewIcon",type:null!=e&&e.logo?`data:image/svg+xml;base64,${e.logo}`:"package"}),betaBadgeProps:{label:Pa,tooltipContent:Na}})}));Fa.displayName="PackageCardPreview";const Ma=i.a.memo((({integrationSettings:e})=>{var t,a;const r=(()=>{const{euiTheme:e}=Object(j.useEuiTheme)(),t=Object(j.useEuiBackgroundColor)("subdued");return{left:Object(h.css)("padding:",e.size.l,";",""),right:Object(h.css)("padding:",e.size.l,";background:",t,";width:45%;","")}})(),{setIntegrationSettings:o}=Bt(),[s,l]=i.a.useState(),d=Object(n.useCallback)((t=>o({...e,...t})),[e,o]),c=Object(n.useMemo)((()=>({title:e=>d({title:e.target.value}),description:e=>d({description:e.target.value}),logo:e=>{l(void 0);const t=null==e?void 0:e[0];t?t.size>1048576?l(`${t.name} is too large, maximum size is 1Mb.`):t.arrayBuffer().then((e=>{const t=window.btoa(String.fromCharCode(...new Uint8Array(e)));d({logo:t})})).catch((e=>{l(Da)})):d({logo:void 0})}})),[d]);return Object(h.jsx)(fa,{title:Ea,subtitle:Aa},Object(h.jsx)(j.EuiPanel,{paddingSize:"none",hasShadow:!1,hasBorder:!0,"data-test-subj":"integrationStep"},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",gutterSize:"none"},Object(h.jsx)(j.EuiFlexItem,{css:r.left},Object(h.jsx)(j.EuiForm,{component:"form",fullWidth:!0},Object(h.jsx)(j.EuiFormRow,{label:Oa},Object(h.jsx)(j.EuiFieldText,{name:"title",value:null!==(t=null==e?void 0:e.title)&&void 0!==t?t:"",onChange:c.title,"data-test-subj":"integrationTitleInput"})),Object(h.jsx)(j.EuiFormRow,{label:Ia},Object(h.jsx)(j.EuiTextArea,{name:"description",value:null!==(a=null==e?void 0:e.description)&&void 0!==a?a:"",onChange:c.description,"data-test-subj":"integrationDescriptionInput"})),Object(h.jsx)(j.EuiFormRow,{label:Ca},Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(j.EuiFilePicker,{id:"logsSampleFilePicker",initialPromptText:La,onChange:c.logo,display:"large","aria-label":"Upload an svg logo image",accept:"image/svg+xml",isInvalid:null!=s,"data-test-subj":"integrationLogoFilePicker"}),Object(h.jsx)(j.EuiSpacer,{size:"xs"}),s&&Object(h.jsx)(j.EuiText,{color:"danger",size:"xs"},s))))),Object(h.jsx)(j.EuiFlexItem,{grow:!1,css:r.right},Object(h.jsx)(j.EuiFlexGroup,{direction:"column",gutterSize:"none"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(Fa,{integrationSettings:e})))))))}));Ma.displayName="IntegrationStep";const Za=new(a(23).Storage)(window.sessionStorage),Ua=(e="elasticAssistantDefault")=>{const t=Za.get(`${e}.traceOptions`);if(t)return{projectName:t.langSmithProject,apiKey:t.langSmithApiKey}},qa=O.i18n.translate("xpack.integrationAssistant.step.dataStream.integrationNameTitle",{defaultMessage:"Define package name"}),Ra=O.i18n.translate("xpack.integrationAssistant.step.dataStream.integrationNameDescription",{defaultMessage:"The package name is used to refer to the integration in Elastic's ingest pipeline"}),Ba=O.i18n.translate("xpack.integrationAssistant.step.dataStream.dataStreamTitle",{defaultMessage:"Define data stream and upload logs"}),Ga=O.i18n.translate("xpack.integrationAssistant.step.dataStream.dataStreamDescription",{defaultMessage:"Logs are analyzed to automatically map ECS fields and help create the ingestion pipeline"}),Va=O.i18n.translate("xpack.integrationAssistant.step.dataStream.integrationName.label",{defaultMessage:"Integration package name"}),Ha=O.i18n.translate("xpack.integrationAssistant.step.dataStream.noSpacesHelpText",{defaultMessage:"Name can only contain lowercase letters, numbers, and underscore (_)"}),Wa=O.i18n.translate("xpack.integrationAssistant.step.dataStream.packageNamesFetchError",{defaultMessage:"Error fetching package names"}),$a=O.i18n.translate("xpack.integrationAssistant.step.dataStream.nameAlreadyExistsError",{defaultMessage:"This integration name is already in use. Please choose a different name."}),Ka=O.i18n.translate("xpack.integrationAssistant.step.dataStream.dataStreamTitle.label",{defaultMessage:"Data stream title"}),Ya=O.i18n.translate("xpack.integrationAssistant.step.dataStream.dataStreamDescription.label",{defaultMessage:"Data stream description"}),Qa=O.i18n.translate("xpack.integrationAssistant.step.dataStream.dataStreamName.label",{defaultMessage:"Data stream name"}),Xa=O.i18n.translate("xpack.integrationAssistant.step.dataStream.dataCollectionMethod.label",{defaultMessage:"Data collection method"}),Ja=O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.label",{defaultMessage:"Logs"}),en=O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.warning",{defaultMessage:"Please note that this data will be analyzed by a third-party AI tool. Ensure that you comply with privacy and security guidelines when selecting data."}),tn=O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.description",{defaultMessage:"Drag and drop a file or Browse files."}),an=O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.description2",{defaultMessage:"JSON/NDJSON format"}),nn={CAN_NOT_READ:O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.errorCanNotRead",{defaultMessage:"Failed to read the logs sample file"}),FORMAT:e=>O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.errorFormat",{values:{fileType:e},defaultMessage:"The logs sample file has not a valid {fileType} format"}),NOT_ARRAY:O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.errorNotArray",{defaultMessage:"The logs sample file is not an array"}),EMPTY:O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.errorEmpty",{defaultMessage:"The logs sample file is empty"}),NOT_OBJECT:O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.errorNotObject",{defaultMessage:"The logs sample file contains non-object entries"})},rn=O.i18n.translate("xpack.integrationAssistant.step.dataStream.analyzing",{defaultMessage:"Analyzing"}),on=O.i18n.translate("xpack.integrationAssistant.step.dataStream.progress.ecsMapping",{defaultMessage:"Mapping ECS fields"}),sn=O.i18n.translate("xpack.integrationAssistant.step.dataStream.progress.categorization",{defaultMessage:"Adding categorization"}),ln=O.i18n.translate("xpack.integrationAssistant.step.dataStream.progress.relatedGraph",{defaultMessage:"Generating related fields"}),dn=O.i18n.translate("xpack.integrationAssistant.step.dataStream.retryButtonLabel",{defaultMessage:"Retry"}),cn=["ecs","categorization","related"],mn={ecs:on,categorization:sn,related:ln},hn=i.a.memo((({integrationSettings:e,connector:t,onComplete:a,onClose:r})=>{const{headerCss:o,bodyCss:s}=(()=>{const{euiTheme:e}=Object(j.useEuiTheme)();return{headerCss:Object(h.css)("justify-content:center;margin-top:",e.size.m,";",""),bodyCss:Object(h.css)("padding:",e.size.xxxxl,";min-width:600px;","")}})(),{progress:l,error:d,retry:c}=(({integrationSettings:e,connector:t,onComplete:a})=>{const{reportGenerationComplete:i}=w(),{http:r,notifications:o}=Object(v.a)().services,[s,l]=Object(n.useState)(),[d,c]=Object(n.useState)(null),[m,h]=Object(n.useState)(!0);return Object(n.useEffect)((()=>{if(!m||null==r||null==t||null==e||null==(null==o?void 0:o.toasts))return;const n=Date.now(),s=new AbortController,d={http:r,abortSignal:s.signal};return(async()=>{try{var r,o,m;const h={packageName:null!==(r=e.name)&&void 0!==r?r:"",dataStreamName:null!==(o=e.dataStreamName)&&void 0!==o?o:"",rawSamples:null!==(m=e.logsSampleParsed)&&void 0!==m?m:[],connectorId:t.id,langSmithOptions:Ua()};l("ecs");const p=await(async(e,{http:t,abortSignal:a})=>t.post(Te,{headers:Et,body:JSON.stringify(e),signal:a}))(h,d);if(s.signal.aborted)return;if(Object(ga.isEmpty)(null==p?void 0:p.results))return void c("No results from ECS graph");const u={...h,currentPipeline:p.results.pipeline};l("categorization");const f=await(async(e,{http:t,abortSignal:a})=>t.post(je,{headers:Et,body:JSON.stringify(e),signal:a}))(u,d);if(s.signal.aborted)return;const g={...u,currentPipeline:f.results.pipeline};l("related");const _=await(async(e,{http:t,abortSignal:a})=>t.post(Se,{headers:Et,body:JSON.stringify(e),signal:a}))(g,d);if(s.signal.aborted)return;if(Object(ga.isEmpty)(null==_?void 0:_.results))throw new Error("Results not found in response");i({connector:t,integrationSettings:e,durationMs:Date.now()-n}),a(_.results)}catch(a){if(s.signal.aborted)return;const r=`${a.message}${a.body?` (${a.body.statusCode}): ${a.body.message}`:""}`;i({connector:t,integrationSettings:e,durationMs:Date.now()-n,error:r}),c(r)}finally{h(!1)}})(),()=>{s.abort()}}),[m,a,l,t,r,e,i,null==o?void 0:o.toasts]),{progress:s,error:d,retry:Object(n.useCallback)((()=>{c(null),h(!0)}),[])}})({integrationSettings:e,connector:t,onComplete:a}),m=Object(n.useMemo)((()=>l?cn.indexOf(l)+1:0),[l]);return Object(h.jsx)(j.EuiModal,{onClose:r,"data-test-subj":"generationModal"},Object(h.jsx)(j.EuiModalHeader,{css:o},Object(h.jsx)(j.EuiModalHeaderTitle,null,rn)),Object(h.jsx)(j.EuiModalBody,{css:s},Object(h.jsx)(j.EuiFlexGroup,{direction:"column",gutterSize:"l",justifyContent:"center"},l&&Object(h.jsx)(i.a.Fragment,null,d?Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiCallOut,{title:(p=mn[l],O.i18n.translate("xpack.integrationAssistant.step.dataStream.generationError",{values:{progressStep:p},defaultMessage:"An error occurred during: {progressStep}"})),color:"danger",iconType:"alert","data-test-subj":"generationErrorCallout"},d)):Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"row",gutterSize:"s",alignItems:"center",justifyContent:"center"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(j.EuiLoadingSpinner,{size:"s"})),Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(j.EuiText,{size:"xs",color:"subdued"},mn[l])))),Object(h.jsx)(j.EuiFlexItem,null),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiProgress,{value:m,max:4,color:"primary",size:"m"})))))),Object(h.jsx)(j.EuiModalFooter,null,d?Object(h.jsx)(j.EuiFlexGroup,{justifyContent:"center"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(j.EuiButtonEmpty,{iconType:"refresh",onClick:c,"data-test-subj":"retryButton"},dn))):Object(h.jsx)(j.EuiSpacer,{size:"xl"})));var p}));hn.displayName="GenerationModal";const pn=i.a.memo((({integrationSettings:e})=>{const{notifications:t}=Object(f.useKibana)().services,{setIntegrationSettings:a}=Bt(),[r,o]=Object(n.useState)(!1),[s,l]=Object(n.useState)(),d=Object(n.useCallback)((n=>{const i=null==n?void 0:n[0];if(null==i)return l(void 0),void a({...e,logsSampleParsed:void 0});const r=new FileReader;r.onload=function(n){var r;const s=null===(r=n.target)||void 0===r?void 0:r.result,{error:d,isTruncated:c,logsSampleParsed:m}=((e,t)=>{if(null==e)return{error:nn.CAN_NOT_READ};let a;try{"application/json"===t?a=JSON.parse(e):"application/x-ndjson"===t&&(a=e.split("\n").filter((e=>""!==e.trim())).map((e=>JSON.parse(e))))}catch(e){return{error:nn.FORMAT(t)}}if(!Array.isArray(a))return{error:nn.NOT_ARRAY};if(0===a.length)return{error:nn.EMPTY};let n=!1;return a.length>10&&(a=a.slice(0,10),n=!0),a.some((e=>!Object(ga.isPlainObject)(e)))?{error:nn.NOT_OBJECT}:{isTruncated:n,logsSampleParsed:a.map((e=>JSON.stringify(e)))}})(s,i.type);o(!1),l(d),d?a({...e,logsSampleParsed:void 0}):(c&&(null==t||t.toasts.addInfo(O.i18n.translate("xpack.integrationAssistant.step.dataStream.logsSample.truncatedWarning",{values:{maxRows:10},defaultMessage:"The logs sample has been truncated to {maxRows} rows."}))),a({...e,logsSampleParsed:m}))},o(!0),r.readAsText(i)}),[e,a,null==t?void 0:t.toasts,o]);return Object(h.jsx)(j.EuiFormRow,{label:Ja,helpText:Object(h.jsx)(j.EuiText,{color:"danger",size:"xs"},s),isInvalid:null!=s},Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(j.EuiCallOut,{iconType:"iInCircle",color:"warning"},en),Object(h.jsx)(j.EuiSpacer,{size:"s"}),Object(h.jsx)(j.EuiFilePicker,{id:"logsSampleFilePicker",initialPromptText:Object(h.jsx)(i.a.Fragment,null,Object(h.jsx)(j.EuiText,{size:"s",textAlign:"center"},tn),Object(h.jsx)(j.EuiText,{size:"xs",color:"subdued",textAlign:"center"},an)),onChange:d,display:"large","aria-label":"Upload logs sample file",accept:"application/json,application/x-ndjson",isLoading:r,"data-test-subj":"logsSampleFilePicker","data-loading":r})))}));pn.displayName="SampleLogsInput";const un=[{value:"aws-cloudwatch",label:"AWS Cloudwatch"},{value:"aws-s3",label:"AWS S3"},{value:"azure-blob-storage",label:"Azure Blob Storage"},{value:"azure-eventhub",label:"Azure Event Hub"},{value:"cel",label:"Common Expression Language (CEL)"},{value:"cloudfoundry",label:"Cloud Foundry"},{value:"filestream",label:"File Stream"},{value:"gcp-pubsub",label:"GCP Pub/Sub"},{value:"gcs",label:"Google Cloud Storage"},{value:"http-endpoint",label:"HTTP Endpoint"},{value:"journald",label:"Journald"},{value:"kafka",label:"Kafka"},{value:"tcp",label:"TCP"},{value:"udp",label:"UDP"}],fn=e=>/^[a-z0-9_]+$/.test(e),gn=i.a.memo((({integrationSettings:e,connector:t,isGenerating:a})=>{var i,r,o,s;const{setIntegrationSettings:l,setIsGenerating:d,setStep:c,setResult:m}=Bt(),{isLoading:p,packageNames:u}=(()=>{const{http:e,notifications:t}=Object(v.a)().services,[a,i]=Object(n.useState)(),[r,o]=Object(n.useState)(!0);return Object(n.useEffect)((()=>{const a=new AbortController,n={http:e,abortSignal:a.signal};return(async()=>{try{var e;o(!0);const t=await(async({http:e,abortSignal:t})=>e.get(Oe,{headers:At,query:{prerelease:!0},signal:t}))(n);if(a.signal.aborted)return;if(null==t||null===(e=t.response)||void 0===e||!e.length)throw Error("No packages found");i(new Set(t.response.map((e=>e.name))))}catch(e){a.signal.aborted||null==t||t.toasts.addError(e,{title:Wa})}finally{o(!1)}})(),()=>{a.abort()}}),[e,t]),{isLoading:r,packageNames:a}})(),[f,g]=Object(n.useState)(null!==(i=null==e?void 0:e.name)&&void 0!==i?i:""),[_,y]=Object(n.useState)(null!==(r=null==e?void 0:e.dataStreamName)&&void 0!==r?r:""),[b,x]=Object(n.useState)({name:!1,dataStreamName:!1}),w=Object(n.useCallback)((t=>l({...e,...t})),[e,l]),k=Object(n.useMemo)((()=>({name:e=>{const t=e.target.value;g(t),!fn(t)||null!=u&&u.has(t)?(x((e=>({...e,name:!0}))),w({name:void 0})):(x((e=>({...e,name:!1}))),w({name:t}))},dataStreamName:e=>{const t=e.target.value;y(t),fn(t)?(x((e=>({...e,dataStreamName:!1}))),w({dataStreamName:t})):(x((e=>({...e,dataStreamName:!0}))),w({dataStreamName:void 0}))},dataStreamTitle:e=>w({dataStreamTitle:e.target.value}),dataStreamDescription:e=>w({dataStreamDescription:e.target.value}),inputTypes:e=>{w({inputTypes:e.map((e=>e.value))})}})),[w,x,u]);Object(n.useEffect)((()=>{if(null!=u&&null==(null==e?void 0:e.name)&&null!=e&&e.title){const t=e.title.toLowerCase().replaceAll(/[^a-z0-9]/g,"_");u.has(t)||(g(t),w({name:t}))}}),[u]);const z=Object(n.useCallback)((e=>{e&&(m(e),d(!1),c(4))}),[m,d,c]),T=Object(n.useCallback)((()=>{d(!1)}),[d]),S=Object(n.useMemo)((()=>{if(u&&f&&u.has(f))return $a}),[u,f]),E=Object(n.useMemo)((()=>un.filter((t=>{var a;return null==e||null===(a=e.inputTypes)||void 0===a?void 0:a.includes(t.value)}))),[null==e?void 0:e.inputTypes]);return Object(h.jsx)(j.EuiFlexGroup,{direction:"column",gutterSize:"l","data-test-subj":"dataStreamStep"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(fa,{title:qa,subtitle:Ra},Object(h.jsx)(j.EuiPanel,{hasShadow:!1,hasBorder:!0},Object(h.jsx)(j.EuiForm,{component:"form",fullWidth:!0},Object(h.jsx)(j.EuiFormRow,{label:Va,helpText:S||b.name?void 0:Ha,isInvalid:!!S||b.name,error:[null!=S?S:Ha]},Object(h.jsx)(j.EuiFieldText,{name:"name","data-test-subj":"nameInput",value:f,onChange:k.name,isInvalid:b.name,isLoading:p,disabled:p})))))),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(fa,{title:Ba,subtitle:Ga},Object(h.jsx)(j.EuiPanel,{hasShadow:!1,hasBorder:!0},Object(h.jsx)(j.EuiForm,{component:"form",fullWidth:!0},Object(h.jsx)(j.EuiFormRow,{label:Ka},Object(h.jsx)(j.EuiFieldText,{name:"dataStreamTitle","data-test-subj":"dataStreamTitleInput",value:null!==(o=null==e?void 0:e.dataStreamTitle)&&void 0!==o?o:"",onChange:k.dataStreamTitle})),Object(h.jsx)(j.EuiFormRow,{label:Ya},Object(h.jsx)(j.EuiFieldText,{name:"dataStreamDescription","data-test-subj":"dataStreamDescriptionInput",value:null!==(s=null==e?void 0:e.dataStreamDescription)&&void 0!==s?s:"",onChange:k.dataStreamDescription})),Object(h.jsx)(j.EuiFormRow,{label:Qa,helpText:b.dataStreamName?void 0:Ha,isInvalid:b.dataStreamName,error:[Ha]},Object(h.jsx)(j.EuiFieldText,{name:"dataStreamName","data-test-subj":"dataStreamNameInput",value:_,onChange:k.dataStreamName,isInvalid:b.dataStreamName})),Object(h.jsx)(j.EuiFormRow,{label:Xa},Object(h.jsx)(j.EuiComboBox,{"data-test-subj":"dataCollectionMethodInput",options:un,selectedOptions:E,onChange:k.inputTypes,fullWidth:!0})),Object(h.jsx)(pn,{integrationSettings:e})))),a&&Object(h.jsx)(hn,{integrationSettings:e,connector:t,onComplete:z,onClose:T})))}));gn.displayName="DataStreamStep";var _n=a(24),yn=a(25),vn=a(215);const bn=e=>{switch(e){case"string":return"tokenString";case"keyword":return"tokenKeyword";case"number":case"long":case"float":return"tokenNumber";case"date":return"tokenDate";case"ip":case"geo_point":return"tokenGeo";default:return"tokenQuestionInCircle"}},xn={css:{display:"flex"}},wn=[{field:"name",name:"Name",sortable:!0,render:(e,{type:t})=>Object(h.jsx)(j.EuiFlexGroup,{alignItems:"center",gutterSize:"s"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},t?Object(h.jsx)(j.EuiToolTip,{content:t,anchorProps:xn},Object(h.jsx)(j.EuiToken,{"data-test-subj":`field-${e}-icon`,iconType:bn(null!=t?t:null)})):Object(h.jsx)(j.EuiIcon,{type:"questionInCircle"})),Object(h.jsx)(j.EuiFlexItem,{grow:!1},e))},{field:"value",name:"Value",sortable:!0}],kn={box:{incremental:!0,schema:!0}},zn=i.a.memo((({documents:e=[]})=>{const t=Object(n.useMemo)((()=>(e=>{if(!e)return[];const t=[],a=(e,n="")=>{Object.entries(e).forEach((([e,i])=>{const r=`${n}${e}`;var o;Array.isArray(i)||"object"!=typeof i||null===i?t.push({name:r,value:i,type:null===(o=vn.EcsFlat[r])||void 0===o?void 0:o.type}):a(i,`${r}.`)}))};return a(e),t})(e[0])),[e]);return Object(h.jsx)(j.EuiInMemoryTable,{items:t,columns:wn,search:kn,pagination:!0,sorting:!0})}));zn.displayName="FieldsTable";const Tn=O.i18n.translate("xpack.integrationAssistant.step.review.title",{defaultMessage:"Review results"}),jn=O.i18n.translate("xpack.integrationAssistant.step.review.description",{defaultMessage:"Review all the fields and their values in your integration. Make any necessary adjustments to ensure accuracy."}),Sn=O.i18n.translate("xpack.integrationAssistant.step.review.editPipeline",{defaultMessage:"Edit pipeline"}),En=O.i18n.translate("xpack.integrationAssistant.step.review.ingestPipelineTitle",{defaultMessage:"Ingest pipeline"}),An=O.i18n.translate("xpack.integrationAssistant.step.review.save",{defaultMessage:"Save"}),On={name:"1guyr1a",styles:"height:100%;.euiFlyoutBody__overflowContent{height:100%;padding:0;}"};var In={name:"13udsys",styles:"height:100%"};const Cn=i.a.memo((({integrationSettings:e,isGenerating:t,result:a})=>{const[r,o]=Object(n.useState)(),{error:s}=(({integrationSettings:e,customPipeline:t})=>{const{http:a,notifications:i}=Object(f.useKibana)().services,{setIsGenerating:r,setResult:o}=Bt(),[s,l]=Object(n.useState)(null);return Object(n.useEffect)((()=>{if(null==t||null==a||null==e||null==(null==i?void 0:i.toasts))return;const n=new AbortController,s={http:a,abortSignal:n.signal};return(async()=>{try{var a;const i={pipeline:t,rawSamples:null!==(a=e.logsSampleParsed)&&void 0!==a?a:[]};r(!0);const d=await(async(e,{http:t,abortSignal:a})=>t.post(Ee,{headers:Et,body:JSON.stringify(e),signal:a}))(i,s);if(n.signal.aborted)return;if(Object(ga.isEmpty)(null==d?void 0:d.results.docs))return void l("No results for the pipeline");o({pipeline:t,docs:d.results.docs})}catch(e){var i,d;if(n.signal.aborted)return;l(`Error: ${null!==(i=null===(d=e.body)||void 0===d?void 0:d.message)&&void 0!==i?i:e.message}`)}finally{r(!1)}})(),()=>{n.abort()}}),[r,a,e,null==i?void 0:i.toasts,o,t]),{error:s}})({customPipeline:r,integrationSettings:e}),[l,d]=Object(n.useState)(!1),[c,m]=Object(n.useState)(),p=Object(n.useCallback)((e=>{m(e)}),[]),u=Object(n.useCallback)((()=>{if(c)try{const e=JSON.parse(c);o(e)}catch(e){return}d(!1)}),[c]);return Object(h.jsx)(fa,{title:Tn,subtitle:jn,right:Object(h.jsx)(j.EuiButton,{onClick:()=>d(!0),"data-test-subj":"editPipelineButton"},Sn)},Object(h.jsx)(j.EuiPanel,{hasShadow:!1,hasBorder:!0,"data-test-subj":"reviewStep"},t?Object(h.jsx)(j.EuiLoadingSpinner,{size:"l"}):Object(h.jsx)(i.a.Fragment,null,s&&Object(h.jsx)(j.EuiText,{color:"danger",size:"s"},s),Object(h.jsx)(zn,{documents:null==a?void 0:a.docs})),l&&Object(h.jsx)(j.EuiFlyout,{onClose:()=>d(!1)},Object(h.jsx)(j.EuiFlyoutHeader,{hasBorder:!0},Object(h.jsx)(j.EuiTitle,{size:"s"},Object(h.jsx)("h2",null,En))),Object(h.jsx)(j.EuiFlyoutBody,{css:On},Object(h.jsx)(j.EuiFlexGroup,{direction:"column",gutterSize:"s",wrap:!1,responsive:!1,css:In},Object(h.jsx)(j.EuiFlexItem,{grow:!0},Object(h.jsx)(_n.CodeEditor,{languageId:yn.XJsonLang.ID,value:JSON.stringify(null==a?void 0:a.pipeline,null,2),onChange:p,width:"100%",height:"100%",options:{fontSize:12,minimap:{enabled:!0},folding:!0,scrollBeyondLastLine:!1,wordWrap:"on",wrappingIndent:"indent",automaticLayout:!0}})))),Object(h.jsx)(j.EuiFlyoutFooter,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"row",gutterSize:"none",justifyContent:"flexEnd"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(j.EuiButton,{fill:!0,onClick:u,"data-test-subj":"savePipelineButton"},An)))))))}));Cn.displayName="ReviewStep";var Ln=a(217);const Pn=O.i18n.translate("xpack.integrationAssistant.step.deploy.loadingTitle",{defaultMessage:"Deploying"}),Nn=O.i18n.translate("xpack.integrationAssistant.step.deploy.downloadZip.title",{defaultMessage:"Download .zip package"}),Dn=O.i18n.translate("xpack.integrationAssistant.step.deploy.downloadZip.description",{defaultMessage:"Download your integration package to reuse in other deployments. "}),Fn=O.i18n.translate("xpack.integrationAssistant.step.deploy.downloadZip.link",{defaultMessage:"Download package"});var Mn={name:"6sug3x",styles:"margin-top:3px"};const Zn=i.a.memo((({integrationSettings:e,result:t,connector:a})=>{const{isLoading:i,error:r,integrationFile:o,integrationName:s}=(({integrationSettings:e,result:t,connector:a})=>{const i=w(),{http:r,notifications:o}=Object(v.a)().services,[s,l]=Object(n.useState)(null),[d,c]=Object(n.useState)(),[m,h]=Object(n.useState)(!1),[p,u]=Object(n.useState)(null);return Object(n.useEffect)((()=>{if(null==r||null==a||null==e||null==(null==o?void 0:o.toasts)||null==(null==t?void 0:t.pipeline))return;const n=new AbortController,s={http:r,abortSignal:n.signal};return(async()=>{try{var r,o,d,m,p,f,g,_,y;const u={integration:{title:null!==(r=e.title)&&void 0!==r?r:"",description:null!==(o=e.description)&&void 0!==o?o:"",name:null!==(d=e.name)&&void 0!==d?d:"",logo:e.logo,dataStreams:[{title:null!==(m=e.dataStreamTitle)&&void 0!==m?m:"",description:null!==(p=e.dataStreamDescription)&&void 0!==p?p:"",name:null!==(f=e.dataStreamName)&&void 0!==f?f:"",inputTypes:null!==(g=e.inputTypes)&&void 0!==g?g:[],rawSamples:null!==(_=e.logsSampleParsed)&&void 0!==_?_:[],docs:null!==(y=t.docs)&&void 0!==y?y:[],pipeline:t.pipeline}]}};h(!0);const v=await(async(e,{http:t,abortSignal:a})=>t.post(Ae,{headers:Et,body:JSON.stringify(e),signal:a}))(u,s);if(n.signal.aborted)return;l(v);const b=await Ot(v,s);if(n.signal.aborted)return;const x=It(b);if(!x)throw new Error("Integration name not found in response");c(x),i.reportAssistantComplete({integrationName:x,integrationSettings:e,connector:a})}catch(t){var v;if(n.signal.aborted)return;const r=`${t.message}${t.body?` (${t.body.statusCode}): ${t.body.message}`:""}`;i.reportAssistantComplete({integrationName:null!==(v=e.name)&&void 0!==v?v:"",integrationSettings:e,connector:a,error:r}),u(r)}finally{h(!1)}})(),()=>{n.abort()}}),[l,r,e,a,null==o?void 0:o.toasts,null==t?void 0:t.docs,null==t?void 0:t.pipeline,i]),{isLoading:m,integrationFile:s,integrationName:d,error:p}})({integrationSettings:e,result:t,connector:a}),l=Object(n.useCallback)((()=>{Object(Ln.saveAs)(o,`${null!=s?s:"custom_integration"}.zip`)}),[o,s]);return i||r?Object(h.jsx)(Ge,{title:Pn},Object(h.jsx)(j.EuiSpacer,{size:"m"}),Object(h.jsx)(j.EuiFlexGroup,{direction:"row",justifyContent:"center"},Object(h.jsx)(j.EuiFlexItem,{grow:!1},i&&Object(h.jsx)(j.EuiLoadingSpinner,{size:"xl","data-test-subj":"deployStep-loading"}),r&&Object(h.jsx)(j.EuiText,{color:"danger",size:"s","data-test-subj":"deployStep-error"},r)))):s?Object(h.jsx)(pt,{integrationName:s},Object(h.jsx)(j.EuiSpacer,{size:"m"}),Object(h.jsx)(j.EuiPanel,{hasShadow:!1,hasBorder:!0,paddingSize:"l","data-test-subj":"deployStep-success"},Object(h.jsx)(j.EuiFlexGroup,{direction:"row",alignItems:"center"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"row",alignItems:"flexStart",justifyContent:"flexStart"},Object(h.jsx)(j.EuiFlexItem,{grow:!1,css:Mn},Object(h.jsx)(j.EuiIcon,{type:"download",color:"primary",size:"m"})),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiFlexGroup,{direction:"column",gutterSize:"xs"},Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiText,null,Object(h.jsx)("h4",null,Nn))),Object(h.jsx)(j.EuiFlexItem,null,Object(h.jsx)(j.EuiText,{color:"subdued",size:"s"},Dn)))))),Object(h.jsx)(j.EuiFlexItem,{grow:!1},Object(h.jsx)(j.EuiLink,{onClick:l,"data-test-subj":"saveZipButton"},Fn))))):null}));Zn.displayName="DeployStep";const Un=i.a.memo((()=>{const[e,t]=Object(n.useReducer)(Ut,Zt),a=w();Object(n.useEffect)((()=>{a.reportAssistantOpen()}),[a]);const i=Object(n.useMemo)((()=>({setStep:e=>{t({type:"SET_STEP",payload:e})},setConnector:e=>{t({type:"SET_CONNECTOR",payload:e})},setIntegrationSettings:e=>{t({type:"SET_INTEGRATION_SETTINGS",payload:e})},setIsGenerating:e=>{t({type:"SET_IS_GENERATING",payload:e})},setResult:e=>{t({type:"SET_GENERATED_RESULT",payload:e})}})),[]),r=Object(n.useMemo)((()=>1===e.step?(({connector:e})=>null!=e)(e):2===e.step?(({integrationSettings:e})=>Boolean((null==e?void 0:e.title)&&(null==e?void 0:e.description)))(e):3===e.step?(({integrationSettings:e})=>Boolean((null==e?void 0:e.name)&&(null==e?void 0:e.dataStreamTitle)&&(null==e?void 0:e.dataStreamDescription)&&(null==e?void 0:e.dataStreamName)&&(null==e?void 0:e.logsSampleParsed)))(e):4===e.step&&(({isGenerating:e,result:t})=>!1===e&&null!=t)(e)),[e]);return Object(h.jsx)(Rt,{value:i},Object(h.jsx)(le,null,Object(h.jsx)(ta,{currentStep:e.step,isGenerating:e.isGenerating}),Object(h.jsx)(le.Section,{grow:!0,paddingSize:"l"},1===e.step&&Object(h.jsx)(ja,{connector:e.connector}),2===e.step&&Object(h.jsx)(Ma,{integrationSettings:e.integrationSettings}),3===e.step&&Object(h.jsx)(gn,{integrationSettings:e.integrationSettings,connector:e.connector,isGenerating:e.isGenerating}),4===e.step&&Object(h.jsx)(Cn,{integrationSettings:e.integrationSettings,isGenerating:e.isGenerating,result:e.result}),5===e.step&&Object(h.jsx)(Zn,{integrationSettings:e.integrationSettings,result:e.result,connector:e.connector})),Object(h.jsx)(sa,{currentStep:e.step,isGenerating:e.isGenerating,isNextStepEnabled:r})))}));Un.displayName="CreateIntegrationAssistant";const qn=i.a.memo((({services:e})=>Object(h.jsx)(f.KibanaContextProvider,{services:e},Object(h.jsx)(k,null,Object(h.jsx)(Rn,null)))));qn.displayName="CreateIntegration";const Rn=i.a.memo((()=>{const{canUseIntegrationAssistant:e,canUseIntegrationUpload:t}=(()=>{const{canCreateIntegrations:e,canExecuteConnectors:t}=de();return{canUseIntegrationAssistant:e&&t,canUseIntegrationUpload:e}})(),a=(()=>{const{hasLicense:e,renderUpselling:t}=Ie();return e&&!t})();return Object(h.jsx)(r.Switch,null,a&&e&&Object(h.jsx)(p,{path:He[Ve.assistant],exact:!0,component:Un}),a&&t&&Object(h.jsx)(p,{path:He[Ve.upload],exact:!0,component:Mt}),Object(h.jsx)(p,{path:He[Ve.landing],exact:!0,component:it}),Object(h.jsx)(p,{render:()=>Object(h.jsx)(r.Redirect,{to:He[Ve.landing]})}))}));Rn.displayName="CreateIntegrationRouter"}])]);